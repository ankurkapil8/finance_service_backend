{"version":3,"sources":["models/BaseUrl.js","models/interceptor-middleware.js","constants/actionTypes.js","reducers/order.js","reducers/product.js","reducer.js","reducers/auth.js","reducers/common.js","middleware.js","store.js","components/home/InqueryForm.js","components/layout/SectionMenu.js","components/layout/SectionOffers.js","components/layout/LogedInView.js","components/layout/LogedOutView.js","components/layout/Header.js","components/home/Home.js","components/layout/ListErrors.js","components/users/Registration.js","models/user.js","components/layout/Loader.js","components/users/Login.js","components/layout/InnerHeader.js","components/layout/Leftbar.js","components/layout/TopNav.js","components/layout/ErrorBoundary.js","components/layout/InnerLayout.js","components/users/UserOrderHistory.js","components/users/user-actions/UserAction.js","models/masterRecord.js","components/masterRecord/memberGroup/MemberGroup.js","components/masterRecord/memberGroup/AddMemberGroup.js","models/memberDetails.js","components/masterRecord/member/AddMember.js","components/masterRecord/member/Member.js","components/masterRecord/member/MemberViewDetails.js","models/groupLoan.js","components/groupLoan/Scheme.js","components/groupLoan/AddScheme.js","models/dashboard.js","components/dashboard/Dashboard.js","components/groupLoan/LoanApplication.js","components/groupLoan/LoanApproval.js","components/groupLoan/DisburseLoan.js","components/groupLoan/EmiCard.js","components/groupLoan/EmiCardPrint.js","components/groupLoan/BorrowerPrint.js","components/groupLoan/LoanApprovalDetails.js","components/groupLoan/AllApplications.js","components/groupLoan/EmiCalculator.js","components/emis/DueEmis.js","Routes.js","App.js","reportWebVitals.js","index.js","agent.js"],"names":["API_ROOT","superagentPromise","_superagent","global","Promise","window","location","hostname","encodeURIComponent","axios","interceptors","request","use","successfulReq","jwt","sessionStorage","getItem","headers","error","reject","response","successRes","formatedResponse","console","log","toString","href","REDIRECT","LOGIN","LOGOUT","REGISTER","LOGIN_PAGE_UNLOADED","REGISTER_PAGE_UNLOADED","ASYNC_START","ASYNC_END","UPDATE_FIELD_AUTH","ADD_ITEM_INITIAL","INCREASE_QUANTITY","DECREASE_QUANTITY","RESET_ORDER","STORE_EDIT_PRODUCT","GET_EDIT_PRODUCT","UPDATE_PRODUCT_FIELD","CHANGE_PAGE","defaultState","addedItem","product","appReducer","combineReducers","auth","state","action","type","inProgress","errors","payload","message","role","record","id","statusCode","jwtToken","isLoginSuccess","subtype","key","value","common","page","redirectTo","order","productId","item","_id","quantity","perItemPrice","price","map","data","prod","rootReducer","undefined","promiseMiddleware","store","next","v","then","dispatch","currentView","getState","viewChangeCounter","skipTracking","res","currentState","promise","body","localStorageMiddleware","setItem","agent","setToken","persistConfig","storage","whitelist","pReducer","persistReducer","reducer","createStore","composeWithDevTools","applyMiddleware","persistor","persistStore","InqueryForm","props","useState","fullName","email","business","dob","Date","gender","service","Phone","setState","dobstate","setdobstate","setmessage","loading","setloading","handleChange","e","target","name","Modal","show","isopen","onHide","hide","Header","closeButton","Title","Body","Alert","variant","onClose","dismissible","Form","onSubmit","ev","preventDefault","serviceType","Inquery","submitInquery","reset","Row","Group","as","Col","controlId","Label","Control","onChange","placeholder","selected","date","dateFormat","showYearDropdown","dateFormatCalendar","yearDropdownItemNumber","scrollableYearDropdown","maxDate","defaultValue","readOnly","Button","disabled","Component","LogedInView","currentUser","className","aactiveClassName","to","LogedOutView","useDispatch","history","useHistory","split","isAdmin","isPrimeMember","onClick","push","handleITRPopup","this","connect","Home","ListErrors","Registration","userDetails","submitForm","isLoading","Auth","register","required","Text","React","login","username","password","post","Loader","Spinner","animation","relative","Login","isShowLoader","user","catch","err","changeEmail","onChangeEmail","changePassword","onChangePassword","document","classList","add","onlogout","remove","onUnload","src","autoFocus","InnerHeader","Leftbar","useSelector","useLocation","process","pathname","Nav","Link","eventKey","TopNav","navClick","setNevClick","ErrorBoundary","hasError","errorInfo","children","InnerLayout","component","rest","showSidebar","setshowSidebar","useEffect","innerWidth","checkLogin","toggleSidebar","hasOwnProperty","render","UserOrderHistory","UserAction","getMemberGroups","get","saveMemberGroups","saveImage","file","MemberGroup","setisShowLoader","memberGroupRecords","setMemberGroupsRecords","getMemberGroup","masterRecord","class","active","Table","group","group_code","group_name","remark","moment","created_at","format","style","top","position","ProgressBar","striped","now","label","AddMemberGroup","values","setValues","isShow","showToast","setShowToast","handleAlertShow","obj","setTimeout","formik","useFormik","initialValues","user_id","validate","resetForm","prevValues","delay","handleSubmit","touched","rows","MemberDetailModel","getMemberDetailsData","member_id","saveMemberDetails","deleteMember","delete","editMember","put","AddMember","enrollmentDate","setEnrollmentDate","setDob","groups","setGroups","image","setImage","baseURL","replace","getMemberDetails","memberDetails","aadhar_card","member_name","age","marital_status","mobile_number","email_id","member_group_id","pan_card_number","driving_license_number","voter_id_number","ration_card_number","bank_account","bank_ifsc_code","bank_account_holder","enrollment_date","date_of_birth","getImage","files","length","fileExtArr","fileExt","formData","FormData","append","status","path","scrollTo","md","alt","Members","showDeleteModel","setShowDeleteModel","deleteID","setDeleteID","memberRecords","setMemberRecords","useMemo","index","col1","col2","col3","col4","col5","columns","accessor","allowFilter","memberRecord","initialData","UpdatedList","filter","member","idx","DefaultColumnFilter","column","filterValue","preFilteredRows","setFilter","count","defaultColumn","Filter","paginate","totalPage","pageNumberArray","i","Pagination","First","gotoPage","Prev","previousPage","canPreviousPage","num","Item","pageIndex","Next","nextPage","canNextPage","Last","useTable","initialState","useFilters","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","pageOptions","pageCount","pageSize","setPageSize","Footer","headerGroup","getHeaderGroupProps","getHeaderProps","getSortByToggleProps","isSorted","isSortedDesc","row","getRowProps","cells","cell","getCellProps","size","EmiModel","calculateEMI","getDueEmis","today","paidEmi","getPaidEmis","loanAccountNo","getScheme","saveScheme","deleteScheme","getLoanAppInitialData","applyForloan","getApprovalList","getDisburseList","getLoanDetailbyId","approveRejectLoan","getAllLoanApplications","disburseRejectLoan","Scheme","schemes","setSchemes","getSchemes","groupLoan","scheme","bordered","hover","responsive","scheme_code","scheme_name","max_amount","interest_rate","EMI_type","deleteHandle","AddScheme","Toast","autohide","min","DashboardModel","receivedAmount","paidAmount","countActiveInactive","Dashboard","setPaidAmount","setReceivedAmount","setCountActiveInactive","getReport","allSettled","total","toFixed","active_accounts","inactive_accounts","ContextAwareToggle","callback","decoratedOnClick","useContext","AccordionContext","activeEventKey","useAccordionButton","LoanApplication","schemeRecords","setSchemeRecords","selectedScheme","setSelectedScheme","getSchemesAndMembers","all","scheme_id","application_date","address","loan_amount","EMI_payout","tenure","co_borrower_name","co_borrower_aadhar_card","co_borrower_pan_card","co_borrower_ele_bill","co_borrower_relationship","Accordion","defaultActiveKey","Card","Collapse","selectMember","val","handleMemberSelection","schems","LoanApproval","loanlist","setLoanlist","getLoanList","loan","loan_id","colSpan","DisburseLoan","EmiCard","border","header","text","handlePrintEMI","xmlns","width","height","fill","viewBox","d","showDisburseButton","emiData","paidEmiRecord","EMI","principal","int_amount","outstanding","memo","EmiCardPrint","margin","textAlign","float","fontSize","heading","marginTop","bottom","PureComponent","BorrowerPrint","loanDetails","marginBottom","borderBlockColor","aadhar_number","paddingBottom","LoanApprovalDetails","memberDetailsRef","useRef","applicationRef","useReactToPrint","content","current","documentTitle","handlePrintApplication","emiRef","handlePrintEMICallbak","useCallback","coBorrowerRef","handleCoBorrowerPrint","borrowerRef","handlePrintBorrower","setPaidEmiRecord","isShowEMILoader","setisShowEMILoader","setEmiData","setLoanDetails","showApprovalButton","setShowApprovalButton","setShowDisburseButton","setShow","disburseDate","setDisburseDate","handleClose","getLoanDetails","calculateEmi","disburse_date","EmiData","paidData","result","loan_account_no","emiDate","EMI_date","is_approved","is_disbursed","actionOnLoan","actionType","actionDisburseLoan","emiCol","emiRecords","applicationRecords","coBorrowRecords","xs","ref","display","AllApplications","col6","col7","actionStatus","col8","formatedData","Badge","EmiCalculator","calculatedData","setCalculatedData","componentRef","handlePrint","loanStartDate","Container","DueEmis","dueEmis","setDueEmis","paidID","setPaidID","getDueEmisRecord","emi","substring","paidEMI","emidata","InputGroup","FormLabel","selectedDate","loan_table_id","group_loan","remain_EMI","EMI_amount","paidHandle","Routes","exact","MemberViewDetails","Member","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById","superagent","responseBody","errorBody","token","tokenPlugin","req","set","requests","url","Order","getProductsByCat","catname","getCatgoryInitialData","placeOrder","getCategoryAdmin","getOrdersHistoryAdmin","getOrderHistoryByUserEmail","addCategory","deleteCategory","del","editCategory","getProducts","deleteProduct","addProducts","editProducts","Payment","getRazorpayOrderId","updatePaymentStatus","Finance","fillItr","getAdminItr","uploadForm16","getAdminForm16","downloadForm16","fileName","getToken","_token"],"mappings":"oHAAA,oFAIaA,GAJb,MAG0BC,IAAkBC,IAAaC,EAAOC,SACd,aAA1BC,OAAOC,SAASC,SAAsB,8CAA+C,QAG9FC,qB,kDCPf,sBAGAC,IAAMC,aAAaC,QAAQC,KACvB,SAASC,GACP,IAAIC,EAGF,OAFFA,EAAMC,eAAeC,QAAQ,OAC7BH,EAAcI,QAAU,CAAC,iBAAmBH,GACnCD,KAEX,SAASK,GACP,OAAOd,QAAQe,OAAOD,MAI1BT,IAAMC,aAAaU,SAASR,KAC1B,SAASS,GACL,IAAIC,EAAmBD,EAIvB,OAHAC,EAAgB,WAAiBD,EAAU,OAC3CC,EAAgB,KAAWD,EAAU,YAC9BC,EAAgB,KAChBA,KAEX,SAASJ,GASL,OANFK,QAAQC,IAAIN,EAAMO,YACG,8CAAlBP,EAAMO,aACPpB,OAAOC,SAASoB,KAAO,UAIhBtB,QAAQe,OAAOD,MAIfT,MAAf,G,kNCjCakB,EAAW,WAkBXC,EAAQ,QACRC,EAAS,SACTC,EAAW,WACXC,EAAsB,sBACtBC,EAAyB,yBACzBC,EAAc,cACdC,EAAY,YAKZC,EAAoB,oBAMpBC,EAAmB,mBACnBC,EAAoB,oBACpBC,EAAoB,oBACpBC,EAAc,cACdC,EAAqB,qBACrBC,EAAmB,mBACnBC,EAAuB,uBACvBC,EAAc,c,QCvCnBC,EAAe,CACnBC,UAAW,ICFPD,EAAe,CACnBE,QAAS,ICCPC,EAAaC,0BAAgB,CACjCC,KCEe,WAAyB,IAAD,IAAvBC,EAAuB,uDAAf,GAAIC,EAAW,uCAErC,OAAQA,EAAOC,MACb,KAAKxB,EACH,OAAO,2BACFsB,GADL,IAEEG,YAAY,EACZC,OAAQH,EAAOI,QAAQC,QACvBC,KAAI,UAACN,EAAOI,QAAQG,cAAhB,aAAC,EAAuBD,KAC5BE,GAAE,UAACR,EAAOI,QAAQG,cAAhB,aAAC,EAAuBC,GAC1BC,WAAsC,IAA3BT,EAAOI,QAAQM,SAAe,MAAM,GAC/CC,eAA0C,IAA3BX,EAAOI,QAAQM,WAElC,KAAK/B,EACH,OAAO,2BACFoB,GADL,IAEEG,YAAY,EACZC,OAAQH,EAAOI,QACfK,WAAWT,EAAOI,QAAQK,aAE9B,KAAK7B,EACL,sBACKmB,GAIL,KAAKlB,EACH,MAAO,GACT,KAAKC,EACH,GAAIkB,EAAOY,UAAYnC,GAASuB,EAAOY,UAAYjC,EACjD,OAAO,2BAAKoB,GAAZ,IAAmBG,YAAY,IAEjC,MACF,KAAKlB,EACH,OAAO,2BAAKe,GAAZ,kBAAoBC,EAAOa,IAAMb,EAAOc,QAC1C,QACE,OAAOf,EAEX,OAAOA,GDvCTgB,OEEe,WAAgC,IAA/BhB,EAA8B,uDAAtB,CAACiB,KAAK,IAAKhB,EAAW,uCAE1C,OAAQA,EAAOC,MACb,KAAKzB,EACD,OAAO,2BAAKuB,GAAZ,IAAmBkB,WAAY,OACnC,KAAKzB,EACD,OAAO,2BAAMO,GAAb,IAAoBiB,KAAMhB,EAAOgB,OACrC,QACE,OAAOjB,EAEX,OAAOA,GFXXmB,MFAe,WAAmC,IAAlCnB,EAAiC,uDAAzBN,EAAcO,EAAW,uCAC7C,OAAQA,EAAOC,MACb,KAAKhB,EACD,IAAMS,EAAS,sBAAMK,EAAML,WAAZ,CAAsB,CACjCyB,UAAUnB,EAAOoB,KAAKC,IACtBC,SAAS,EACTC,aAAavB,EAAOoB,KAAKI,MACzBJ,KAAKpB,EAAOoB,QAEhB,OAAO,2BAAIrB,GAAX,IAAkBL,cACtB,KAAKR,EAOD,OANCa,EAAML,UAAU+B,KAAI,SAAAlB,GAIjB,OAHGA,EAAOY,WAAanB,EAAOmB,YAC1BZ,EAAOe,UAAW,GAEff,KAEJ,2BAAIR,GAAX,IAAiBA,UACrB,KAAKZ,EAOD,OANAY,EAAML,UAAU+B,KAAI,SAAAlB,GAIhB,OAHGA,EAAOY,WAAanB,EAAOmB,WAA+B,GAAlBZ,EAAOe,WAC1Cf,EAAOe,UAAW,GAEnBf,KAEJ,2BAAIR,GAAX,IAAiBA,UACrB,KAAKX,EAED,OADAW,EAAML,UAAY,GACX,eAAIK,GACf,QACE,OAAOA,EAEX,OAAOA,GE/BXJ,QDFe,WAAmC,IAAlCI,EAAiC,uDAAzBN,EAAcO,EAAW,uCAC7C,OAAQA,EAAOC,MACb,KAAKZ,EACD,OAAO,2BAAIU,GAAX,IACIJ,QAAQK,EAAO0B,OAEvB,KAAKpC,EACD,OAAO,eAAIS,GACf,KAAKR,EACD,IAAIoC,EAAO5B,EAAMJ,QAElB,OADCgC,EAAK3B,EAAO0B,KAAKb,KAAKb,EAAO0B,KAAKZ,MAC5B,2BAAIf,GAAX,IAAiBJ,QAAQgC,IAC5B,QACE,OAAO5B,EAEX,OAAOA,KCFE6B,EAPK,SAAC7B,EAAOC,GAK1B,MAJoB,WAAhBA,EAAOC,OACTF,OAAQ8B,GAGHjC,EAAWG,EAAOC,I,iBGXrB8B,EAAoB,SAAAC,GAAK,OAAI,SAAAC,GAAI,OAAI,SAAAhC,GACzC,IAkDiBiC,EAlDHjC,EAAOI,UAmDS,oBAAX6B,EAAEC,KAnDrB,CACEH,EAAMI,SAAS,CAAElC,KAAMnB,EAAa8B,QAASZ,EAAOC,OAEpD,IAAMmC,EAAcL,EAAMM,WAAWC,kBAC/BC,EAAevC,EAAOuC,aAE5BvC,EAAOI,QAAQ8B,MACb,SAAAM,GACE,IAAMC,EAAeV,EAAMM,YACtBE,GAAgBE,EAAaH,oBAAsBF,KAGxDpC,EAAOI,QAAUoC,EACjBT,EAAMI,SAAS,CAAElC,KAAMlB,EAAW2D,QAAS1C,EAAOI,UAClD2B,EAAMI,SAASnC,OAEjB,SAAAjC,GACE,IAAM0E,EAAeV,EAAMM,YACtBE,GAAgBE,EAAaH,oBAAsBF,KAGxDpC,EAAOjC,OAAQ,EACfiC,EAAOI,QAAUrC,EAAME,SAAS0E,KAC3B3C,EAAOuC,cACVR,EAAMI,SAAS,CAAElC,KAAMlB,EAAW2D,QAAS1C,EAAOI,UAEpD2B,EAAMI,SAASnC,WA1BrB,CAkDF,IAAmBiC,EAjBjBD,EAAKhC,OAGD4C,EAAyB,SAAAb,GAAK,OAAI,SAAAC,GAAI,OAAI,SAAAhC,GAC1CA,EAAOC,OAASxB,QAA2BoD,GAAlB7B,EAAOI,QACL,IAAzBJ,EAAOI,QAAQM,WACjBxD,OAAOU,eAAeiF,QAAQ,MAAO7C,EAAOI,QAAQM,UACpDoC,IAAMC,SAAS/C,EAAOI,QAAQM,WAEvBV,EAAOC,OAASvB,IACzBxB,OAAOU,eAAeiF,QAAQ,MAAM,IACpCC,IAAMC,SAAS,OAGhBf,EAAKhC,M,sBCnDFgD,EAAgB,CACpBnC,IAAK,WACLoC,Q,OAASA,EACTC,UAAW,CAAC,SAERC,EAAWC,YAAeJ,EAAeK,GAIzCtB,EAAQuB,sBAAYH,EAASI,8BAFtBC,0BAAiB1B,EAAmBc,KAG3Ca,EAAYC,YAAa3B,G,0ICsHhB4B,OAhIf,SAAqBC,GACjB,MAA0BC,mBACtB,CAACC,SAAS,GACNC,MAAM,GACNC,SAAS,GACTC,IAAI,IAAIC,KACRC,OAAO,GACPC,QAAQ,GACRC,MAAM,KAPd,mBAAOtE,EAAP,KAAcuE,EAAd,KASA,EAAgCT,mBAAS,IAAIK,MAA7C,mBAAOK,EAAP,KAAiBC,EAAjB,KACA,EAA8BX,mBAAS,CAAC5D,KAAK,GAAGI,QAAQ,KAAxD,mBAAOA,EAAP,KAAgBoE,EAAhB,KACA,EAA8BZ,oBAAS,GAAvC,mBAAOa,EAAP,KAAgBC,EAAhB,KAEMC,EAAe,SAACC,GAClB9E,EAAM8E,EAAEC,OAAOC,MAAQF,EAAEC,OAAOhE,MAChCwD,EAASvE,GACT3B,QAAQC,IAAI0B,IAwBhB,OACI,qCAEA,gBAACiF,EAAA,EAAD,CAAOC,KAAMrB,EAAMsB,OAAQC,OAAQvB,EAAMwB,KAAzC,UAEI,eAACJ,EAAA,EAAMK,OAAP,CAAcC,aAAW,EAAzB,SACI,eAACN,EAAA,EAAMO,MAAP,wBAEJ,gBAACP,EAAA,EAAMQ,KAAP,WACuB,IAAhBnF,EAAQJ,KACI,WAAfI,EAAQJ,KACR,eAACwF,EAAA,EAAD,CAA0BC,QAAS,UAAWC,QAAS,kBAAMlB,EAAW,CAACxE,KAAK,GAAGI,QAAQ,MAAMuF,aAAW,EAA1G,SACKvF,EAAQA,SADDA,EAAQJ,MAEX,eAACwF,EAAA,EAAD,CAA0BC,QAAS,SAAUC,QAAS,kBAAMlB,EAAW,CAACxE,KAAK,GAAGI,QAAQ,MAAMuF,aAAW,EAAzG,SACJvF,EAAQA,SADQA,EAAQJ,MAEpB,GAGT,gBAAC4F,EAAA,EAAD,CAAMC,SAxCG,SAACC,GAClBA,EAAGC,iBAEHjG,EAAK,IAAUwE,EACfxE,EAAK,QAAc6D,EAAMqC,YACzB3B,EAASvE,GACT3B,QAAQC,IAAI0B,GACZ4E,GAAW,GACX7B,IAAMoD,QAAQC,cAAcpG,GAAOmC,MAAM,SAAAM,GAChB,KAAlBA,EAAI/B,YACHsF,EAAGjB,OAAOsB,QACV/F,EAAQJ,KAAO,UACfI,EAAQA,QAAU,qEAElBA,EAAQJ,KAAO,QACfI,EAAQA,QAAU,2CAEtBoE,EAAWpE,GACXsE,GAAW,OAsBP,UACI,eAACkB,EAAA,EAAKQ,IAAN,UACA,gBAACR,EAAA,EAAKS,MAAN,CAAYC,GAAIC,IAAKC,UAAU,mBAA/B,UACQ,eAACZ,EAAA,EAAKa,MAAN,wBACA,eAACb,EAAA,EAAKc,QAAN,CAAcC,SAAUhC,EAAc3E,KAAK,OAAO8E,KAAK,kBAG3D,eAACc,EAAA,EAAKQ,IAAN,UACA,gBAACR,EAAA,EAAKS,MAAN,CAAYC,GAAIC,IAAKC,UAAU,gBAA/B,UACI,eAACZ,EAAA,EAAKa,MAAN,oBACA,eAACb,EAAA,EAAKc,QAAN,CAAc1G,KAAK,QAAQ2G,SAAUhC,EAAcG,KAAK,QAAQ8B,YAAY,qBAIpF,eAAChB,EAAA,EAAKQ,IAAN,UACA,gBAACR,EAAA,EAAKS,MAAN,CAAYC,GAAIC,IAAKC,UAAU,mBAA/B,UACI,eAACZ,EAAA,EAAKa,MAAN,uBACA,eAACb,EAAA,EAAKc,QAAN,CAAc1G,KAAK,OAAO2G,SAAUhC,EAAeG,KAAK,kBAG5D,eAACc,EAAA,EAAKQ,IAAN,UACA,gBAACR,EAAA,EAAKS,MAAN,CAAYC,GAAIC,IAAKC,UAAU,mBAA/B,UACI,eAACZ,EAAA,EAAKa,MAAN,4BACA,eAAC,KAAD,CACCI,SAAUvC,EACVqC,SAAU,SAAAG,GAAI,OAAEvC,EAAYuC,IAC5BC,WAAW,aACXC,kBAAgB,EAChBC,mBAAmB,OACnBC,uBAAwB,GACxBC,wBAAsB,EACtBC,QAAS,IAAInD,YAIlB,eAAC2B,EAAA,EAAKQ,IAAN,UACA,gBAACR,EAAA,EAAKS,MAAN,CAAYC,GAAIC,IAAKC,UAAU,gBAA/B,UACA,eAACZ,EAAA,EAAKa,MAAN,qBACA,gBAACb,EAAA,EAAKc,QAAN,CAAc5B,KAAK,SAASwB,GAAG,SAASK,SAAUhC,EAAc0C,aAAa,YAA7E,UACI,gDACA,yBAAQxG,MAAM,OAAd,kBACA,yBAAQA,MAAM,SAAd,4BAIJ,eAAC+E,EAAA,EAAKQ,IAAN,UACA,gBAACR,EAAA,EAAKS,MAAN,CAAYC,GAAIC,IAAKC,UAAU,gBAA/B,UACA,eAACZ,EAAA,EAAKa,MAAN,sBACI,eAACb,EAAA,EAAKc,QAAN,CAAcC,SAAUhC,EAAc3E,KAAK,OAAO8E,KAAK,UAAUjE,MAAO8C,EAAMqC,YAAasB,UAAQ,SAGvG,eAAC1B,EAAA,EAAKQ,IAAN,UACA,gBAACR,EAAA,EAAKS,MAAN,CAAYC,GAAIC,IAAKC,UAAU,mBAA/B,UACI,eAACZ,EAAA,EAAKa,MAAN,oBACA,eAACb,EAAA,EAAKc,QAAN,CAAc1G,KAAK,OAAO2G,SAAUhC,EAAeG,KAAK,eAI5D,eAACyC,GAAA,EAAD,CAAQ9B,QAAQ,UAAUzF,KAAK,SAASwH,SAAU/C,EAAlD,SACCA,EAAU,gBAAa,uBCvHhBgD,YCHeA,YCc5BC,OAbf,SAAqB/D,GACjB,OAAIA,EAAMgE,YAAYzH,QAAgD,KAAtCyD,EAAMgE,YAAYzH,OAAOM,WAQlD,KALH,qBAAIoH,UAAU,WAAd,SACA,eAAC,UAAD,CAASC,iBAAiB,SAASD,UAAU,WAAWE,GAAG,SAA3D,sBCuCOC,OAvCf,SAAsBpE,GAClB,IAAMzB,EAAW8F,cACbC,EAAUC,cAOT,GAAIvE,EAAMgE,YAAYzH,QAAiD,KAAvCyD,EAAMgE,YAAYzH,OAAOM,WAAmB,CAC7E,IAAIsE,EAAOnB,EAAMgE,YAAY7D,MAAMqE,MAAM,KAEzC,OAAQ,uCAEHxE,EAAMgE,YAAYzH,OAAOwC,KAAKpC,OAAO8H,QAAQ,qBAAIR,UAAU,WAAd,SAC9C,qBAAIA,UAAU,WAAd,SACA,eAAC,UAAD,CAASC,iBAAiB,SAASC,GAAG,aAAaF,UAAU,WAA7D,uBAGM,GACN,qBAAIA,UAAU,WAAd,SACI,gBAAC,UAAD,CAASC,iBAAiB,SAASC,GAAG,cAAcF,UAAU,WAA9D,UACK9C,EAAK,GAELnB,EAAMgE,YAAYzH,OAAOwC,KAAKpC,OAAO+H,cAAc,wBAAOT,UAAU,WAAjB,4BAAmD,QAK/G,qBAAIA,UAAU,WAAd,SACI,oBAAGA,UAAU,WAAWU,QA1BrB,WACVpG,EAAS,CAAElC,KAAMvB,IACfN,QAAQC,IAAI,SACZ6J,EAAQM,KAAK,MAuBR,yBAMZ,OAAO,MCrCLnD,G,kDAEF,WAAYzB,GAAO,IAAD,8BAChB,cAAMA,IAFRsB,QAAS,EACS,EAMlBuD,eAAiB,WACb,EAAKnE,SAAS,CACZY,QAAO,EAAKnF,MAAMmF,UANtB,EAAKnF,MAAQ,CACXmF,QAAO,GAHO,E,0CAYlB,WAEA,OACI,oCACI,sBAAK2C,UAAU,iEAAf,SACI,uBAAKA,UAAU,YAAf,UACI,gBAAC,UAAD,CAASA,UAAU,eAAeE,GAAG,IAArC,cAA0C,oDAC1C,yBAAQF,UAAU,iBAAiB5H,KAAK,SAAS,cAAY,WAAW,cAAY,4BAChF,gBAAc,2BAA2B,gBAAc,QAAQ,aAAW,oBAD9E,SAEI,uBAAM4H,UAAU,0BAEpB,sBAAKA,UAAU,2BAA2BrH,GAAG,2BAA7C,SACI,sBAAIqH,UAAU,qBAAd,UACI,qBAAIA,UAAU,aAWd,eAAC,GAAD,CAAeD,YAAac,KAAK9E,QACjC,eAAC,GAAD,CAAcgE,YAAac,KAAK9E,kBAOhD,sBAAKiE,UAAU,OAAf,SACI,sBAAKA,UAAU,sEAAf,SACI,sBAAKA,UAAU,YAAf,SACI,sBAAKA,UAAU,MAAf,SACI,uBAAKA,UAAU,gEAAgE,iBAAe,OAA9F,UACI,qBAAIA,UAAU,2DAAd,kCAEA,sBAAKA,UAAU,+BAAf,SAEI,uBAAM7H,OAAO,GAAG6H,UAAU,iBAA1B,SACI,wBAAOA,UAAU,2CAA2C5H,KAAK,OAAO4G,YAAY,0C,GAxDvGa,aA0ENiB,aAJS,SAAA5I,GAAK,sBAAUA,EAAMD,SAClB,SAAAqC,GAAQ,MAAK,KAGzBwG,CAA6CtD,ICjE7CuD,ICbMC,G,4JACjB,WACI,IAAM1I,EAASuI,KAAK9E,MAAMzD,OACpBM,EAAaiI,KAAK9E,MAAMnD,WAC9B,OAAIN,EAEI,eAACsF,EAAA,EAAD,CAAQC,QAAqB,KAAZjF,EAAgB,UAAU,SAA3C,SACKN,IAIF,S,GAXqBuH,aC4EzBoB,G,kDAvEX,WAAYlF,GAAO,IAAD,8BACd,cAAMA,IAQVgB,aAAe,SAACC,GACZ,IAAM9E,EAAQ,EAAKA,MAAMgJ,YACzBhJ,EAAM8E,EAAEC,OAAOC,MAAQF,EAAEC,OAAOhE,MAChC,EAAKwD,SAAS,CAAEyE,YAAahJ,KAZf,EAelBiJ,WAAW,kBAAM,SAAAjD,GACbA,EAAGC,iBACH,EAAK1B,SAAS,CAAE2E,WAAW,IAC3BnG,IAAMoG,KAAKC,SAAS,EAAKpJ,MAAMgJ,aAAa7G,MAAM,SAAAM,GAC9C,EAAK8B,SAAS,CAAEnE,OAAQqC,EAAK/B,WAAW+B,EAAI/B,WAAYwI,WAAU,IAC7C,KAAlBzG,EAAI/B,YACHsF,EAAGjB,OAAOsB,aAnBlB,EAAKrG,MAAQ,CACTgJ,YAAa,GACb5I,OAAO,GACPM,WAAW,GACXwI,WAAU,GANA,E,0CA0BlB,WAEA,OACI,uBAAKpB,UAAU,YAAf,UACI,eAAC,GAAD,CAAY1H,OAAQuI,KAAK3I,MAAMI,OAAQM,WAAYiI,KAAK3I,MAAMU,aAC9D,gBAACoF,EAAA,EAAD,CAAMgC,UAAU,aAAa/B,SAAU4C,KAAKM,aAA5C,UACI,eAACnD,EAAA,EAAKQ,IAAN,UACI,gBAACR,EAAA,EAAKS,MAAN,CAAYC,GAAIC,IAAKC,UAAU,iBAA/B,UACI,eAACZ,EAAA,EAAKa,MAAN,4BACA,eAACb,EAAA,EAAKc,QAAN,CAAc1G,KAAK,QAAQ8E,KAAK,QAAQ8B,YAAY,cAAeD,SAAU8B,KAAK9D,aAAcwE,UAAQ,IACxG,eAACvD,EAAA,EAAKwD,KAAN,CAAWxB,UAAU,aAArB,iEAKR,eAAChC,EAAA,EAAKQ,IAAN,UACI,gBAACR,EAAA,EAAKS,MAAN,CAAYC,GAAIC,IAAKC,UAAU,iBAA/B,UACI,eAACZ,EAAA,EAAKa,MAAN,oBACA,eAACb,EAAA,EAAKc,QAAN,CAAc1G,KAAK,QAAQ8E,KAAK,QAAS6B,SAAU8B,KAAK9D,aAAcwE,UAAQ,IAC9E,eAACvD,EAAA,EAAKwD,KAAN,CAAWxB,UAAU,aAArB,oEAMR,eAAChC,EAAA,EAAKQ,IAAN,UACI,gBAACR,EAAA,EAAKS,MAAN,CAAYC,GAAIC,IAAMC,UAAU,oBAAhC,UACI,eAACZ,EAAA,EAAKa,MAAN,uBACA,eAACb,EAAA,EAAKc,QAAN,CAAc1G,KAAK,WAAW8E,KAAK,WAAW8B,YAAY,WAAYD,SAAU8B,KAAK9D,aAAcwE,UAAQ,SAInH,eAACvD,EAAA,EAAKQ,IAAN,UACI,eAACmB,GAAA,EAAD,CAAQ9B,QAAQ,UAAUzF,KAAK,SAASwH,SAAUiB,KAAK3I,MAAMkJ,UAA7D,SAEKP,KAAK3I,MAAMkJ,UAAY,gBAAa,yB,GA9DlCK,IAAM5B,W,kBCChB,GALJ,CACT6B,MAAO,SAACC,EAAUC,GAAX,OACPnM,KAAMoM,KAAN,UAAc7M,KAAd,eAAsC,CAAE2M,WAAUC,e,UCSvCE,OAXf,SAAgB/F,GACZ,OAAGA,EAAMqB,KAED,eAAC2E,GAAA,EAAD,CAASC,UAAU,SAASvJ,KAAK,SAASuH,UAAgB,OAALjE,QAAK,IAALA,KAAOkG,SAAS,kBAAkB,WAIpF,MCKTC,I,yDAGF,WAAYnG,GAAQ,IAAD,8BACf,cAAMA,IAeVoF,WAAW,SAAAjD,GACPA,EAAGC,iBACH,EAAK1B,SAAS,CAAC0F,cAAa,IAC5BC,GAAUV,MAAM,EAAK3F,MAAM4F,SAAU,EAAK5F,MAAM6F,UAAUvH,MAAK,SAAAM,GAC3D,EAAK8B,SAAS,CAAC0F,cAAa,IAC5B5L,QAAQC,IAAImE,GACZ,EAAKoB,MAAMkC,SAAStD,EAAIG,SACzBuH,OAAM,SAAAC,GACL/L,QAAQC,IAAI8L,OAtBhB,EAAKpK,MAAO,CAACiK,cAAa,GAC1B,EAAKI,YAAc,SAAArE,GAAO,EAAKnC,MAAMyG,cAActE,EAAGjB,OAAOhE,QAC7D,EAAKwJ,eAAiB,SAAAvE,GAAO,EAAKnC,MAAM2G,iBAAiBxE,EAAGjB,OAAOhE,QAJpD,E,qDAMnB,WACe0J,SAAS7H,KACf8H,UAAUC,IAAI,cAInBhC,KAAK9E,MAAM+G,WACXjC,KAAK9E,MAAMyG,cAAc,IACzB3B,KAAK9E,MAAM2G,iBAAiB,M,gCAchC,WACO7B,KAAK9E,MAAMjD,gBACV+H,KAAK9E,MAAMsE,QAAQM,KAAK,O,kCAKhC,WACegC,SAAS7H,KACf8H,UAAUG,OAAO,cAEtBlC,KAAK9E,MAAMiH,a,oBAEf,WACI,IAAMrB,EAAWd,KAAK9E,MAAM4F,SACtBC,EAAWf,KAAK9E,MAAM6F,SAC5B,OACI,uBAAKjJ,GAAG,QAAR,UAEA,eAAC,GAAD,CAAQyE,KAAMyD,KAAK3I,MAAMiK,eAEzB,eAAC,GAAD,CAAY7J,OAAQuI,KAAK9E,MAAMzD,OAAQM,WAAYiI,KAAK9E,MAAMnD,aAC9D,sBAAKoH,UAAU,YAAf,SACJ,uBAAKA,UAAU,sBAAf,UAEI,sBAAKrH,GAAG,cAAcqH,UAAU,mBAAmBiD,IAAI,gDACvD,oBAAGtK,GAAG,eAAeqH,UAAU,sBAC/B,gBAAChC,EAAA,EAAD,CAAOgC,UAAU,cAAc/B,SAAU4C,KAAKM,WAA9C,UACI,uBAAMxI,GAAG,eAAeqH,UAAU,iBAClC,wBAAO5H,KAAK,OAAO8K,WAAS,EAACvK,GAAG,aAAaM,MAAO0I,EAAU5C,SAAU8B,KAAK0B,YAAavC,UAAU,eAAehB,YAAY,WAAWuC,UAAQ,IAClJ,wBAAOnJ,KAAK,WAAWO,GAAG,gBAAgBM,MAAO2I,EAAW7C,SAAU8B,KAAK4B,eAAgBzC,UAAU,eAAehB,YAAY,WAAWuC,UAAQ,IACnJ,sBAAK5I,GAAG,WAAWqH,UAAU,WAA7B,SACI,mCACI,wBAAO5H,KAAK,WAAWa,MAAM,gBADjC,oBAIJ,eAAC0G,GAAA,EAAD,CAAQ9B,QAAQ,qBAAqB+B,SAAUiB,KAAK3I,MAAMiK,aAAc/J,KAAK,SAA7E,SAAuFyI,KAAK3I,MAAMiK,aAAe,gBAAa,eAElI,oBAAGzL,KAAK,IAAIsJ,UAAU,kBAAtB,8C,GArEQH,cA4FLiB,gBAdS,SAAA5I,GAAK,sBAAUA,EAAMD,SAClB,SAAAqC,GAAQ,MAAK,CACpCkI,cAAe,SAAAvJ,GAAK,OAChBqB,EAAS,CAAElC,KAAMjB,EAAmB6B,IAAK,WAAYC,WACzDyJ,iBAAkB,SAAAzJ,GAAK,OACnBqB,EAAS,CAAElC,KAAMjB,EAAmB6B,IAAK,WAAYC,WACzDgF,SAAU,SAACpE,GAAD,OACNS,EAAS,CAAElC,KAAMxB,EAAO2B,QAASsB,KACrCmJ,SAAU,kBACN1I,EAAS,CAAElC,KAAMrB,KACrB+L,SAAS,kBACLxI,EAAS,CAAElC,KAAMvB,QAGViK,CAA6CoB,I,QCpGtDiB,G,kDAEF,WAAYpH,GAAO,IAAD,8BAChB,cAAMA,IAFRsB,QAAS,EACS,EAMlBuD,eAAiB,WACb,EAAKnE,SAAS,CACZY,QAAO,EAAKnF,MAAMmF,UANtB,EAAKnF,MAAQ,CACXmF,QAAO,GAHO,E,0CAWlB,WACA,OACI,kCACI,sBAAK2C,UAAU,uDAAf,SACI,uBAAKA,UAAU,YAAf,UACA,gBAAC,UAAD,CAASA,UAAU,eAAeE,GAAG,IAArC,cAA0C,oDAEtC,yBAAQF,UAAU,iBAAiB5H,KAAK,SAAS,cAAY,WAAW,cAAY,4BAChF,gBAAc,2BAA2B,gBAAc,QAAQ,aAAW,oBAD9E,SAEI,uBAAM4H,UAAU,0BAEpB,sBAAKA,UAAU,2BAA2BrH,GAAG,2BAA7C,SACI,sBAAIqH,UAAU,qBAAd,UAmBI,eAAC,GAAD,CAAeD,YAAac,KAAK9E,QACjC,eAAC,GAAD,CAAcgE,YAAac,KAAK9E,wB,GA7ClC8D,a,IA6DXiB,aAJS,SAAA5I,GAAK,sBAAUA,EAAMD,SAClB,SAAAqC,GAAQ,MAAK,KAGzBwG,CAA6CqC,I,iBC/D7C,SAASC,KACpB,IAAMnL,EAAOoL,aAAY,SAAAnL,GAAK,OAAIA,EAAMD,QAClC3C,EAAWgO,cAEjB,OACI,uBAAKtD,UAAU,UAAU,aAAW,QAAQ,oBAAkB,SAA9D,UACE,uBAAKA,UAAU,OAAf,UACE,oBAAGtJ,KAAK,IAAIsJ,UAAU,wBAAtB,SACE,sBAAKA,UAAU,mBAAf,SACE,sBAAKiD,IAAKM,oCAGd,oBAAG7M,KAAK,IAAIsJ,UAAU,0BAAtB,SACG/H,EAAK0J,cAGV,sBAAK3B,UAAU,kBAAf,SACE,sBAAIA,UAAU,MAAd,UACE,qBAAIA,UAAgC,KAArB1K,EAASkO,SAAgB,SAAS,GAAjD,SAEE,eAAC,iBAAD,CAAetD,GAAG,IAAlB,SACA,gBAACuD,GAAA,EAAIC,KAAL,WACE,oBAAG1D,UAAU,oBACb,kDAKJ,sBAAIA,UAAgC,gBAArB1K,EAASkO,UAAmD,WAArBlO,EAASkO,UAA8C,WAArBlO,EAASkO,UAA8C,cAArBlO,EAASkO,SAAyB,SAAS,GAArK,UACE,qBAAG,cAAY,WAAW,gBAAc,QAAQ9M,KAAK,eAAesJ,UAAU,kBAA9E,UACA,oBAAGA,UAAU,qBADb,mBAIA,sBAAIA,UAAU,yBAAyBrH,GAAG,cAA1C,UACE,qBAAIqH,UAAgC,gBAArB1K,EAASkO,UAAmD,mBAArBlO,EAASkO,SAA8B,SAAS,GAAtG,SACA,eAAC,iBAAD,CAAetD,GAAG,eAAlB,SACE,eAACuD,GAAA,EAAIC,KAAL,+BAOF,qBAAI1D,UAAgC,WAArB1K,EAASkO,UAA8C,cAArBlO,EAASkO,SAAyB,SAAS,GAA5F,SACA,eAAC,iBAAD,CAAetD,GAAG,UAAlB,SACE,eAACuD,GAAA,EAAIC,KAAL,gCAQN,sBACA1D,UAAgC,kBAArB1K,EAASkO,UACI,WAArBlO,EAASkO,UACY,oBAArBlO,EAASkO,UACY,iBAArBlO,EAASkO,UACY,cAArBlO,EAASkO,UACY,oBAArBlO,EAASkO,UACY,iBAArBlO,EAASkO,SAEX,SAAS,GATV,UAUE,qBAAG,cAAY,WAAW,gBAAc,QAAQ9M,KAAK,aAAasJ,UAAU,kBAA5E,UACA,oBAAGA,UAAU,2BADb,gBAIA,sBAAIA,UAAU,yBAAyBrH,GAAG,YAA1C,UACA,qBAAIqH,UAAgC,kBAArB1K,EAASkO,SAA6B,SAAS,GAA9D,SACI,eAAC,iBAAD,CAAetD,GAAG,iBAAlB,SACE,eAACuD,GAAA,EAAIC,KAAL,CAAUhN,KAAK,IAAf,4BAGJ,qBAAIsJ,UAAgC,WAArB1K,EAASkO,UAA8C,cAArBlO,EAASkO,SAAyB,SAAS,GAA5F,SACA,eAAC,iBAAD,CAAetD,GAAG,UAAlB,SACE,eAACuD,GAAA,EAAIC,KAAL,CAAUC,SAAS,SAAnB,wBAGF,qBAAI3D,UAAgC,oBAArB1K,EAASkO,SAA+B,SAAS,GAAhE,SACE,eAAC,iBAAD,CAAetD,GAAG,mBAAlB,SACE,eAACuD,GAAA,EAAIC,KAAL,CAAUC,SAAS,SAAnB,6BAGS,WAAX1L,EAAKQ,MAA4B,SAAXR,EAAKQ,KAAgB,qBAAIuH,UAAgC,iBAArB1K,EAASkO,SAA4B,SAAS,GAA7D,SAE3C,eAAC,iBAAD,CAAetD,GAAG,gBAAlB,SACE,eAACuD,GAAA,EAAIC,KAAL,CAAUC,SAAS,SAAnB,qCAEE,GACO,WAAX1L,EAAKQ,MAA4B,SAAXR,EAAKQ,KAAe,qBAAIuH,UAAgC,iBAArB1K,EAASkO,SAA4B,SAAS,GAA7D,SAC1C,eAAC,iBAAD,CAAetD,GAAG,gBAAlB,SACE,eAACuD,GAAA,EAAIC,KAAL,CAAUC,SAAS,SAAnB,qCAEI,GACN,qBAAI3D,UAAgC,oBAArB1K,EAASkO,SAA+B,SAAS,GAAhE,SACE,eAAC,iBAAD,CAAetD,GAAG,mBAAlB,SACE,eAACuD,GAAA,EAAIC,KAAL,CAAUC,SAAS,SAAnB,yCAiBV,qBAAI3D,UAAgC,YAArB1K,EAASkO,SAAuB,SAAS,GAAxD,SACA,eAAC,iBAAD,CAAetD,GAAG,WAAlB,SACQ,gBAACuD,GAAA,EAAIC,KAAL,CAAUhN,KAAK,IAAf,UAAmB,oBAAGsJ,UAAU,2BAAhC,qCChHP,SAAS4D,GAAO7H,GASZuH,cACJD,aAAY,SAAAnL,GAAK,OAAIA,EAAMD,QADxC,IAEMiB,EAASmK,aAAY,SAAAnL,GAAK,OAAIA,EAAMgB,UAG5C,GAFmBkH,cACHE,cACetE,oBAAS,IAAxC,mBAAO6H,EAAP,KAAgBC,EAAhB,KACI,OACI,sBAAK9D,UAAW6D,EAAS,6DAA6D,uEAAtF,SACA,uBAAK7D,UAAU,kBAAf,UACE,uBAAKA,UAAU,iBAAf,UACE,sBAAKA,UAAU,gBAAf,SACE,0BAAQ5H,KAAK,SAAS4H,UAAU,iBAAhC,UACE,uBAAMA,UAAU,4BAChB,uBAAMA,UAAU,4BAChB,uBAAMA,UAAU,iCAGpB,oBAAGA,UAAU,eAAetJ,KAAK,IAAjC,SAAsCwC,EAAOC,UAE/C,0BAAQuH,QAAS,kBAAIoD,GAAaD,IAAW7D,UAAU,iBAAiB5H,KAAK,SAAS,cAAY,WAAW,cAAY,cAAc,gBAAc,mBAAmB,gBAAc,QAAQ,aAAW,oBAAzM,UACE,uBAAM4H,UAAU,oCAChB,uBAAMA,UAAU,oCAChB,uBAAMA,UAAU,uCAElB,uBAAKA,UAAU,+CAA+CrH,GAAG,aAAjE,UACE,gCACE,uBAAKqH,UAAU,wBAAf,UACE,wBAAO5H,KAAK,OAAOa,MAAM,GAAG+G,UAAU,eAAehB,YAAY,cACjE,sBAAKgB,UAAU,qBAAf,SACE,sBAAKA,UAAU,mBAAf,SACE,oBAAGA,UAAU,mCAKrB,sBAAIA,UAAU,aAAd,UACE,qBAAIA,UAAU,WAAd,SACE,qBAAGA,UAAU,uBAAuBtJ,KAAK,IAAzC,UACE,oBAAGsJ,UAAU,yBACb,6BACE,uBAAMA,UAAU,uBAAhB,0BAIN,sBAAIA,UAAU,+BAAd,UACE,qBAAGA,UAAU,2BAA2BtJ,KAAK,qBAAqBiC,GAAG,yBAAyB,cAAY,WAAW,gBAAc,OAAO,gBAAc,QAAxJ,UACE,oBAAGqH,UAAU,uBACb,6BACE,uBAAMA,UAAU,8BAGpB,sBAAKA,UAAU,oCAAoC,kBAAgB,yBAAnE,SACE,eAAC,OAAD,CAAMA,UAAU,gBAAgBE,GAAI,SAApC,yBAKJ,qBAAIF,UAAU,WAAd,SACE,qBAAGA,UAAU,sBAAsBtJ,KAAK,IAAxC,UACE,oBAAGsJ,UAAU,gCACb,6BACE,uBAAMA,UAAU,uBAAhB,uC,IChDL+D,G,kDA3BX,WAAYhI,GAAQ,IAAD,8BACf,cAAMA,IACD7D,MAAQ,CAAE8L,UAAU,GAFV,E,qDAUnB,SAAkB9N,EAAO+N,GAGrB1N,QAAQC,IAAIN,EAAM+N,K,oBAGtB,WACI,OAAIpD,KAAK3I,MAAM8L,SAEJ,eAAC,GAAD,CAAY1L,OAAO,uDAAuDM,WAAW,QAIzFiI,KAAK9E,MAAMmI,Y,uCAlBtB,SAAgChO,GAE5B,MAAO,CAAE8N,UAAU,O,GARCnE,a,iBCiDbsE,GAzCK,SAAC,GAAuC,IAA1BtE,EAAyB,EAApCuE,UAAyBC,EAAW,mBACjDpM,EAAOoL,aAAY,SAAAnL,GAAK,OAAIA,EAAMD,QAClCoI,EAAUC,cAChB,EAAsCtE,oBAAS,GAA/C,mBAAOsI,EAAP,KAAoBC,EAApB,KACAC,qBAAU,WACND,IAAelP,OAAOoP,YAAc,MACpCC,MACD,CAAC7E,IACJ,IAAM8E,EAAgB,WAElBpO,QAAQC,IAAInB,QACZkP,GAAeD,IAKbI,EAAa,WACf,IAAI5O,EACHA,EAAMC,eAAeC,QAAQ,OAC7BO,QAAQC,IAAIV,GACJ,IAALA,GAAYmC,EAAK2M,eAAe,aAC/BvE,EAAQM,KAAK,WAGtB,OACI,eAAC,IAAD,2BAAW0D,GAAX,IAAiBQ,OAAQ,SAAA9I,GAAK,OAC1B,qCACJ,uBAAKiE,UAAU,WAAf,UACA,eAACoD,GAAD,IACA,uBAAKpD,UAAU,aAAf,UACI,eAAC4D,GAAD,CAAQe,cAAeA,IACvB,eAAC,GAAD,UACF,eAAC9E,EAAD,eAAe9D,mB,UCkFV+I,I,2BC1FAC,I,UCnBI,GAXM,CACvBC,gBADuB,WAErB,OAAOvP,KAAMwP,IAAN,UAAajQ,KAAb,yBAETkQ,iBAJuB,SAINrL,GACf,OAAOpE,KAAMoM,KAAN,UAAc7M,KAAd,uBAA4C6E,IAErDsL,UAPuB,SAObC,GACR,OAAO3P,KAAMoM,KAAN,UAAc7M,KAAd,wBAA6CoQ,K,oBCkEzCC,OAvEf,SAAqBtJ,GACjB,IAAMzB,EAAW8F,cACjB,EAAwCpE,mBAAS,GAAjD,mBAAOmG,EAAP,KAAqBmD,EAArB,KACA,EAAqDtJ,mBAAS,IAA9D,mBAAOuJ,EAAP,KAA2BC,EAA3B,KACAhB,qBAAU,WACNc,EAAgB,IAChBG,IACAnL,EAAS,CAAElC,KAAMT,EAAawB,KAAM,yBACrC,IAEH,IAAMsM,EAAiB,WACnBH,EAAgB,IAChBI,GAA8BV,kBAAkB3K,MAAK,SAAAM,GACjD2K,EAAgB,IACM,KAAlB3K,EAAI/B,WACJ4M,EAAuB7K,EAAIG,KAAKtC,SAEhCgN,EAAuB,IAE3BF,EAAgB,SAIxB,OACI,qCACI,sBAAKK,MAAM,UAAX,SACI,sBAAKA,MAAM,MAAX,SACI,uBAAKA,MAAM,YAAX,UACI,eAAC,OAAD,CAAMzF,GAAG,kBAAT,SACI,gBAACP,GAAA,EAAD,CAAQ9B,QAAQ,OAAO+H,QAAM,EAA7B,UACI,oBAAG5F,UAAU,+BADjB,oBAMJ,sBAAK2F,MAAM,OAAX,SACI,sBAAKA,MAAM,YAAX,SACI,uBAAKA,MAAM,mBAAX,UACI,gBAACE,GAAA,EAAD,CAAO7F,UAAU,SAAjB,UAEI,wBAAOA,UAAU,aAAjB,SACI,gCACI,6CACA,uCACA,yCACA,kDAGR,iCACKuF,EAAmB3L,KAAI,SAACkM,EAAOnN,GAAR,OAAgB,gCACpC,8BAAKmN,EAAMC,aACX,8BAAKD,EAAME,aACX,8BAAKF,EAAMG,SACX,8BAAKC,KAAOJ,EAAMK,YAAYC,OAAO,iCAIhDjE,EAAa,IAAI,sBAAKkE,MAAO,CAAEC,IAAK,MAAMC,SAAS,YAAlC,SAAgD,eAACC,GAAA,EAAD,CAAaH,MAAO,CAAC,SAAW,WAAW,MAAQ,MAAM,KAAO,OAAQI,SAAO,EAAC5I,QAAQ,UAAU6I,IAAKvE,EAAcwE,MAAK,UAAKxE,EAAL,SAA+B,oB,2BC0EhPyE,OAlIf,SAAwB7K,GACtB,IAAM9D,EAAOoL,aAAY,SAAAnL,GAAK,OAAIA,EAAMD,QAClCqC,EAAW8F,cACjB,EAA4BpE,mBAAS,IAArC,mBAAO6K,EAAP,KAAeC,EAAf,KACA,EAAwC9K,oBAAS,GAAjD,mBAAOmG,EAAP,KAAqBmD,EAArB,KACA,EAAkCtJ,mBAAS,CAAE+K,QAAQ,EAAO3O,KAAM,GAAII,QAAS,KAA/E,mBAAOwO,EAAP,KAAkBC,EAAlB,KACAzC,qBAAU,WACRlK,EAAS,CAAElC,KAAMT,EAAawB,KAAM,uBACnC,IACH,IAAM+N,EAAkB,SAACC,GACvBF,EAAaE,GACbC,YAAW,WACTH,EAAa,CAAEF,QAAQ,EAAO3O,KAAM,GAAII,QAAS,OAChD,MASC6O,EAASC,aAAU,CACvBC,cAAe,CACbxB,WAAY,GACZC,WAAY,GACZC,OAAQ,GACRuB,QAASvP,EAAKU,IAEhB8O,SAde,SAAAZ,GACf,IAAMvO,EAAS,GAIf,OAHKuO,EAAOd,aACVzN,EAAOyN,WAAa,0BAEfzN,GAUP2F,SAAS,WAAD,wCAAE,WAAO4I,GAAP,yFACRvB,GAAgB,GADR,kBAGeI,GAA8BR,iBAAiB2B,GAH9D,OAGFzQ,EAHE,OAINkP,GAAgB,GACW,KAAvBlP,EAASwC,YACXsO,EAAgB,CAAEH,QAAQ,EAAM3O,KAAM,aAAcI,QAAS,uCAC7D6O,EAAOK,aAEPR,EAAgB,CAAEH,QAAQ,EAAM3O,KAAM,YAAaI,QAAS,yBATxD,gDAcN8M,GAAgB,GAChB4B,EAAgB,CAAEH,QAAQ,EAAM3O,KAAM,YAAaI,QAAS,KAAMpC,SAAS0E,KAAKtC,UAf1E,yDAAF,mDAAC,GAkBTuE,aAAc,WACZ+J,GAAU,SAAAa,GAAU,kCACfA,GADe,kBAGjBd,EAAO5J,OAAOC,KAAO2J,EAAO5J,OAAOhE,cAK1C,OACE,qCACE,uBAAK0M,MAAM,UAAX,UASE,eAAC/H,EAAA,EAAD,CAAOG,aAAW,EAAC6J,MAAO,IAAMxK,KAAM4J,EAAUD,OAAQjJ,QAAS,kBAAMmJ,EAAa,CAAEF,QAAQ,EAAO3O,KAAM,GAAII,QAAS,MAAkEqF,QAA2B,aAAlBmJ,EAAU5O,KAAsB,SAAW,UAA9O,SACG4O,EAAUxO,SADyI,aAAlBwO,EAAU5O,KAAsB,SAAW,WAG/K,eAAC,GAAD,CAAQgF,KAAM+E,IACd,sBAAKwD,MAAM,MAAX,SACE,sBAAKA,MAAM,WAAX,SACE,sBAAKA,MAAM,iBAAX,SAIE,sBAAKA,MAAM,YAAX,SACE,gBAAC3H,EAAA,EAAD,CAAMC,SAAUoJ,EAAOQ,aAAvB,UACE,gBAAC7J,EAAA,EAAKS,MAAN,CAAYuB,UAAU,2BAA2BpB,UAAU,iBAA3D,UACE,eAACZ,EAAA,EAAKa,MAAN,yBACA,eAACb,EAAA,EAAKc,QAAN,CACE1G,KAAK,OACL8E,KAAK,aACL8B,YAAY,mBACZD,SAAUsI,EAAOtK,aACjB9D,MAAOoO,EAAOR,OAAOd,aAGtBsB,EAAOS,QAAQ/B,YAAcsB,EAAO/O,OAAOyN,WAC1C,sBAAKJ,MAAM,cAAX,SAA0B0B,EAAO/O,OAAOyN,aACtC,QAIN,gBAAC/H,EAAA,EAAKS,MAAN,CAAYuB,UAAU,OAAOpB,UAAU,iBAAvC,UACE,eAACZ,EAAA,EAAKa,MAAN,yBACA,eAACb,EAAA,EAAKc,QAAN,CACE1G,KAAK,OACL8E,KAAK,aACL8B,YAAY,mBACZD,SAAUsI,EAAOtK,aACjB9D,MAAOoO,EAAOR,OAAOb,gBAIzB,gBAAChI,EAAA,EAAKS,MAAN,CAAYuB,UAAU,OAAOpB,UAAU,oBAAvC,UACE,eAACZ,EAAA,EAAKa,MAAN,sBACA,eAACb,EAAA,EAAKc,QAAN,CAAcJ,GAAG,WAAWqJ,KAAM,EAAG7K,KAAK,SACxC6B,SAAUsI,EAAOtK,aACjB9D,MAAOoO,EAAOR,OAAOZ,YAEzB,eAACtG,GAAA,EAAD,CAAQ9B,QAAQ,UAAUzF,KAAK,SAA/B,mCCrHZ4P,GAAoB,CACxBC,qBADwB,WACc,IAAjBC,EAAgB,uDAAN,MAC7B,OAAOzS,KAAMwP,IAAN,UAAajQ,KAAb,yBAAsCkT,KAE/CC,kBAJwB,SAINtO,GAChB,OAAOpE,KAAMoM,KAAN,UAAc7M,KAAd,iBAAsC6E,IAG/CuO,aARwB,SAQXzP,GACX,OAAOlD,KAAM4S,OAAN,UAAgBrT,KAAhB,yBAAyC2D,KAElD2P,WAXwB,SAWbzO,EAAKlB,GACd,OAAOlD,KAAM8S,IAAN,UAAavT,KAAb,yBAAsC2D,GAAKkB,KAInC,GAACmO,GC8YLQ,OAtZf,SAAmBzM,GACf,IAAM9D,EAAOoL,aAAY,SAAAnL,GAAK,OAAIA,EAAMD,QACpCoI,EAAUC,cACRhG,EAAW8F,cACjB,EAA4CpE,mBAAS,IAAIK,MAAzD,mBAAOoM,EAAP,KAAuBC,EAAvB,KACA,EAAsB1M,qBAAtB,mBAAOI,EAAP,KAAYuM,EAAZ,KACA,EAA4B3M,mBAAS,IAArC,mBACA,GADA,UACwCA,oBAAS,IAAjD,mBAAOmG,EAAP,KAAqBmD,EAArB,KACA,EAA4BtJ,mBAAS,IAArC,mBAAO4M,EAAP,KAAeC,EAAf,KACA,EAAkC7M,mBAAS,CAAE+K,QAAQ,EAAO3O,KAAM,GAAII,QAAS,KAA/E,mBAAOwO,EAAP,KAAkBC,EAAlB,KACA,EAA0BjL,mBAAS,IAAnC,mBAAO8M,EAAP,KAAcC,EAAd,KACIC,EAAUhU,KAASiU,QAAQ,OAAO,KACtCzE,qBAAU,WACNjO,QAAQC,IAAIuF,GACZzB,EAAS,CAAElC,KAAMT,EAAawB,KAAM,eAChC4C,EAAMzG,SAAS4C,OACfgR,EAAiBnN,EAAMzG,SAAS4C,OACpC8M,MACD,IACH,IAAMA,EAAe,mDAAG,+GAEhBM,GAAgB,GAFA,SAGKI,GAA8BV,kBAHnC,OAGZ5O,EAHY,OAIhBkP,GAAgB,GAChBuD,EAAUzS,EAAS0E,KAAKtC,SALR,gDAOhB8M,GAAgB,GAChB2B,EAAa,CAAEF,QAAQ,EAAM3O,KAAM,YAAaI,QAAS,KAAMpC,SAAS0E,KAAKtC,UAR7D,yDAAH,qDAWf0Q,EAAgB,mDAAG,WAAOhB,GAAP,kGAEjB5C,GAAgB,GAFC,SAGI6D,GAAgClB,qBAAqBC,GAHzD,OAGb9R,EAHa,OAIjBG,QAAQC,IAAIJ,GACZiR,EAAOR,OAAOuC,YAAchT,EAAS0E,KAAKtC,QAAQ,GAAG4Q,YACrD/B,EAAOR,OAAOwC,YAAcjT,EAAS0E,KAAKtC,QAAQ,GAAG6Q,YACrDhC,EAAOR,OAAOvK,OAASlG,EAAS0E,KAAKtC,QAAQ,GAAG8D,OAChD+K,EAAOR,OAAOyC,IAAMlT,EAAS0E,KAAKtC,QAAQ,GAAG8Q,IAC7CjC,EAAOR,OAAO0C,eAAiBnT,EAAS0E,KAAKtC,QAAQ,GAAG+Q,eACxDlC,EAAOR,OAAO2C,cAAgBpT,EAAS0E,KAAKtC,QAAQ,GAAGgR,cACvDnC,EAAOR,OAAO4C,SAAWrT,EAAS0E,KAAKtC,QAAQ,GAAGiR,SAClDpC,EAAOR,OAAO6C,gBAAkBtT,EAAS0E,KAAKtC,QAAQ,GAAGkR,gBACzDrC,EAAOR,OAAO8C,gBAAkBvT,EAAS0E,KAAKtC,QAAQ,GAAGmR,gBACzDtC,EAAOR,OAAO+C,uBAAyBxT,EAAS0E,KAAKtC,QAAQ,GAAGoR,uBAChEvC,EAAOR,OAAOgD,gBAAkBzT,EAAS0E,KAAKtC,QAAQ,GAAGqR,gBACzDxC,EAAOR,OAAOiD,mBAAqB1T,EAAS0E,KAAKtC,QAAQ,GAAGsR,mBAC5DzC,EAAOR,OAAOkD,aAAe3T,EAAS0E,KAAKtC,QAAQ,GAAGuR,aACtD1C,EAAOR,OAAOmD,eAAiB5T,EAAS0E,KAAKtC,QAAQ,GAAGwR,eACxD3C,EAAOR,OAAOoD,oBAAsB7T,EAAS0E,KAAKtC,QAAQ,GAAGyR,oBAC7D5C,EAAOR,OAAOqD,gBAAkB9T,EAAS0E,KAAKtC,QAAQ,GAAG0R,gBACzDxB,EAAkB,IAAIrM,KAAKjG,EAAS0E,KAAKtC,QAAQ,GAAG0R,kBACpD7C,EAAOR,OAAOsD,cAAgB/T,EAAS0E,KAAKtC,QAAQ,GAAG2R,cACpD/T,EAAS0E,KAAKtC,QAAQ,GAAGsQ,OACxBC,EAAS3S,EAAS0E,KAAKtC,QAAQ,GAAGsQ,OAEtCH,EAAO,IAAItM,KAAKjG,EAAS0E,KAAKtC,QAAQ,GAAG2R,gBAEzC7E,GAAgB,GA5BC,kDA+BjBA,GAAgB,GAChB2B,EAAa,CAAEF,QAAQ,EAAM3O,KAAM,YAAaI,QAAS,KAAMpC,SAAS0E,KAAKtC,UAhC5D,0DAAH,sDA4ChB4R,EAAQ,mDAAE,WAAMpN,GAAN,sGAEkB,GAAvBA,EAAEC,OAAOoN,MAAMC,OAFV,0CAGG,GAHH,cAIRhF,GAAgB,GAChB2B,EAAa,CAAEF,QAAQ,EAAO3O,KAAM,GAAII,QAAS,KAC3C4M,EAAOpI,EAAEC,OAAOoN,MAAM,GACxBE,EAAanF,EAAKlI,KAAKqD,MAAM,KAErB,QADRiK,EAAUD,EAAW,KACK,OAATC,IACjBlF,GAAgB,GAChB2B,EAAa,CAAEF,QAAQ,EAAM3O,KAAM,YAAaI,QAAS,0CAEzDiS,EAAW,IAAIC,UACVC,OAAO,QAASvF,GAdjB,UAeaM,GAA8BP,UAAUsF,GAfrD,QAgBY,MADhBrU,EAfI,QAgBIwU,QACR7B,EAAS3S,EAAS0E,KAAKtC,QAAQsQ,MAAM+B,MAEzCtU,QAAQC,IAAIJ,GACZkP,GAAgB,GApBR,kDAsBRA,GAAgB,GAChB2B,EAAa,CAAEF,QAAQ,EAAM3O,KAAM,YAAaI,QAAS,KAAM/B,aAvBvD,0DAAF,sDA2BR4Q,EAASC,aAAU,CACrBC,cAAe,CACX2C,gBAAiBzB,EACjB0B,cAAe/N,EACfiN,YAAa,GACb/M,OAAQ,GACRgN,IAAK,GACLC,eAAgB,GAChBC,cAAe,GACfC,SAAU,GACVC,gBAAiB,GACjBN,YAAa,GACbO,gBAAiB,GACjBC,uBAAwB,GACxBC,gBAAiB,GACjBC,mBAAoB,GACpBC,aAAc,GACdC,eAAgB,GAChBC,oBAAqB,GACrBzC,QAASvP,EAAKU,IAElB8O,SAxDa,SAAAZ,GACbxR,OAAOyV,SAAS,EAAG,GACnB,IAAMxS,EAAS,GAIf,OAHKuO,EAAOwC,cACR/Q,EAAO+Q,YAAc,8BAElB/Q,GAmDP2F,SAAS,WAAD,wCAAE,WAAO4I,GAAP,qFACNvB,GAAgB,GAChBjQ,OAAOyV,SAAS,EAAG,GAFb,SAIFjE,EAAOqD,gBAAkBzB,EACzB5B,EAAOsD,cAAgB/N,EACvByK,EAAOiC,MAAQA,EACX1S,EAAW,IACX2F,EAAMzG,SAAS4C,MARjB,kCASmBiR,GAAgCb,WAAWzB,EAAQ9K,EAAMzG,SAAS4C,OATrF,QASE9B,EATF,gDAWmB+S,GAAgChB,kBAAkBtB,GAXrE,QAWEzQ,EAXF,eAaFkP,GAAgB,GACW,KAAvBlP,EAASwC,YACTyO,EAAOK,YACH3L,EAAMzG,SAAS4C,OACfmI,EAAQM,KAAK,WACjBsG,EAAa,CAAEF,QAAQ,EAAM3O,KAAM,aAAcI,QAAS,kCAE1DyO,EAAa,CAAEF,QAAQ,EAAM3O,KAAM,YAAaI,QAAS,0BApB3D,kDAwBFjC,QAAQC,IAAI,KAAMJ,SAAS0E,KAAKtC,SAChC8M,GAAgB,GAChB2B,EAAa,CAAEF,QAAQ,EAAM3O,KAAM,YAAaI,QAAS,KAAMpC,SAAS0E,KAAKtC,UA1B3E,0DAAF,mDAAC,KA8Bb,OACI,qCAEI,uBAAKmN,MAAM,UAAX,UACI,eAAC/H,EAAA,EAAD,CAAOG,aAAW,EAAC6J,MAAO,IAAMxK,KAAM4J,EAAUD,OAAQjJ,QAAS,kBAAMmJ,EAAa,CAAEF,QAAQ,EAAO3O,KAAM,GAAII,QAAS,MAAkEqF,QAA2B,aAAlBmJ,EAAU5O,KAAsB,SAAW,UAA9O,SACK4O,EAAUxO,SADuI,aAAlBwO,EAAU5O,KAAsB,SAAW,WAI/K,eAAC,GAAD,CAAQgF,KAAM+E,IACd,uBAAKwD,MAAM,MAAX,UACI,sBAAKA,MAAM,WAAX,SACI,sBAAKA,MAAM,iBAAX,SAII,sBAAKA,MAAM,YAAX,SAEI,gBAAC3H,EAAA,EAAD,CAAMC,SAAUoJ,EAAOQ,aAAvB,UACI,gBAACrJ,GAAA,EAAD,CAAKwB,UAAU,OAAf,UACI,gBAAChC,EAAA,EAAKS,MAAN,CAAYC,GAAIC,IAAKqB,UAAU,sBAAsBpB,UAAU,iBAA/D,UACI,eAACZ,EAAA,EAAKa,MAAN,8BACA,eAAC,KAAD,CAAYmB,UAAU,eAClBf,SAAUwJ,EACV1J,SAAU,SAACG,GAAD,OAAUwJ,EAAkBxJ,IACtChC,KAAK,uBAIb,gBAACc,EAAA,EAAKS,MAAN,CAAYC,GAAIC,IAAKqB,UAAU,sBAAsBpB,UAAU,eAA/D,UACI,eAACZ,EAAA,EAAKa,MAAN,0BACA,eAACb,EAAA,EAAKc,QAAN,CAAc1G,KAAK,OACf4G,YAAY,cACZ9B,KAAK,cACL6B,SAAUsI,EAAOtK,aACjB9D,MAAOoO,EAAOR,OAAOwC,cAGxBhC,EAAOS,QAAQuB,aAAehC,EAAO/O,OAAO+Q,YACzC,sBAAK1D,MAAM,cAAX,SAA0B0B,EAAO/O,OAAO+Q,cACxC,WAGZ,gBAAC7K,GAAA,EAAD,CAAKwB,UAAU,OAAf,UACI,gBAAChC,EAAA,EAAKS,MAAN,CAAYC,GAAIC,IAAKC,UAAU,cAA/B,UACI,eAACZ,EAAA,EAAKa,MAAN,4BACA,eAAC,KAAD,CACImB,UAAU,eACVf,SAAU7C,EACV2C,SAAU,SAACG,GAAD,OAAUyJ,EAAOzJ,IAC3BhC,KAAK,qBAGb,gBAACc,EAAA,EAAKS,MAAN,CAAYC,GAAIC,IAAKqB,UAAU,OAAOpB,UAAU,mBAAhD,UACI,eAACZ,EAAA,EAAKa,MAAN,qBACA,0BACImB,UAAU,eACV9C,KAAK,SACL6B,SAAUsI,EAAOtK,aACjB9D,MAAOoO,EAAOR,OAAOvK,OAJzB,UAMI,yBAAerD,MAAM,GAArB,0BAAY,IAEZ,yBAAmBA,MAAM,OAAzB,iBAAY,QACZ,yBAAqBA,MAAM,SAA3B,mBAAY,mBAMxB,gBAACuF,GAAA,EAAD,CAAKwB,UAAU,OAAf,UACI,gBAAChC,EAAA,EAAKS,MAAN,CAAYC,GAAIC,IAAKC,UAAU,cAA/B,UACI,eAACZ,EAAA,EAAKa,MAAN,kBACA,eAACb,EAAA,EAAKc,QAAN,CACI5B,KAAK,MACL6B,SAAUsI,EAAOtK,aACjB9D,MAAOoO,EAAOR,OAAOyC,SAI7B,gBAACtL,EAAA,EAAKS,MAAN,CAAYC,GAAIC,IAAKC,UAAU,gBAA/B,UACI,eAACZ,EAAA,EAAKa,MAAN,6BACA,eAACb,EAAA,EAAKc,QAAN,CACI5B,KAAK,iBACL6B,SAAUsI,EAAOtK,aACjB9D,MAAOoO,EAAOR,OAAO0C,uBAMjC,gBAAC/K,GAAA,EAAD,CAAKwB,UAAU,OAAf,UACI,gBAAChC,EAAA,EAAKS,MAAN,CAAYC,GAAIC,IAAKC,UAAU,cAA/B,UACI,eAACZ,EAAA,EAAKa,MAAN,2BACA,eAACb,EAAA,EAAKc,QAAN,CACI5B,KAAK,gBACL9E,KAAK,SACL2G,SAAUsI,EAAOtK,aACjB9D,MAAOoO,EAAOR,OAAO2C,mBAI7B,gBAACxL,EAAA,EAAKS,MAAN,CAAYC,GAAIC,IAAKC,UAAU,gBAA/B,UACI,eAACZ,EAAA,EAAKa,MAAN,oBACA,eAACb,EAAA,EAAKc,QAAN,CACI5B,KAAK,WACL6B,SAAUsI,EAAOtK,aACjB9D,MAAOoO,EAAOR,OAAO4C,SACrBrR,KAAK,eAKjB,eAACoG,GAAA,EAAD,CAAKwB,UAAU,OAAf,SACI,gBAAChC,EAAA,EAAKS,MAAN,CAAYC,GAAIC,IAAKoM,GAAI,EAAG/K,UAAU,OAAOpB,UAAU,mBAAvD,UACI,eAACZ,EAAA,EAAKa,MAAN,2BACA,0BAAQmB,UAAU,eAAe9C,KAAK,kBAAkB6B,SAAUsI,EAAOtK,aACrE9D,MAAOoO,EAAOR,OAAO6C,gBADzB,UAGI,yBAAezQ,MAAM,GAArB,gCAAY,IACX2P,EAAOhP,KAAI,SAACkM,EAAOnN,GAAR,OACR,yBAA+BM,MAAO6M,EAAMC,WAA5C,SAAyDD,EAAMC,YAAlDD,EAAMC,uBAMnC,eAACvH,GAAA,EAAD,CAAKwB,UAAU,OAAf,SACI,eAACrB,EAAA,EAAD,UACI,qBAAIqB,UAAU,YAAd,iCAGR,gBAACxB,GAAA,EAAD,CAAKwB,UAAU,OAAf,UACI,gBAAChC,EAAA,EAAKS,MAAN,CAAYC,GAAIC,IAAKC,UAAU,cAA/B,UACI,eAACZ,EAAA,EAAKa,MAAN,yBACA,eAACb,EAAA,EAAKc,QAAN,CACI5B,KAAK,cACL9E,KAAK,SACL2G,SAAUsI,EAAOtK,aACjB9D,MAAOoO,EAAOR,OAAOuC,iBAI7B,gBAACpL,EAAA,EAAKS,MAAN,CAAYC,GAAIC,IAAKC,UAAU,gBAA/B,UACI,eAACZ,EAAA,EAAKa,MAAN,kBACA,eAACb,EAAA,EAAKc,QAAN,CACI5B,KAAK,kBACL6B,SAAUsI,EAAOtK,aACjB9D,MAAOoO,EAAOR,OAAO8C,wBAKjC,gBAACnL,GAAA,EAAD,CAAKwB,UAAU,OAAf,UACI,gBAAChC,EAAA,EAAKS,MAAN,CAAYC,GAAIC,IAAKC,UAAU,cAA/B,UACI,eAACZ,EAAA,EAAKa,MAAN,kCACA,eAACb,EAAA,EAAKc,QAAN,CACI5B,KAAK,yBACL6B,SAAUsI,EAAOtK,aACjB9D,MAAOoO,EAAOR,OAAO+C,4BAI7B,gBAAC5L,EAAA,EAAKS,MAAN,CAAYC,GAAIC,IAAKC,UAAU,gBAA/B,UACI,eAACZ,EAAA,EAAKa,MAAN,2BACA,eAACb,EAAA,EAAKc,QAAN,CACI5B,KAAK,kBACL6B,SAAUsI,EAAOtK,aACjB9D,MAAOoO,EAAOR,OAAOgD,wBAKjC,eAACrL,GAAA,EAAD,CAAKwB,UAAU,OAAf,SACI,gBAAChC,EAAA,EAAKS,MAAN,CAAYC,GAAIC,IAAKoM,GAAI,EAAGnM,UAAU,cAAtC,UACI,eAACZ,EAAA,EAAKa,MAAN,8BACA,eAACb,EAAA,EAAKc,QAAN,CACI5B,KAAK,qBACL6B,SAAUsI,EAAOtK,aACjB9D,MAAOoO,EAAOR,OAAOiD,0BAMjC,eAACtL,GAAA,EAAD,CAAKwB,UAAU,OAAf,SACI,eAACrB,EAAA,EAAD,UACI,qBAAIqB,UAAU,YAAd,8BAGR,gBAACxB,GAAA,EAAD,CAAKwB,UAAU,OAAf,UACI,gBAAChC,EAAA,EAAKS,MAAN,CAAYC,GAAIC,IAAKC,UAAU,cAA/B,UACI,eAACZ,EAAA,EAAKa,MAAN,+BACA,eAACb,EAAA,EAAKc,QAAN,CACI5B,KAAK,eACL9E,KAAK,SACL2G,SAAUsI,EAAOtK,aACjB9D,MAAOoO,EAAOR,OAAOkD,kBAI7B,gBAAC/L,EAAA,EAAKS,MAAN,CAAYC,GAAIC,IAAKC,UAAU,gBAA/B,UACI,eAACZ,EAAA,EAAKa,MAAN,wBACA,eAACb,EAAA,EAAKc,QAAN,CACI5B,KAAK,iBACL6B,SAAUsI,EAAOtK,aACjB9D,MAAOoO,EAAOR,OAAOmD,uBAKjC,eAACxL,GAAA,EAAD,CAAKwB,UAAU,OAAf,SACI,gBAAChC,EAAA,EAAKS,MAAN,CAAYC,GAAIC,IAAKoM,GAAI,EAAGnM,UAAU,cAAtC,UACI,eAACZ,EAAA,EAAKa,MAAN,kCACA,eAACb,EAAA,EAAKc,QAAN,CACI5B,KAAK,sBACL6B,SAAUsI,EAAOtK,aACjB9D,MAAOoO,EAAOR,OAAOoD,2BAOjC,eAACtK,GAAA,EAAD,CAAQ9B,QAAQ,UAAUzF,KAAK,SAA/B,2BAOhB,sBAAKuN,MAAM,WAAX,SACI,sBAAKA,MAAM,iBAAX,SACI,uBAAKA,MAAM,YAAX,UACI,sBAAKA,MAAM,QAAX,SACI,sBAAK1C,IAAI,kCAAkC+H,IAAI,UAGnD,sBAAKrF,MAAM,SAAX,SACI,qBAAGjP,KAAK,IAAR,UACI,sBAAKiP,MAAM,qBAAqB1C,IAAY,IAAP6F,EAAU,gCAAgCE,EAAQF,EAAOkC,IAAI,QAClG,wBAAO5S,KAAK,OAAO8E,KAAK,gBAAgB6B,SAAU,SAAC/B,GAAD,OAAKoN,EAASpN,2B,mBC9IzFiO,OA7Pf,SAAiBlP,GACb,IAAIsE,EAAUC,cACRhG,EAAW8F,cACjB,EAAwCpE,mBAAS,GAAjD,mBAAOmG,EAAP,KAAqBmD,EAArB,KACA,EAA8CtJ,oBAAS,GAAvD,mBAAOkP,EAAP,KAAwBC,EAAxB,KACA,EAAgCnP,mBAAS,GAAzC,mBAAOoP,EAAP,KAAiBC,EAAjB,KACA,EAAuCrP,mBAAS,IAAhD,mBAAOsP,EAAP,KAAqBC,EAArB,KACA/G,qBAAU,WACNc,EAAgB,IAChBG,IACAnL,EAAS,CAAElC,KAAMT,EAAawB,KAAM,kBACtC,IAEF,IAAMU,EAAO2R,mBACT,kBACAF,EAAc1R,KAAI,SAAClB,EAAO+S,GAErB,MAAO,CACJC,KAAKxF,KAAOxN,EAAOwR,iBAAiB9D,OAAO,qBAC3CuF,KAAKjT,EAAO2Q,YACZuC,KAAKlT,EAAOgR,gBACZmC,KAAKnT,EAAO8Q,cACZsC,KAAKpT,QAKb,CAAC4S,IAGCS,EAAUP,mBACZ,iBAAM,CACJ,CACEhO,OAAQ,kBACRwO,SAAU,OACVC,aAAY,GAEd,CACEzO,OAAQ,cACRwO,SAAU,OACVC,aAAY,GAEd,CACEzO,OAAQ,oBACRwO,SAAU,OACVC,aAAY,GAEd,CACEzO,OAAQ,gBACRwO,SAAU,OACVC,aAAY,GAEd,CACEzO,OAAQ,SACRwO,SAAU,OACVC,aAAY,MAIhB,IAGExG,EAAiB,WACnBH,EAAgB,IAChB4G,GAA+BjE,uBAAuB5N,MAAK,SAAAM,GACvD2K,EAAgB,IACK,KAAlB3K,EAAI/B,WACH2S,EAAiB5Q,EAAIG,KAAKtC,SAE1B+S,EAAiB,IAErBjG,EAAgB,SAQlB8C,EAAY,mDAAC,0GACf+C,GAAmB,GACfgB,EAFW,YAEOb,GACtBC,EAAiB,IAHF,SAKXjG,EAAgB,IALL,SAMU4G,GAA+B9D,aAAagD,GANtD,OAMPhV,EANO,OAOXkP,EAAgB,IACU,KAAvBlP,EAASwC,aACJwT,EAAcD,EAAYE,QAAO,SAACC,EAAOC,GAAR,OAAcD,EAAOpE,WAAWkD,KACrEG,EAAiBa,IAEpB9G,EAAgB,KAZN,kDAcP/O,QAAQC,IAAI,KAAMJ,SAAS0E,KAAKtC,SAChC8M,EAAgB,KAfT,0DAAD,qDAoBlB,SAASkH,EAAT,GAEI,IAAD,IADCC,OAAUC,EACX,EADWA,YAAaC,EACxB,EADwBA,gBAAiBC,EACzC,EADyCA,UAElCC,EAAQF,EAAgBrC,OAE9B,OACI,wBACItK,UAAU,eACV/G,MAAOyT,GAAe,GACtB3N,SAAU,SAAA/B,GACN4P,EAAU5P,EAAEC,OAAOhE,YAASe,IAEhCgF,YAAW,iBAAY6N,EAAZ,iBAIvB,IAAMC,EAAgBrL,IAAM+J,SACxB,iBAAO,CAEHuB,OAAQP,KAEZ,IAEEQ,EAAW,SAACC,GAEhB,IADA,IAAIC,EAAkB,GACdC,EAAE,EAAEA,GAAGF,EAAUE,IACvBD,EAAgBvM,KAAKwM,GAEvB,OACA,gBAACC,GAAA,EAAD,WACE,eAACA,GAAA,EAAWC,MAAZ,CAAmB3M,QAAS,kBAAM4M,EAAS,MAC3C,eAACF,GAAA,EAAWG,KAAZ,CAAiB7M,QAAS,kBAAM8M,KAAgB5N,UAAW6N,IAC1DP,EAAgBtT,KAAI,SAAA8T,GAAG,OAAE,eAACN,GAAA,EAAWO,KAAZ,CAA2B/H,OAAQ8H,IAASE,EAAU,EAAIlN,QAAS,kBAAM4M,EAASI,EAAI,IAAtF,SAA2FA,GAArEA,MAChD,eAACN,GAAA,EAAWS,KAAZ,CAAiBnN,QAAS,kBAAMoN,KAAYlO,UAAWmO,IACvD,eAACX,GAAA,EAAWY,KAAZ,CAAiBtN,QAAS,kBAAM4M,EAASL,EAAU,UAKvD,EAgBMgB,oBAAS,CAAElC,UAASlS,OAAMiT,gBAAeoB,aAAc,CAAEN,UAAW,IAAKO,cAAWC,aAAUC,kBAfhGC,EADJ,EACIA,cACAC,EAFJ,EAEIA,kBACAC,EAHJ,EAGIA,aAEAC,GALJ,EAII1G,KAJJ,EAKI0G,YAEAtV,GAPJ,EAMIuV,YANJ,EAOIvV,MACAwV,EARJ,EAQIA,UARJ,IASIzW,MAAS0V,EATb,EASaA,UACTN,GAVJ,EASwBsB,SATxB,EAUItB,UACAE,EAXJ,EAWIA,aACAM,EAZJ,EAYIA,SAEAL,GAdJ,EAaIoB,YAbJ,EAcIpB,iBACAM,EAfJ,EAeIA,YAEJ,OACI,uCACF,gBAAC5Q,EAAA,EAAD,CAAOC,KAAM8N,EAAiB5N,OAAQ,kBAAI6N,GAAmB,IAA7D,UACE,eAAChO,EAAA,EAAMK,OAAP,CAAcC,aAAW,EAAzB,SACE,eAACN,EAAA,EAAMO,MAAP,8BAEF,eAACP,EAAA,EAAMQ,KAAP,4BACA,gBAACR,EAAA,EAAM2R,OAAP,WACE,eAACnP,GAAA,EAAD,CAAQ9B,QAAQ,YAAY6C,QAAS,kBAAIyK,GAAmB,IAA5D,oBAGA,eAACxL,GAAA,EAAD,CAAQ9B,QAAQ,UAAU6C,QAAS,kBAAI0H,KAAvC,0BAMF,sBAAKzC,MAAM,UAAX,SACQ,sBAAKA,MAAM,MAAX,SACI,uBAAKA,MAAM,YAAX,UACJ,eAAC,OAAD,CAAMzF,GAAG,aAAT,SACA,gBAACP,GAAA,EAAD,CAAQ9B,QAAQ,OAAO+H,QAAM,EAA7B,UACA,oBAAG5F,UAAU,+BADb,kBASJ,sBAAKA,UAAU,aAAf,SACGgN,EAAS2B,KAEZ,sBAAKhJ,MAAM,OAAX,SACI,sBAAKA,MAAM,YAAX,SACI,uBAAKA,MAAM,mBAAX,UAER,gBAACE,GAAA,EAAD,2BAAWyI,KAAX,IAA4BtO,UAAU,cAAtC,UACA,wBAAOA,UAAU,aAAjB,SACSwO,EAAa5U,KAAI,SAAAmV,GAAW,OAC7B,+CAAQA,EAAYC,uBAApB,aACKD,EAAY9Y,QAAQ2D,KAAI,SAAA6S,GAAM,OAC/B,gDACQA,EAAOwC,eAAexC,EAAOyC,yBADrC,cAGKzC,EAAO5H,OAAO,UACf,gCACC4H,EAAO0C,SAAY1C,EAAO2C,aAAe,gBAAQ,gBAAS,KAE3D,+BAAM3C,EAAOR,YAAaQ,EAAO5H,OAAO,UAAY,sBAMpE,kDAAW0J,KAAX,aAESpV,EAAKS,KAAI,SAAAyV,GAEN,OADAZ,EAAWY,GAEP,+CAAQA,EAAIC,eAAZ,aACCD,EAAIE,MAAM3V,KAAI,SAAA4V,GAEX,OADAjZ,QAAQC,IAAIgZ,GACQ,QAAjBA,EAAK/C,OAAO9T,GAEP,+CAAQ6W,EAAKC,gBAAb,aACKD,EAAK3K,OAAO,WAKb,gCACI,eAAClF,GAAA,EAAD,CAAQ+P,KAAM,KAAM7R,QAAQ,UAAW6C,QAAS,WAAKL,EAAQM,KAAK,oBAAoB6O,EAAKvW,MAAMiP,YAAjG,kBACC,IACD,eAACvI,GAAA,EAAD,CAAQ+P,KAAM,KAAM7R,QAAQ,UAAU6C,QAAS,WAAKL,EAAQM,KAAK,aAAa6O,EAAKvW,MAAMiP,YAAzF,kBACC,IACD,eAACvI,GAAA,EAAD,CAAQ+P,KAAM,KAAM7R,QAAQ,SAAS6C,QAAS,kBA5JtE/H,EA4JuF6W,EAAKvW,MAAMiP,UA3JlHmD,EAAY1S,QACZwS,GAAmB,GAFJ,IAACxS,GA4JwB,uCAUvCwJ,EAAa,IAAI,sBAAKkE,MAAO,CAAEC,IAAK,MAAMC,SAAS,YAAlC,SAAgD,eAACC,GAAA,EAAD,CAAaH,MAAO,CAAC,SAAW,WAAW,MAAQ,MAAM,KAAO,OAAQI,SAAO,EAAC5I,QAAQ,UAAU6I,IAAKvE,EAAcwE,MAAK,UAAKxE,EAAL,SAA+B,UAE3N,sBAAKnC,UAAU,aAAf,SACGgN,EAAS2B,gBC3KL1D,OA5Ef,SAAiBlP,GACb,MAAwCC,oBAAS,GAAjD,mBAAOmG,EAAP,KAAqBmD,EAArB,KACA,EAA0CtJ,mBAAS,IAAnD,mBAAOsP,EAAP,KAAsBC,EAAtB,KACIvC,EAAUhU,KAASiU,QAAQ,OAAO,KACtCzE,qBAAU,WACNjO,QAAQC,IAAIuF,GACZ0J,MACD,IAEH,IAAMA,EAAiB,WACnBH,GAAgB,GAChB4G,GAA+BjE,qBAAqBlM,EAAMzG,SAAS4C,OAAOmC,MAAK,SAAAM,GAC3E2K,GAAgB,GACM,KAAlB3K,EAAI/B,WACJ2S,EAAiB5Q,EAAIG,KAAKtC,QAAQ,IAElC+S,EAAiB,QAK7B,OACI,qCACI,uBAAK5F,MAAM,UAAX,UACI,eAAC,GAAD,CAAQvI,KAAM+E,IACd,sBAAKwD,MAAM,MAAX,SACI,sBAAKA,MAAM,YAAX,SACI,uBAAKA,MAAM,iBAAX,UAGA,sBAAKA,MAAM,QAAX,SACI,sBAAK1C,IAAI,kCAAkC+H,IAAI,UAE/C,uBAAKrF,MAAM,YAAX,UACI,uBAAKA,MAAM,SAAX,UAEQ,sBAAKA,MAAM,qBAAqB1C,IAAKqI,EAAcxC,MAAME,EAAQsC,EAAcxC,MAAM,kCAAmCkC,IAAI,QAC5H,qBAAIrF,MAAM,QAAV,SAAmB2F,EAAcjC,cAErC,qBAAG1D,MAAM,cAAT,cACM2F,EAAcjC,kBAGxB,eAACxD,GAAA,EAAD,CAAO7F,UAAU,QAAjB,SACI,mCACI,gCAAI,kDAAwB,8BAAKkG,KAAOoF,EAAcpB,iBAAiB9D,OAAO,wBAA9E,OAEA,gCAAI,4CAAJ,KAAwB,8BAAKkF,EAAcpD,eAC3C,oCAAK,yCAAL,KAAsB,8BAAKoD,EAAchP,YACzC,gCAAI,sCAAJ,MAAmB,gCAAKgP,EAAcnB,cAAcjE,KAAOoF,EAAcnB,eAAe/D,OAAO,cAAc,GAA1F,UACnB,gCAAI,sCAAJ,IAAiB,8BAAKkF,EAAchC,SACpC,gCAAI,iDAAJ,KAA6B,8BAAKgC,EAAc/B,oBAChD,gCAAI,gDAAJ,IAA2B,8BAAK+B,EAAc9B,mBAC9C,gCAAI,2CAAJ,IAAsB,8BAAK8B,EAAc7B,cACzC,oCAAK,kDAAL,KAA+B,8BAAK6B,EAAc5B,qBAClD,oCAAK,gDAAL,IAA4B,8BAAK4B,EAAclC,iBAC/C,oCAAK,yDAAL,KAAsC,8BAAKkC,EAAc1B,4BACzD,oCAAK,mDAAL,KAAgC,8BAAK0B,EAAczB,qBACnD,qCAAM,qDAAN,IAAkC,8BAAKyB,EAAcxB,wBACrD,oCAAK,6CAAL,IAAyB,8BAAKwB,EAAc3B,qBAC5C,oCAAK,mDAAL,IAA+B,8BAAK2B,EAAcvB,kBAClD,oCAAK,4CAAL,IAAwB,8BAAKuB,EAActB,oBAC3C,oCAAK,sDAAL,IAAkC,8BAAKsB,EAAcrB,8CCzBvF0F,GAAW,CACfC,aADe,SACF/V,GACX,OAAOpE,KAAMoM,KAAN,UAAc7M,KAAd,sBAA4C6E,IAErDgW,WAJe,WAImC,IAAvCC,EAAsC,uDAA9B5J,OAASE,OAAO,cACjC,OAAO3Q,KAAMwP,IAAN,UAAajQ,KAAb,yBAAsC8a,KAE/CC,QAPe,SAOPpX,GACN,OAAOlD,KAAM8S,IAAN,UAAavT,KAAb,eAAmC,CAAC,GAAK2D,KAElDqX,YAVe,SAUHC,GACV,OAAOxa,KAAMwP,IAAN,UAAajQ,KAAb,uBAAoCib,MAGhC,GArDK,CAClBC,UADkB,WAEhB,OAAOza,KAAMwP,IAAN,UAAajQ,KAAb,mBAETmb,WAJkB,SAIPtW,GACT,OAAOpE,KAAMoM,KAAN,UAAc7M,KAAd,iBAAuC6E,IAEhDuW,aAPkB,SAOLzX,GACX,OAAOlD,KAAM4S,OAAN,UAAgBrT,KAAhB,yBAAyC2D,KAElD0X,sBAVkB,WAWd,MAAO,CAAC5a,KAAMwP,IAAN,UAAajQ,KAAb,kBAAsCS,KAAMwP,IAAN,UAAajQ,KAAb,yBA0CrC,GAtCQ,CACrBsb,aADqB,SACRzW,GACX,OAAOpE,KAAMoM,KAAN,UAAc7M,KAAd,6BAAmD6E,IAE5D0W,gBAJqB,WAKnB,OAAO9a,KAAMwP,IAAN,UAAajQ,KAAb,sCAETwb,gBAPqB,WAQnB,OAAO/a,KAAMwP,IAAN,UAAajQ,KAAb,sCAETyb,kBAVqB,SAUH9X,GAChB,OAAOlD,KAAMwP,IAAN,UAAajQ,KAAb,4BAAyC2D,KAElD+X,kBAbqB,SAaH7W,GAChB,OAAOpE,KAAMoM,KAAN,UAAc7M,KAAd,0BAAgD6E,IAEzD8W,uBAhBqB,WAiBnB,OAAOlb,KAAMwP,IAAN,UAAajQ,KAAb,0BAET4b,mBAnBqB,SAmBF/W,GACjB,OAAOpE,KAAMoM,KAAN,UAAc7M,KAAd,2BAAiD6E,KAkB7C,GAA6B8V,GCsD7BkB,OAzGf,SAAgB9U,GACZ,IAAMzB,EAAW8F,cACjB,EAA8CpE,oBAAS,GAAvD,mBAAOkP,EAAP,KAAwBC,EAAxB,KACA,EAAwCnP,oBAAS,GAAjD,mBAAOmG,EAAP,KAAqBmD,EAArB,KACA,EAA8BtJ,mBAAS,IAAvC,mBAAO8U,EAAP,KAAgBC,EAAhB,KACA,EAAgC/U,mBAAS,GAAzC,mBAAOoP,EAAP,KAAiBC,EAAjB,KACA7G,qBAAU,WACNwM,IACA1W,EAAS,CAAElC,KAAMT,EAAawB,KAAM,kBACrC,IAEH,IAAM6X,EAAa,WACf1L,GAAgB,GAChB2L,GAAsBf,YAAY7V,MAAK,SAAAM,GACnC2K,GAAgB,GACM,KAAlB3K,EAAI/B,WACJmY,EAAWpW,EAAIG,KAAKtC,SAEpBuY,EAAW,QASjBX,EAAY,mDAAG,wGACjBjF,GAAmB,GADF,SAGb7F,GAAgB,GAHH,SAIQ2L,GAAsBb,aAAahF,GAJ3C,OAIThV,EAJS,OAKbkP,GAAgB,GACW,KAAvBlP,EAASwC,aACLwT,EAAc0E,EAAQzE,QAAO,SAAC6E,EAAQ3E,GAAT,OAAiB2E,EAAOvY,IAAMyS,KAC/D2F,EAAW3E,IARF,kDAWb7V,QAAQC,IAAI,KAAMJ,SAAS0E,KAAKtC,SAChC8M,GAAgB,GAZH,0DAAH,qDAelB,OACI,qCACI,uBAAKtF,UAAU,UAAf,UACI,gBAAC7C,EAAA,EAAD,CAAOC,KAAM8N,EAAiB5N,OAAQ,kBAAM6N,GAAmB,IAA/D,UACI,eAAChO,EAAA,EAAMK,OAAP,CAAcC,aAAW,EAAzB,SACI,eAACN,EAAA,EAAMO,MAAP,8BAEJ,eAACP,EAAA,EAAMQ,KAAP,4BACA,gBAACR,EAAA,EAAM2R,OAAP,WACI,eAACnP,GAAA,EAAD,CAAQ9B,QAAQ,YAAY6C,QAAS,kBAAMyK,GAAmB,IAA9D,oBAGA,eAACxL,GAAA,EAAD,CAAQ9B,QAAQ,UAAU6C,QAAS,kBAAM0P,KAAzC,0BAMR,eAAC,GAAD,CAAQhT,KAAM+E,IACd,eAAC3D,GAAA,EAAD,CAAKwB,UAAU,YAAf,SACI,eAACrB,EAAA,EAAD,UACI,eAAC,OAAD,CAAMuB,GAAG,aAAT,SACI,eAACP,GAAA,EAAD,CAAQ9B,QAAQ,OAAO6R,KAAK,KAAK9J,QAAM,EAAvC,8BAMZ,eAACpH,GAAA,EAAD,UACI,eAACG,EAAA,EAAD,UACI,gBAACkH,GAAA,EAAD,CAAO7F,UAAU,sCAAsCyG,SAAO,EAAC0K,UAAQ,EAACC,OAAK,EAACC,YAAU,EAAxF,UACI,wBAAOrR,UAAU,aAAjB,SACI,gCACI,8CACA,8CACA,6CACA,oDACA,2CACA,8CAGR,iCACK8Q,EAAQlX,KAAI,SAACsX,EAAQvY,GAAT,OAAiB,gCAC1B,8BAAKuY,EAAOI,cACZ,8BAAKJ,EAAOK,cACZ,8BAAKL,EAAOM,aACZ,gCAAKN,EAAOO,cAAZ,OACA,8BAAKP,EAAOQ,WACZ,8BACI,eAAC/R,GAAA,EAAD,CAAQ9B,QAAQ,SAAS6R,KAAM,KAAMhP,QAAS,kBArE7D,SAAC/H,GAClB0S,EAAY1S,GACZwS,GAAmB,GAmEiEwG,CAAaT,EAAOvY,KAAKqH,UAAU,OAAvF,wBAP+BkR,EAAOvY,sB,UC8F/DiZ,OAlLf,SAAmB7V,GACjB,IAAM9D,EAAOoL,aAAY,SAAAnL,GAAK,OAAIA,EAAMD,QAClCqC,EAAW8F,cACjB,EAA4BpE,mBAAS,IAArC,mBAAO6K,EAAP,KAAeC,EAAf,KACA,EAAwC9K,oBAAS,GAAjD,mBAAOmG,EAAP,KAAqBmD,EAArB,KACA,EAAkCtJ,mBAAS,CAAE+K,QAAQ,EAAO3O,KAAM,GAAII,QAAS,KAA/E,mBAAOwO,EAAP,KAAkBC,EAAlB,KACAzC,qBAAU,WACRlK,EAAS,CAAClC,KAAKT,EAAYwB,KAAK,iBAChC,IACF,IAmBMkO,EAASC,aAAU,CACvBC,cAAe,CACb+J,YAAa,GACbC,YAAa,GACbC,WAAY,GACZC,cAAe,GACfC,SAAU,GACVlK,QAASvP,EAAKU,IAEhB8O,SA5Be,SAAAZ,GACf,IAAMvO,EAAS,GAgBf,OAfKuO,EAAOyK,cACVhZ,EAAOgZ,YAAc,4BAElBzK,EAAO0K,cACVjZ,EAAOiZ,YAAc,4BAElB1K,EAAO2K,aACVlZ,EAAOkZ,WAAa,2BAEjB3K,EAAO4K,gBACVnZ,EAAOmZ,cAAgB,8BAEpB5K,EAAO6K,WACVpZ,EAAOoZ,SAAW,yBAEbpZ,GAYP2F,SAAS,WAAD,wCAAE,WAAO4I,GAAP,yFACRvB,GAAgB,GADR,kBAGe2L,GAAsBd,WAAWtJ,GAHhD,OAGFzQ,EAHE,OAINkP,GAAgB,GACW,KAAvBlP,EAASwC,YACXyO,EAAOK,YACPT,EAAa,CAAEF,QAAQ,EAAM3O,KAAM,aAAcI,QAAS,kCAE1DyO,EAAa,CAAEF,QAAQ,EAAM3O,KAAM,YAAaI,QAAS,0BATrD,gDAaN8M,GAAgB,GAChB2B,EAAa,CAAEF,QAAQ,EAAM3O,KAAM,YAAaI,QAAS,KAAMpC,SAAS0E,KAAKtC,UAdvE,yDAAF,mDAAC,GAiBTuE,aAAc,WACZ+J,GAAU,SAAAa,GAAU,kCACfA,GADe,kBAGjBd,EAAO5J,OAAOC,KAAO2J,EAAO5J,OAAOhE,cAI1C,OACE,uCACE,gBAAC4Y,GAAA,EAAD,CAAeC,UAAQ,EAAClK,MAAO,IAAMxK,KAAM4J,EAAUD,OAAQjJ,QAAS,kBAAMmJ,EAAa,CAAEF,QAAQ,EAAO3O,KAAM,GAAII,QAAS,MAAOwH,UAAW,UAAagH,EAAU5O,KAAtK,UACE,eAACyZ,GAAA,EAAMrU,OAAP,UACE,0BAAQwC,UAAU,UAAlB,UAA+C,aAAlBgH,EAAU5O,KAAsB,QAAU,UAAvE,gBAEF,eAACyZ,GAAA,EAAMlU,KAAP,CAAYqC,UAAU,OAAtB,SACGgH,EAAUxO,YALH,GAQZ,uBAAKwH,UAAU,UAAf,UACE,eAAC,GAAD,CAAQ5C,KAAM+E,IAGd,sBAAKnC,UAAU,MAAf,SACE,sBAAKA,UAAU,WAAf,SACE,uBAAKA,UAAU,iBAAf,UACE,sBAAKA,UAAU,cAAf,SACE,qBAAIA,UAAU,aAAd,0BAEF,sBAAKA,UAAU,YAAf,SAEE,gBAAChC,EAAA,EAAD,CAAMC,SAAUoJ,EAAOQ,aAAvB,UACE,gBAACrJ,GAAA,EAAD,CAAKwB,UAAU,OAAf,UACE,gBAAChC,EAAA,EAAKS,MAAN,CAAYC,GAAIC,IAAKC,UAAU,cAAcoB,UAAU,sBAAvD,UACE,eAAChC,EAAA,EAAKa,MAAN,0BACA,eAACb,EAAA,EAAKc,QAAN,CACE5B,KAAK,cACL6B,SAAUsI,EAAOtK,aACjB9D,MAAOoO,EAAOR,OAAOyK,cAEtBjK,EAAOS,QAAQwJ,aAAejK,EAAO/O,OAAOgZ,YAC3C,sBAAK3L,MAAM,cAAX,SAA0B0B,EAAO/O,OAAOgZ,cACtC,QAEN,gBAACtT,EAAA,EAAKS,MAAN,CAAYC,GAAIC,IAAKC,UAAU,cAAcoB,UAAU,aAAvD,UACE,eAAChC,EAAA,EAAKa,MAAN,0BACA,eAACb,EAAA,EAAKc,QAAN,CACE5B,KAAK,cACL6B,SAAUsI,EAAOtK,aACjB9D,MAAOoO,EAAOR,OAAO0K,cAEtBlK,EAAOS,QAAQyJ,aAAelK,EAAO/O,OAAOiZ,YAC3C,sBAAK5L,MAAM,cAAX,SAA0B0B,EAAO/O,OAAOiZ,cACtC,WAKR,gBAAC/S,GAAA,EAAD,CAAKwB,UAAU,OAAf,UACE,gBAAChC,EAAA,EAAKS,MAAN,CAAYC,GAAIC,IAAKC,UAAU,cAAcoB,UAAU,sBAAvD,UACE,eAAChC,EAAA,EAAKa,MAAN,yBACA,eAACb,EAAA,EAAKc,QAAN,CACE5B,KAAK,aACL9E,KAAK,SACL2Z,IAAI,IACJhT,SAAUsI,EAAOtK,aACjB9D,MAAOoO,EAAOR,OAAO2K,aAEtBnK,EAAOS,QAAQ0J,YAAcnK,EAAO/O,OAAOkZ,WAC1C,sBAAK7L,MAAM,cAAX,SAA0B0B,EAAO/O,OAAOkZ,aACtC,QAGN,gBAACxT,EAAA,EAAKS,MAAN,CAAYC,GAAIC,IAAKC,UAAU,cAAcoB,UAAU,sBAAvD,UACE,eAAChC,EAAA,EAAKa,MAAN,mCACA,eAACb,EAAA,EAAKc,QAAN,CACE5B,KAAK,gBACL9E,KAAK,SACL2Z,IAAI,IACJhT,SAAUsI,EAAOtK,aACjB9D,MAAOoO,EAAOR,OAAO4K,gBAEtBpK,EAAOS,QAAQ2J,eAAiBpK,EAAO/O,OAAOmZ,cAC7C,sBAAK9L,MAAM,cAAX,SAA0B0B,EAAO/O,OAAOmZ,gBACtC,WAKR,eAACjT,GAAA,EAAD,CAAKwB,UAAU,OAAO+K,GAAI,EAA1B,SACE,gBAAC/M,EAAA,EAAKS,MAAN,CAAYC,GAAIC,IAAKqB,UAAU,OAAOpB,UAAU,mBAAhD,UACE,eAACZ,EAAA,EAAKa,MAAN,uBACA,0BACEmB,UAAU,eACV9C,KAAK,WACL6B,SAAUsI,EAAOtK,aACjB9D,MAAOoO,EAAOR,OAAO6K,SAJvB,UAME,yBAAezY,MAAM,GAArB,4BAAY,IACZ,yBAAmBA,MAAM,OAAzB,sBAAY,WAGboO,EAAOS,QAAQ4J,UAAYrK,EAAO/O,OAAOoZ,SACxC,sBAAK/L,MAAM,cAAX,SAA0B0B,EAAO/O,OAAOoZ,WACtC,UAKR,eAAC/R,GAAA,EAAD,CAAQ9B,QAAQ,UAAUzF,KAAK,SAA/B,qCC3JC4Z,GAXI,CACrBC,eADqB,WAEnB,OAAOxc,KAAMwP,IAAN,UAAajQ,KAAb,oCAETkd,WAJqB,WAKnB,OAAOzc,KAAMwP,IAAN,UAAajQ,KAAb,gCAETmd,oBAPqB,WAQnB,OAAO1c,KAAMwP,IAAN,UAAajQ,KAAb,qCCLI,SAASod,KAAa,IAAD,EAC5B9X,EAAW8F,cACjB,EAAmCpE,mBAAS,IAA5C,mBAAOkW,EAAP,KAAkBG,EAAlB,KACA,EAA2CrW,mBAAS,IAApD,mBAAOiW,EAAP,KAAsBK,EAAtB,KACA,EAAqDtW,mBAAS,IAA9D,mBAAOmW,EAAP,KAA2BI,EAA3B,KACA,EAAwCvW,oBAAS,GAAjD,mBAAOmG,EAAP,KAAqBmD,EAArB,KACAd,qBAAU,WACRlK,EAAS,CAAClC,KAAKT,EAAYwB,KAAK,cAChCqZ,MACA,IACF,IAAMA,EAAS,mDAAC,2HAEZlN,GAAgB,GAFJ,SAGKlQ,QAAQqd,WAAW,CAClCT,GAAeE,aACfF,GAAeC,iBACfD,GAAeG,wBANL,OAGPtY,EAHO,OAOVyL,GAAgB,GAChB+M,EAAa,UAACxY,EAAK,GAAGZ,aAAT,iBAAC,EAAe6B,YAAhB,aAAC,EAAqBtC,SACnC8Z,EAAiB,UAACzY,EAAK,GAAGZ,aAAT,iBAAC,EAAe6B,YAAhB,aAAC,EAAqBtC,SACvC+Z,EAAsB,UAAC1Y,EAAK,GAAGZ,aAAT,iBAAC,EAAe6B,YAAhB,aAAC,EAAqBtC,SAVlC,kDAYZ8M,GAAgB,GAChB/O,QAAQC,IAAR,MAbY,0DAAD,qDAgBb,OACE,uCACA,eAAC,GAAD,CAAQ4G,KAAM+E,IACd,sBAAKnC,UAAU,UAAf,SACA,uBAAKA,UAAU,MAAf,UACE,sBAAKA,UAAU,6BAAf,SACE,uBAAKA,UAAU,kBAAf,UACE,sBAAKA,UAAU,aAAf,SACE,uBAAKA,UAAU,MAAf,UACE,sBAAKA,UAAU,iBAAf,SACE,sBAAKA,UAAU,oCAAf,SACE,oBAAGA,UAAU,sCAGjB,sBAAKA,UAAU,iBAAf,SACE,uBAAKA,UAAU,UAAf,UACE,oBAAGA,UAAU,gBAAb,kBACA,oBAAGA,UAAU,aAAb,SAA2BkS,EAAWQ,kBAK9C,uBAAK1S,UAAU,eAAf,UACE,wBACA,uBAAKA,UAAU,QAAf,UACE,oBAAGA,UAAU,8BADf,yBAON,sBAAKA,UAAU,6BAAf,SACE,uBAAKA,UAAU,kBAAf,UACE,sBAAKA,UAAU,aAAf,SACE,uBAAKA,UAAU,MAAf,UACE,sBAAKA,UAAU,iBAAf,SACE,sBAAKA,UAAU,oCAAf,SACE,oBAAGA,UAAU,4CAGjB,sBAAKA,UAAU,iBAAf,SACE,uBAAKA,UAAU,UAAf,UACE,oBAAGA,UAAU,gBAAb,sBACA,oBAAGA,UAAU,aAAb,mBAA2BiS,EAAeS,aAA1C,aAA2B,EAAsBC,QAAQ,eAKjE,uBAAK3S,UAAU,eAAf,UACE,wBACA,uBAAKA,UAAU,QAAf,UACE,oBAAGA,UAAU,8BADf,yBAON,sBAAKA,UAAU,6BAAf,SACE,sBAAKA,UAAU,kBAAf,SACE,sBAAKA,UAAU,aAAf,SACE,uBAAKA,UAAU,MAAf,UACE,sBAAKA,UAAU,iBAAf,SACE,sBAAKA,UAAU,oCAAf,SACE,oBAAGA,UAAU,sCAGjB,sBAAKA,UAAU,iBAAf,SACE,uBAAKA,UAAU,UAAf,UACE,oBAAGA,UAAU,gBAAb,8BACA,oBAAGA,UAAU,aAAb,SAA2BmS,EAAoBS,gCAc3D,sBAAK5S,UAAU,6BAAf,SACE,sBAAKA,UAAU,kBAAf,SACE,sBAAKA,UAAU,aAAf,SACE,uBAAKA,UAAU,MAAf,UACE,sBAAKA,UAAU,iBAAf,SACE,sBAAKA,UAAU,oCAAf,SACE,oBAAGA,UAAU,6CAGjB,sBAAKA,UAAU,iBAAf,SACE,uBAAKA,UAAU,UAAf,UACE,oBAAGA,UAAU,gBAAb,gCACA,oBAAGA,UAAU,aAAb,SAA2BmS,EAAoBU,0C,2CCtHnE,SAASC,GAAT,GAA+D,IAAjC5O,EAAgC,EAAhCA,SAAUP,EAAsB,EAAtBA,SAAUoP,EAAY,EAAZA,SAGxCC,GAFqBC,qBAAWC,MAA9BC,eAEiBC,aACrBzP,GACA,kBAAMoP,GAAYA,EAASpP,OAK/B,OACI,eAAChE,GAAA,EAAD,CAAQ9B,QAAQ,OAAO6C,QAASsS,EAAhC,SAEK9O,IAwZEmP,OAnZf,SAAyBtX,GACrB,IAAM9D,EAAOoL,aAAY,SAAAnL,GAAK,OAAIA,EAAMD,QACxC,EAA4C+D,mBAAS,IAAIK,MAAzD,mBAAOoM,EAAP,KAAuBC,EAAvB,KACA,EAAwC1M,oBAAS,GAAjD,mBAAOmG,EAAP,KAAqBmD,EAArB,KACA,EAAkCtJ,mBAAS,CAAE+K,QAAQ,EAAO3O,KAAM,GAAII,QAAS,KAA/E,mBAAOwO,EAAP,KAAkBC,EAAlB,KACA,EAA0CjL,mBAAS,IAAnD,mBAAOsP,EAAP,KAAsBC,EAAtB,KACA,EAA0CvP,mBAAS,IAAnD,mBAAOsX,EAAP,KAAsBC,EAAtB,KACA,EAA4CvX,mBAAS,IAArD,mBAAOwX,EAAP,KAAuBC,EAAvB,KACA,EAAyBzX,mBAAS,IAAlC,mBAAO8M,EAAP,KAAaC,EAAb,KACIC,EAAUhU,KAASiU,QAAQ,OAAO,KAElC5I,EAAUC,cACRhG,EAAW8F,cAEjBoE,qBAAU,WACNkP,IACApZ,EAAS,CAAElC,KAAMT,EAAawB,KAAM,uBACrC,IACH,IAAMua,EAAoB,mDAAG,+GAErBpO,GAAgB,GAFK,SAGElQ,QAAQue,IAAI1C,GAAsBZ,yBAHpC,OAGfja,EAHe,OAIrBkP,GAAgB,GAChBiO,EAAiBnd,EAAS,GAAG0E,KAAKtC,SAClC+S,EAAiBnV,EAAS,GAAG0E,KAAKtC,SAClCjC,QAAQC,IAAIJ,GAPS,kDASrBkP,GAAgB,GAChB2B,EAAa,CAAEF,QAAQ,EAAM3O,KAAM,YAAaI,QAAS,KAAMpC,SAAS0E,KAAKtC,UAVxD,0DAAH,qDAyCpB6O,EAASC,aAAU,CACrBC,cAAe,CACXqM,UAAW,GACXC,iBAAkB,GAClB3L,UAAW,GACX4L,QAAS,GACTrC,cAAe,GACfsC,YAAa,GAEbC,WAAY,GACZtC,SAAU,GACVuC,OAAQ,GACRzM,QAASvP,EAAKU,GACdub,iBAAkB,GAClBC,wBAAyB,GACzBC,qBAAsB,GACtBC,qBAAsB,GACtBC,yBAAyB,IAE7B7M,SA/Ca,SAAAZ,GACb,IAAMvO,EAAS,GAyBf,OAxBKuO,EAAO+M,YACRtb,EAAOsb,UAAY,4BAElB/M,EAAOqB,YACR5P,EAAO4P,UAAY,4BAElBrB,EAAO4K,gBACRnZ,EAAOmZ,cAAgB,+BAET,OAAd+B,QAAc,IAAdA,OAAA,EAAAA,EAAgB/B,eAAgB,GAAK5K,EAAO4K,eAAP,OAAuB+B,QAAvB,IAAuBA,OAAvB,EAAuBA,EAAgB/B,iBAC5EnZ,EAAOmZ,cAAP,4EAA4F+B,EAAe/B,cAA3G,MAEC5K,EAAOkN,cACRzb,EAAOyb,YAAc,6BAEP,OAAdP,QAAc,IAAdA,OAAA,EAAAA,EAAgBhC,YAAa,GAAK3K,EAAOkN,YAAcP,EAAehC,aACtElZ,EAAOyb,YAAP,0EAAwFP,EAAehC,WAAvG,MAEC3K,EAAOmN,aACR1b,EAAO0b,WAAa,2BAEnBnN,EAAOoN,SACR3b,EAAO2b,OAAS,uBAEb3b,GAsBP2F,SAAS,WAAD,wCAAE,WAAO4I,GAAP,yFACNtQ,QAAQC,IAAIqQ,GACZvB,GAAgB,GAFV,SAKFuB,EAAOgN,iBAAmBpL,EALxB,SAMmBwI,GAAyBX,aAAazJ,GANzD,OAMEzQ,EANF,OAOFkP,GAAgB,GACW,KAAvBlP,EAASwC,YACTyO,EAAOK,YACPT,EAAa,CAAEF,QAAQ,EAAM3O,KAAM,aAAcI,QAAS,0DAE1DyO,EAAa,CAAEF,QAAQ,EAAM3O,KAAM,YAAaI,QAAS,0BAZ3D,kDAgBF8M,GAAgB,GAChB2B,EAAa,CAAEF,QAAQ,EAAM3O,KAAM,YAAaI,QAAS,KAAMpC,SAAS0E,KAAKtC,UAjB3E,0DAAF,mDAAC,KAoCb,OAEI,qCAEI,uBAAKwH,UAAU,UAAf,UACI,gBAAC6R,GAAA,EAAD,CAAeC,UAAQ,EAAClK,MAAO,IAAMxK,KAAM4J,EAAUD,OAAQjJ,QAAS,kBAAMmJ,EAAa,CAAEF,QAAQ,EAAO3O,KAAM,GAAII,QAAS,MAAOwH,UAAW,UAAagH,EAAU5O,KAAtK,UACI,eAACyZ,GAAA,EAAMrU,OAAP,UACI,0BAAQwC,UAAU,UAAlB,UAA+C,aAAlBgH,EAAU5O,KAAsB,QAAU,UAAvE,gBAEJ,eAACyZ,GAAA,EAAMlU,KAAP,CAAYqC,UAAU,OAAtB,SACKgH,EAAUxO,YALP,GAQZ,eAAC,GAAD,CAAQ4E,KAAM+E,IACd,uBAAKnC,UAAU,MAAf,UACI,sBAAKA,UAAU,WAAf,SACI,eAAChC,EAAA,EAAD,CAAMC,SAAUoJ,EAAOQ,aAAvB,SACI,gBAAC0M,GAAA,EAAD,CAAWC,iBAAiB,IAA5B,UACI,gBAACC,GAAA,EAAD,CAAMzU,UAAU,iBAAhB,UACI,eAACyU,GAAA,EAAKjX,OAAN,UACI,eAACsV,GAAD,CAAoBnP,SAAS,IAA7B,gCAGJ,eAAC4Q,GAAA,EAAUG,SAAX,CAAoB/Q,SAAS,IAA7B,SACI,gBAAC8Q,GAAA,EAAK9W,KAAN,CAAWqC,UAAU,YAArB,UAEI,gBAACxB,GAAA,EAAD,CAAKwB,UAAU,OAAf,UACI,gBAAChC,EAAA,EAAKS,MAAN,CAAYC,GAAIC,IAAKqB,UAAU,sBAAsBpB,UAAU,iBAA/D,UACI,eAACZ,EAAA,EAAKa,MAAN,+BACA,eAAC,KAAD,CAAYmB,UAAU,eAClBf,SAAUwJ,EACV1J,SAAU,SAACG,GAAD,OAAUwJ,EAAkBxJ,IACtChC,KAAK,mBACLiC,WAAW,kBAGnB,gBAACnB,EAAA,EAAKS,MAAN,CAAYC,GAAIC,IAAKC,UAAU,cAAcoB,UAAU,sBAAvD,UACI,eAAChC,EAAA,EAAKa,MAAN,0BACA,0BACImB,UAAU,eACV9C,KAAK,YACL6B,SAAU,SAAC/B,GAAD,OAhDhC,SAACA,GAC3B,GAAmB,IAAhBA,EAAEC,OAAOhE,MAAU,CAClB,IAAI0b,EAAerJ,EAAce,QAAO,SAAAuI,GAAG,OAAEA,EAAI1M,UAAUzR,YAAYuG,EAAEC,OAAOhE,SAChF8P,EAAS4L,EAAa,GAAG7L,OAE7BzB,EAAOtK,aAAaC,GA2C2C6X,CAAsB7X,IACrC/D,MAAOoO,EAAOR,OAAOqB,UAJzB,UAMI,yBAAejP,MAAM,GAArB,0BAAY,IACXqS,EAAc1R,KAAI,SAAC0S,EAAQ3T,GAAT,OACf,yBAA+BM,MAAOqT,EAAOpE,UAA7C,yBAAkEoE,EAAOjD,YAAzE,yBAAqGiD,EAAOpE,UAA5G,MAAaoE,EAAOpE,iBAI3Bb,EAAOS,QAAQI,WAAab,EAAO/O,OAAO4P,UACvC,sBAAKlI,UAAU,cAAf,SAA8BqH,EAAO/O,OAAO4P,YAC5C,WAIZ,gBAAC1J,GAAA,EAAD,CAAKwB,UAAU,OAAf,UACI,gBAAChC,EAAA,EAAKS,MAAN,CAAYC,GAAIC,IAAKC,UAAU,cAA/B,UACI,eAACZ,EAAA,EAAKa,MAAN,6BACA,eAACb,EAAA,EAAKc,QAAN,CACI5B,KAAK,UACLwB,GAAG,WACHK,SAAUsI,EAAOtK,aACjB9D,MAAOoO,EAAOR,OAAOiN,aAI7B,gBAAC9V,EAAA,EAAKS,MAAN,CAAYC,GAAIC,IAAKC,UAAU,cAAcoB,UAAU,sBAAvD,UACI,eAAChC,EAAA,EAAKa,MAAN,qBACA,0BACImB,UAAU,eACV9C,KAAK,YACL6B,SAvF/B,SAAC/B,GAClBzG,QAAQC,IAAIwG,EAAEC,OAAOhE,OACrB,IAAIua,EAAiBF,EAAcjH,QAAO,SAAA6E,GAAM,OAAIA,EAAOI,aAAetU,EAAEC,OAAOhE,SACnFwa,EAAkBD,EAAe,IACjCnM,EAAOR,OAAO6K,SAAW8B,EAAe,GAAG9B,SAC3CrK,EAAOR,OAAO4K,cAAgB+B,EAAe,GAAG/B,cAChDpK,EAAOtK,aAAaC,IAkF4B/D,MAAOoO,EAAOR,OAAO+M,UAJzB,UAMI,yBAAe3a,MAAM,GAArB,0BAAY,IACXqa,EAAc1Z,KAAI,SAACkb,EAAQnc,GAAT,OACf,yBAAiCM,MAAO6b,EAAOxD,YAA/C,SAA6DwD,EAAOxD,aAAvDwD,EAAOxD,mBAI3BjK,EAAOS,QAAQ8L,WAAavM,EAAO/O,OAAOsb,UACvC,sBAAK5T,UAAU,cAAf,SAA8BqH,EAAO/O,OAAOsb,YAC5C,WAKZ,gBAACpV,GAAA,EAAD,CAAKwB,UAAU,OAAf,UACI,gBAAChC,EAAA,EAAKS,MAAN,CAAYC,GAAIC,IAAKC,UAAU,cAAcoB,UAAU,sBAAvD,UACI,eAAChC,EAAA,EAAKa,MAAN,mCACA,eAACb,EAAA,EAAKc,QAAN,CACI5B,KAAK,gBACL9E,KAAK,SACL2Z,IAAI,IACJhT,SAAUsI,EAAOtK,aACjB9D,MAAOoO,EAAOR,OAAO4K,gBAEzB,eAACzT,EAAA,EAAKwD,KAAN,CAAWxB,UAAU,aAArB,2CAGCqH,EAAOS,QAAQ2J,eAAiBpK,EAAO/O,OAAOmZ,cAC3C,sBAAKzR,UAAU,cAAf,SAA8BqH,EAAO/O,OAAOmZ,gBAC5C,QAGR,gBAACzT,EAAA,EAAKS,MAAN,CAAYC,GAAIC,IAAKC,UAAU,cAAcoB,UAAU,sBAAvD,UACI,eAAChC,EAAA,EAAKa,MAAN,0BACA,eAACb,EAAA,EAAKc,QAAN,CACI5B,KAAK,cACL9E,KAAK,SACL2Z,IAAI,IACJhT,SAAUsI,EAAOtK,aACjB9D,MAAOoO,EAAOR,OAAOkN,cAEzB,eAAC/V,EAAA,EAAKwD,KAAN,CAAWxB,UAAU,aAArB,4DAICqH,EAAOS,QAAQiM,aAAe1M,EAAO/O,OAAOyb,YACzC,sBAAK/T,UAAU,cAAf,SAA8BqH,EAAO/O,OAAOyb,cAC5C,WAKZ,gBAACvV,GAAA,EAAD,CAAKwB,UAAU,OAAf,UACI,gBAAChC,EAAA,EAAKS,MAAN,CAAYC,GAAIC,IAAKC,UAAU,cAAcoB,UAAU,sBAAvD,UACI,eAAChC,EAAA,EAAKa,MAAN,yBACA,0BACImB,UAAU,eACV9C,KAAK,aACL6B,SAAUsI,EAAOtK,aACjB9D,MAAOoO,EAAOR,OAAOmN,WAJzB,UAMI,yBAAe/a,MAAM,GAArB,0BAAY,IAGZ,yBAAsBA,MAAM,UAA5B,oBAAY,cAEfoO,EAAOS,QAAQkM,YAAc3M,EAAO/O,OAAO0b,WACxC,sBAAKhU,UAAU,cAAf,SAA8BqH,EAAO/O,OAAO0b,aAC5C,QAGR,gBAAChW,EAAA,EAAKS,MAAN,CAAYC,GAAIC,IAAKC,UAAU,cAAcoB,UAAU,sBAAvD,UACI,gBAAChC,EAAA,EAAKa,MAAN,wBAAmD,IAA5BwI,EAAOR,OAAOmN,WA3PtE,CAAE,OAAU,QAAS,QAAW,SAAU,MAAS,OAAQ,UAAa,aA2PwB3M,EAAOR,OAAOmN,YAAc,SAA3F,OACA,eAAChW,EAAA,EAAKc,QAAN,CACI5B,KAAK,SACL9E,KAAK,SACL2Z,IAAI,IACJhT,SAAUsI,EAAOtK,aACjB9D,MAAOoO,EAAOR,OAAOoN,SAExB5M,EAAOS,QAAQmM,QAAU5M,EAAO/O,OAAO2b,OACpC,sBAAKjU,UAAU,cAAf,SAA8BqH,EAAO/O,OAAO2b,SAC5C,WAIZ,eAACzV,GAAA,EAAD,CAAKwB,UAAU,OAAf,SACI,gBAAChC,EAAA,EAAKS,MAAN,CAAYC,GAAIC,IAAKoM,GAAI,EAAGnM,UAAU,cAAcoB,UAAU,sBAA9D,UACI,eAAChC,EAAA,EAAKa,MAAN,uBACA,eAACb,EAAA,EAAKc,QAAN,CACI5B,KAAK,WACL9E,KAAK,OACL2G,SAAUsI,EAAOtK,aACjB9D,MAAOoO,EAAOR,OAAO6K,SACrB9R,SAAS,aAEb,eAAC5B,EAAA,EAAKwD,KAAN,CAAWxB,UAAU,aAArB,yDAQR,eAAC8S,GAAD,CAAoBnP,SAAS,IAA7B,kBACA,eAAChE,GAAA,EAAD,CAAQ9B,QAAQ,SAAS6C,QAAS,WAAQL,EAAQM,KAAK,MAAQvI,KAAK,SAAS4H,UAAU,OAAvF,4BAOZ,gBAACyU,GAAA,EAAD,CAAMzU,UAAU,iBAAhB,UACI,eAACyU,GAAA,EAAKjX,OAAN,UACI,eAACsV,GAAD,CAAoBnP,SAAS,IAA7B,mCAGJ,eAAC4Q,GAAA,EAAUG,SAAX,CAAoB/Q,SAAS,IAA7B,SACI,gBAAC8Q,GAAA,EAAK9W,KAAN,CAAWqC,UAAU,YAArB,UAEI,gBAACxB,GAAA,EAAD,CAAKwB,UAAU,OAAf,UACI,gBAAChC,EAAA,EAAKS,MAAN,CAAYC,GAAIC,IAAKC,UAAU,cAAcoB,UAAU,sBAAvD,UACI,eAAChC,EAAA,EAAKa,MAAN,+BACA,eAACb,EAAA,EAAKc,QAAN,CACI5B,KAAK,mBACL9E,KAAK,QACL2Z,IAAI,IACJhT,SAAUsI,EAAOtK,aACjB9D,MAAOoO,EAAOR,OAAOqN,sBAG7B,gBAAClW,EAAA,EAAKS,MAAN,CAAYC,GAAIC,IAAKC,UAAU,cAAcoB,UAAU,sBAAvD,UACI,eAAChC,EAAA,EAAKa,MAAN,4BACA,0BACImB,UAAU,eACV9C,KAAK,2BACL6B,SAAUsI,EAAOtK,aACjB9D,MAAOoO,EAAOR,OAAOyN,yBAJzB,UAMI,yBAAerb,MAAM,GAArB,mBAAY,IACZ,yBAAsBA,MAAM,UAA5B,oBAAY,WACZ,yBAAqBA,MAAM,SAA3B,mBAAY,mBAIxB,gBAACuF,GAAA,EAAD,CAAKwB,UAAU,OAAf,UACI,gBAAChC,EAAA,EAAKS,MAAN,CAAYC,GAAIC,IAAKC,UAAU,cAAcoB,UAAU,sBAAvD,UACI,eAAChC,EAAA,EAAKa,MAAN,0BACA,eAACb,EAAA,EAAKc,QAAN,CACI5B,KAAK,0BACL9E,KAAK,SACL2Z,IAAI,IACJhT,SAAUsI,EAAOtK,aACjB9D,MAAOoO,EAAOR,OAAOsN,6BAG7B,gBAACnW,EAAA,EAAKS,MAAN,CAAYC,GAAIC,IAAKC,UAAU,cAAcoB,UAAU,sBAAvD,UACI,eAAChC,EAAA,EAAKa,MAAN,uBACA,eAACb,EAAA,EAAKc,QAAN,CACI5B,KAAK,uBACL9E,KAAK,QACL2Z,IAAI,IACJhT,SAAUsI,EAAOtK,aACjB9D,MAAOoO,EAAOR,OAAOuN,6BAIjC,eAAC5V,GAAA,EAAD,CAAKwB,UAAU,OAAf,SACI,gBAAChC,EAAA,EAAKS,MAAN,CAAYC,GAAIC,IAAKoM,GAAI,EAAGnM,UAAU,cAAcoB,UAAU,sBAA9D,UACI,eAAChC,EAAA,EAAKa,MAAN,0BACA,eAACb,EAAA,EAAKc,QAAN,CACI5B,KAAK,uBACL9E,KAAK,OACL2G,SAAUsI,EAAOtK,aACjB9D,MAAOoO,EAAOR,OAAOwN,4BAKjC,eAAC1U,GAAA,EAAD,CAAQ9B,QAAQ,UAAUzF,KAAK,SAA/B,kBAGA,eAACuH,GAAA,EAAD,CAAQ9B,QAAQ,SAAS6C,QAAS,WAAQL,EAAQM,KAAK,MAAQvI,KAAK,SAAS4H,UAAU,OAAvF,mCASxB,sBAAKA,UAAU,WAAf,SACI,sBAAKA,UAAU,iBAAf,SACI,uBAAKA,UAAU,YAAf,UACI,sBAAKA,UAAU,QAAf,SACI,sBAAKiD,IAAI,kCAAkC+H,IAAI,UAGnD,sBAAKhL,UAAU,SAAf,SACI,oBAAGtJ,KAAK,IAAR,SAEI,sBAAKsJ,UAAU,qBAAqBiD,IAAY,IAAP6F,EAAU,gCAAgCE,EAAQF,EAAOkC,IAAI,4BCxV/H+J,OAhEf,SAAsBhZ,GAClB,IAAIsE,EAAUC,cACRhG,EAAW8F,cACjB,EAAwCpE,oBAAS,GAAjD,mBAAOmG,EAAP,KAAqBmD,EAArB,KACA,EAAgCtJ,mBAAS,IAAzC,mBAAOgZ,EAAP,KAAiBC,EAAjB,KACAzQ,qBAAU,WACN0Q,IACA5a,EAAS,CAAElC,KAAMT,EAAawB,KAAM,gCACrC,IAEH,IAAM+b,EAAW,mDAAG,+GAEZ5P,GAAgB,GAFJ,SAGS2L,GAAyBV,kBAHlC,OAGRna,EAHQ,OAIZkP,GAAgB,GACW,KAAvBlP,EAASwC,YACTqc,EAAY7e,EAAS0E,KAAKtC,SANlB,gDAUZ8M,GAAgB,GAChB/O,QAAQC,IAAR,MAXY,yDAAH,qDAiBjB,OACI,qCACI,uBAAKwJ,UAAU,UAAf,UACI,eAAC,GAAD,CAAQ5C,KAAM+E,IAEd,eAAC3D,GAAA,EAAD,UACI,eAACG,EAAA,EAAD,UACI,gBAACkH,GAAA,EAAD,CAAO7F,UAAU,uCAAuCyG,SAAO,EAAC0K,UAAQ,EAACC,OAAK,EAACC,YAAU,EAAzF,UACI,wBAAOrR,UAAU,aAAjB,SACI,gCACI,mDACA,8CACA,4CACA,8CACA,gDACA,8CAGR,iCACsB,GAAjBgV,EAAS1K,OAAU0K,EAASpb,KAAI,SAACub,EAAMxc,GAAP,aAAe,gCAC5C,8BAAKuN,KAAOiP,EAAKtB,kBAAkBzN,OAAO,wBAC1C,wCAAK+O,EAAK7I,cAAV,aAAK,EAAajD,cAClB,8BAAK8L,EAAKvB,YACV,8BAAKuB,EAAKpB,cACV,8BAAKoB,EAAK1D,gBACV,8BAAI,eAAC9R,GAAA,EAAD,CAAQ9B,QAAQ,UAAU6R,KAAM,KAAMhP,QAAS,kBA5BzD0U,EA4BgFD,EAAKxc,QA3B3G0H,EAAQM,KAAK,uBAAwByU,GADhB,IAACA,GA4BU,yBANiDD,EAAKxc,OAOtD,8BAAI,qBAAI0c,QAAS,IAAKrV,UAAU,cAA5B,2DCa7BsV,OAlEf,SAAsBvZ,GAClB,IAAIsE,EAAUC,cACRhG,EAAW8F,cACjB,EAAwCpE,oBAAS,GAAjD,mBAAOmG,EAAP,KAAqBmD,EAArB,KACA,EAAgCtJ,mBAAS,IAAzC,mBAAOgZ,EAAP,KAAiBC,EAAjB,KACAzQ,qBAAU,WACN0Q,IACA5a,EAAS,CAAElC,KAAMT,EAAawB,KAAM,gCACrC,IAEH,IAAM+b,EAAW,mDAAG,+GAEZ5P,GAAgB,GAFJ,SAGS2L,GAAyBT,kBAHlC,OAGRpa,EAHQ,OAIZkP,GAAgB,GACW,KAAvBlP,EAASwC,YACTqc,EAAY7e,EAAS0E,KAAKtC,SANlB,gDAUZ8M,GAAgB,GAChB/O,QAAQC,IAAR,MAXY,yDAAH,qDAkBjB,OACI,qCACI,uBAAKwJ,UAAU,UAAf,UACI,eAAC,GAAD,CAAQ5C,KAAM+E,IAGd,eAAC3D,GAAA,EAAD,UACI,eAACG,EAAA,EAAD,UACI,gBAACkH,GAAA,EAAD,CAAO7F,UAAU,uCAAuCyG,SAAO,EAAC0K,UAAQ,EAACC,OAAK,EAACC,YAAU,EAAzF,UACI,wBAAOrR,UAAU,aAAjB,SACI,gCACI,mDACA,8CACA,4CACA,8CACA,gDACA,8CAGR,iCACsB,GAAjBgV,EAAS1K,OAAU0K,EAASpb,KAAI,SAACub,EAAMxc,GAAP,aAAe,gCAC5C,8BAAKuN,KAAOiP,EAAKtB,kBAAkBzN,OAAO,wBAC1C,wCAAK+O,EAAK7I,cAAV,aAAK,EAAajD,cAClB,8BAAK8L,EAAKvB,YACV,8BAAKuB,EAAKpB,cACV,8BAAKoB,EAAK1D,gBACV,8BAAI,eAAC9R,GAAA,EAAD,CAAQ9B,QAAQ,UAAU6R,KAAM,KAAMhP,QAAS,kBA9BzD0U,EA8BgFD,EAAKxc,QA7B3G0H,EAAQM,KAAK,uBAAwByU,GADhB,IAACA,GA8BU,0BANiDD,EAAKxc,OAOtD,8BAAI,qBAAI0c,QAAS,IAAKrV,UAAU,cAA5B,+D,SC9D5C,SAASuV,GAAQxZ,GAEb,OADAxF,QAAQC,IAAI,YAER,gBAACie,GAAA,EAAD,CAAMe,OAAO,UAAUC,QAAM,EAE7BC,KAAM,OACN1V,UAAU,MAHV,UAKA,gBAACyU,GAAA,EAAKjX,OAAN,CAAawC,UAAU,yBAAvB,UAAgD,2CAC5C,uBAAKU,QAAS3E,EAAM4Z,eAAgBC,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKC,KAAK,eAAe/V,UAAU,mCAAmCgW,QAAQ,YAAvK,UACA,uBAAMC,EAAE,0CACR,uBAAMA,EAAE,qXAGZ,eAACxB,GAAA,EAAK9W,KAAN,UAEA,gBAACkI,GAAA,EAAD,CAAO6J,KAAM,KAAM1P,UAAU,yBAAyBmR,UAAQ,EAACE,YAAU,EAAzE,UACI,iCACE,sBAAIrR,UAAU,aAAd,UACI,2CACA,6CACA,4CACA,2CACA,8CACCjE,EAAMma,mBAAmB,2CAAkB,QAI9C,iCACCna,EAAMoa,QAAQvc,KAAI,SAACX,EAAMN,GAAP,OAAa,sBAAIqH,UAAWjE,EAAMqa,cAAcnd,EAAMiG,MAAM,aAAa,GAA5D,UAC5B,8BAAKjG,EAAMiG,OACX,8BAAKjG,EAAMod,MACX,8BAAKpd,EAAMqd,YACX,8BAAKrd,EAAMsd,aACX,8BAAKtd,EAAMud,cACVza,EAAMma,mBACP,8BAAKna,EAAMqa,cAAcnd,EAAMiG,MAE3B,uBAAK0W,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKC,KAAK,eAAepQ,MAAM,qBAAqBqQ,QAAQ,YAAtH,UACA,uBAAMC,EAAE,0EACR,uBAAMA,EAAE,+JACD,KAAS,kBArC3B,GA8CGxU,WAAMgV,KAAKlB,IClDrBmB,G,4JACF,WAEA,OADIngB,QAAQC,IAAIqK,KAAK9E,MAAMoa,WAEvB,uBAAK9P,MAAO,CAACsQ,OAAO,QAApB,UACA,iCACI,oBAAGtQ,MAAO,CAACuQ,UAAU,OAAOC,MAAO,OAAOC,SAAS,QAAnD,yCACA,oBAAGzQ,MAAO,CAACuQ,UAAU,QAAQC,MAAO,QAAQC,SAAS,QAArD,qCAEJ,qBAAI9W,UAAU,wBAAd,mCACA,gBAACyU,GAAA,EAAD,CAAMe,OAAO,UAAUC,QAAM,EAE7BC,KAAM,OACN1V,UAAU,MAHV,UAIA,eAACyU,GAAA,EAAKjX,OAAN,CAAawC,UAAU,eAAvB,SAAsC,6BAAIa,KAAK9E,MAAMgb,YAGrD,gBAACtC,GAAA,EAAK9W,KAAN,WAEA,gBAACkI,GAAA,EAAD,CAAO6J,KAAM,KAAM1P,UAAU,mBAAmByG,SAAO,EAAC0K,UAAQ,EAACC,OAAK,EAAtE,UACI,iCACE,8BAAKvQ,KAAK9E,MAAM0Q,OAAO7S,KAAI,SAAAgb,GAAG,OAC1B,qBAAIiB,MAAM,MAAV,SAA2BjB,GAANA,UAIvB,iCACC/T,KAAK9E,MAAMoa,eAWpB,sBAAK9P,MAAO,CAAC2Q,UAAU,QAAvB,SACI,oSAEJ,sBAAK3Q,MAAO,CAAC4Q,OAAO,EAAEL,UAAU,QAAQI,UAAU,SAAlD,SACA,kCACI,+BAAK,iCAAO,mFACZ,+BAAK,iCAAO,gGAjCX,U,GAXcvV,IAAMyV,eAuDlBR,MCtDTS,G,4JACF,WAAU,IAAD,4BACEC,EAAevW,KAAK9E,MAApBqb,YACP,OACI,qCACI,uBAAK/Q,MAAO,CAACsQ,OAAO,QAApB,UACI,iCACI,oBAAGtQ,MAAO,CAACuQ,UAAU,OAAOC,MAAO,OAAOC,SAAS,QAAnD,yCACA,oBAAGzQ,MAAO,CAACuQ,UAAU,QAAQC,MAAO,QAAQC,SAAS,QAArD,qCAEJ,qBAAIzQ,MAAO,CAACuQ,UAAU,SAASS,aAAa,QAA5C,mCACA,uBAAKhR,MAAO,CAACgR,aAAa,QAA1B,UACI,sBAAKhR,MAAO,CAACuQ,UAAU,UAAvB,SAAkC,qDAClC,sBAAKvQ,MAAO,CAACuQ,UAAU,UAAvB,SAAkC,qDAClC,sBAAKvQ,MAAO,CAACiR,iBAAiB,QAAQzB,MAAM,QAAQC,OAAO,QAASN,OAAO,kBAAkBoB,UAAU,UAAvG,sBAEJ,eAAC/Q,GAAA,EAAD,CAAO7F,UAAU,mBAAmByG,SAAO,EAAC0K,UAAQ,EAACC,OAAK,EAAC/K,MAAO,CAAEmP,OAAO,mBAA3E,SACI,mCACA,gCAAI,qBAAIK,MAAM,MAAV,yBAAgC,wCAAKuB,EAAY9K,cAAjB,aAAK,EAAoBjD,cAA7D,OACA,gCAAI,qBAAIwM,MAAM,MAAV,6BAAJ,KAA0C,wCAAKuB,EAAY9K,cAAjB,aAAK,EAAoB5C,qBACnE,oCAAK,qBAAImM,MAAM,MAAV,4BAAL,KAA0C,8BAAKuB,EAAYtD,aAC3D,gCAAI,qBAAI+B,MAAM,MAAV,iBAAJ,MAA+B,8BAAK,UAAAuB,EAAY9K,cAAZ,SAAoBnC,cAAcjE,KAAM,UAACkR,EAAY9K,cAAb,aAAC,EAAoBnC,eAAe/D,OAAO,cAAc,QACrI,gCAAI,qBAAIyP,MAAM,MAAV,mBAAJ,IAA+B,wCAAKuB,EAAY9K,cAAjB,aAAK,EAAoB9C,mBACxD,gCAAI,qBAAIqM,MAAM,MAAV,oBAAJ,KAAiC,wCAAKuB,EAAY9K,cAAjB,aAAK,EAAoBhQ,YAC1D,gCAAI,qBAAIuZ,MAAM,MAAV,wBAAJ,IAAoC,wCAAKuB,EAAY9K,cAAjB,aAAK,EAAoBiL,mBAC7D,gCAAI,qBAAI1B,MAAM,MAAV,iBAAJ,IAA6B,wCAAKuB,EAAY9K,cAAjB,aAAK,EAAoB3C,qBACtD,gCAAI,qBAAIkM,MAAM,MAAV,6BAAJ,IAAyC,wCAAKuB,EAAY9K,cAAjB,aAAK,EAAoB1C,4BAClE,gCAAI,qBAAIiM,MAAM,MAAV,6BAAJ,IAAyC,wCAAKuB,EAAY9K,cAAjB,aAAK,EAAoBxC,wBAClE,gCAAI,qBAAI+L,MAAM,MAAV,0BAAJ,IAAsC,wCAAKuB,EAAY9K,cAAjB,aAAK,EAAoBzC,qBAC/D,gCAAI,qBAAIgM,MAAM,MAAV,8BAAJ,IAA0C,wCAAKuB,EAAY9K,cAAjB,aAAK,EAAoBvC,kBACnE,gCAAI,qBAAI8L,MAAM,MAAV,4BAAJ,IAAwC,wCAAKuB,EAAY9K,cAAjB,aAAK,EAAoBtC,oBACjE,gCAAI,qBAAI6L,MAAM,MAAV,iCAAJ,IAA6C,wCAAKuB,EAAY9K,cAAjB,aAAK,EAAoBrC,8BAG1E,sBAAK5D,MAAO,CAACgR,aAAa,OAA1B,SACI,sBAAKhR,MAAO,CAACuQ,UAAU,SAASY,cAAc,QAA9C,SAAuD,0DAE3D,eAAC3R,GAAA,EAAD,CAAO7F,UAAU,mBAAmByG,SAAO,EAAC0K,UAAQ,EAACC,OAAK,EAA1D,SACI,mCACA,gCAAI,qBAAIyE,MAAM,MAAV,kBAAyB,8BAAKuB,EAAYlD,mBAA9C,OACA,gCAAI,qBAAI2B,MAAM,MAAV,0BAAJ,KAAuC,8BAAKuB,EAAY9C,8BACxD,gCAAI,qBAAIuB,MAAM,MAAV,yBAAJ,KAAsC,8BAAKuB,EAAYjD,6BACvD,gCAAI,qBAAI0B,MAAM,MAAV,sBAAJ,MAAoC,8BAAKuB,EAAYhD,0BACrD,gCAAI,qBAAIyB,MAAM,MAAV,sBAAJ,IAAkC,8BAAKuB,EAAY/C,+BAGvD,sBAAKhO,MAAO,CAAC2Q,UAAU,QAAvB,SACI,oSAEJ,sBAAK3Q,MAAO,CAAC4Q,OAAO,EAAEL,UAAU,QAAQI,UAAU,QAAlD,SACI,kCACI,+BAAK,gFACL,+BAAK,iG,GApDLvV,IAAMyV,eA4DnBC,MCySAM,OA1Vf,SAA6B1b,GAAQ,IAAD,4BAC1B2b,EAAmBC,mBACnBrd,EAAW8F,cAMXwX,GAL0BC,2BAAgB,CAC5CC,QAAS,kBAAMJ,EAAiBK,SAChCC,cAAe,eAGIL,oBACjBM,EAAyBJ,2BAAgB,CAC3CC,QAAS,kBAAMF,EAAeG,SAC9BC,cAAe,oBAGbE,EAASP,mBACThC,EAAiBkC,2BAAgB,CACnCC,QAAS,kBAAMI,EAAOH,SACtBC,cAAe,oBAEbG,EAAwBC,sBAAYzC,EAAgB,IAEpD0C,EAAgBV,mBAChBW,EAAwBT,2BAAgB,CAC1CC,QAAS,kBAAMO,EAAcN,SAC7BC,cAAe,mBAGbO,EAAcZ,mBACda,EAAsBX,2BAAgB,CACxCC,QAAS,kBAAMS,EAAYR,SAC3BC,cAAe,iBAGb/f,EAAOoL,aAAY,SAAAnL,GAAK,OAAIA,EAAMD,QACxC,EAA0C+D,mBAAS,IAAnD,mBAAOoa,EAAP,KAAsBqC,EAAtB,KACA,EAAwCzc,oBAAS,GAAjD,mBAAOmG,EAAP,KAAqBmD,EAArB,KACA,EAA8CtJ,oBAAS,GAAvD,mBAAO0c,EAAP,KAAwBC,EAAxB,KACA,EAA8B3c,mBAAS,IAAvC,mBAAOma,EAAP,KAAgByC,EAAhB,KACA,EAAsC5c,mBAAS,IAA/C,mBAAOob,EAAP,KAAoByB,EAApB,KACA,GAAkC7c,mBAAS,CAAE+K,QAAQ,EAAO3O,KAAM,GAAII,QAAS,KAA/E,qBAAOwO,GAAP,MAAkBC,GAAlB,MACA,GAAoDjL,oBAAS,GAA7D,qBAAO8c,GAAP,MAA2BC,GAA3B,MACA,GAAoD/c,oBAAS,GAA7D,qBAAOka,GAAP,MAA2B8C,GAA3B,MACA,GAAwBhd,oBAAS,GAAjC,qBAAOoB,GAAP,MAAa6b,GAAb,MACA,GAAwCjd,mBAAS,IAAIK,MAArD,qBAAO6c,GAAP,MAAqBC,GAArB,MACMC,GAAc,kBAAMH,IAAQ,IAGlCzU,qBAAU,WACNjO,QAAQC,IAAIuF,GACZsd,KACA/e,EAAS,CAAElC,KAAMT,EAAawB,KAAM,wCACrC,IAEH,IAAMkgB,GAAc,mDAAG,2HAEf/T,GAAgB,GAChBqT,GAAmB,GAHJ,SAKM1H,GAAyBR,kBAAkB1U,EAAMzG,SAAS4C,OALhE,cAKX9B,EALW,OAMXkjB,EAAe,CACf,cAAiBljB,EAAS0E,KAAKtC,QAAQ,GAAG+gB,cAC1C,cAAiBnjB,EAAS0E,KAAKtC,QAAQ,GAAGiZ,cAC1C,OAAUrb,EAAS0E,KAAKtC,QAAQ,GAAGyb,OACnC,WAAc7d,EAAS0E,KAAKtC,QAAQ,GAAGwb,WACvC,YAAe5d,EAAS0E,KAAKtC,QAAQ,GAAGub,YACxC,SAAY3d,EAAS0E,KAAKtC,QAAQ,GAAGkZ,UAEzCiH,GAAmB,GAdJ,UAeK1H,GAAmBrB,aAAa0J,GAfrC,eAeXE,EAfW,OAgBXC,EAAW,GACXC,EAAS,GAjBE,UAkBEzI,GAAmBjB,YAAY5Z,EAAS0E,KAAKtC,QAAQ,GAAGmhB,iBAlB1D,QAmBf,IADAF,EAlBe,OAmBNtM,EAAI,EAAGA,EAAIsM,EAAS3e,KAAKtC,QAAQ8R,OAAQ6C,IAC1CyM,EAAU1T,KAAOuT,EAAS3e,KAAKtC,QAAQ2U,GAAG0M,UAAUzT,OAAO,cAC/DsT,EAAOE,IAAW,EAEtBnB,EAAiBiB,GACjBd,EAAWY,EAAQ1e,KAAKtC,SACxBmgB,GAAmB,GACnBpiB,QAAQC,IAAIJ,GAEZkP,GAAgB,GACW,KAAvBlP,EAASwC,aACTmgB,GAA8D,GAAxC3iB,EAAS0E,KAAKtC,QAAQ,GAAGshB,aAC/Cd,GAA8D,GAAxC5iB,EAAS0E,KAAKtC,QAAQ,GAAGshB,aAA6D,GAAzC1jB,EAAS0E,KAAKtC,QAAQ,GAAGuhB,cAC5FlB,EAAeziB,EAAS0E,KAAKtC,QAAQ,KAhC1B,kDAoCfmgB,GAAmB,GACnBrT,GAAgB,GAChB/O,QAAQC,IAAR,MAtCe,0DAAH,qDAyCdwjB,GAAY,mDAAG,WAAOC,GAAP,oGAEb3U,GAAgB,GACVzL,EAAO,CAAE,GAAMkC,EAAMzG,SAAS4C,MAAO,WAAc+hB,GAH5C,SAIQhJ,GAAyBP,kBAAkB7W,GAJnD,OAITzD,EAJS,OAKbG,QAAQC,IAAIJ,GACZkP,GAAgB,GACW,KAAvBlP,EAASwC,aACTmgB,IAAsB,GAEtB9R,GAAa,CAAEF,QAAQ,EAAM3O,KAAM,aAAcI,QAASpC,EAAS0E,KAAKtC,WAV/D,kDAab8M,GAAgB,GAChB2B,GAAa,CAAEF,QAAQ,EAAM3O,KAAM,YAAaI,QAAS,KAAMpC,SAAS0E,KAAKtC,UAC7EjC,QAAQC,IAAR,MAfa,0DAAH,sDAkBZ0jB,GAAkB,mDAAG,WAAOD,GAAP,oGAEnBb,KACA9T,GAAgB,GACVzL,EAAO,CAAE,GAAMkC,EAAMzG,SAAS4C,MAAO,WAAc+hB,EAAYf,aAAcA,IAJhE,SAKEjI,GAAyBL,mBAAmB/W,GAL9C,OAKfzD,EALe,OAMnBkP,GAAgB,GACW,KAAvBlP,EAASwC,aACTogB,IAAsB,GACtB/R,GAAa,CAAEF,QAAQ,EAAM3O,KAAM,aAAcI,QAASpC,EAAS0E,KAAKtC,WATzD,kDAYnB8M,GAAgB,GAChB2B,GAAa,CAAEF,QAAQ,EAAM3O,KAAM,YAAaI,QAAS,KAAMpC,SAAS0E,KAAKtC,UAC7EjC,QAAQC,IAAR,MAdmB,0DAAH,sDAkBlB2jB,GAAS3O,mBAAQ,WACnB,MAAO,CAAC,WAAY,aAAc,YAAa,WAAY,cAAe,eAC3E,IACG4O,GAAahC,uBAAY,WAC3B,OAAQjC,EAAQvc,KAAI,SAACX,EAAON,GAAR,OAChB,gCACI,8BAAKM,EAAMiG,OACX,8BAAKjG,EAAMod,MACX,8BAAKpd,EAAMqd,YACX,8BAAKrd,EAAMsd,aACX,8BAAKtd,EAAMud,cACX,gCAGT,CAACL,IACEkE,GAAqBjC,uBAAY,WACnC,OACI,uCACI,gCAAI,6CAAJ,KAAyB,8BAAKhB,EAAYuC,qBAC1C,gCAAI,mDAAyB,8BAAKzT,KAAOkR,EAAYvD,kBAAkBzN,OAAO,sBAA9E,OACA,gCAAI,4CAAJ,KAAwB,8BAAKgR,EAAYxD,eACzC,oCAAK,iDAAL,KAA8B,8BAAKwD,EAAYtD,aAC/C,gCAAI,8CAAJ,MAA2B,8BAAKsD,EAAYrD,iBAC5C,gCAAI,gDAAJ,IAA2B,8BAAKqD,EAAY3F,mBAC5C,gCAAI,6CAAJ,KAAyB,8BAAK2F,EAAYpD,gBAC1C,gCAAI,2CAAJ,KAAuB,8BAAKoD,EAAY1F,cACxC,gCAAI,yCAAJ,IAAoB,8BAAK0F,EAAYnD,iBAE9C,CAACmD,IAEEkD,GAAkBlC,uBAAY,WAChC,OACI,uCACI,gCAAI,uCAAJ,KAAmB,8BAAKhB,EAAYlD,sBACpC,gCAAI,+CAAqB,8BAAKkD,EAAY9C,2BAA1C,OACA,gCAAI,8CAAoB,8BAAK8C,EAAYjD,0BAAzC,OACA,gCAAI,2CAAiB,8BAAKiD,EAAYhD,uBAAtC,OACA,gCAAI,2CAAiB,8BAAKgD,EAAY/C,uBAAtC,YAET,CAAC+C,IAEJ,OACI,qCACI,uBAAKpX,UAAU,UAAf,UACI,gBAAC7C,EAAA,EAAD,CAAOC,KAAMA,GAAME,OAAQ8b,GAA3B,UACI,eAACjc,EAAA,EAAMK,OAAP,CAAcC,aAAW,EAAzB,SACI,eAACN,EAAA,EAAMO,MAAP,kCAEJ,eAACP,EAAA,EAAMQ,KAAP,UACI,eAACK,EAAA,EAAD,UACI,gBAACA,EAAA,EAAKS,MAAN,CAAYuB,UAAU,OAAOpB,UAAU,4BAAvC,UACI,eAACZ,EAAA,EAAKa,MAAN,iCACA,eAAC,KAAD,CAAYmB,UAAU,eACtBf,SAAUia,GACVna,SAAU,SAACG,GAAD,OAAUia,GAAgBja,IACpChC,KAAK,eACLiC,WAAW,sBAKvB,gBAAChC,EAAA,EAAM2R,OAAP,WACI,eAACnP,GAAA,EAAD,CAAQ9B,QAAQ,YAAY6C,QAAS0Y,GAArC,mBAGA,eAACzZ,GAAA,EAAD,CAAQ9B,QAAQ,UAAU6C,QAAS,kBAAIwZ,GAAmB,IAA1D,4BAKR,gBAACrI,GAAA,EAAD,CAAeC,UAAQ,EAAClK,MAAO,IAAMxK,KAAM4J,GAAUD,OAAQjJ,QAAS,kBAAMmJ,GAAa,CAAEF,QAAQ,EAAO3O,KAAM,GAAII,QAAS,MAAOwH,UAAW,UAAagH,GAAU5O,KAAtK,UACI,eAACyZ,GAAA,EAAMrU,OAAP,UACI,0BAAQwC,UAAU,UAAlB,UAA+C,aAAlBgH,GAAU5O,KAAsB,QAAU,UAAvE,gBAEJ,eAACyZ,GAAA,EAAMlU,KAAP,CAAYqC,UAAU,OAAtB,SACKgH,GAAUxO,YALP,GAQZ,eAAC,GAAD,CAAQ4E,KAAM+E,KACb2W,IAAoC,WAAb7gB,EAAKQ,MAAkC,SAAbR,EAAKQ,KAS9C,GATiE,eAAC+F,GAAA,EAAD,CAAKwB,UAAU,MAAf,SACtE,gBAACrB,EAAA,EAAD,CAAKqB,UAAU,cAAf,UACI,eAACL,GAAA,EAAD,CAAQ9B,QAAQ,UAAUzF,KAAK,SAASsI,QAAS,kBAAMsZ,GAAa,IAApE,qBAEU,KACV,eAACra,GAAA,EAAD,CAAQ9B,QAAQ,SAASzF,KAAK,SAASsI,QAAS,kBAAMsZ,IAAc,IAApE,0BAMP9D,IAAoC,WAAbje,EAAKQ,MAAkC,SAAbR,EAAKQ,KAS9C,GATiE,eAAC+F,GAAA,EAAD,CAAKwB,UAAU,MAAf,SACtE,gBAACrB,EAAA,EAAD,CAAKqB,UAAU,cAAf,UACI,eAACL,GAAA,EAAD,CAAQ9B,QAAQ,UAAUzF,KAAK,SAASsI,QAAS,kBAjL5CuY,IAAQ,IAiLb,sBAEU,KACV,eAACtZ,GAAA,EAAD,CAAQ9B,QAAQ,SAASzF,KAAK,SAASsI,QAAS,kBAAMwZ,IAAoB,IAA1E,yBAMR,gBAAC1b,GAAA,EAAD,CAAK+b,GAAI,EAAGxP,GAAI,EAAG/K,UAAU,MAA7B,UACI,gBAACrB,EAAA,EAAD,WACI,gBAAC8V,GAAA,EAAD,CAAMe,OAAO,UAAUC,QAAM,EAEzBC,KAAM,OACN1V,UAAU,MACVwa,IAAK9C,EAJT,UAMI,gBAACjD,GAAA,EAAKjX,OAAN,CAAawC,UAAU,yBAAvB,UAAgD,kDAC5C,uBAAKU,QAAS8X,EAAqB5C,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKC,KAAK,eAAe/V,UAAU,mCAAmCgW,QAAQ,YAAtK,UACI,uBAAMC,EAAE,0CACR,uBAAMA,EAAE,qXAGhB,eAACxB,GAAA,EAAK9W,KAAN,UACI,eAACkI,GAAA,EAAD,CAAO6J,KAAK,KAAK1P,UAAU,mBAAmByG,SAAO,EAAC0K,UAAQ,EAACC,OAAK,EAACC,YAAU,EAA/E,SACI,mCACI,gCAAI,8CAAoB,wCAAK+F,EAAY9K,cAAjB,aAAK,EAAoBjD,cAAjD,OACA,gCAAI,kDAAJ,KAA8B,wCAAK+N,EAAY9K,cAAjB,aAAK,EAAoB5C,qBACvD,oCAAK,iDAAL,KAA8B,8BAAK0N,EAAYtD,aAE/C,gCAAI,sCAAJ,MAAmB,8BAAK,UAAAsD,EAAY9K,cAAZ,SAAoBnC,cAAgBjE,KAAM,UAACkR,EAAY9K,cAAb,aAAC,EAAoBnC,eAAe/D,OAAO,cAAgB,QAC7H,gCAAI,wCAAJ,IAAmB,wCAAKgR,EAAY9K,cAAjB,aAAK,EAAoB9C,mBAC5C,gCAAI,yCAAJ,KAAqB,wCAAK4N,EAAY9K,cAAjB,aAAK,EAAoBhQ,YAC9C,gCAAI,6CAAJ,IAAwB,wCAAK8a,EAAY9K,cAAjB,aAAK,EAAoBiL,mBACjD,gCAAI,sCAAJ,IAAiB,wCAAKH,EAAY9K,cAAjB,aAAK,EAAoB3C,qBAC1C,gCAAI,kDAAJ,IAA6B,wCAAKyN,EAAY9K,cAAjB,aAAK,EAAoB1C,4BACtD,gCAAI,kDAAJ,IAA6B,wCAAKwN,EAAY9K,cAAjB,aAAK,EAAoBxC,wBACtD,gCAAI,+CAAJ,IAA0B,wCAAKsN,EAAY9K,cAAjB,aAAK,EAAoBzC,qBACnD,gCAAI,mDAAJ,IAA8B,wCAAKuN,EAAY9K,cAAjB,aAAK,EAAoBvC,kBACvD,gCAAI,iDAAJ,IAA4B,wCAAKqN,EAAY9K,cAAjB,aAAK,EAAoBtC,oBACrD,gCAAI,sDAAJ,IAAiC,wCAAKoN,EAAY9K,cAAjB,aAAK,EAAoBrC,kCA5BjE,GAkCT,sBAAK5D,MAAO,CAAEoU,QAAS,QAAvB,SAAiC,eAAC,GAAD,CAAeD,IAAKjC,EAAanB,YAAaA,SAGnF,gBAACzY,EAAA,EAAD,WACI,gBAAC8V,GAAA,EAAD,CAAMe,OAAO,OAAOC,QAAM,EAEtBC,KAAM,OAEN1V,UAAU,MAJd,UAOI,gBAACyU,GAAA,EAAKjX,OAAN,CAAawC,UAAU,sBAAvB,UAA6C,qDAA0B,uBAAKU,QAASuX,EAAwBrC,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKC,KAAK,eAAe/V,UAAU,mCAAmCgW,QAAQ,YAAzK,UACnE,uBAAMC,EAAE,0CACR,uBAAMA,EAAE,qXAEZ,eAACxB,GAAA,EAAK9W,KAAN,UAEI,eAACkI,GAAA,EAAD,CAAO6J,KAAK,KAAK1P,UAAU,mBAAmByG,SAAO,EAAC0K,UAAQ,EAACC,OAAK,EAACC,YAAU,EAA/E,SACI,mCACI,gCAAI,6CAAJ,KAAyB,8BAAK+F,EAAYuC,qBAC1C,gCAAI,mDAAyB,8BAAKzT,KAAOkR,EAAYvD,kBAAkBzN,OAAO,sBAA9E,OACA,gCAAI,4CAAJ,KAAwB,8BAAKgR,EAAYxD,eACzC,oCAAK,iDAAL,KAA8B,8BAAKwD,EAAYtD,aAC/C,gCAAI,8CAAJ,MAA2B,8BAAKsD,EAAYrD,iBAC5C,gCAAI,gDAAJ,IAA2B,8BAAKqD,EAAY3F,mBAC5C,gCAAI,6CAAJ,KAAyB,8BAAK2F,EAAYpD,gBAC1C,gCAAI,2CAAJ,KAAuB,8BAAKoD,EAAY1F,cAExC,gCAAI,yCAAJ,IAAoB,8BAAK0F,EAAYnD,qBAvB5C,GA6BT,sBAAK5N,MAAO,CAAEoU,QAAS,QAAvB,SAAiC,eAAC,GAAD,CAAcD,IAAK5C,EAAgBzB,QAASkE,GAAoB5N,OAAQ,GAAIsK,QAAQ,6BAEzH,gBAACpY,EAAA,EAAD,WACI,eAAC,GAAD,CAAQvB,KAAMsb,EAAiBzW,UAAU,IACzC,eAAC,GAAD,CAASiU,mBAA+C,GAA3BkB,EAAY0C,aAAgD,GAA5B1C,EAAY2C,aAAmB5D,QAASA,EAASC,cAAeA,EAAeT,eAAgBwC,IAC5J,sBAAK9R,MAAO,CAAEoU,QAAS,QAAvB,SAAiC,eAAC,GAAD,CAAcD,IAAKtC,EAAQ/B,QAASiE,GAAY3N,OAAQ0N,GAAQpD,QAAQ,mBAE7G,gBAACpY,EAAA,EAAD,WACI,gBAAC8V,GAAA,EAAD,CAAMe,OAAO,OAAOC,QAAM,EAEtBC,KAAM,OAEN1V,UAAU,MAJd,UAOI,gBAACyU,GAAA,EAAKjX,OAAN,CAAawC,UAAU,sBAAvB,UAA6C,qDACzC,uBAAKU,QAAS4X,EAAuB1C,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKC,KAAK,eAAe/V,UAAU,mCAAmCgW,QAAQ,YAAxK,UACI,uBAAMC,EAAE,0CACR,uBAAMA,EAAE,qXAGhB,eAACxB,GAAA,EAAK9W,KAAN,UAEI,eAACkI,GAAA,EAAD,CAAO6J,KAAK,KAAK1P,UAAU,mBAAmByG,SAAO,EAAC0K,UAAQ,EAACC,OAAK,EAACC,YAAU,EAA/E,SACI,mCACI,gCAAI,uCAAJ,KAAmB,8BAAK+F,EAAYlD,sBACpC,gCAAI,+CAAqB,8BAAKkD,EAAY9C,2BAA1C,OACA,gCAAI,8CAAoB,8BAAK8C,EAAYjD,0BAAzC,OACA,gCAAI,2CAAiB,8BAAKiD,EAAYhD,uBAAtC,OACA,gCAAI,2CAAiB,8BAAKgD,EAAY/C,uBAAtC,gBApBP,GA0BT,sBAAKhO,MAAO,CAAEoU,QAAS,QAAvB,SAAiC,eAAC,GAAD,CAAcD,IAAKnC,EAAelC,QAASmE,GAAiB7N,OAAQ,GAAIsK,QAAQ,sC,UCtG1H2D,OAhPf,SAAyB3e,GACrB,IAAIsE,EAAUC,cACRhG,EAAW8F,cACjB,EAAwCpE,oBAAS,GAAjD,mBAAOmG,EAAP,KAAqBmD,EAArB,KACA,EAAgCtJ,mBAAS,IAAzC,mBAAOgZ,EAAP,KAAiBC,EAAjB,KACAzQ,qBAAU,WACN0Q,IACA5a,EAAS,CAAElC,KAAMT,EAAawB,KAAM,4BACrC,IACH,IAAMU,EAAO2R,mBACT,kBAEIwJ,EAASpb,KAAI,SAAClB,EAAQ+S,GAAW,IAAD,EAC5B,MAAO,CACHC,KAAMhT,EAAOihB,gBAAkBjhB,EAAOihB,gBAAkB,MACxDhO,KAAMzF,KAAOxN,EAAOmb,kBAAkBzN,OAAO,qBAC7CwF,KAAI,UAAElT,EAAO4T,cAAT,aAAE,EAAejD,YACrBwC,KAAMnT,EAAOkb,UACb9H,KAAMpT,EAAOqb,YACb4G,KAAMjiB,EAAO+Y,cACbmJ,KAAMliB,EAAOmiB,aACbC,KAAMpiB,QAKlB,CAACsc,IAGCjJ,EAAUP,mBACZ,iBAAM,CACF,CACIhO,OAAQ,cACRwO,SAAU,OACVC,aAAa,GAEjB,CACIzO,OAAQ,mBACRwO,SAAU,OACVC,aAAa,GAEjB,CACIzO,OAAQ,cACRwO,SAAU,OACVC,aAAa,GAEjB,CACIzO,OAAQ,YACRwO,SAAU,OACVC,aAAa,GAEjB,CACIzO,OAAQ,cACRwO,SAAU,OACVC,aAAa,GAEjB,CACIzO,OAAQ,gBACRwO,SAAU,OACVC,aAAa,GAEjB,CACIzO,OAAQ,SACRwO,SAAU,OACVC,aAAa,GAEjB,CACIzO,OAAQ,SACRwO,SAAU,OACVC,aAAa,MAIrB,IAEJ,SAASO,EAAT,GAEI,IAAD,IADCC,OAAUC,EACX,EADWA,YAAaC,EACxB,EADwBA,gBAAiBC,EACzC,EADyCA,UAElCC,EAAQF,EAAgBrC,OAE9B,OACI,wBACItK,UAAU,eACV/G,MAAOyT,GAAe,GACtB3N,SAAU,SAAA/B,GACN4P,EAAU5P,EAAEC,OAAOhE,YAASe,IAEhCgF,YAAW,iBAAY6N,EAAZ,iBAIvB,IAAMC,EAAgBrL,IAAM+J,SACxB,iBAAO,CAEHuB,OAAQP,KAEZ,IAEEQ,EAAW,SAACC,GAEd,IADA,IAAIC,EAAkB,GACbC,EAAI,EAAGA,GAAKF,EAAWE,IAC5BD,EAAgBvM,KAAKwM,GAEzB,OACI,gBAACC,GAAA,EAAD,WACI,eAACA,GAAA,EAAWC,MAAZ,CAAkB3M,QAAS,kBAAM4M,EAAS,MAC1C,eAACF,GAAA,EAAWG,KAAZ,CAAiB7M,QAAS,kBAAM8M,KAAgB5N,UAAW6N,IAC1DP,EAAgBtT,KAAI,SAAA8T,GAAG,OAAI,eAACN,GAAA,EAAWO,KAAZ,CAA2B/H,OAAQ8H,IAASE,EAAY,EAAIlN,QAAS,kBAAM4M,EAASI,EAAM,IAA1F,SAA+FA,GAAzEA,MAClD,eAACN,GAAA,EAAWS,KAAZ,CAAiBnN,QAAS,kBAAMoN,KAAYlO,UAAWmO,IACvD,eAACX,GAAA,EAAWY,KAAZ,CAAiBtN,QAAS,kBAAM4M,EAASL,EAAY,UAM3DiI,EAAW,mDAAG,iHAEZ5P,GAAgB,GAFJ,SAGS2L,GAAyBN,yBAHlC,OAGRva,EAHQ,OAIZkP,GAAgB,GACW,KAAvBlP,EAASwC,aACLmiB,EAAe3kB,EAAS0E,KAAKtC,QAAQoB,KAAI,SAACub,EAAMxc,GAahD,OAZwB,GAApBwc,EAAK2E,aAAyC,GAArB3E,EAAK4E,aAC9B5E,EAAI,aAAmB,YACI,GAApBA,EAAK2E,aAAyC,GAArB3E,EAAK4E,aACrC5E,EAAI,aAAmB,YACM,GAAtBA,EAAK4E,aACZ5E,EAAI,aAAmB,qBACK,GAArBA,EAAK2E,YACZ3E,EAAI,aAAmB,oBAEvBA,EAAI,aAAmB,UAGpBA,KAEXF,EAAY8F,IArBJ,gDAyBZzV,GAAgB,GAChB/O,QAAQC,IAAR,MA1BY,yDAAH,qDA6BjB,EAgBIyX,oBAAS,CAAElC,UAASlS,OAAMiT,gBAAeoB,aAAc,CAAEN,UAAW,IAAOO,cAAYC,aAAWC,kBAflGC,EADJ,EACIA,cACAC,EAFJ,EAEIA,kBACAC,EAHJ,EAGIA,aAEAC,GALJ,EAII1G,KAJJ,EAKI0G,YAEAtV,GAPJ,EAMIuV,YANJ,EAOIvV,MACAwV,EARJ,EAQIA,UARJ,IASIzW,MAAS0V,EATb,EASaA,UACTN,GAVJ,EASwBsB,SATxB,EAUItB,UACAE,EAXJ,EAWIA,aACAM,EAZJ,EAYIA,SAEAL,GAdJ,EAaIoB,YAbJ,EAcIpB,iBACAM,EAfJ,EAeIA,YAEJ,OACI,qCACI,uBAAK/N,UAAU,UAAf,UACI,eAAC,GAAD,CAAQ5C,KAAM+E,IAEd,eAAC3D,GAAA,EAAD,UACI,gBAACG,EAAA,EAAD,WACI,sBAAKqB,UAAU,aAAf,SACKgN,EAAS2B,KAGd,gBAAC9I,GAAA,EAAD,2BAAYyI,KAAZ,IAA6BtO,UAAU,4CAA4CyG,SAAO,EAAC0K,UAAQ,EAACC,OAAK,EAACC,YAAU,EAApH,UACI,wBAAOrR,UAAU,aAAjB,SACKwO,EAAa5U,KAAI,SAAAmV,GAAW,OACzB,+CAAQA,EAAYC,uBAApB,aACKD,EAAY9Y,QAAQ2D,KAAI,SAAA6S,GAAM,OAC3B,gDACQA,EAAOwC,eAAexC,EAAOyC,yBADrC,cAGKzC,EAAO5H,OAAO,UACf,gCACK4H,EAAO0C,SAAY1C,EAAO2C,aAAe,gBAAQ,gBAAS,KAE/D,+BAAM3C,EAAOR,YAAcQ,EAAO5H,OAAO,UAAY,sBAMzE,kDAAU0J,KAAV,aAEKpV,EAAKS,KAAI,SAAAyV,GAEN,OADAZ,EAAWY,GAEP,+CAAQA,EAAIC,eAAZ,aACKD,EAAIE,MAAM3V,KAAI,SAAA4V,GAEX,OADAjZ,QAAQC,IAAIgZ,GACU,QAAlBA,EAAK/C,OAAO9T,IAAkC,QAAlB6W,EAAK/C,OAAO9T,GAEpC,+CAAQ6W,EAAKC,gBAAb,aACKD,EAAK3K,OAAO,WAGI,QAAlB2K,EAAK/C,OAAO9T,GAEf,8BACI,eAACgH,GAAA,EAAD,CAAQ+P,KAAM,KAAM7R,QAAQ,OAAO6C,QAAS,WAAQL,EAAQM,KAAK,uBAAwB6O,EAAKvW,MAAMN,KAAOP,KAAK,SAAS4H,UAAU,OAAnI,oBAKiB,QAAlBwP,EAAK/C,OAAO9T,GAEf,8BACI,eAACqiB,GAAA,EAAD,CAAOhb,UAAyB,YAAdwP,EAAKvW,OAAqC,aAAduW,EAAKvW,MAAuB,aAAe,YAAzF,SACKuW,EAAKvW,eAJf,kBAgB/B,sBAAK+G,UAAU,aAAf,SACKgN,EAAS2B,gBCrCvBsM,OAnMf,SAAuBlf,GACnB,MAA4CC,mBAAS,IAAIK,MAAzD,mBAAOoM,EAAP,KAAuBC,EAAvB,KACA,EAAwC1M,oBAAS,GAAjD,mBAAOmG,EAAP,KAAqBmD,EAArB,KACA,EAA2CtJ,mBAAS,IAApD,mBAAOkf,EAAP,KAAsBC,EAAtB,KACMC,EAAezD,mBACf0D,EAAcxD,2BAAgB,CAClCC,QAAS,kBAAMsD,EAAarD,SAC5BC,cAAc,gBAkBR3Q,EAASC,aAAU,CACvBC,cAAe,CACf+T,cAAe,GACf7J,cAAe,GACfwC,OAAQ,GACRD,WAAW,GACXD,YAAY,GACZrC,SAAS,QAETjK,SAzBa,SAAAZ,GACb,IAAMvO,EAAS,GAab,OAZGuO,EAAO4K,gBACVnZ,EAAOmZ,cAAgB,6BAEpB5K,EAAOkN,cACRzb,EAAOyb,YAAc,2BAElBlN,EAAOoN,SACV3b,EAAO2b,OAAS,sBAEbpN,EAAOmN,aACV1b,EAAO0b,WAAa,0BAEf1b,GAYT2F,SAAS,WAAD,wCAAE,WAAO4I,GAAP,yFACRvB,GAAgB,GADR,SAGLuB,EAAOyU,cAAgB7S,EACvBlS,QAAQC,IAAIqQ,GAJP,SAKeoK,GAAmBrB,aAAa/I,GAL/C,OAKFzQ,EALE,OAMNkP,GAAgB,GACW,KAAvBlP,EAASwC,YAEXuiB,EAAkB/kB,EAAS0E,KAAKtC,SAT5B,kDAeN8M,GAAgB,GAfV,0DAAF,mDAAC,KAqBb,OACI,uCACA,eAAC,GAAD,CAAQlI,KAAM+E,IACd,sBAAKnC,UAAU,UAAf,SACA,uBAAKA,UAAU,MAAf,UACA,sBAAKA,UAAU,WAAf,SACI,eAACub,GAAA,EAAD,CAAWvb,UAAU,oDAArB,SACA,gBAAChC,EAAA,EAAD,CAAMC,SAAUoJ,EAAOQ,aAAvB,UACA,gBAAC7J,EAAA,EAAKS,MAAN,CAAYC,GAAIC,IAAKqB,UAAU,gCAAgCpB,UAAU,iBAAzE,UACgB,eAACZ,EAAA,EAAKa,MAAN,+BACA,eAAC,KAAD,CAAYmB,UAAU,eAClBf,SAAUwJ,EACV1J,SAAU,SAACG,GAAD,OAAUwJ,EAAkBxJ,IACtChC,KAAK,gBACLiC,WAAW,eAE1BkI,EAAOS,QAAQwT,eAAiBjU,EAAO/O,OAAOgjB,cAC7C,sBAAKtb,UAAU,cAAf,SAA8BqH,EAAO/O,OAAOgjB,gBAC1C,QAIN,gBAACtd,EAAA,EAAKS,MAAN,CAAYuB,UAAU,2BAA2BpB,UAAU,iBAA3D,UACE,eAACZ,EAAA,EAAKa,MAAN,0BACA,eAACb,EAAA,EAAKc,QAAN,CAEE1G,KAAK,SACL8E,KAAK,cACL8B,YAAY,oBACZD,SAAUsI,EAAOtK,aACjB9D,MAAOoO,EAAOR,OAAOkN,cAEtB1M,EAAOS,QAAQiM,aAAe1M,EAAO/O,OAAOyb,YAC3C,sBAAK/T,UAAU,cAAf,SAA8BqH,EAAO/O,OAAOyb,cAC1C,QAGN,gBAAC/V,EAAA,EAAKS,MAAN,CAAYuB,UAAU,2BAA2BpB,UAAU,iBAA3D,UACE,eAACZ,EAAA,EAAKa,MAAN,4BACA,eAACb,EAAA,EAAKc,QAAN,CACE1G,KAAK,SACL8E,KAAK,gBACL8B,YAAY,sBACZD,SAAUsI,EAAOtK,aACjB9D,MAAOoO,EAAOR,OAAO4K,gBAGtBpK,EAAOS,QAAQ2J,eAAiBpK,EAAO/O,OAAOmZ,cAC7C,sBAAKzR,UAAU,cAAf,SAA8BqH,EAAO/O,OAAOmZ,gBAC1C,QAGN,gBAACzT,EAAA,EAAKS,MAAN,CAAYuB,UAAU,2BAA2BpB,UAAU,iBAA3D,UACE,eAACZ,EAAA,EAAKa,MAAN,qBACA,eAACb,EAAA,EAAKc,QAAN,CACE1G,KAAK,SACL8E,KAAK,SACL6B,SAAUsI,EAAOtK,aACjB9D,MAAOoO,EAAOR,OAAOoN,SAGtB5M,EAAOS,QAAQmM,QAAU5M,EAAO/O,OAAO2b,OACtC,sBAAKjU,UAAU,cAAf,SAA8BqH,EAAO/O,OAAO2b,SAC1C,QAGN,gBAACjW,EAAA,EAAKS,MAAN,CAAYC,GAAIC,IAAKqB,UAAU,iBAAiBpB,UAAU,mBAA1D,UACE,eAACZ,EAAA,EAAKa,MAAN,yBACA,0BACImB,UAAU,eACV9C,KAAK,aACL6B,SAAUsI,EAAOtK,aACjB9D,MAAOoO,EAAOR,OAAOmN,WAJzB,UAMI,yBAAe/a,MAAM,GAArB,0BAAY,IAKZ,yBAAsBA,MAAM,UAA5B,oBAAY,cAEfoO,EAAOS,QAAQkM,YAAc3M,EAAO/O,OAAO0b,WAC1C,sBAAKhU,UAAU,cAAf,SAA8BqH,EAAO/O,OAAO0b,aAC1C,QAIN,eAACrU,GAAA,EAAD,CAAQ9B,QAAQ,UAAUzF,KAAK,SAA/B,8BAOF,sBAAK4H,UAAU,WAAf,SACA,gBAACyU,GAAA,EAAD,CAAMe,OAAO,UAAUC,QAAM,EAEjBC,KAAM,OAEN1V,UAAU,MACVwa,IAAKY,EALjB,UAQY,gBAAC3G,GAAA,EAAKjX,OAAN,CAAawC,UAAU,yBAAvB,UAAgD,2DAAgC,uBAAKU,QAAS2a,EAAazF,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKC,KAAK,eAAe/V,UAAU,mCAAmCgW,QAAQ,YAA9J,UACtG,uBAAMC,EAAE,0CACR,uBAAMA,EAAE,qXAEc,eAACxB,GAAA,EAAK9W,KAAN,UACI,gBAACkI,GAAA,EAAD,CAAQ6J,KAAM,KAAM1P,UAAU,mBAAmByG,SAAO,EAAC0K,UAAQ,EAACC,OAAK,EAACC,YAAU,EAAlF,UACA,iCACE,gCACI,2CACA,6CACA,4CACA,2CACA,mDAGF,iCACC6J,EAAethB,KAAI,SAACX,EAAMN,GAAP,OAAa,gCAC7B,8BAAKM,EAAMiG,OACX,8BAAKjG,EAAMod,MACX,8BAAKpd,EAAMqd,YACX,8BAAKrd,EAAMsd,aACX,8BAAKtd,EAAMud,gBAL2B7d,eAvB7C,c,oBCvBd6iB,OA/Hf,SAAiBzf,GACb,IAAMzB,EAAW8F,cACjB,EAA8CpE,oBAAS,GAAvD,mBAAOkP,EAAP,KAAwBC,EAAxB,KACA,EAAwCnP,oBAAS,GAAjD,mBAAOmG,EAAP,KAAqBmD,EAArB,KACA,EAA8BtJ,mBAAS,IAAvC,mBAAOyf,EAAP,KAAgBC,EAAhB,KACA,EAA4B1f,mBAAS,GAArC,mBAAO2f,EAAP,KAAeC,EAAf,KACA,EAA4C5f,mBAAS,IAAIK,MAAzD,mBAAOoM,EAAP,KAAuBC,EAAvB,KACAlE,qBAAU,WACNqX,IACAvhB,EAAS,CAAElC,KAAMT,EAAawB,KAAM,eACrC,IAEH,IAAM0iB,EAAmB,WAA4C,IAA3C/L,EAA0C,uDAAlC5J,OAASE,OAAO,cAC9Cd,GAAgB,GAChB2L,GAAmBpB,WAAWC,GAAOzV,MAAK,SAAAM,GAEtC,GADA2K,GAAgB,GACM,KAAlB3K,EAAI/B,WAAmB,CACvB,IAAIud,EACJA,EAAUxb,EAAIG,KAAKtC,QAAQoB,KAAI,SAAAkiB,GAG5B,OADAA,EAAG,cAAkBA,EAAInC,gBAAgBoC,UAAU,IAC5CD,KAEVJ,EAAWvF,QAEXuF,EAAW,QAIjBM,EAAO,mDAAG,wGACZ7Q,GAAmB,GADP,SAGR7F,GAAgB,GAHR,SAIa2L,GAAmBlB,QAAQ4L,GAJxC,OAIJvlB,EAJI,OAKRkP,GAAgB,GACU,KAAvBlP,EAASwC,aACJwT,EAAcqP,EAAQpP,QAAO,SAAC4P,EAAQ1P,GAAT,OAAe0P,EAAQtjB,IAAIgjB,KAC5DD,EAAWtP,IARP,kDAWR7V,QAAQC,IAAI,KAAMJ,SAAS0E,KAAKtC,SAChC8M,GAAgB,GAZR,0DAAH,qDAuBb,OACI,uCACF,gBAACnI,EAAA,EAAD,CAAOC,KAAM8N,EAAiB5N,OAAQ,kBAAI6N,GAAmB,IAA7D,UACE,eAAChO,EAAA,EAAMK,OAAP,CAAcC,aAAW,EAAzB,SACE,eAACN,EAAA,EAAMO,MAAP,0BAEF,eAACP,EAAA,EAAMQ,KAAP,4BACA,gBAACR,EAAA,EAAM2R,OAAP,WACE,eAACnP,GAAA,EAAD,CAAQ9B,QAAQ,YAAY6C,QAAS,kBAAIyK,GAAmB,IAA5D,oBAGA,eAACxL,GAAA,EAAD,CAAQ9B,QAAQ,UAAU6C,QAAS,kBAAIsb,KAAvC,wBAME,eAAC,GAAD,CAAQ5e,KAAM+E,IACd,sBAAKnC,UAAU,UAAf,SAEI,eAACxB,GAAA,EAAD,UACF,gBAACG,EAAA,EAAD,WACM,gBAACud,GAAA,EAAD,CAAYlc,UAAU,OAAtB,UACA,eAACmc,GAAA,EAAD,CAAWnc,UAAU,OAArB,uBACA,eAAC,KAAD,CAAYA,UAAU,eACVf,SAAUwJ,EACV1J,SAAU,SAACG,GAAD,OA7BlCwJ,EADmB0T,EA8BuCld,QA5B1D2c,EAAiB3V,KAAOkW,GAAchW,OAAO,eAF3B,IAACgW,GA+BKlf,KAAK,kBACLiC,WAAW,kBAKnB,gBAAC0G,GAAA,EAAD,CAAO7F,UAAU,6CAA6CyG,SAAO,EAAC0K,UAAQ,EAACC,OAAK,EAACC,YAAU,EAA/F,UACI,wBAAOrR,UAAU,aAAjB,SACI,gCACI,8CACA,wCACA,4CACA,uCACA,6CACA,6CACA,8CACA,8CAGR,iCACqB,GAAhByb,EAAQnR,OAAUmR,EAAQ7hB,KAAI,SAACkiB,EAAKnjB,GAAN,+BAAc,gCACzC,8BAAI,eAAC,OAAD,CAAMuH,GAAI,CACVsD,SAAU,uBACVtL,MAAO4jB,EAAIO,eAFX,SAGIP,EAAInC,oBACZ,8BAAI,eAAC,OAAD,CAAMzZ,GAAG,eAAT,mBAAyB4b,EAAIQ,kBAA7B,iBAAyB,EAAgBhQ,cAAzC,aAAyB,EAAwB5C,oBACrD,8BAAI,eAAC,OAAD,CAAMxJ,GAAI,CACVsD,SAAU,oBACVtL,MAAK,UAAE4jB,EAAIQ,kBAAN,iBAAE,EAAgBhQ,cAAlB,aAAE,EAAwBpE,WAF/B,mBAGI4T,EAAIQ,kBAHR,iBAGI,EAAgBhQ,cAHpB,aAGI,EAAwBpE,cAChC,8BAAI,eAAC,OAAD,CAAMhI,GAAI,CACVsD,SAAU,oBACVtL,MAAK,UAAE4jB,EAAIQ,kBAAN,iBAAE,EAAgBhQ,cAAlB,aAAE,EAAwBpE,WAF/B,mBAGI4T,EAAIQ,kBAHR,iBAGI,EAAgBhQ,cAHpB,aAGI,EAAwBjD,gBAChC,8BAAKyS,EAAIS,aACT,8BAAKT,EAAIU,aACT,8BAAKV,EAAItF,cACT,8BAAI,eAAC7W,GAAA,EAAD,CAAQ+P,KAAM,KAAM7R,QAAQ,UAAU6C,QAAS,kBAxElE,SAAC/H,GACdijB,EAAUjjB,GACVwS,GAAmB,GAsEkEsR,CAAWX,EAAInjB,KAApE,qBAjB8CmjB,EAAInjB,OAkBlD,8BAAI,qBAAI0c,QAAS,IAAKrV,UAAU,cAA5B,0DCrC7B0c,OAjDf,WAII,OACI,eAAC,gBAAD,UACI,gBAAC,IAAD,WACA,eAAC,GAAD,CAAaC,OAAK,EAAC9R,KAAK,IAAIzG,UAAWgO,KACvC,eAAC,GAAD,CAAauK,OAAK,EAAC9R,KAAK,eAAezG,UAAWiB,KAClD,eAAC,GAAD,CAAasX,OAAK,EAAC9R,KAAK,kBAAkBzG,UAAWwC,KACrD,eAAC,GAAD,CAAa+V,OAAK,EAAC9R,KAAK,aAAazG,UAAWoE,KAChD,eAAC,GAAD,CAAamU,OAAK,EAAC9R,KAAK,aAAazG,UAAWoE,KAChD,eAAC,GAAD,CAAamU,OAAK,EAAC9R,KAAK,UAAUzG,UAAWyM,KAC7C,eAAC,GAAD,CAAa8L,OAAK,EAAC9R,KAAK,oBAAoBzG,UAAWwY,KACvD,eAAC,GAAD,CAAaD,OAAK,EAAC9R,KAAK,aAAazG,UAAWwN,KAChD,eAAC,GAAD,CAAa+K,OAAK,EAAC9R,KAAK,mBAAmBzG,UAAWiP,KACtD,eAAC,GAAD,CAAasJ,OAAK,EAAC9R,KAAK,gBAAgBzG,UAAW2Q,KACnD,eAAC,GAAD,CAAa4H,OAAK,EAAC9R,KAAK,gBAAgBzG,UAAWkR,KACnD,eAAC,GAAD,CAAaqH,OAAK,EAAC9R,KAAK,uBAAuBzG,UAAWqT,KAC1D,eAAC,GAAD,CAAakF,OAAK,EAAC9R,KAAK,mBAAmBzG,UAAWsW,KACtD,eAAC,GAAD,CAAaiC,OAAK,EAAC9R,KAAK,iBAAiBzG,UAAW6W,KACpD,eAAC,GAAD,CAAa0B,OAAK,EAAC9R,KAAK,WAAWzG,UAAWoX,KAC1C,eAAC,IAAD,CAAO3Q,KAAK,SAASzG,UAAWlC,KAChC,eAAC,GAAD,CAAa2I,KAAK,gBAAgBzG,UAAWnD,KAmB7C,eAAC,GAAD,CAAa4J,KAAK,UAAUzG,UAAWyY,W,UCjExCC,OAZf,WACE,OACE,eAAC,IAAD,CAAU5iB,MAAOA,EAAjB,SACE,eAAC,KAAD,CAAa2C,QAAS,KAAMjB,UAAWA,EAAvC,SACE,sBAAKoE,UAAU,MAAf,SACE,eAAC,GAAD,WCEK+c,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB5iB,MAAK,YAAkD,IAA/C6iB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAAS1Y,OACP,eAAC,IAAM2Y,WAAP,UACE,eAAC,GAAD,MAEF7a,SAAS8a,eAAe,SAM1BV,M,iCChBA,kDAGMW,EAAazoB,IAAkBC,IAAaC,EAAOC,SAEnDJ,EAAW,OAGX2oB,GADSnoB,mBACM,SAAAmF,GAAG,OAAIA,IACtBijB,EAAY,SAAAtb,GAChB,OAAOA,EAAIlM,UAETynB,EAAQ,KACNC,EAAc,SAAAC,GACdF,GACFE,EAAIC,IAAI,QAASH,IAIfI,EAGC,SAAAC,GAAG,OACNR,EAAWzY,IAAX,UAAkBjQ,GAAlB,OAA6BkpB,IAAOtoB,IAAIkoB,GAAazjB,KAAKsjB,EAAaC,IAJrEK,EAOE,SAACC,EAAKpjB,GAAN,OACJ4iB,EAAW7b,KAAX,UAAmB7M,GAAnB,OAA8BkpB,GAAOpjB,GAAMlF,IAAIkoB,GAAazjB,KAAKsjB,EAAaC,IAG5Evc,EAAO,CACXK,MAAO,SAACxF,EAAO0F,GAAR,OACLqc,EAAc,cAAgB,CAAE/hB,QAAO0F,cACzCN,SAAU,SAACJ,GAAD,OACR+c,EAAc,qBAAuB/c,KAGnCid,EAAQ,CACZC,iBAAiB,SAACC,GAAD,OACjBJ,EAAA,6BAAmCI,KACnCC,sBAAsB,WACpB,MAAO,CAACZ,EAAWzY,IAAX,UAAkBjQ,EAAlB,cAAuC0oB,EAAWzY,IAAX,UAAkBjQ,EAAlB,gBAEjDupB,WAAW,SAAC1kB,GAEV,OAAO6jB,EAAW7b,KAAX,UAAmB7M,EAAnB,uBAAkD6E,GAAMjE,IAAIkoB,IAErEU,iBAVY,WAWV,OAAOd,EAAWzY,IAAX,UAAkBjQ,EAAlB,cAAuCY,IAAIkoB,IAEpDW,sBAbY,SAaUtlB,GACpB,OAAOukB,EAAWzY,IAAX,UAAkBjQ,EAAlB,yCAA2DmE,IAAQvD,IAAIkoB,IAEhFY,2BAhBY,WAiBV,OAAOhB,EAAWzY,IAAX,UAAkBjQ,EAAlB,sBAA+CY,IAAIkoB,IAE5Da,YAnBY,SAmBA9kB,GACV,OAAO6jB,EAAW7b,KAAX,UAAmB7M,EAAnB,aAAuC6E,GAAMjE,IAAIkoB,IAE1Dc,eAtBY,SAsBG/kB,GACb,OAAO6jB,EAAWmB,IAAX,UAAkB7pB,EAAlB,0BAA4C6E,GAAOA,GAAMjE,IAAIkoB,IAEtEgB,aAzBY,SAyBCjlB,GACX,OAAO6jB,EAAWnV,IAAX,UAAkBvT,EAAlB,aAAsC6E,GAAMjE,IAAIkoB,IAEzDiB,YA5BY,WA6BV,OAAOrB,EAAWzY,IAAX,UAAkBjQ,EAAlB,cAAuCY,IAAIkoB,IAEpDkB,cA/BY,SA+BEnlB,GACZ,OAAO6jB,EAAWmB,IAAX,UAAkB7pB,EAAlB,2BAA6C6E,GAAOA,GAAMjE,IAAIkoB,IAEvEmB,YAlCY,SAkCAplB,GACV,OAAO6jB,EAAW7b,KAAX,UAAmB7M,EAAnB,aAAuC6E,GAAMjE,IAAIkoB,IAE1DoB,aArCY,SAqCCrlB,GACX,OAAO6jB,EAAWnV,IAAX,UAAkBvT,EAAlB,aAAsC6E,GAAMjE,IAAIkoB,KAGrDqB,EAAU,CACdC,mBADc,SACKvlB,GACjB,OAAO6jB,EAAW7b,KAAX,UAAmB7M,EAAnB,iCAA2D6E,GAAMjE,IAAIkoB,IAE9EuB,oBAJc,SAIMxlB,GAClB,OAAO6jB,EAAW7b,KAAX,UAAmB7M,EAAnB,gCAA0D6E,GAAMjE,IAAIkoB,KAGzEwB,EAAU,CACdC,QADc,SACN1lB,GACN,OAAO6jB,EAAW7b,KAAX,UAAmB7M,EAAnB,qBAA+C6E,GAAMjE,IAAIkoB,IAElE0B,YAJc,WAKZ,OAAO9B,EAAWzY,IAAX,UAAkBjQ,EAAlB,sBAA+CY,IAAIkoB,IAE5D2B,aAPc,SAOD5lB,GACX,OAAO6jB,EAAW7b,KAAX,UAAmB7M,EAAnB,yBAAmD6E,GAAMjE,IAAIkoB,IAEtE4B,eAVc,WAWZ,OAAOhC,EAAWzY,IAAX,UAAkBjQ,EAAlB,0BAAmDY,IAAIkoB,IAEhE6B,eAbc,SAaC9lB,GACb,OAAO6jB,EAAWzY,IAAX,UAAkBjQ,EAAlB,8BAAgD6E,EAAK+lB,WAAYhqB,IAAIkoB,KAI1Ezf,EAAU,CACdC,cADc,SACAzE,GACZ,OAAO6jB,EAAW7b,KAAX,UAAmB7M,EAAnB,uBAAiD6E,GAAMjE,IAAIkoB,KAGvD,KACbzc,OACA8c,QACAgB,UACAG,UACAjhB,UACAwhB,SAAS,WAAK,OAAOhC,GACrB3iB,SAAU,SAAA4kB,GAAYjC,EAAQiC,M","file":"static/js/main.c8bf72db.chunk.js","sourcesContent":["import superagentPromise from 'superagent-promise';\r\nimport _superagent from 'superagent';\r\nimport axios from \"./interceptor-middleware\";\r\nexport const superagent = superagentPromise(_superagent, global.Promise);\r\nexport const API_ROOT = window.location.hostname==\"localhost\"?\"https://micro-service-dev.herokuapp.com/api\": '/api';\r\n\r\n\r\nconst encode = encodeURIComponent;\r\nconst responseBody = res => res;\r\nconst errorBody = err =>{\r\n  return err.response\r\n} ;\r\nlet token = null;\r\nconst tokenPlugin = req => {\r\n  if (token) {\r\n    req.set('Token', token);\r\n  }\r\n}\r\nexport const requests = {\r\n    del: url =>\r\n      axios.delete(`${API_ROOT}${url}`).then(responseBody,errorBody),\r\n    get: url =>\r\n      axios.get(`${API_ROOT}${url}`).then(responseBody,errorBody),\r\n    // put: (url, body) =>\r\n    //   superagent.put(`${API_ROOT}${url}`, body).use(tokenPlugin).then(responseBody),\r\n    post: (url, body) =>\r\n      axios.post(`${API_ROOT}${url}`, body).then(responseBody,errorBody)\r\n  };","import axios from 'axios';\r\n//import { useHistory } from 'react-router-dom';\r\n\r\naxios.interceptors.request.use(\r\n    function(successfulReq) {\r\n      let jwt = \"\";\r\n      jwt = sessionStorage.getItem(\"jwt\");\r\n      successfulReq.headers = {'x-access-token' : jwt};\r\n        return successfulReq;\r\n    }, \r\n    function(error) {\r\n      return Promise.reject(error);\r\n    }\r\n  );\r\n\r\n  axios.interceptors.response.use( \r\n    function(successRes) {\r\n        let formatedResponse = successRes;\r\n        formatedResponse[\"statusCode\"] = successRes[\"status\"];\r\n        formatedResponse[\"body\"] = successRes[\"data\"];\r\n        delete formatedResponse[\"data\"];\r\n        return formatedResponse;\r\n    }, \r\n    function(error) {\r\n      //const history = useHistory();\r\n      // console.log(history);\r\n      console.log(error.toString());\r\n      if(error.toString()==\"Error: Request failed with status code 401\"){\r\n        window.location.href = \"/login\";\r\n      }\r\n      // history.push(\"/login\");\r\n      //window.location.href = \"/login\";\r\n        return Promise.reject(error);\r\n    }\r\n  );\r\n\r\nexport default axios;","\r\n  \r\nexport const APP_LOAD = 'APP_LOAD';\r\nexport const REDIRECT = 'REDIRECT';\r\nexport const ARTICLE_SUBMITTED = 'ARTICLE_SUBMITTED';\r\nexport const SETTINGS_SAVED = 'SETTINGS_SAVED';\r\nexport const DELETE_ARTICLE = 'DELETE_ARTICLE';\r\nexport const SETTINGS_PAGE_UNLOADED = 'SETTINGS_PAGE_UNLOADED';\r\nexport const HOME_PAGE_LOADED = 'HOME_PAGE_LOADED';\r\nexport const HOME_PAGE_UNLOADED = 'HOME_PAGE_UNLOADED';\r\nexport const ARTICLE_PAGE_LOADED = 'ARTICLE_PAGE_LOADED';\r\nexport const ARTICLE_PAGE_UNLOADED = 'ARTICLE_PAGE_UNLOADED';\r\nexport const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const DELETE_COMMENT = 'DELETE_COMMENT';\r\nexport const ARTICLE_FAVORITED = 'ARTICLE_FAVORITED';\r\nexport const ARTICLE_UNFAVORITED = 'ARTICLE_UNFAVORITED';\r\nexport const SET_PAGE = 'SET_PAGE';\r\nexport const APPLY_TAG_FILTER = 'APPLY_TAG_FILTER';\r\nexport const CHANGE_TAB = 'CHANGE_TAB';\r\nexport const PROFILE_PAGE_LOADED = 'PROFILE_PAGE_LOADED';\r\nexport const PROFILE_PAGE_UNLOADED = 'PROFILE_PAGE_UNLOADED';\r\nexport const LOGIN = 'LOGIN';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const REGISTER = 'REGISTER';\r\nexport const LOGIN_PAGE_UNLOADED = 'LOGIN_PAGE_UNLOADED';\r\nexport const REGISTER_PAGE_UNLOADED = 'REGISTER_PAGE_UNLOADED';\r\nexport const ASYNC_START = 'ASYNC_START';\r\nexport const ASYNC_END = 'ASYNC_END';\r\nexport const EDITOR_PAGE_LOADED = 'EDITOR_PAGE_LOADED';\r\nexport const EDITOR_PAGE_UNLOADED = 'EDITOR_PAGE_UNLOADED';\r\nexport const ADD_TAG = 'ADD_TAG';\r\nexport const REMOVE_TAG = 'REMOVE_TAG';\r\nexport const UPDATE_FIELD_AUTH = 'UPDATE_FIELD_AUTH';\r\nexport const UPDATE_FIELD_EDITOR = 'UPDATE_FIELD_EDITOR';\r\nexport const FOLLOW_USER = 'FOLLOW_USER';\r\nexport const UNFOLLOW_USER = 'UNFOLLOW_USER';\r\nexport const PROFILE_FAVORITES_PAGE_UNLOADED = 'PROFILE_FAVORITES_PAGE_UNLOADED';\r\nexport const PROFILE_FAVORITES_PAGE_LOADED = 'PROFILE_FAVORITES_PAGE_LOADED';\r\nexport const ADD_ITEM_INITIAL = 'ADD_ITEM_INITIAL';\r\nexport const INCREASE_QUANTITY = 'INCREASE_QUANTITY';\r\nexport const DECREASE_QUANTITY = 'DECREASE_QUANTITY';\r\nexport const RESET_ORDER = 'RESET_ORDER';\r\nexport const STORE_EDIT_PRODUCT = 'STORE_EDIT_PRODUCT';\r\nexport const GET_EDIT_PRODUCT = 'GET_EDIT_PRODUCT';\r\nexport const UPDATE_PRODUCT_FIELD = 'UPDATE_PRODUCT_FIELD';\r\nexport const CHANGE_PAGE = 'CHANGE_PAGE'","import {\r\n    ADD_ITEM_INITIAL,\r\n    INCREASE_QUANTITY,\r\n    DECREASE_QUANTITY,\r\n    RESET_ORDER\r\n  } from '../constants/actionTypes';\r\n  const defaultState = {\r\n    addedItem: [],\r\n  };\r\n  \r\n  export default (state = defaultState, action) => {\r\n      switch (action.type) {\r\n        case ADD_ITEM_INITIAL:\r\n            const addedItem =[...state.addedItem,{\r\n                productId:action.item._id,\r\n                quantity:1,\r\n                perItemPrice:action.item.price,\r\n                item:action.item\r\n            }]\r\n            return {...state, addedItem};\r\n        case INCREASE_QUANTITY:\r\n             state.addedItem.map(record=>{\r\n                if(record.productId == action.productId){\r\n                    record.quantity +=1\r\n                }\r\n                return record;\r\n            });\r\n            return {...state,state}\r\n        case DECREASE_QUANTITY:\r\n            state.addedItem.map(record=>{\r\n                if(record.productId == action.productId && record.quantity !=0){\r\n                        record.quantity -=1\r\n                }\r\n                return record;\r\n            });\r\n            return {...state,state}\r\n        case RESET_ORDER:\r\n            state.addedItem = []\r\n            return {...state}\r\n        default:\r\n          return state;\r\n      }\r\n      return state;\r\n    };","import {\r\n    STORE_EDIT_PRODUCT,\r\n    GET_EDIT_PRODUCT,\r\n    UPDATE_PRODUCT_FIELD\r\n  } from '../constants/actionTypes';\r\n  const defaultState = {\r\n    product: {},\r\n  };\r\n  \r\n  export default (state = defaultState, action) => {\r\n      switch (action.type) {\r\n        case STORE_EDIT_PRODUCT:\r\n            return {...state,\r\n                product:action.data \r\n            };\r\n        case GET_EDIT_PRODUCT:\r\n            return {...state};\r\n        case UPDATE_PRODUCT_FIELD:\r\n            let prod = state.product;\r\n            prod[action.data.key]=action.data.value;\r\n           return {...state,product:prod}\r\n        default:\r\n          return state;\r\n      }\r\n      return state;\r\n    };","import auth from './reducers/auth';\r\nimport common from './reducers/common';\r\nimport order from './reducers/order';\r\nimport product from './reducers/product';\r\nimport { combineReducers } from 'redux';\r\n//import { routerReducer } from 'react-router-redux';\r\n\r\nconst appReducer = combineReducers({\r\n  auth,\r\n  common,\r\n  order,\r\n  product\r\n  /* your app’s top-level reducers */\r\n})\r\n\r\nconst rootReducer = (state, action) => {\r\n  if (action.type === 'LOGOUT') {\r\n    state = undefined\r\n  }\r\n\r\n  return appReducer(state, action)\r\n}\r\nexport default rootReducer\r\n// export default combineReducers({\r\n//   auth,\r\n//   common,\r\n//   order,\r\n//     //router: routerReducer\r\n//   });","import {\r\n    LOGIN,\r\n    REGISTER,\r\n    LOGIN_PAGE_UNLOADED,\r\n    REGISTER_PAGE_UNLOADED,\r\n    ASYNC_START,\r\n    UPDATE_FIELD_AUTH,\r\n    LOGOUT\r\n  } from '../constants/actionTypes';\r\n  \r\n  export default (state = {}, action) => {\r\n  //console.log(action);\r\n    switch (action.type) {\r\n      case LOGIN:\r\n        return {\r\n          ...state,\r\n          inProgress: false,\r\n          errors: action.payload.message,\r\n          role:action.payload.record?.role,\r\n          id:action.payload.record?.id,\r\n          statusCode:action.payload.jwtToken != \"\"?\"200\":\"\",\r\n          isLoginSuccess:action.payload.jwtToken != \"\"? true:false\r\n        }\r\n      case REGISTER:\r\n        return {\r\n          ...state,\r\n          inProgress: false,\r\n          errors: action.payload,\r\n          statusCode:action.payload.statusCode\r\n        };\r\n      case LOGIN_PAGE_UNLOADED:\r\n      return{\r\n        ...state,\r\n        //errors: action.payload,\r\n        //userDetails:\r\n      }\r\n      case REGISTER_PAGE_UNLOADED:\r\n        return {};\r\n      case ASYNC_START:\r\n        if (action.subtype === LOGIN || action.subtype === REGISTER) {\r\n          return { ...state, inProgress: true };\r\n        }\r\n        break;\r\n      case UPDATE_FIELD_AUTH:\r\n        return { ...state, [action.key]: action.value };\r\n      default:\r\n        return state;\r\n    }\r\n    return state;\r\n  };","import {\r\n    LOGOUT,\r\n    REDIRECT,\r\n    CHANGE_PAGE\r\n  } from '../constants/actionTypes';\r\n  const defaultState = {\r\n    appName: 'Conduit',\r\n    token: null,\r\n    viewChangeCounter: 0\r\n  };\r\n  \r\n  export default (state = {page:\"\"}, action) => {\r\n    //console.log(action);\r\n      switch (action.type) {\r\n        case REDIRECT:\r\n            return { ...state, redirectTo: null };\r\n        case CHANGE_PAGE:\r\n            return {  ...state, page: action.page };\r\n        default:\r\n          return state;\r\n      }\r\n      return state;\r\n    };","import agent from './agent';\r\nimport {\r\n  ASYNC_START,\r\n  ASYNC_END,\r\n  LOGIN,\r\n  LOGOUT,\r\n  REGISTER\r\n} from './constants/actionTypes';\r\n\r\nconst promiseMiddleware = store => next => action => {\r\n  if (isPromise(action.payload)) {\r\n    store.dispatch({ type: ASYNC_START, subtype: action.type });\r\n\r\n    const currentView = store.getState().viewChangeCounter;\r\n    const skipTracking = action.skipTracking;\r\n\r\n    action.payload.then(\r\n      res => {\r\n        const currentState = store.getState()\r\n        if (!skipTracking && currentState.viewChangeCounter !== currentView) {\r\n          return\r\n        }\r\n        action.payload = res;\r\n        store.dispatch({ type: ASYNC_END, promise: action.payload });\r\n        store.dispatch(action);\r\n      },\r\n      error => {\r\n        const currentState = store.getState()\r\n        if (!skipTracking && currentState.viewChangeCounter !== currentView) {\r\n          return\r\n        }\r\n        action.error = true;\r\n        action.payload = error.response.body;\r\n        if (!action.skipTracking) {\r\n          store.dispatch({ type: ASYNC_END, promise: action.payload });\r\n        }\r\n        store.dispatch(action);\r\n      }\r\n    );\r\n\r\n    return;\r\n  }\r\n\r\n  next(action);\r\n};\r\n\r\nconst localStorageMiddleware = store => next => action => {\r\n  if (action.type === LOGIN && action.payload != undefined) {\r\n    if (action.payload.jwtToken!=\"\") {\r\n      window.sessionStorage.setItem('jwt', action.payload.jwtToken);\r\n      agent.setToken(action.payload.jwtToken);\r\n    }\r\n  } else if (action.type === LOGOUT) {\r\n    window.sessionStorage.setItem('jwt','');\r\n    agent.setToken(null);\r\n  }\r\n\r\n   next(action);\r\n};\r\n\r\nfunction isPromise(v) {\r\n  return v && typeof v.then === 'function';\r\n}\r\n\r\n\r\nexport { promiseMiddleware, localStorageMiddleware }","import { applyMiddleware, createStore } from 'redux';\r\nimport reducer from './reducer';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport { promiseMiddleware, localStorageMiddleware } from './middleware';\r\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\r\nimport storage from 'redux-persist/lib/storage/session';\r\nconst persistConfig = {\r\n  key: 'authType',\r\n  storage: storage,\r\n  whitelist: ['auth'] // which reducer want to store\r\n};\r\nconst pReducer = persistReducer(persistConfig, reducer);\r\nconst getMiddleware = () => {\r\n      return applyMiddleware( promiseMiddleware, localStorageMiddleware);\r\n  };\r\nconst store = createStore(pReducer,composeWithDevTools(getMiddleware()));\r\nconst persistor = persistStore(store);\r\nexport { persistor, store };","import React, { useState } from 'react'\r\nimport { Button, Form, Col, Row, Container, Modal,Alert } from 'react-bootstrap';\r\nimport agent from '../../agent'\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nfunction InqueryForm(props) {\r\n    const [state, setState] = useState(\r\n        {fullName:\"\",\r\n            email:\"\",\r\n            business:\"\",\r\n            dob:new Date(),\r\n            gender:\"\",\r\n            service:\"\",\r\n            Phone:\"\"\r\n        });\r\n    const [dobstate, setdobstate] = useState(new Date());\r\n    const [message, setmessage] = useState({type:\"\",message:\"\"})\r\n    const [loading, setloading] = useState(false)\r\n\r\n    const handleChange = (e)=>{\r\n        state[e.target.name] = e.target.value;\r\n        setState(state);\r\n        console.log(state);\r\n    }\r\n    const handleSubmit = (ev)=>{\r\n        ev.preventDefault();\r\n\r\n        state[\"dob\"] = dobstate;\r\n        state[\"service\"] = props.serviceType;\r\n        setState(state);\r\n        console.log(state);\r\n        setloading(true);\r\n        agent.Inquery.submitInquery(state).then((res=>{\r\n            if(res.statusCode == 200){\r\n                ev.target.reset();\r\n                message.type = \"success\";\r\n                message.message = \"Your Details has been submited. Our agent will contact you soon.\"\r\n            }else{\r\n                message.type = \"error\";\r\n                message.message = \"Something went wrong. Please try again.\"\r\n            }\r\n            setmessage(message);\r\n            setloading(false);\r\n\r\n        }))\r\n    }\r\n    return (\r\n        <>\r\n\r\n        <Modal show={props.isopen} onHide={props.hide} >\r\n\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Enquiry</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                {  message.type != \"\"? \r\n                message.type ==\"success\"?\r\n                <Alert key={message.type} variant={\"success\"} onClose={() => setmessage({type:\"\",message:\"\"})} dismissible>\r\n                    {message.message}\r\n                </Alert>:<Alert key={message.type} variant={\"danger\"} onClose={() => setmessage({type:\"\",message:\"\"})} dismissible>\r\n                    {message.message}\r\n                </Alert>:\"\"        \r\n                }\r\n\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridPassword\">\r\n                            <Form.Label>Full Name</Form.Label>\r\n                            <Form.Control onChange={handleChange} type=\"text\" name=\"fullName\"/>\r\n                        </Form.Group>\r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"formGridEmail\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type=\"email\" onChange={handleChange} name=\"email\" placeholder=\"Enter email\" />\r\n                        </Form.Group>\r\n\r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridAddress1\">\r\n                        <Form.Label>Business</Form.Label>\r\n                        <Form.Control type=\"text\" onChange={handleChange}  name=\"business\"/>\r\n                    </Form.Group>\r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridAddress1\">\r\n                        <Form.Label>Date of Birth</Form.Label>\r\n                        <DatePicker\r\n                         selected={dobstate} \r\n                         onChange={date=>setdobstate(date)}\r\n                         dateFormat=\"dd/MM/yyyy\"\r\n                         showYearDropdown\r\n                         dateFormatCalendar=\"MMMM\"\r\n                         yearDropdownItemNumber={50}\r\n                         scrollableYearDropdown\r\n                         maxDate={new Date()}\r\n                         />\r\n                    </Form.Group>\r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridState\">\r\n                    <Form.Label>Gender</Form.Label>\r\n                    <Form.Control name=\"gender\" as=\"select\" onChange={handleChange} defaultValue=\"Choose...\">\r\n                        <option>Choose...</option>\r\n                        <option value=\"male\">Male</option>\r\n                        <option value=\"female\">Female</option>\r\n                    </Form.Control>\r\n                    </Form.Group>                        \r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridState\">\r\n                    <Form.Label>Service</Form.Label>\r\n                        <Form.Control onChange={handleChange} type=\"text\" name=\"service\" value={props.serviceType} readOnly/>\r\n                    </Form.Group>                        \r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridAddress1\">\r\n                        <Form.Label>Phone</Form.Label>\r\n                        <Form.Control type=\"text\" onChange={handleChange}  name=\"phone\"/>\r\n                    </Form.Group>\r\n                    </Form.Row>\r\n\r\n                    <Button variant=\"primary\" type=\"submit\" disabled={loading}>\r\n                    {loading ? 'Loading…' : \"Submit\"}\r\n\r\n                    </Button>\r\n                </Form>\r\n            </Modal.Body>\r\n        </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default InqueryForm\r\n","import React, { Component} from 'react'\r\n//import ItrPopup from '../finance-Itr/ItrPopup'\r\nimport InqueryForm from '../home/InqueryForm'\r\nimport {Link} from 'react-router-dom';\r\n\r\n  class SectionMenu extends Component {\r\n    isopen = false;\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        isopen:false,\r\n        openEnqueryForm:false,\r\n        serviceType:\"\"\r\n      }\r\n    }\r\n    handleITRPopup = () =>{\r\n      this.setState({\r\n        isopen:this.state.isopen?false:true\r\n      })\r\n    }\r\n    handleEnqueryForm = (serviceType = \"\")=>{\r\n      console.log(serviceType);\r\n      this.setState({\r\n        openEnqueryForm:this.state.openEnqueryForm?false:true,\r\n        serviceType:serviceType\r\n      })\r\n\r\n    }\r\n    render() {\r\n        return (\r\n          <>\r\n            <section className=\"text-center \">\r\n            <div className=\"container\">\r\n              <div className=\"col-md-12 shadow-sm p-5 service \">\r\n                <div className=\"row roww\">\r\n                  <div className=\"col-md-2 col-sm-3 col-xs-3 p-2 service-box\" onClick={this.handleITRPopup}>\r\n                    <img src={process.env.PUBLIC_URL + '/assets/img/itr.png'} alt=\"\"/>\r\n                    <h5 className=\"my-4\">Fill ITR</h5>\r\n                  </div>\r\n                 \r\n                  <div className=\"col-md-2 col-sm-3 col-xs-3 p-2 service-box \">\r\n                  <Link to=\"/CategoryList\">\r\n                    <img  src={process.env.PUBLIC_URL + '/assets/img/food.png'} alt=\"\"/>\r\n                    <h5 className=\"my-4\">FOOD</h5></Link>\r\n                  </div>\r\n                  <div className=\"col-md-2 col-sm-3 col-xs-3 p-2 service-box\" onClick={()=>this.handleEnqueryForm(\"Catering\")}>\r\n\r\n                    <img src={process.env.PUBLIC_URL + '/assets/img/catering.png'} alt=\"\"/>\r\n                    <h5 className=\"my-4\">Catering</h5>\r\n                  </div>\r\n                  <div className=\"col-md-2 col-sm-3 col-xs-3 p-2 service-box\" onClick={()=>this.handleEnqueryForm(\"Balance Sheet\")}>\r\n\r\n                    <img src={process.env.PUBLIC_URL + '/assets/img/finance.png'} alt=\"\"/>\r\n                    <h5 className=\"my-4\">Financial Consultancy</h5>\r\n                  </div>\r\n                  <div className=\"col-md-2 col-sm-3 col-xs-3 p-2 service-box\" onClick={()=>this.handleEnqueryForm(\"Investment Planning\")}>\r\n\r\n                    <img src={process.env.PUBLIC_URL + '/assets/img/investment.png'} alt=\"\"/>\r\n                    <h5 className=\"my-4\">Investment Planning</h5>\r\n                  </div>\r\n                  <div className=\"col-md-2 col-sm-3 col-xs-3 p-2 service-box\" onClick={()=>this.handleEnqueryForm(\"GST filing\")}>\r\n                    <img src={process.env.PUBLIC_URL + '/assets/img/gst.png'} alt=\"\"/>\r\n                    <h5 className=\"my-4\">GST Filing </h5>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n          {/* <ItrPopup isopen={this.state.isopen} hide={this.handleITRPopup}/> */}\r\n          <InqueryForm isopen={this.state.openEnqueryForm} serviceType={this.state.serviceType} hide={this.handleEnqueryForm}/>         \r\n        </>\r\n        )\r\n    }\r\n}\r\nexport default SectionMenu\r\n","import React, { Component } from 'react'\r\n\r\nexport default class SectionOffers extends Component {\r\n    render() {\r\n        return (\r\n            <section className=\"text-center\">\r\n                <div className=\"container\">\r\n                    <h4 className=\"h4-responsive font-weight-bold my-3 text-primary\">Best Offers</h4>\r\n                    <div className=\"row my-5\">\r\n                        <div className=\"col-md-3\">\r\n                            <img src={process.env.PUBLIC_URL + '/assets/img/s-1.jpeg'} className=\"img-fluid radius\" alt=\"\" />\r\n                            <h5 className=\"font-weight-bold my-4 text-primary\">Offer 1</h5>\r\n                            <p className=\"grey-text mb-md-0 mb-5 text-primary\">Up to 50% Off\r\n                            </p>\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                            <img src={process.env.PUBLIC_URL + '/assets/img/s-2.jpg'} className=\"img-fluid radius\" alt=\"\" />\r\n                            <h5 className=\"font-weight-bold my-4 text-primary\">offer 2</h5>\r\n                            <p className=\"grey-text mb-md-0 mb-5 text-primary\">Up to 60% off\r\n                  </p>\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                            <img src={process.env.PUBLIC_URL + '/assets/img/s-4.jpeg'} className=\"img-fluid radius\" alt=\"\" />\r\n                            <h5 className=\"font-weight-bold my-4 text-primary\">offer 3</h5>\r\n                            <p className=\"grey-text mb-0 text-primary\">Up to 50% off\r\n                  </p>\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                            <img src={process.env.PUBLIC_URL + '/assets/img/s-3.jpeg'} className=\"img-fluid radius\" alt=\"\" />\r\n                            <h5 className=\"font-weight-bold my-4 text-primary\">Offer 4</h5>\r\n                            <p className=\"grey-text mb-0 text-primary\">Standard EMI Options Available\r\n                  </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { Route,NavLink } from 'react-router-dom'\r\n\r\nfunction LogedInView(props) {\r\n    if(!props.currentUser.errors || props.currentUser.errors.statusCode ==500){\r\n        return (\r\n\r\n        <li className=\"nav-item\">\r\n        <NavLink aactiveClassName=\"active\" className=\"nav-link\" to=\"/login\">Login</NavLink>\r\n        </li>\r\n        )\r\n    }\r\n    return null;\r\n\r\n}\r\n\r\nexport default LogedInView\r\n","import React from 'react'\r\nimport { Route, NavLink } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux'\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nimport {\r\n    LOGOUT\r\n  } from '../../constants/actionTypes';\r\nfunction LogedOutView(props) {\r\n    const dispatch = useDispatch();\r\n    let history = useHistory();\r\n\r\n    const logout = ()=>{\r\n         dispatch({ type: LOGOUT })\r\n           console.log(\"hollo\");\r\n           history.push(\"/\");\r\n       }\r\n         if (props.currentUser.errors && props.currentUser.errors.statusCode == 200) {\r\n        let name = props.currentUser.email.split(\"@\");\r\n\r\n        return (<>\r\n            \r\n            {props.currentUser.errors.body.record.isAdmin?<li className=\"nav-item\">\r\n            <li className=\"nav-item\">\r\n            <NavLink aactiveClassName=\"active\" to=\"/adminHome\" className=\"nav-link\">Admin</NavLink>\r\n            </li>\r\n                \r\n            </li>:\"\"}            \r\n            <li className=\"nav-item\">\r\n                <NavLink aactiveClassName=\"active\" to=\"/userAction\" className=\"nav-link\">\r\n                    {name[0]}\r\n\r\n                    {props.currentUser.errors.body.record.isPrimeMember?<label className=\"clr-cyan\">(Prime member)</label>:\"\"}  \r\n\r\n                    \r\n                    </NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <a className=\"nav-link\" onClick={logout} >Logout</a>\r\n                {/* <NavLink className=\"nav-link\">{props.email}</NavLink> */}\r\n            </li>\r\n        </>\r\n        )\r\n    }\r\n    return null;\r\n}\r\n\r\nexport default LogedOutView\r\n","import React, { Component } from 'react'\r\nimport { Route,NavLink, Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport LoggedInView from './LogedInView';\r\nimport LoggedOutView from './LogedOutView';\r\n// import ItrPopup from '../finance-Itr/ItrPopup'\r\n\r\nclass Header extends Component {\r\n    isopen = false;\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        isopen:false\r\n      }\r\n    }\r\n    handleITRPopup = () =>{\r\n        this.setState({\r\n          isopen:this.state.isopen?false:true\r\n        })\r\n      }\r\n  \r\n    render(){\r\n\r\n    return (\r\n        <header>\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark fixed-top scrolling-navbar\">\r\n                <div className=\"container\">\r\n                    <NavLink className=\"navbar-brand\" to=\"/\"> <h2>AA2 Mutualhelp</h2></NavLink>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent-7\"\r\n                        aria-controls=\"navbarSupportedContent-7\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent-7\">\r\n                        <ul className=\"navbar-nav ml-auto\">\r\n                            <li className=\"nav-item\">\r\n                            {/* <NavLink aactiveClassName=\"active\" className=\"nav-link\" to=\"/\">Home</NavLink> */}\r\n\r\n                            </li>\r\n                            {/* <li className=\"nav-item\" onClick={this.handleITRPopup}>\r\n                                <a className=\"nav-link\" onClick={this.handleITRPopup}>File ITR</a>\r\n                            </li> */}\r\n                            {/* <li className=\"nav-item\">\r\n                                <NavLink activeClassName=\"active\" to=\"/CategoryList\" className=\"nav-link\">Order Food</NavLink>\r\n                                \r\n                            </li> */}\r\n                            <LoggedOutView currentUser={this.props}/>\r\n                            <LoggedInView currentUser={this.props}/>\r\n\r\n                        </ul>\r\n\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n            <div className=\"view\">\r\n                <div className=\"mask rgba-gradient d-flex justify-content-center align-items-center\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12 white-text text-center mx-auto  mb-5 wow fadeInLeft\" data-wow-delay=\"0.3s\">\r\n                                <h1 className=\"my-3 text-center mx-auto font-weight-bold wow fadeInLeft\">Services, on demand.</h1>\r\n\r\n                                <div className=\"ml-auto mr-auto main-search \">\r\n\r\n                                    <form action=\"\" className=\"search-service\">\r\n                                        <input className=\"search-form form-control form-control-lg\" type=\"text\" placeholder=\"Search Services\" />\r\n                                    </form>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* <ItrPopup isopen={this.state.isopen} hide={this.handleITRPopup}/> */}\r\n        </header>\r\n    )}\r\n}\r\n\r\nconst mapStateToProps = state => ({ ...state.auth});\r\nconst mapDispatchToProps = dispatch => ({\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header)\r\n","import React from 'react'\r\nimport SectionMenu from '../layout/SectionMenu'\r\nimport SectionOffers from '../layout/SectionOffers'\r\nimport Header from '../layout/Header'\r\nimport Footer from '../layout/Footer'\r\nfunction Home() {\r\n    return (\r\n        <>\r\n            <Header />\r\n            <SectionMenu />\r\n            {/* <SectionOffers /> */}\r\n            <Footer />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React, { Component } from 'react'\r\nimport { Button, Form, Col, Alert } from 'react-bootstrap';\r\n\r\nexport default class ListErrors extends Component {\r\n    render() {\r\n        const errors = this.props.errors;\r\n        const statusCode = this.props.statusCode;\r\n        if (errors) {\r\n            return (\r\n                <Alert  variant={statusCode==200?\"success\":\"danger\"}>\r\n                    {errors}\r\n              </Alert>\r\n            );\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { Button, Form, Col, Alert } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom'\r\nimport agent from '../../agent'\r\nimport ListErrors from '../layout/ListErrors';\r\n\r\n\r\nclass Registration extends React.Component {    \r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            userDetails: {},\r\n            errors:\"\",\r\n            statusCode:\"\",\r\n            isLoading:false\r\n        }\r\n    }\r\n    handleChange = (e) => {\r\n        const state = this.state.userDetails\r\n        state[e.target.name] = e.target.value;\r\n        this.setState({ userDetails: state });\r\n        \r\n    }\r\n    submitForm=() => ev =>{\r\n        ev.preventDefault();\r\n        this.setState({ isLoading: true });\r\n        agent.Auth.register(this.state.userDetails).then((res=>{\r\n            this.setState({ errors: res, statusCode:res.statusCode, isLoading:false});\r\n            if(res.statusCode == 200){\r\n                ev.target.reset();\r\n                //this.props.history.push('/login')\r\n            }\r\n        }));\r\n    }\r\n    render() {\r\n\r\n    return (\r\n        <div className=\"login-div\">\r\n            <ListErrors errors={this.state.errors} statusCode={this.state.statusCode} />\r\n            <Form className=\"login-form\" onSubmit={this.submitForm()}>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formBasicEmail\" >\r\n                        <Form.Label>Email address</Form.Label>\r\n                        <Form.Control type=\"email\" name=\"email\" placeholder=\"Enter email\"  onChange={this.handleChange} required/>\r\n                        <Form.Text className=\"text-muted\">\r\n                            We'll never share your email with anyone else.\r\n                    </Form.Text>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formBasicEmail\">\r\n                        <Form.Label>Phone</Form.Label>\r\n                        <Form.Control type=\"phone\" name=\"phone\"  onChange={this.handleChange} required/>\r\n                        <Form.Text className=\"text-muted\">\r\n                            We'll never share your phone no with anyone else.\r\n                    </Form.Text>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n\r\n                <Form.Row>\r\n                    <Form.Group as={Col}  controlId=\"formBasicPassword\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control type=\"password\" name=\"password\" placeholder=\"Password\"  onChange={this.handleChange} required/>\r\n                    </Form.Group>\r\n\r\n                </Form.Row>\r\n                <Form.Row>\r\n                    <Button variant=\"primary\" type=\"submit\" disabled={this.state.isLoading}>\r\n                        \r\n                        {this.state.isLoading ? 'Loading…' : \"Register\"}\r\n                    </Button>\r\n                </Form.Row>\r\n\r\n            </Form>\r\n        </div>\r\n\r\n    )}\r\n}\r\n\r\nexport default Registration\r\n","import {API_ROOT } from \"./BaseUrl\"\r\nimport axios from \"./interceptor-middleware\";\r\n\r\nconst Auth = {\r\n    login: (username, password) =>\r\n    axios.post(`${API_ROOT}/user/login`,  { username, password } ),\r\n  };\r\n  \r\n  export default {Auth};\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\nfunction Loader(props) {\r\n    if(props.show){\r\n        return (\r\n            <Spinner animation=\"border\" role=\"status\" className={props?.relative?\"loader-relative\":\"loader\"}>\r\n            </Spinner>\r\n        )\r\n    }else{\r\n        return null\r\n    }\r\n}\r\n\r\nexport default Loader\r\n","import React, { Component}  from 'react'\r\nimport { Button, Form, Col, Alert } from 'react-bootstrap';\r\nimport { Route, NavLink, Link,useHistory } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport agent from '../../agent'\r\nimport ListErrors from '../layout/ListErrors';\r\nimport user from \"../../models/user\";\r\nimport Loader from '../layout/Loader';\r\nimport {\r\n    UPDATE_FIELD_AUTH,\r\n    LOGIN,\r\n    LOGIN_PAGE_UNLOADED,\r\n    LOGOUT\r\n} from '../../constants/actionTypes';\r\nimport \"./login.css\";\r\nclass Login extends Component {\r\n   // let history = useHistory();\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state ={isShowLoader:false};\r\n        this.changeEmail = ev => {this.props.onChangeEmail(ev.target.value)};\r\n        this.changePassword = ev => {this.props.onChangePassword(ev.target.value)};\r\n    }\r\n    componentDidMount(){\r\n        var body = document.body;\r\n        body.classList.add(\"login-body\");\r\n\r\n        // var dd = document.html;\r\n        // dd.classList.add(\"login-body\");\r\n        this.props.onlogout()\r\n        this.props.onChangeEmail(\"\")\r\n        this.props.onChangePassword(\"\")\r\n    }\r\n    submitForm=ev=> {\r\n        ev.preventDefault();\r\n        this.setState({isShowLoader:true});\r\n        user.Auth.login(this.props.username, this.props.password).then(res=>{\r\n            this.setState({isShowLoader:false});\r\n            console.log(res);\r\n            this.props.onSubmit(res.body);\r\n        }).catch(err=>{\r\n            console.log(err);\r\n        })\r\n    };\r\n\r\n    componentDidUpdate(){\r\n        if(this.props.isLoginSuccess){\r\n            this.props.history.push('/')\r\n        }\r\n        \r\n    }\r\n    \r\n    componentWillUnmount() {\r\n        var body = document.body;\r\n        body.classList.remove(\"login-body\");\r\n\r\n        this.props.onUnload();\r\n      }\r\n    render() {\r\n        const username = this.props.username;\r\n        const password = this.props.password;\r\n        return (\r\n            <div id=\"login\">\r\n           \r\n            <Loader show={this.state.isShowLoader} />\r\n        {/* <Alert key={this.state.errormsg} variant=\"danger\">{this.state.errormsg}</Alert> */}\r\n            <ListErrors errors={this.props.errors} statusCode={this.props.statusCode}/>\r\n            <div className=\"container\">\r\n        <div className=\"card card-container\">\r\n             {/* <img className=\"profile-img-card\" src=\"//lh3.googleusercontent.com/-6V8xOA6M7BA/AAAAAAAAAAI/AAAAAAAAAAA/rzlHcD0KYwo/photo.jpg?sz=120\" alt=\"\" /> */}\r\n            <img id=\"profile-img\" className=\"profile-img-card\" src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\" />\r\n            <p id=\"profile-name\" className=\"profile-name-card\"></p>\r\n            <Form  className=\"form-signin\" onSubmit={this.submitForm}>\r\n                <span id=\"reauth-email\" className=\"reauth-email\"></span>\r\n                <input type=\"text\" autoFocus id=\"inputEmail\" value={username} onChange={this.changeEmail} className=\"form-control\" placeholder=\"Username\" required/>\r\n                <input type=\"password\" id=\"inputPassword\" value={password}  onChange={this.changePassword} className=\"form-control\" placeholder=\"Password\" required/>\r\n                <div id=\"remember\" className=\"checkbox\">\r\n                    <label>\r\n                        <input type=\"checkbox\" value=\"remember-me\"/> Remember me\r\n                    </label>\r\n                </div>\r\n                <Button variant=\"primary btn-signin\" disabled={this.state.isShowLoader} type=\"submit\">{this.state.isShowLoader ? 'Loading…' : \"Sign in\"}</Button>\r\n            </Form>\r\n            <a href=\"#\" className=\"forgot-password\">\r\n                Forgot the password?\r\n            </a>\r\n        </div>\r\n    </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => ({ ...state.auth });\r\nconst mapDispatchToProps = dispatch => ({\r\n    onChangeEmail: value =>\r\n        dispatch({ type: UPDATE_FIELD_AUTH, key: 'username', value }),\r\n    onChangePassword: value =>\r\n        dispatch({ type: UPDATE_FIELD_AUTH, key: 'password', value }),\r\n    onSubmit: (data) =>\r\n        dispatch({ type: LOGIN, payload: data }),\r\n    onUnload: () =>\r\n        dispatch({ type: LOGIN_PAGE_UNLOADED }),\r\n    onlogout:()=>\r\n        dispatch({ type: LOGOUT })\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","import React, { Component } from 'react'\r\nimport { Route,NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport LoggedInView from './LogedInView';\r\nimport LoggedOutView from './LogedOutView';\r\n// import ItrPopup from '../finance-Itr/ItrPopup'\r\n\r\nclass InnerHeader extends Component {\r\n    isopen = false;\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        isopen:false\r\n      }\r\n    }\r\n    handleITRPopup = () =>{\r\n        this.setState({\r\n          isopen:this.state.isopen?false:true\r\n        })\r\n      }\r\n    render(){\r\n    return (\r\n        <header>\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark top-nav-collapse\">\r\n                <div className=\"container\">\r\n                <NavLink className=\"navbar-brand\" to=\"/\"> <h2>AA2 Mutualhelp</h2></NavLink>\r\n\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent-7\"\r\n                        aria-controls=\"navbarSupportedContent-7\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent-7\">\r\n                        <ul className=\"navbar-nav ml-auto\">\r\n                            {/* <li className=\"nav-item\">\r\n                            <NavLink aactiveClassName=\"active\" className=\"nav-link\" to=\"/\">Home</NavLink> */}\r\n\r\n                                {/* <a className=\"nav-link\" href=\"#\">Home\r\n                    <span className=\"sr-only\">(current)</span>\r\n                                </a> */}\r\n                            {/* </li> */}\r\n                            {/* <li className=\"nav-item\" onClick={this.handleITRPopup}>\r\n                                <a className=\"nav-link\" onClick={this.handleITRPopup}>File ITR</a>\r\n                            </li> */}\r\n                            {/* <li className=\"nav-item\"> */}\r\n                                {/* <a className=\"nav-link\" href=\"#\">Order Food</a> */}\r\n                                {/* <NavLink aactiveClassName=\"active\" to=\"/CategoryList\" className=\"nav-link\">Order Food</NavLink>\r\n                            </li> */}\r\n                            {/* <li className=\"nav-item\">\r\n                            <NavLink className=\"nav-link\" to=\"/login\">Login</NavLink>\r\n\r\n                            </li> */}\r\n                            <LoggedOutView currentUser={this.props}/>\r\n                            <LoggedInView currentUser={this.props}/>\r\n\r\n                        </ul>\r\n\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n            {/* <ItrPopup isopen={this.state.isopen} hide={this.handleITRPopup}/> */}\r\n        </header>\r\n    )}\r\n\r\n}\r\nconst mapStateToProps = state => ({ ...state.auth});\r\nconst mapDispatchToProps = dispatch => ({\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InnerHeader)\r\n","import React,{useEffect} from 'react'\r\nimport { useSelector } from \"react-redux\";\r\nimport { Col, Nav} from 'react-bootstrap';\r\nimport { LinkContainer} from 'react-router-bootstrap';\r\nimport { useLocation } from 'react-router-dom'\r\nexport default function Leftbar() {\r\n    const auth = useSelector(state => state.auth);\r\n    const location = useLocation();\r\n    \r\n    return (\r\n        <div className=\"sidebar\" data-color=\"white\" data-active-color=\"danger\">\r\n          <div className=\"logo\">\r\n            <a href=\"#\" className=\"simple-text logo-mini\">\r\n              <div className=\"logo-image-small\">\r\n                <img src={process.env.PUBLIC_URL+\"/assets/img/logo-small.png\"} />\r\n              </div>\r\n            </a>\r\n            <a href=\"#\" className=\"simple-text logo-normal\">\r\n              {auth.username}\r\n            </a>\r\n          </div>\r\n          <div className=\"sidebar-wrapper\">\r\n            <ul className=\"nav\">\r\n              <li className={location.pathname == \"/\"?\"active\":\"\"}>\r\n                {/* <a href=\"./dashboard.html\"> */}\r\n                <LinkContainer to=\"/\">\r\n                <Nav.Link>\r\n                  <i className=\"nc-icon nc-bank\"></i>\r\n                  <p>Dashboard</p>\r\n                  </Nav.Link>\r\n                  </LinkContainer>\r\n                {/* </a> */}\r\n              </li>\r\n              <li className={location.pathname == \"/memberGroup\" || location.pathname == \"/member\" || location.pathname == \"/member\" || location.pathname == \"/addMember\"?\"active\":\"\"}>\r\n                <a data-toggle=\"collapse\" aria-expanded=\"false\" href=\"#homeSubmenu\" className=\"dropdown-toggle\">\r\n                <i className=\"nc-icon nc-badge\"></i>\r\n                  Master Record\r\n                </a>\r\n                <ul className=\"list-unstyled collapse\" id=\"homeSubmenu\" >\r\n                  <li className={location.pathname == \"/memberGroup\" || location.pathname == \"/addMemberGroup\"?\"active\":\"\"}>\r\n                  <LinkContainer to=\"/memberGroup\">\r\n                    <Nav.Link>\r\n                    Member Group\r\n                    </Nav.Link>\r\n                  </LinkContainer>\r\n\r\n                    \r\n                  </li>\r\n                  <li className={location.pathname == \"/member\" || location.pathname == \"/addMember\"?\"active\":\"\"}>\r\n                  <LinkContainer to=\"/member\">\r\n                    <Nav.Link>\r\n                    Members\r\n                    </Nav.Link>\r\n                  </LinkContainer>\r\n\r\n                  </li>\r\n                </ul>\r\n              </li>\r\n              <li \r\n              className={location.pathname == \"/emiCalculator\" \r\n              || location.pathname == \"/scheme\" \r\n              || location.pathname == \"/loanApplication\" \r\n              || location.pathname == \"/loanApproval\"\r\n              || location.pathname == \"/addScheme\"\r\n              || location.pathname == \"/allApplications\"\r\n              || location.pathname == \"/disburseLoan\"\r\n\r\n              ?\"active\":\"\"}>\r\n                <a data-toggle=\"collapse\" aria-expanded=\"false\" href=\"#groupLoan\" className=\"dropdown-toggle\">\r\n                <i className=\"nc-icon nc-umbrella-13\"></i>\r\n                  Group Loan\r\n                </a>\r\n                <ul className=\"list-unstyled collapse\" id=\"groupLoan\" >\r\n                <li className={location.pathname == \"/emiCalculator\"?\"active\":\"\"}>\r\n                    <LinkContainer to=\"/emiCalculator\">\r\n                      <Nav.Link href=\"#\">Calculator</Nav.Link>\r\n                    </LinkContainer>\r\n                  </li>\r\n                  <li className={location.pathname == \"/scheme\" || location.pathname == \"/addScheme\"?\"active\":\"\"}>\r\n                  <LinkContainer to=\"/scheme\">\r\n                    <Nav.Link eventKey=\"link-1\">Scheme</Nav.Link>\r\n                  </LinkContainer>\r\n                  </li>\r\n                  <li className={location.pathname == \"/loanApplication\"?\"active\":\"\"}>\r\n                    <LinkContainer to=\"/loanApplication\">\r\n                      <Nav.Link eventKey=\"link-2\">Application</Nav.Link>\r\n                    </LinkContainer>\r\n                  </li>\r\n                  {(auth.role==\"checker\"||auth.role==\"admin\")? <li className={location.pathname == \"/loanApproval\"?\"active\":\"\"}>\r\n\r\n                    <LinkContainer to=\"/loanApproval\">\r\n                      <Nav.Link eventKey=\"link-2\">Approve Application</Nav.Link>\r\n                    </LinkContainer>\r\n                  </li>:\"\"}\r\n                  {(auth.role==\"checker\"||auth.role==\"admin\")?<li className={location.pathname == \"/disburseLoan\"?\"active\":\"\"}>\r\n                    <LinkContainer to=\"/disburseLoan\">\r\n                      <Nav.Link eventKey=\"link-2\">Disbure Application</Nav.Link>\r\n                      </LinkContainer>\r\n                    </li>:\"\"}\r\n                    <li className={location.pathname == \"/allApplications\"?\"active\":\"\"}>\r\n                      <LinkContainer to=\"/allApplications\">\r\n                        <Nav.Link eventKey=\"link-2\">Loan Applications</Nav.Link>\r\n                        </LinkContainer>\r\n\r\n                    </li>\r\n                </ul>\r\n              </li>              \r\n              {/* <li className={location.pathname == \"/processingFee\"?\"active\":\"\"}>\r\n              <LinkContainer to=\"/\">\r\n                      <Nav.Link href=\"#\"><i className=\"nc-icon nc-paper\"></i>Processing Fee</Nav.Link>\r\n                </LinkContainer>\r\n              </li>              \r\n              <li>\r\n              <LinkContainer to=\"/\">\r\n                      <Nav.Link href=\"#\"><i className=\"nc-icon nc-credit-card\"></i>Expenses</Nav.Link>\r\n                </LinkContainer>\r\n\r\n              </li>     */}          \r\n              <li className={location.pathname == \"/dueEmis\"?\"active\":\"\"}>\r\n              <LinkContainer to=\"/dueEmis\">\r\n                      <Nav.Link href=\"#\"><i className=\"nc-icon nc-money-coins\"></i> Payment to collect</Nav.Link>\r\n                </LinkContainer>\r\n\r\n              </li>              \r\n            </ul>\r\n          </div>\r\n        </div>        \r\n        // // <Col md={2} id=\"sidebar-col\" className=\"pr-0\">\r\n        //     <nav id=\"sidebar\">\r\n        //         {/* <div className=\"sidebar-header\">\r\n        //             <h5>AA2 MutualHelp</h5>\r\n        //         </div> */}\r\n        //         <Nav className=\"list-unstyled components flex-column\" as=\"ul\" >\r\n        //         <Nav.Item as=\"li\" className=\"active\">\r\n        //         <LinkContainer to=\"/\">\r\n        //         <Nav.Link>\r\n        //              Dashboard\r\n        //     </Nav.Link>\r\n        //     </LinkContainer>\r\n        //         </Nav.Item>\r\n        //             <Nav.Item as=\"li\" >\r\n                   \r\n        //                 <Nav.Link href=\"#homeSubmenu\" className=\"dropdown-toggle\" data-toggle=\"collapse\" aria-expanded=\"false\">Master Record</Nav.Link>\r\n                        \r\n        //                 {/* <ul class=\"collapse list-unstyled\" id=\"homeSubmenu\"> */}\r\n        //                 <Nav class=\"collapse list-unstyled\" id=\"homeSubmenu\" as=\"ul\">\r\n        //                     <Nav.Item as=\"li\">\r\n        //                     <LinkContainer to=\"/memberGroup\">\r\n        //                         <Nav.Link href=\"/home\">Member Group</Nav.Link>\r\n        //                         </LinkContainer>\r\n        //                         {/* <NavLink to=\"/memberGroup\">Member Group</NavLink> */}\r\n        //                     </Nav.Item>\r\n        //                     <Nav.Item as=\"li\">\r\n        //                     <LinkContainer to=\"/member\">\r\n        //                         <Nav.Link eventKey=\"link-1\">Members</Nav.Link>\r\n        //                     </LinkContainer>\r\n        //                     </Nav.Item>\r\n        //                 </Nav>\r\n        //             </Nav.Item>\r\n        //             <Nav.Item as=\"li\" >\r\n        //                 <Nav.Link href=\"#groupLoan\" data-toggle=\"collapse\" aria-expanded=\"false\" className=\"dropdown-toggle\">Group Loan</Nav.Link>\r\n        //                 {/* <ul class=\"collapse list-unstyled\" id=\"homeSubmenu\"> */}\r\n        //                 <Nav class=\"collapse list-unstyled\" id=\"groupLoan\" as=\"ul\">\r\n        //                     <Nav.Item as=\"li\">\r\n        //                     <LinkContainer to=\"/emiCalculator\">\r\n        //                         <Nav.Link href=\"#\">Calculator</Nav.Link>\r\n        //                         </LinkContainer>\r\n        //                     </Nav.Item>\r\n        //                     <Nav.Item as=\"li\">\r\n        //                     <LinkContainer to=\"/scheme\">\r\n        //                         <Nav.Link eventKey=\"link-1\">Scheme</Nav.Link>\r\n        //                         </LinkContainer>\r\n        //                     </Nav.Item>\r\n        //                     <Nav.Item as=\"li\">\r\n        //                     <LinkContainer to=\"/loanApplication\">\r\n        //                         <Nav.Link eventKey=\"link-2\">Application</Nav.Link>\r\n        //                         </LinkContainer>\r\n        //                     </Nav.Item>\r\n        //                     {(auth.role==\"checker\"||auth.role==\"admin\")?<Nav.Item as=\"li\">\r\n        //                     <LinkContainer to=\"/loanApproval\">\r\n        //                         <Nav.Link eventKey=\"link-2\">Approve Application</Nav.Link>\r\n        //                         </LinkContainer>\r\n        //                     </Nav.Item>:\"\"}\r\n        //                     {(auth.role==\"checker\"||auth.role==\"admin\")?<Nav.Item as=\"li\">\r\n        //                     <LinkContainer to=\"/disburseLoan\">\r\n        //                         <Nav.Link eventKey=\"link-2\">Disbure Application</Nav.Link>\r\n        //                         </LinkContainer>\r\n        //                     </Nav.Item>:\"\"}\r\n        //                     <Nav.Item as=\"li\">\r\n        //                     <LinkContainer to=\"/allApplications\">\r\n        //                         <Nav.Link eventKey=\"link-2\">Loan Applications</Nav.Link>\r\n        //                         </LinkContainer>\r\n        //                     </Nav.Item>\r\n\r\n        //                 </Nav>\r\n        //             </Nav.Item>\r\n\r\n        //             <Nav.Item as=\"li\" >\r\n        //                 <Nav.Link href=\"#processingFee\" data-toggle=\"collapse\" aria-expanded=\"false\" className=\"dropdown-toggle\">Processing Fee</Nav.Link>\r\n        //                 {/* <ul class=\"collapse list-unstyled\" id=\"homeSubmenu\"> */}\r\n        //                 <Nav class=\"collapse list-unstyled\" id=\"processingFee\" as=\"ul\">\r\n        //                     <Nav.Item as=\"li\">\r\n        //                         <Nav.Link href=\"#\">List Processing Fee</Nav.Link>\r\n        //                     </Nav.Item>\r\n\r\n        //                 </Nav>\r\n        //             </Nav.Item>\r\n\r\n        //             <Nav.Item as=\"li\" >\r\n        //                 <Nav.Link href=\"#expense\" data-toggle=\"collapse\" aria-expanded=\"false\" className=\"dropdown-toggle\">Expense</Nav.Link>\r\n        //                 {/* <ul class=\"collapse list-unstyled\" id=\"homeSubmenu\"> */}\r\n        //                 <Nav class=\"collapse list-unstyled\" id=\"expense\" as=\"ul\">\r\n        //                     <Nav.Item as=\"li\">\r\n        //                         <Nav.Link href=\"#\">List Expense</Nav.Link>\r\n        //                     </Nav.Item>\r\n\r\n        //                 </Nav>\r\n        //             </Nav.Item>\r\n\r\n        //             <Nav.Item as=\"li\" >\r\n        //                 <Nav.Link href=\"#payments\" data-toggle=\"collapse\" aria-expanded=\"false\" className=\"dropdown-toggle\">Payment to collect</Nav.Link>\r\n        //                 {/* <ul class=\"collapse list-unstyled\" id=\"homeSubmenu\"> */}\r\n        //                 <Nav class=\"collapse list-unstyled\" id=\"payments\" as=\"ul\">\r\n        //                     <Nav.Item as=\"li\">\r\n        //                         <LinkContainer to=\"/dueEmis\">\r\n        //                             <Nav.Link href=\"#\">Payment to collect(Loan)</Nav.Link>\r\n        //                         </LinkContainer>\r\n        //                     </Nav.Item>\r\n\r\n        //                 </Nav>\r\n        //             </Nav.Item>\r\n        //         </Nav>\r\n        //     </nav>\r\n        // </Col>\r\n    )\r\n}\r\n","import React,{useState} from 'react'\r\nimport {  Navbar, Nav } from 'react-bootstrap';\r\nimport { useSelector,useDispatch } from \"react-redux\";\r\nimport { useHistory } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport {LOGOUT} from '../../constants/actionTypes';\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nexport default function TopNav(props) {\r\n  // const listRouteName = {\r\n  //                         \"/\":\"Dashboard\",\r\n  //                         \"/memberGroup\":\"Member Group\",\r\n  //                         \"/addMemberGroup\":\"Member Group\",\r\n  //                         \"/member\":\"Member\",\r\n  //                         \"/addMember\":\"Member\",\r\n  //                         \"/emiCalculator\":\"Calculate EMI\"\r\n  //                       }\r\n  const location = useLocation();\r\n  const auth = useSelector(state => state.auth);\r\n  const common = useSelector(state => state.common);\r\n  const dispatch = useDispatch();\r\n  let history = useHistory();\r\nconst [navClick,setNevClick] = useState(false);\r\n    return (\r\n        <nav className={navClick?\"navbar navbar-expand-lg navbar-absolute fixed-top bg-white\":\"navbar navbar-expand-lg navbar-absolute fixed-top navbar-transparent\"} >\r\n        <div className=\"container-fluid\">\r\n          <div className=\"navbar-wrapper\">\r\n            <div className=\"navbar-toggle\">\r\n              <button type=\"button\" className=\"navbar-toggler\">\r\n                <span className=\"navbar-toggler-bar bar1\"></span>\r\n                <span className=\"navbar-toggler-bar bar2\"></span>\r\n                <span className=\"navbar-toggler-bar bar3\"></span>\r\n              </button>\r\n            </div>\r\n            <a className=\"navbar-brand\" href=\"#\">{common.page}</a>\r\n          </div>\r\n          <button onClick={()=>setNevClick(!navClick)} className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navigation\" aria-controls=\"navigation-index\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-bar navbar-kebab\"></span>\r\n            <span className=\"navbar-toggler-bar navbar-kebab\"></span>\r\n            <span className=\"navbar-toggler-bar navbar-kebab\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse justify-content-end\" id=\"navigation\">\r\n            <form>\r\n              <div className=\"input-group no-border\">\r\n                <input type=\"text\" value=\"\" className=\"form-control\" placeholder=\"Search...\"/>\r\n                <div className=\"input-group-append\">\r\n                  <div className=\"input-group-text\">\r\n                    <i className=\"nc-icon nc-zoom-split\"></i>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </form>\r\n            <ul className=\"navbar-nav\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link btn-magnify\" href=\"#\">\r\n                  <i className=\"nc-icon nc-layout-11\"></i>\r\n                  <p>\r\n                    <span className=\"d-lg-none d-md-block\">Stats</span>\r\n                  </p>\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item btn-rotate dropdown\">\r\n                <a className=\"nav-link dropdown-toggle\" href=\"http://example.com\" id=\"navbarDropdownMenuLink\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                  <i className=\"nc-icon nc-bell-55\"></i>\r\n                  <p>\r\n                    <span className=\"d-lg-none d-md-block\"></span>\r\n                  </p>\r\n                </a>\r\n                <div className=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"navbarDropdownMenuLink\">\r\n                  <Link className=\"dropdown-item\" to={\"/login\"} >Logout</Link>\r\n                  {/* <a className=\"dropdown-item\" href=\"#\">Another action</a>\r\n                  <a className=\"dropdown-item\" href=\"#\">Something else here</a> */}\r\n                </div>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link btn-rotate\" href=\"#\">\r\n                  <i className=\"nc-icon nc-settings-gear-65\"></i>\r\n                  <p>\r\n                    <span className=\"d-lg-none d-md-block\">Account</span>\r\n                  </p>\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n\r\n        // <Navbar collapseOnSelect expand=\"lg\" bg=\"info\" variant=\"dark\">\r\n               \r\n        //         <h4 id=\"logo-web\" className=\"mr-4\">AA2 MutualHelp</h4>\r\n        //     <button type=\"button\" onClick={props.toggleSidebar} class=\"btn btn-dark\">\r\n        //         <i class=\"fas fa-align-left\"></i>\r\n        //     </button>\r\n        //     <h4 id=\"logo-mobile\" className=\"\">AA2 MutualHelp</h4>\r\n        //     <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n        //     <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n        //         <Nav className=\"ml-auto\">\r\n        //             <Nav.Link href=\"#\">{auth.username}</Nav.Link>\r\n        //             <Nav.Link eventKey={2} onClick={logout}>\r\n        //                 Logout\r\n        //             </Nav.Link>\r\n        //         </Nav>\r\n        //     </Navbar.Collapse>\r\n        // </Navbar>\r\n    )\r\n}\r\n","import React, { Component } from 'react';\r\nimport ListErrors from './ListErrors';\r\nclass ErrorBoundary extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { hasError: false };\r\n    }\r\n\r\n    static getDerivedStateFromError(error) {\r\n        // Update state so the next render will show the fallback UI.\r\n        return { hasError: true };\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        // You can also log the error to an error reporting service\r\n        //logErrorToMyService(error, errorInfo);\r\n        console.log(error,errorInfo);\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            // You can render any custom fallback UI\r\n            return <ListErrors errors=\"Something went wrong. Please discuss with developer!\" statusCode=\"401\"/>\r\n            \r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","import React, { useState, useEffect } from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport { useSelector,useDispatch } from \"react-redux\";\r\nimport InnerHeader from './InnerHeader';\r\nimport Footer from './Footer';\r\nimport Leftbar from './Leftbar';\r\nimport TopNav from './TopNav';\r\nimport { useHistory } from 'react-router';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport ErrorBoundary from './ErrorBoundary';\r\nconst InnerLayout = ({ component: Component, ...rest }) => {\r\n    const auth = useSelector(state => state.auth);\r\n    const history = useHistory();\r\n    const [showSidebar, setshowSidebar] = useState(true)\r\n    useEffect(() => {\r\n        setshowSidebar(window.innerWidth <= 768 ? false : true);\r\n        checkLogin();\r\n    }, [Component]);\r\n    const toggleSidebar = () => {\r\n\r\n        console.log(window);\r\n        setshowSidebar(showSidebar ? false : true)\r\n        // this.setState({\r\n        //   isopen:this.state.isopen?false:true\r\n        // })\r\n    }\r\n    const checkLogin = () =>{\r\n        let jwt = \"\";\r\n         jwt = sessionStorage.getItem(\"jwt\");\r\n         console.log(jwt);\r\n         if(jwt==\"\" || !auth.hasOwnProperty(\"username\")){\r\n             history.push(\"/login\");\r\n         }\r\n    }\r\n    return (\r\n        <Route {...rest} render={props => (\r\n            <>\r\n        <div className=\"wrapper \">\r\n        <Leftbar/>\r\n        <div className=\"main-panel\">\r\n            <TopNav toggleSidebar={toggleSidebar} />\r\n            <ErrorBoundary>\r\n          <Component {...props} />\r\n          </ErrorBoundary>\r\n        </div>\r\n      </div>\r\n            \r\n            </>\r\n        )} />)\r\n}\r\n\r\nexport default InnerLayout\r\n","import React,{useEffect,useState} from 'react'\r\nimport agent from '../../agent'\r\nimport {useHistory} from 'react-router-dom';\r\nimport { Table, Nav, Pagination,Button,Modal } from 'react-bootstrap';\r\n\r\nfunction UserOrderHistory(props) {\r\n    useEffect(() => {\r\n        getOrders()\r\n  },[])\r\n  const [orderHistory, setorderHistory] = useState([])\r\n  const [selectedorder,setselectedorder] = useState([]);\r\n  const [isopenpopup, setisopenpopup] = useState(false)\r\n  const handleClose = () => setisopenpopup(false);\r\n\r\n  const viewOrderPopUp = (record)=>{\r\n      setselectedorder(record);\r\n      setisopenpopup(true);\r\n  }\r\n  let history = useHistory();\r\n  const getOrders =()=>{\r\n      props.showLoader(true);\r\n      agent.Order.getOrderHistoryByUserEmail().then((res=>{\r\n          props.showLoader(false);\r\n          console.log(res.body.record)\r\n\r\n          setorderHistory(res.body.record);\r\n      }),(err)=>{\r\n          console.log(err.response.body.message);\r\n          if(err.response.body.message ==\"jwt must be provided\"){\r\n              console.log(\"login required\");\r\n            history.push(\"/login\");\r\n          }\r\n          props.showLoader(false);\r\n\r\n      });\r\n  }\r\n\r\n    return (\r\n        <>\r\n        <Table responsive>\r\n        <thead>\r\n            <tr>\r\n                <th>#</th>\r\n                <th>Customer</th>\r\n                <th>Date</th>\r\n                <th>Details</th>\r\n                <th>Number</th>\r\n                <th>Action</th>\r\n\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            {orderHistory.map((record,index)=>\r\n            <tr>\r\n                <td>{index+1}</td>\r\n                <td>{record.shipping.name}</td>\r\n                <td>{record.datePlaced}</td>\r\n                <td>{record.items.map(itm=><span>{itm.item.title} Quantity:{itm.quantity}<br></br></span>)}</td>\r\n                <td>{record.shipping.phone}</td>\r\n\r\n                <td>\r\n                    <Button type=\"button\" onClick={()=>viewOrderPopUp(record)}>View</Button>\r\n                </td>\r\n            </tr>\r\n\r\n            )}\r\n        </tbody>\r\n    </Table>\r\n    <Modal show={isopenpopup} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Order Details</Modal.Title>\r\n        </Modal.Header>\r\n            <Modal.Body>\r\n                <Table striped bordered hover responsive>\r\n                    <thead><tr><td colSpan=\"4\"><h4>Shipping Details</h4></td></tr></thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td><b>Name:</b> {selectedorder?.shipping?.name}</td>\r\n                            <td><b>Address:</b> {selectedorder?.shipping?.address}</td>\r\n                            <td><b>Phone:</b> {selectedorder?.shipping?.phone}</td>\r\n                            <td><b>City:</b> {selectedorder?.shipping?.city}</td>\r\n\r\n                        </tr>\r\n                    </tbody>\r\n                </Table>\r\n                <Table striped bordered hover responsive>\r\n                    <thead><tr><td colSpan=\"4\"><h4>Products</h4></td></tr></thead>\r\n                    <tbody>{selectedorder?.items?.map(itm=><tr>\r\n                    <td><b>Title:</b> {itm.item.title}</td>\r\n                    <td><b>Description:</b> {itm.item.description}</td>\r\n                    <td><b>Quantity:</b> {itm.quantity}</td>\r\n                    <td><b>Total Price:</b> {parseInt(itm.quantity)*itm.perItemPrice}</td>\r\n                    </tr>)}\r\n                    </tbody>\r\n                </Table>\r\n\r\n                <Table striped bordered hover responsive>\r\n                <thead><tr><td colSpan=\"4\"><h4>Bill Details</h4></td></tr></thead>\r\n                    <tbody>\r\n                        {selectedorder.isDiscountApplied?<tr>\r\n                            <td>\r\n                                <b>\r\n                                Prime Member Discount:\r\n                                </b>\r\n                            </td>\r\n                            <td>10%</td>\r\n                        </tr>:\"\"}\r\n                        <tr>\r\n                            <td>\r\n                                <b>Total Bill Amount</b>\r\n                            </td>\r\n                            <td>{selectedorder.totalBillAmount}</td>\r\n                        </tr>\r\n                    </tbody>\r\n\r\n                </Table>\r\n\r\n            </Modal.Body>\r\n      </Modal>\r\n\r\n    </>\r\n)\r\n}\r\n\r\nexport default UserOrderHistory\r\n","import React,{useState} from 'react'\r\nimport { ListGroup, Container, Row, Col, Card, Button, CardColumns,Toast,Alert } from 'react-bootstrap';\r\n// import CategoryManagement from '../Admin/CategoryManagement';\r\nimport Loader from '../../layout/Loader';\r\nimport UserOrderHistory from '../UserOrderHistory';\r\nfunction UserAction(props) {\r\n\r\nconst [isShowLoader, setisShowLoader] = useState(false)\r\nconst showLoader =(value)=>{\r\n    setisShowLoader(value);\r\n}\r\nreturn (\r\n    <>\r\n    <Container fluid>\r\n        <Row>\r\n            <Col md={3} className=\"p-4\">\r\n                <ListGroup>\r\n                    {/* <ListGroup.Item  active action>Category Management</ListGroup.Item>\r\n                    <ListGroup.Item  action>Product Management</ListGroup.Item> */}\r\n                    <ListGroup.Item  action active>Order History</ListGroup.Item>\r\n                    {/* <ListGroup.Item  action>Finance</ListGroup.Item> */}\r\n                </ListGroup>\r\n            </Col>\r\n            <Col md={9} className=\"p-4 production-col\" >\r\n                <Loader show={isShowLoader}/>\r\n                {/* <CategoryManagement showLoader={showLoader}/> */}\r\n                <UserOrderHistory showLoader={showLoader}/>\r\n            </Col>\r\n        </Row>\r\n    </Container>\r\n</>\r\n)\r\n\r\n}\r\nexport default UserAction\r\n","import {API_ROOT} from \"./BaseUrl\"\r\nimport axios from \"./interceptor-middleware\";\r\n//const url = '/memberGroups/';\r\n\r\nconst MemberGroupModel = {\r\n  getMemberGroups(){\r\n    return axios.get(`${API_ROOT}/memberGroups/entry`)\r\n  },\r\n  saveMemberGroups(data){\r\n    return axios.post(`${API_ROOT}/memberGroups/entry`,data)\r\n  },\r\n  saveImage(file){\r\n    return axios.post(`${API_ROOT}/member/image-upload`,file)\r\n  }\r\n  }\r\n    export default {MemberGroupModel};","import React, { useEffect, useState } from 'react';\r\nimport { Table, Button,ProgressBar } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport masterRecord from '../../../models/masterRecord';\r\nimport moment from 'moment';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { CHANGE_PAGE } from '../../../constants/actionTypes'\r\nfunction MemberGroup(props) {\r\n    const dispatch = useDispatch();\r\n    const [isShowLoader, setisShowLoader] = useState(0)\r\n    const [memberGroupRecords, setMemberGroupsRecords] = useState([]);\r\n    useEffect(() => {\r\n        setisShowLoader(10);\r\n        getMemberGroup();\r\n        dispatch({ type: CHANGE_PAGE, page: \"All Members Groups\" });\r\n    }, [])\r\n\r\n    const getMemberGroup = () => {\r\n        setisShowLoader(30);\r\n        masterRecord.MemberGroupModel.getMemberGroups().then(res => {\r\n            setisShowLoader(90);\r\n            if (res.statusCode == 200) {\r\n                setMemberGroupsRecords(res.body.message);\r\n            } else {\r\n                setMemberGroupsRecords([]);\r\n            }\r\n            setisShowLoader(100);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div class=\"content\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-12\">\r\n                        <Link to=\"/addMemberGroup\">\r\n                            <Button variant=\"info\" active>\r\n                                <i className=\"nc-icon nc-simple-add mr-2\"></i>\r\n                                Member Group\r\n                            </Button>\r\n                        </Link>\r\n\r\n                        <div class=\"card\">\r\n                            <div class=\"card-body\">\r\n                                <div class=\"table-responsive\">\r\n                                    <Table className=\" table\">\r\n                                        \r\n                                        <thead className=\"bg-primary\">\r\n                                            <tr>\r\n                                                <th>Group Code</th>\r\n                                                <th>Name</th>\r\n                                                <th>Remark</th>\r\n                                                <th>Created At</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {memberGroupRecords.map((group, id) => (<tr>\r\n                                                <td>{group.group_code}</td>\r\n                                                <td>{group.group_name}</td>\r\n                                                <td>{group.remark}</td>\r\n                                                <td>{moment(group.created_at).format(\"DD-MM-YYYY HH:SS\")}</td>\r\n                                            </tr>))}\r\n                                        </tbody>\r\n                                    </Table>\r\n                                    {isShowLoader<100?<div style={{ top: '50%',position:\"relative\" }}><ProgressBar style={{\"position\":\"relative\",\"width\":\"30%\",\"left\":\"40%\"}} striped variant=\"success\" now={isShowLoader} label={`${isShowLoader}%`} /></div>:\"\"}\r\n                                    \r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default MemberGroup;","import React, { useState, useEffect } from 'react';\r\nimport { Button, Form, Container, Row, Col, Toast, Alert } from 'react-bootstrap';\r\nimport { useFormik } from 'formik';\r\nimport masterRecord from '../../../models/masterRecord';\r\nimport Loader from '../../layout/Loader';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { CHANGE_PAGE } from '../../../constants/actionTypes'\r\n\r\nfunction AddMemberGroup(props) {\r\n  const auth = useSelector(state => state.auth);\r\n  const dispatch = useDispatch();\r\n  const [values, setValues] = useState({});\r\n  const [isShowLoader, setisShowLoader] = useState(false)\r\n  const [showToast, setShowToast] = useState({ isShow: false, type: \"\", message: \"\" })\r\n  useEffect(() => {\r\n    dispatch({ type: CHANGE_PAGE, page: \"Add Member Group\" });\r\n  }, [])\r\n  const handleAlertShow = (obj) => {\r\n    setShowToast(obj);\r\n    setTimeout(() => {\r\n      setShowToast({ isShow: false, type: \"\", message: \"\" })\r\n    }, 2000);\r\n  }\r\n  const validate = values => {\r\n    const errors = {};\r\n    if (!values.group_code) {\r\n      errors.group_code = 'Group Code is Required';\r\n    }\r\n    return errors;\r\n  };\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      group_code: '',\r\n      group_name: '',\r\n      remark: '',\r\n      user_id: auth.id\r\n    },\r\n    validate,\r\n    onSubmit: async (values) => {\r\n      setisShowLoader(true);\r\n      try {\r\n        let response = await masterRecord.MemberGroupModel.saveMemberGroups(values);\r\n        setisShowLoader(false);\r\n        if (response.statusCode == 200) {\r\n          handleAlertShow({ isShow: true, type: \"bg-success\", message: \"Member Group Created Successfully!\" })\r\n          formik.resetForm();\r\n        } else {\r\n          handleAlertShow({ isShow: true, type: \"bg-danger\", message: \"Something went wrong\" })\r\n\r\n        }\r\n\r\n      } catch (error) {\r\n        setisShowLoader(false);\r\n        handleAlertShow({ isShow: true, type: \"bg-danger\", message: error.response.body.message })\r\n      }\r\n    },\r\n    handleChange: () => {\r\n      setValues(prevValues => ({\r\n        ...prevValues,\r\n        // we use the name to tell Formik which key of `values` to update\r\n        [values.target.name]: values.target.value\r\n      }))\r\n    },\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div class=\"content\">\r\n        {/* <Toast key={1} autohide delay={3000} show={showToast.isShow} onClose={() => setShowToast({ isShow: false, type: \"\", message: \"\" })} className={\"loader \" + (showToast.type)} >\r\n          <Toast.Header>\r\n            <strong className=\"me-auto\">{showToast.type == \"bg-danger\" ? \"Error\" : \"Success\"} Message</strong>\r\n          </Toast.Header>\r\n          <Toast.Body className=\"Dark\">\r\n            {showToast.message}\r\n          </Toast.Body>\r\n        </Toast> */}\r\n        <Alert dismissible delay={3000} show={showToast.isShow} onClose={() => setShowToast({ isShow: false, type: \"\", message: \"\" })} key={showToast.type == \"bg-danger\" ? \"danger\" : \"success\"} variant={showToast.type == \"bg-danger\" ? \"danger\" : \"success\"}>\r\n          {showToast.message}\r\n        </Alert>\r\n        <Loader show={isShowLoader} />\r\n        <div class=\"row\">\r\n          <div class=\"col-md-8\">\r\n            <div class=\"card card-user\">\r\n              {/* <div class=\"card-header\">\r\n                <h5 class=\"card-title\">Add Member Group</h5>\r\n              </div> */}\r\n              <div class=\"card-body\">\r\n                <Form onSubmit={formik.handleSubmit}>\r\n                  <Form.Group className=\"mb-3 form-group required\" controlId=\"formBasicEmail\">\r\n                    <Form.Label>Group Code</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      name=\"group_code\"\r\n                      placeholder=\"Enter group code\"\r\n                      onChange={formik.handleChange}\r\n                      value={formik.values.group_code}\r\n\r\n                    />\r\n                    {formik.touched.group_code && formik.errors.group_code ? (\r\n                      <div class=\"text-danger\">{formik.errors.group_code}</div>\r\n                    ) : null}\r\n\r\n                  </Form.Group>\r\n\r\n                  <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                    <Form.Label>Group Name</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      name=\"group_name\"\r\n                      placeholder=\"Enter group name\"\r\n                      onChange={formik.handleChange}\r\n                      value={formik.values.group_name}\r\n                    />\r\n                  </Form.Group>\r\n\r\n                  <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control as=\"textarea\" rows={3} name=\"remark\"\r\n                      onChange={formik.handleChange}\r\n                      value={formik.values.remark} />\r\n                  </Form.Group>\r\n                  <Button variant=\"primary\" type=\"submit\">\r\n                    Save\r\n                  </Button>\r\n\r\n                </Form>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </>\r\n\r\n  );\r\n}\r\n\r\nexport default AddMemberGroup;","import {requests, superagent, API_ROOT} from \"./BaseUrl\"\r\nimport axios from \"./interceptor-middleware\";\r\n//const url = '/memberGroups/';\r\n\r\nconst MemberDetailModel = {\r\n  getMemberDetailsData(member_id=\"all\"){\r\n    return axios.get(`${API_ROOT}/member/entry/${member_id}`)\r\n  },\r\n  saveMemberDetails(data){\r\n    return axios.post(`${API_ROOT}/member/entry`,data)\r\n\r\n  },\r\n  deleteMember(id){\r\n    return axios.delete(`${API_ROOT}/member/entry/${id}`)\r\n  },  \r\n  editMember(data,id){\r\n    return axios.put(`${API_ROOT}/member/entry/${id}`,data)\r\n  }  \r\n    \r\n  }\r\n    export default {MemberDetailModel};","import React, { useState, useEffect } from 'react';\r\nimport { Button, Form, Row, Col, Alert } from 'react-bootstrap';\r\nimport DatePicker from \"react-datepicker\";\r\nimport { useFormik } from 'formik';\r\nimport memberDetails from \"../../../models/memberDetails\"\r\nimport masterRecord from '../../../models/masterRecord';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { CHANGE_PAGE } from '../../../constants/actionTypes'\r\nimport Loader from '../../layout/Loader';\r\nimport {API_ROOT} from \"../../../models/BaseUrl\"\r\n//import \"react-datepicker/dist/react-datepicker.css\";\r\nfunction AddMember(props) {\r\n    const auth = useSelector(state => state.auth);\r\n    let history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const [enrollmentDate, setEnrollmentDate] = useState(new Date());\r\n    const [dob, setDob] = useState();\r\n    const [values, setValues] = useState({});\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [groups, setGroups] = useState([])\r\n    const [showToast, setShowToast] = useState({ isShow: false, type: \"\", message: \"\" })\r\n    const [image, setImage] = useState(\"\")\r\n    let baseURL = API_ROOT.replace('/api','/')\r\n    useEffect(() => {\r\n        console.log(props);\r\n        dispatch({ type: CHANGE_PAGE, page: \"Add Member\" });\r\n        if (props.location.state)\r\n            getMemberDetails(props.location.state);\r\n        getMemberGroups();\r\n    }, [])\r\n    const getMemberGroups = async () => {\r\n        try {\r\n            setisShowLoader(true);\r\n            let response = await masterRecord.MemberGroupModel.getMemberGroups();\r\n            setisShowLoader(false);\r\n            setGroups(response.body.message)\r\n        } catch (error) {\r\n            setisShowLoader(false);\r\n            setShowToast({ isShow: true, type: \"bg-danger\", message: error.response.body.message })\r\n        }\r\n    }\r\n    const getMemberDetails = async (member_id) => {\r\n        try {\r\n            setisShowLoader(true);\r\n            let response = await memberDetails.MemberDetailModel.getMemberDetailsData(member_id);\r\n            console.log(response);\r\n            formik.values.aadhar_card = response.body.message[0].aadhar_card\r\n            formik.values.member_name = response.body.message[0].member_name\r\n            formik.values.gender = response.body.message[0].gender\r\n            formik.values.age = response.body.message[0].age\r\n            formik.values.marital_status = response.body.message[0].marital_status\r\n            formik.values.mobile_number = response.body.message[0].mobile_number\r\n            formik.values.email_id = response.body.message[0].email_id\r\n            formik.values.member_group_id = response.body.message[0].member_group_id\r\n            formik.values.pan_card_number = response.body.message[0].pan_card_number\r\n            formik.values.driving_license_number = response.body.message[0].driving_license_number\r\n            formik.values.voter_id_number = response.body.message[0].voter_id_number\r\n            formik.values.ration_card_number = response.body.message[0].ration_card_number\r\n            formik.values.bank_account = response.body.message[0].bank_account\r\n            formik.values.bank_ifsc_code = response.body.message[0].bank_ifsc_code\r\n            formik.values.bank_account_holder = response.body.message[0].bank_account_holder\r\n            formik.values.enrollment_date = response.body.message[0].enrollment_date\r\n            setEnrollmentDate(new Date(response.body.message[0].enrollment_date));\r\n            formik.values.date_of_birth = response.body.message[0].date_of_birth\r\n            if(response.body.message[0].image){\r\n                setImage(response.body.message[0].image);\r\n            }\r\n            setDob(new Date(response.body.message[0].date_of_birth));\r\n\r\n            setisShowLoader(false);\r\n            //setGroups(response.body.message)\r\n        } catch (error) {\r\n            setisShowLoader(false);\r\n            setShowToast({ isShow: true, type: \"bg-danger\", message: error.response.body.message })\r\n        }\r\n\r\n    }\r\n    const validate = values => {\r\n        window.scrollTo(0, 0);\r\n        const errors = {};\r\n        if (!values.member_name) {\r\n            errors.member_name = 'Please provide member name';\r\n        }\r\n        return errors;\r\n    };\r\n    const getImage= async(e)=>{\r\n        try {\r\n            if(e.target.files.length==0)\r\n                return false;\r\n            setisShowLoader(true);\r\n            setShowToast({ isShow: false, type: \"\", message: \"\" })\r\n            const file = e.target.files[0];\r\n            let fileExtArr = file.name.split(\".\");\r\n            let fileExt = fileExtArr[1];\r\n            if(fileExt!=\"png\" && fileExt!=\"jpg\"){\r\n                setisShowLoader(false);\r\n                setShowToast({ isShow: true, type: \"bg-danger\", message: \"Please upload Image type PNG or JPG\" })\r\n            }\r\n            let formData = new FormData();\r\n            formData.append('image', file);\r\n            let response = await masterRecord.MemberGroupModel.saveImage(formData);\r\n            if(response.status==200){\r\n                setImage(response.body.message.image.path)\r\n            }\r\n            console.log(response);\r\n            setisShowLoader(false);\r\n        } catch (error) {\r\n            setisShowLoader(false);\r\n            setShowToast({ isShow: true, type: \"bg-danger\", message: error.toString() })\r\n\r\n        }\r\n    }\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            enrollment_date: enrollmentDate,\r\n            date_of_birth: dob,\r\n            member_name: '',\r\n            gender: \"\",\r\n            age: \"\",\r\n            marital_status: \"\",\r\n            mobile_number: \"\",\r\n            email_id: \"\",\r\n            member_group_id: \"\",\r\n            aadhar_card: \"\",\r\n            pan_card_number: \"\",\r\n            driving_license_number: \"\",\r\n            voter_id_number: \"\",\r\n            ration_card_number: \"\",\r\n            bank_account: \"\",\r\n            bank_ifsc_code: \"\",\r\n            bank_account_holder: \"\",\r\n            user_id: auth.id\r\n        },\r\n        validate,\r\n        onSubmit: async (values) => {\r\n            setisShowLoader(true);\r\n            window.scrollTo(0, 0);\r\n            try {\r\n                values.enrollment_date = enrollmentDate;\r\n                values.date_of_birth = dob;\r\n                values.image = image;\r\n                let response = [];\r\n                if (props.location.state) {\r\n                    response = await memberDetails.MemberDetailModel.editMember(values, props.location.state);\r\n                } else {\r\n                    response = await memberDetails.MemberDetailModel.saveMemberDetails(values);\r\n                }\r\n                setisShowLoader(false);\r\n                if (response.statusCode == 200) {\r\n                    formik.resetForm();\r\n                    if (props.location.state)\r\n                        history.push(\"/member\")\r\n                    setShowToast({ isShow: true, type: \"bg-success\", message: \"Member Created Successfully!\" })\r\n                } else {\r\n                    setShowToast({ isShow: true, type: \"bg-danger\", message: \"Something went wrong!\" })\r\n                }\r\n\r\n            } catch (error) {\r\n                console.log(error.response.body.message);\r\n                setisShowLoader(false);\r\n                setShowToast({ isShow: true, type: \"bg-danger\", message: error.response.body.message })\r\n            }\r\n        }\r\n    });\r\n    return (\r\n        <>\r\n\r\n            <div class=\"content\">\r\n                <Alert dismissible delay={3000} show={showToast.isShow} onClose={() => setShowToast({ isShow: false, type: \"\", message: \"\" })} key={showToast.type == \"bg-danger\" ? \"danger\" : \"success\"} variant={showToast.type == \"bg-danger\" ? \"danger\" : \"success\"}>\r\n                    {showToast.message}\r\n                </Alert>\r\n\r\n                <Loader show={isShowLoader} />\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-8\">\r\n                        <div class=\"card card-user\">\r\n                            {/* <div class=\"card-header\">\r\n                                <h5 class=\"card-title\">Add Member</h5>\r\n                            </div> */}\r\n                            <div class=\"card-body\">\r\n\r\n                                <Form onSubmit={formik.handleSubmit}>\r\n                                    <Row className=\"mb-3\" >\r\n                                        <Form.Group as={Col} className=\"form-group required\" controlId=\"formGridEnroll\">\r\n                                            <Form.Label >Enrollment Date</Form.Label>\r\n                                            <DatePicker className=\"form-control\"\r\n                                                selected={enrollmentDate}\r\n                                                onChange={(date) => setEnrollmentDate(date)}\r\n                                                name=\"enrollment_date\"\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Col} className=\"form-group required\" controlId=\"formGridName\">\r\n                                            <Form.Label >Member Name</Form.Label>\r\n                                            <Form.Control type=\"text\"\r\n                                                placeholder=\"member name\"\r\n                                                name=\"member_name\"\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.member_name}\r\n\r\n                                            />\r\n                                            {formik.touched.member_name && formik.errors.member_name ? (\r\n                                                <div class=\"text-danger\">{formik.errors.member_name}</div>\r\n                                            ) : null}\r\n                                        </Form.Group>\r\n                                    </Row>\r\n                                    <Row className=\"mb-3\" >\r\n                                        <Form.Group as={Col} controlId=\"formGriddob\">\r\n                                            <Form.Label>Date of Birth</Form.Label>\r\n                                            <DatePicker\r\n                                                className=\"form-control\"\r\n                                                selected={dob}\r\n                                                onChange={(date) => setDob(date)}\r\n                                                name=\"date_of_birth\"\r\n                                            />\r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} className=\"mb-3\" controlId=\"formGridAddress1\">\r\n                                            <Form.Label>Gender</Form.Label>\r\n                                            <select\r\n                                                className=\"form-control\"\r\n                                                name=\"gender\"\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.gender}\r\n                                            >\r\n                                                <option key=\"\" value=\"\">Select Gender</option>\r\n\r\n                                                <option key=\"male\" value=\"male\">Male</option>\r\n                                                <option key=\"female\" value=\"female\">Female</option>\r\n\r\n                                            </select>\r\n                                        </Form.Group>\r\n\r\n                                    </Row>\r\n                                    <Row className=\"mb-3\" >\r\n                                        <Form.Group as={Col} controlId=\"formGridAge\">\r\n                                            <Form.Label>Age</Form.Label>\r\n                                            <Form.Control\r\n                                                name=\"age\"\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.age}\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Col} controlId=\"formGridState\">\r\n                                            <Form.Label>Marital Status</Form.Label>\r\n                                            <Form.Control\r\n                                                name=\"marital_status\"\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.marital_status}\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                    </Row>\r\n\r\n                                    <Row className=\"mb-3\" >\r\n                                        <Form.Group as={Col} controlId=\"formGridAge\">\r\n                                            <Form.Label>Phone number</Form.Label>\r\n                                            <Form.Control\r\n                                                name=\"mobile_number\"\r\n                                                type=\"number\"\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.mobile_number}\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Col} controlId=\"formGridState\">\r\n                                            <Form.Label>Email</Form.Label>\r\n                                            <Form.Control\r\n                                                name=\"email_id\"\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.email_id}\r\n                                                type=\"text\"\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                    </Row>\r\n                                    <Row className=\"mb-3\">\r\n                                        <Form.Group as={Col} md={6} className=\"mb-3\" controlId=\"formGridAddress1\">\r\n                                            <Form.Label>Member Group</Form.Label>\r\n                                            <select className=\"form-control\" name=\"member_group_id\" onChange={formik.handleChange}\r\n                                                value={formik.values.member_group_id}\r\n                                            >\r\n                                                <option key=\"\" value=\"\">Select Member Group</option>\r\n                                                {groups.map((group, id) => (\r\n                                                    <option key={group.group_code} value={group.group_code}>{group.group_code}</option>\r\n                                                ))}\r\n                                            </select>\r\n                                        </Form.Group>\r\n\r\n                                    </Row>\r\n                                    <Row className=\"mb-3\">\r\n                                        <Col>\r\n                                            <h3 className=\"text-info\">KYC Information</h3>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row className=\"mb-3\" >\r\n                                        <Form.Group as={Col} controlId=\"formGridAge\">\r\n                                            <Form.Label>Aadhar no.</Form.Label>\r\n                                            <Form.Control\r\n                                                name=\"aadhar_card\"\r\n                                                type=\"number\"\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.aadhar_card}\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Col} controlId=\"formGridState\">\r\n                                            <Form.Label>PAN</Form.Label>\r\n                                            <Form.Control\r\n                                                name=\"pan_card_number\"\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.pan_card_number}\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                    </Row>\r\n                                    <Row className=\"mb-3\" >\r\n                                        <Form.Group as={Col} controlId=\"formGridAge\">\r\n                                            <Form.Label>Driving Licence No.</Form.Label>\r\n                                            <Form.Control\r\n                                                name=\"driving_license_number\"\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.driving_license_number}\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Col} controlId=\"formGridState\">\r\n                                            <Form.Label>Voter Id No.</Form.Label>\r\n                                            <Form.Control\r\n                                                name=\"voter_id_number\"\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.voter_id_number}\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                    </Row>\r\n                                    <Row className=\"mb-3\" >\r\n                                        <Form.Group as={Col} md={6} controlId=\"formGridAge\">\r\n                                            <Form.Label>Ration Card No.</Form.Label>\r\n                                            <Form.Control\r\n                                                name=\"ration_card_number\"\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.ration_card_number}\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                    </Row>\r\n\r\n                                    <Row className=\"mb-3\">\r\n                                        <Col>\r\n                                            <h3 className=\"text-info\">Bank Details</h3>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row className=\"mb-3\" >\r\n                                        <Form.Group as={Col} controlId=\"formGridAge\">\r\n                                            <Form.Label>Bank Account No.</Form.Label>\r\n                                            <Form.Control\r\n                                                name=\"bank_account\"\r\n                                                type=\"number\"\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.bank_account}\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Col} controlId=\"formGridState\">\r\n                                            <Form.Label>IFSC code</Form.Label>\r\n                                            <Form.Control\r\n                                                name=\"bank_ifsc_code\"\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.bank_ifsc_code}\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                    </Row>\r\n                                    <Row className=\"mb-3\" >\r\n                                        <Form.Group as={Col} md={6} controlId=\"formGridAge\">\r\n                                            <Form.Label>Account holder name</Form.Label>\r\n                                            <Form.Control\r\n                                                name=\"bank_account_holder\"\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.bank_account_holder}\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n\r\n                                    </Row>\r\n\r\n                                    <Button variant=\"primary\" type=\"submit\">\r\n                                        Save\r\n                                    </Button>\r\n                                </Form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-4\">\r\n                        <div class=\"card card-user\">\r\n                            <div class=\"card-body\">\r\n                                <div class=\"image\">\r\n                                    <img src=\"../assets/img/damir-bosnjak.jpg\" alt=\"...\" />\r\n                                </div>\r\n\r\n                                <div class=\"author\">\r\n                                    <a href=\"#\">                                      \r\n                                        <img class=\"avatar border-gray\" src={image==\"\"?\"../assets/img/blank_image.jpg\":baseURL+image} alt=\"...\" />\r\n                                        <input type=\"file\" name=\"profile_image\" onChange={(e)=>getImage(e)}/>\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AddMember;","import React, { useEffect, useState, useMemo } from 'react';\r\nimport { Table,Button,Modal,Pagination,ProgressBar } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport memberRecord from '../../../models/memberDetails';\r\nimport moment from 'moment';\r\nimport {useTable,useSortBy,usePagination,useFilters } from 'react-table'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { CHANGE_PAGE } from '../../../constants/actionTypes'\r\n\r\nfunction Members(props) {\r\n    let history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const [isShowLoader, setisShowLoader] = useState(0)\r\n    const [showDeleteModel, setShowDeleteModel] = useState(false)\r\n    const [deleteID, setDeleteID] = useState(0)\r\n    const [memberRecords,setMemberRecords]=useState([]);\r\n    useEffect(() => {\r\n        setisShowLoader(10);\r\n        getMemberGroup();\r\n        dispatch({ type: CHANGE_PAGE, page: \"All Members\" });\r\n    },[])\r\n    \r\n    const data = useMemo(\r\n        () => \r\n        memberRecords.map((record,index)=>\r\n                { \r\n             return {\r\n                col1:moment(record.enrollment_date).format('DD-MM-yyy hh:ss A'),\r\n                col2:record.member_name,\r\n                col3:record.member_group_id,\r\n                col4:record.mobile_number,\r\n                col5:record\r\n                }\r\n            }\r\n        )\r\n        ,\r\n        [memberRecords]\r\n      )   \r\n\r\n    const columns = useMemo(\r\n        () => [\r\n          {\r\n            Header: 'Enrollment Date',\r\n            accessor: 'col1', // accessor is the \"key\" in the data\r\n            allowFilter:true\r\n          },\r\n          {\r\n            Header: 'Member Name',\r\n            accessor: 'col2',\r\n            allowFilter:true\r\n          },\r\n          {\r\n            Header: 'Member Group Code',\r\n            accessor: 'col3',\r\n            allowFilter:true\r\n            },\r\n          {\r\n            Header: 'Mobile Number',\r\n            accessor: 'col4',\r\n            allowFilter:true\r\n          },\r\n          {\r\n            Header: 'Action',\r\n            accessor: 'col5',\r\n            allowFilter:false\r\n          }\r\n\r\n        ],\r\n        []\r\n      )    \r\n\r\n    const getMemberGroup = () =>{\r\n        setisShowLoader(30);\r\n        memberRecord.MemberDetailModel.getMemberDetailsData().then(res=>{\r\n            setisShowLoader(90);\r\n            if(res.statusCode == 200){\r\n                setMemberRecords(res.body.message);\r\n            }else{\r\n                setMemberRecords([]);\r\n            }\r\n            setisShowLoader(100);\r\n        })\r\n       \r\n    }\r\n    const deleteHandle=(id)=>{\r\n        setDeleteID(id);        \r\n        setShowDeleteModel(true);\r\n    }\r\n    const deleteMember=async()=>{\r\n        setShowDeleteModel(false);\r\n        let initialData = [...memberRecords];\r\n        setMemberRecords([]);\r\n        try{\r\n            setisShowLoader(30);\r\n            let response = await memberRecord.MemberDetailModel.deleteMember(deleteID);\r\n            setisShowLoader(90);\r\n            if(response.statusCode == 200){\r\n                let UpdatedList = initialData.filter((member,idx)=>member.member_id!=deleteID);\r\n                setMemberRecords(UpdatedList);\r\n             }\r\n             setisShowLoader(100);\r\n        }catch (error) {\r\n                console.log(error.response.body.message);\r\n                setisShowLoader(100);\r\n            }\r\n              \r\n    }\r\n  \r\n    function DefaultColumnFilter({\r\n        column: { filterValue, preFilteredRows, setFilter },\r\n    }) {\r\n        const count = preFilteredRows.length\r\n    \r\n        return (\r\n            <input\r\n                className=\"form-control\"\r\n                value={filterValue || ''}\r\n                onChange={e => {\r\n                    setFilter(e.target.value || undefined)\r\n                }}\r\n                placeholder={`Search ${count} records...`}\r\n            />\r\n        )\r\n    }    \r\n    const defaultColumn = React.useMemo(\r\n        () => ({\r\n            // Default Filter UI\r\n            Filter: DefaultColumnFilter,\r\n        }),\r\n        []\r\n    ) \r\n    const paginate = (totalPage)=>{\r\n      let pageNumberArray = [];\r\n      for(let i=1;i<=totalPage;i++){\r\n        pageNumberArray.push(i);\r\n      }\r\n      return(      \r\n      <Pagination>\r\n        <Pagination.First  onClick={() => gotoPage(0)}/>\r\n        <Pagination.Prev onClick={() => previousPage()} disabled={!canPreviousPage}/>\r\n        {pageNumberArray.map(num=><Pagination.Item key={num} active={num === (pageIndex+1)} onClick={() => gotoPage(num-1)}>{num}</Pagination.Item>)}\r\n        <Pagination.Next onClick={() => nextPage()} disabled={!canNextPage}/>\r\n        <Pagination.Last onClick={() => gotoPage(totalPage-1)}/>\r\n        </Pagination>\r\n      );\r\n    \r\n    }\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n        pageOptions,\r\n        page,\r\n        pageCount,\r\n        state: { pageIndex, pageSize },\r\n        gotoPage,\r\n        previousPage,\r\n        nextPage,\r\n        setPageSize,\r\n        canPreviousPage,\r\n        canNextPage,  \r\n      } = useTable({ columns, data, defaultColumn, initialState: { pageIndex: 0 }},useFilters,useSortBy,usePagination)\r\n    return (\r\n        <>\r\n      <Modal show={showDeleteModel} onHide={()=>setShowDeleteModel(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Delete Member</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>Are you sure?</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={()=>setShowDeleteModel(false)}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={()=>deleteMember()}>\r\n            Delete\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>        \r\n        {/* <Loader show={isShowLoader}/> */}\r\n        <div class=\"content\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-12\">\r\n                <Link to=\"/addMember\">\r\n                <Button variant=\"info\" active>\r\n                <i className=\"nc-icon nc-simple-add mr-2\"></i>\r\n                    Add Member\r\n                </Button>\r\n                </Link>\r\n                {/* </Col>\r\n            </Row>\r\n            <Row>\r\n            <Col> */}\r\n            <div className=\"text-right\">\r\n              {paginate(pageCount)}\r\n            </div>   \r\n            <div class=\"card\">\r\n                <div class=\"card-body\">\r\n                    <div class=\"table-responsive\">\r\n\r\n            <Table {...getTableProps()} className=\"table small\" >\r\n            <thead className=\"bg-primary\">\r\n                    {headerGroups.map(headerGroup => (\r\n                    <tr {...headerGroup.getHeaderGroupProps()}>\r\n                        {headerGroup.headers.map(column => (\r\n                        <th\r\n                            {...column.getHeaderProps(column.getSortByToggleProps())}\r\n                        >\r\n                            {column.render('Header')}\r\n                            <span>\r\n                            {column.isSorted ? (column.isSortedDesc ? ' 🔽' : ' 🔼') : ''}\r\n                            </span>\r\n                            <div>{column.allowFilter? column.render('Filter') : null}</div>\r\n                        </th>\r\n                        ))}\r\n                    </tr>\r\n                    ))}\r\n            </thead>\r\n            <tbody {...getTableBodyProps()}>\r\n\r\n                    {page.map(row => {\r\n                        prepareRow(row)\r\n                        return (\r\n                            <tr {...row.getRowProps()}>\r\n                            {row.cells.map(cell => {\r\n                                console.log(cell);\r\n                                if(cell.column.id !=\"col5\"){                                \r\n                                    return (\r\n                                        <td {...cell.getCellProps()}>\r\n                                            {cell.render('Cell')}\r\n                                        </td>\r\n                                        )\r\n                                    }else{\r\n                                        return (\r\n                                            <td>\r\n                                                <Button size={\"sm\"} variant=\"primary\"  onClick={()=>{history.push(\"/viewMemberDetail\",cell.value.member_id)}}>View</Button>\r\n                                                {' '}\r\n                                                <Button size={\"sm\"} variant=\"success\" onClick={()=>{history.push(\"/addMember\",cell.value.member_id)}} >Edit</Button>\r\n                                                {' '}\r\n                                                <Button size={\"sm\"} variant=\"danger\" onClick={()=>deleteHandle(cell.value.member_id)} >Delete</Button>\r\n                                            </td>\r\n                                        )\r\n                                    }\r\n                            })}\r\n                            </tr>\r\n                        )\r\n                        })}\r\n            </tbody>\r\n        </Table>\r\n        {isShowLoader<100?<div style={{ top: '50%',position:\"relative\" }}><ProgressBar style={{\"position\":\"relative\",\"width\":\"30%\",\"left\":\"40%\"}} striped variant=\"success\" now={isShowLoader} label={`${isShowLoader}%`} /></div>:\"\"}\r\n        </div></div></div>\r\n        <div className=\"text-right\">\r\n          {paginate(pageCount)}\r\n        </div>   \r\n        </div>\r\n        </div>\r\n        </div>\r\n        </>\r\n        );\r\n}\r\n\r\nexport default Members;","import React, { useEffect, useState } from 'react';\r\nimport { Table, Button, Container, Row, Col } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport memberRecord from '../../../models/memberDetails';\r\nimport Loader from '../../layout/Loader';\r\nimport moment from 'moment';\r\nimport {API_ROOT} from \"../../../models/BaseUrl\"\r\nfunction Members(props) {\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [memberRecords, setMemberRecords] = useState([]);\r\n    let baseURL = API_ROOT.replace('/api','/')\r\n    useEffect(() => {\r\n        console.log(props);\r\n        getMemberGroup();\r\n    }, [])\r\n\r\n    const getMemberGroup = () => {\r\n        setisShowLoader(true);\r\n        memberRecord.MemberDetailModel.getMemberDetailsData(props.location.state).then(res => {\r\n            setisShowLoader(false);\r\n            if (res.statusCode == 200) {\r\n                setMemberRecords(res.body.message[0]);\r\n            } else {\r\n                setMemberRecords([]);\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div class=\"content\">\r\n                <Loader show={isShowLoader} />\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-12\">\r\n                        <div class=\"card card-user\">\r\n                            {/* <div class=\"card-header\">\r\n                            <h5 class=\"card-title\">Member Detail - {memberRecords.member_name}</h5> */}\r\n                        <div class=\"image\">\r\n                            <img src=\"../assets/img/damir-bosnjak.jpg\" alt=\"...\"/>\r\n                        </div>\r\n                            <div class=\"card-body\">\r\n                                <div class=\"author\">\r\n                                    \r\n                                        <img class=\"avatar border-gray\" src={memberRecords.image?baseURL+memberRecords.image:\"../assets/img/damir-bosnjak.jpg\"} alt=\"...\" />\r\n                                        <h5 class=\"title\">{memberRecords.member_name}</h5>\r\n                                    \r\n                                    <p class=\"description\">\r\n                                        @{memberRecords.member_name}\r\n                                    </p>\r\n                                </div>\r\n                                <Table className=\"table\" >\r\n                                    <tbody>\r\n                                        <tr><th>Enrollment Date</th><td>{moment(memberRecords.enrollment_date).format(\"DD-MM-YYYY hh:ss A\")}</td> </tr>\r\n                                        {/* <tr><th>Member Name</th>  <td>{memberRecords.member_name}</td></tr> */}\r\n                                        <tr><th>Member Id</th>  <td>{memberRecords.member_id}</td></tr>\r\n                                        <tr> <th>Gender</th>  <td>{memberRecords.gender}</td></tr>\r\n                                        <tr><th>DOB</th>   <td>{memberRecords.date_of_birth?moment(memberRecords.date_of_birth).format(\"DD-MM-YYYY\"):\"\"} </td></tr>\r\n                                        <tr><th>Age</th> <td>{memberRecords.age}</td></tr>\r\n                                        <tr><th>Marital Status</th>  <td>{memberRecords.marital_status}</td></tr>\r\n                                        <tr><th>Mobile Number</th> <td>{memberRecords.mobile_number}</td></tr>\r\n                                        <tr><th>Email Id</th> <td>{memberRecords.email_id}</td></tr>\r\n                                        <tr> <th>Member Group Id</th>  <td>{memberRecords.member_group_id}</td></tr>\r\n                                        <tr> <th>Aadhar Number</th> <td>{memberRecords.aadhar_card}</td></tr>\r\n                                        <tr> <th>Driving License Number</th>  <td>{memberRecords.driving_license_number}</td></tr>\r\n                                        <tr> <th>Voter Id Number </th>  <td>{memberRecords.voter_id_number}</td></tr>\r\n                                        <tr>  <th>Ration Card Number</th> <td>{memberRecords.ration_card_number}</td></tr>\r\n                                        <tr> <th>PAN Number</th> <td>{memberRecords.pan_card_number}</td></tr>\r\n                                        <tr> <th>Bank Account no.</th> <td>{memberRecords.bank_account}</td></tr>\r\n                                        <tr> <th>IFSC Code</th> <td>{memberRecords.bank_ifsc_code}</td></tr>\r\n                                        <tr> <th>Bank Account Holder</th> <td>{memberRecords.bank_account_holder}</td></tr>\r\n\r\n                                    </tbody>\r\n                                </Table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* </div> */}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Members;","import moment from \"moment\"\r\nimport { requests, superagent, API_ROOT } from \"./BaseUrl\"\r\nimport axios from \"./interceptor-middleware\";\r\n//const url = '/memberGroups/';\r\n\r\nconst SchemeModel = {\r\n  getScheme() {\r\n    return axios.get(`${API_ROOT}/scheme/entry`)\r\n  },\r\n  saveScheme(data) {\r\n    return axios.post(`${API_ROOT}/scheme/entry`, data)\r\n  },\r\n  deleteScheme(id){\r\n    return axios.delete(`${API_ROOT}/scheme/entry/${id}`)\r\n  },  \r\n  getLoanAppInitialData(){\r\n      return [axios.get(`${API_ROOT}/scheme/entry`),axios.get(`${API_ROOT}/member/entry/all`)]\r\n  }\r\n\r\n}\r\nconst GroupLoanModel = {\r\n  applyForloan(data){\r\n    return axios.post(`${API_ROOT}/groupLoan/applyGroupLoan`, data)\r\n  },\r\n  getApprovalList(){\r\n    return axios.get(`${API_ROOT}/groupLoan/entry/pendingApproval`);\r\n  },\r\n  getDisburseList(){\r\n    return axios.get(`${API_ROOT}/groupLoan/entry/pendingDisburse`);\r\n  },\r\n  getLoanDetailbyId(id){\r\n    return axios.get(`${API_ROOT}/groupLoan/entry/${id}`);\r\n  },\r\n  approveRejectLoan(data){\r\n    return axios.post(`${API_ROOT}/groupLoan/approveLoan`, data)\r\n  },\r\n  getAllLoanApplications(){\r\n    return axios.get(`${API_ROOT}/groupLoan/entry/all`);\r\n  },\r\n  disburseRejectLoan(data){\r\n    return axios.post(`${API_ROOT}/groupLoan/disburseLoan`, data)\r\n  },\r\n\r\n}\r\nconst EmiModel = {\r\n  calculateEMI(data){\r\n    return axios.post(`${API_ROOT}/emis/calculateEMI`, data);\r\n  },\r\n  getDueEmis(today = moment().format(\"yyyy-MM-DD\")){\r\n    return axios.get(`${API_ROOT}/emis/dueEMIs/${today}`);\r\n  },\r\n  paidEmi(id){\r\n    return axios.put(`${API_ROOT}/emis/entry`,{\"id\":id});\r\n  },\r\n  getPaidEmis(loanAccountNo){\r\n    return axios.get(`${API_ROOT}/emis/entry/${loanAccountNo}`);\r\n  }\r\n}\r\nexport default { SchemeModel,GroupLoanModel,EmiModel };","import React, { useEffect, useState } from 'react';\r\nimport { Table, Button, Container, Row, Col, Modal } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport groupLoan from '../../models/groupLoan';\r\nimport Loader from '../layout/Loader';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { CHANGE_PAGE } from '../../constants/actionTypes'\r\nfunction Scheme(props) {\r\n    const dispatch = useDispatch();\r\n    const [showDeleteModel, setShowDeleteModel] = useState(false)\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [schemes, setSchemes] = useState([]);\r\n    const [deleteID, setDeleteID] = useState(0)\r\n    useEffect(() => {\r\n        getSchemes();\r\n        dispatch({ type: CHANGE_PAGE, page: \"All Schemes\" });\r\n    }, [])\r\n\r\n    const getSchemes = () => {\r\n        setisShowLoader(true);\r\n        groupLoan.SchemeModel.getScheme().then(res => {\r\n            setisShowLoader(false);\r\n            if (res.statusCode == 200) {\r\n                setSchemes(res.body.message);\r\n            } else {\r\n                setSchemes([]);\r\n            }\r\n        })\r\n    }\r\n    const deleteHandle = (id) => {\r\n        setDeleteID(id);\r\n        setShowDeleteModel(true);\r\n    }\r\n\r\n    const deleteScheme = async () => {\r\n        setShowDeleteModel(false);\r\n        try {\r\n            setisShowLoader(true);\r\n            let response = await groupLoan.SchemeModel.deleteScheme(deleteID);\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n                let UpdatedList = schemes.filter((scheme, idx) => scheme.id != deleteID);\r\n                setSchemes(UpdatedList);\r\n            }\r\n        } catch (error) {\r\n            console.log(error.response.body.message);\r\n            setisShowLoader(false);\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"content\">\r\n                <Modal show={showDeleteModel} onHide={() => setShowDeleteModel(false)}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Delete Scheme</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>Are you sure?</Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={() => setShowDeleteModel(false)}>\r\n                            Cancel\r\n                        </Button>\r\n                        <Button variant=\"primary\" onClick={() => deleteScheme()}>\r\n                            Delete\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n\r\n                <Loader show={isShowLoader} />\r\n                <Row className=\"mb-5 mt-3\">\r\n                    <Col>\r\n                        <Link to=\"/addScheme\">\r\n                            <Button variant=\"info\" size=\"md\" active>\r\n                                Add Scheme\r\n                            </Button>\r\n                        </Link>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <Table className=\"shadow-lg p-3 mb-5 bg-white rounded\" striped bordered hover responsive>\r\n                            <thead className=\"bg-primary\">\r\n                                <tr>\r\n                                    <th>Scheme code</th>\r\n                                    <th>Scheme name</th>\r\n                                    <th>Max amount</th>\r\n                                    <th>Interest rate (%)</th>\r\n                                    <th>EMI type</th>\r\n                                    <th>Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {schemes.map((scheme, id) => (<tr key={scheme.id}>\r\n                                    <td>{scheme.scheme_code}</td>\r\n                                    <td>{scheme.scheme_name}</td>\r\n                                    <td>{scheme.max_amount}</td>\r\n                                    <td>{scheme.interest_rate}%</td>\r\n                                    <td>{scheme.EMI_type}</td>\r\n                                    <td>\r\n                                        <Button variant=\"danger\" size={\"sm\"} onClick={() => deleteHandle(scheme.id)} className=\"ml-2\">Delete</Button>\r\n\r\n                                    </td>\r\n                                </tr>))}\r\n                            </tbody>\r\n                        </Table>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default Scheme;","import React, { useState,useEffect } from 'react';\r\nimport { Button, Form, Container, Row, Col, Toast } from 'react-bootstrap';\r\nimport { useFormik } from 'formik';\r\nimport groupLoan from '../../models/groupLoan';\r\nimport Loader from '../layout/Loader';\r\nimport { useSelector,useDispatch } from \"react-redux\";\r\nimport {CHANGE_PAGE} from '../../constants/actionTypes'\r\nfunction AddScheme(props) {\r\n  const auth = useSelector(state => state.auth);\r\n  const dispatch = useDispatch();\r\n  const [values, setValues] = useState({});\r\n  const [isShowLoader, setisShowLoader] = useState(false)\r\n  const [showToast, setShowToast] = useState({ isShow: false, type: \"\", message: \"\" })\r\n  useEffect(()=>{\r\n    dispatch({type:CHANGE_PAGE,page:\"Add Scheme\"});\r\n  },[]);\r\n  const validate = values => {\r\n    const errors = {};\r\n    if (!values.scheme_code) {\r\n      errors.scheme_code = 'Scheme code is Required!';\r\n    }\r\n    if (!values.scheme_name) {\r\n      errors.scheme_name = 'Scheme name is Required!';\r\n    }\r\n    if (!values.max_amount) {\r\n      errors.max_amount = 'Max amount is Required!';\r\n    }\r\n    if (!values.interest_rate) {\r\n      errors.interest_rate = 'Interest rate is Required!';\r\n    }\r\n    if (!values.EMI_type) {\r\n      errors.EMI_type = 'EMI type is Required!';\r\n    }\r\n    return errors;\r\n  };\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      scheme_code: '',\r\n      scheme_name: '',\r\n      max_amount: '',\r\n      interest_rate: '',\r\n      EMI_type: '',\r\n      user_id: auth.id\r\n    },\r\n    validate,\r\n    onSubmit: async (values) => {\r\n      setisShowLoader(true);\r\n      try {\r\n        let response = await groupLoan.SchemeModel.saveScheme(values);\r\n        setisShowLoader(false);\r\n        if (response.statusCode == 200) {\r\n          formik.resetForm();\r\n          setShowToast({ isShow: true, type: \"bg-success\", message: \"Scheme Created Successfully!\" })\r\n        } else {\r\n          setShowToast({ isShow: true, type: \"bg-danger\", message: \"Something Went Wrong!\" })\r\n        }\r\n\r\n      } catch (error) {\r\n        setisShowLoader(false);\r\n        setShowToast({ isShow: true, type: \"bg-danger\", message: error.response.body.message })\r\n      }\r\n    },\r\n    handleChange: () => {\r\n      setValues(prevValues => ({\r\n        ...prevValues,\r\n        // we use the name to tell Formik which key of `values` to update\r\n        [values.target.name]: values.target.value\r\n      }))\r\n    },\r\n  });\r\n  return (\r\n    <>\r\n      <Toast key={1} autohide delay={3000} show={showToast.isShow} onClose={() => setShowToast({ isShow: false, type: \"\", message: \"\" })} className={\"loader \" + (showToast.type)} >\r\n        <Toast.Header>\r\n          <strong className=\"me-auto\">{showToast.type == \"bg-danger\" ? \"Error\" : \"Success\"} Message</strong>\r\n        </Toast.Header>\r\n        <Toast.Body className=\"Dark\">\r\n          {showToast.message}\r\n        </Toast.Body>\r\n      </Toast>\r\n      <div className=\"content\">\r\n        <Loader show={isShowLoader} />\r\n        {/* <h2 className=\"text-info text-center\">Add Scheme</h2> */}\r\n        {/* <Container fluid className=\"bg-white mt-5 shadow-lg p-3 mb-5 bg-white rounded\"> */}\r\n        <div className=\"row\">\r\n          <div className=\"col-md-8\">\r\n            <div className=\"card card-user\">\r\n              <div className=\"card-header\">\r\n                <h5 className=\"card-title\">Add Scheme</h5>\r\n              </div>\r\n              <div className=\"card-body\">\r\n\r\n                <Form onSubmit={formik.handleSubmit}>\r\n                  <Row className=\"mb-3\" >\r\n                    <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                      <Form.Label>Scheme Code</Form.Label>\r\n                      <Form.Control\r\n                        name=\"scheme_code\"\r\n                        onChange={formik.handleChange}\r\n                        value={formik.values.scheme_code}\r\n                      />\r\n                      {formik.touched.scheme_code && formik.errors.scheme_code ? (\r\n                        <div class=\"text-danger\">{formik.errors.scheme_code}</div>\r\n                      ) : null}\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group\">\r\n                      <Form.Label>Scheme Name</Form.Label>\r\n                      <Form.Control\r\n                        name=\"scheme_name\"\r\n                        onChange={formik.handleChange}\r\n                        value={formik.values.scheme_name}\r\n                      />\r\n                      {formik.touched.scheme_name && formik.errors.scheme_name ? (\r\n                        <div class=\"text-danger\">{formik.errors.scheme_name}</div>\r\n                      ) : null}\r\n\r\n                    </Form.Group>\r\n\r\n                  </Row>\r\n                  <Row className=\"mb-3\" >\r\n                    <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                      <Form.Label>Max amount</Form.Label>\r\n                      <Form.Control\r\n                        name=\"max_amount\"\r\n                        type=\"number\"\r\n                        min=\"1\"\r\n                        onChange={formik.handleChange}\r\n                        value={formik.values.max_amount}\r\n                      />\r\n                      {formik.touched.max_amount && formik.errors.max_amount ? (\r\n                        <div class=\"text-danger\">{formik.errors.max_amount}</div>\r\n                      ) : null}\r\n\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                      <Form.Label>Interest Rate (in %)</Form.Label>\r\n                      <Form.Control\r\n                        name=\"interest_rate\"\r\n                        type=\"number\"\r\n                        min=\"0\"\r\n                        onChange={formik.handleChange}\r\n                        value={formik.values.interest_rate}\r\n                      />\r\n                      {formik.touched.interest_rate && formik.errors.interest_rate ? (\r\n                        <div class=\"text-danger\">{formik.errors.interest_rate}</div>\r\n                      ) : null}\r\n\r\n                    </Form.Group>\r\n\r\n                  </Row>\r\n                  <Row className=\"mb-3\" md={6}>\r\n                    <Form.Group as={Col} className=\"mb-3\" controlId=\"formGridAddress1\">\r\n                      <Form.Label>EMI type</Form.Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"EMI_type\"\r\n                        onChange={formik.handleChange}\r\n                        value={formik.values.EMI_type}\r\n                      >\r\n                        <option key=\"\" value=\"\">Select EMI type</option>\r\n                        <option key=\"flat\" value=\"flat\">Flat rate</option>\r\n                        {/* <option key=\"reduceing\" value=\"reduceing\">Reduceing rate</option> */}\r\n                      </select>\r\n                      {formik.touched.EMI_type && formik.errors.EMI_type ? (\r\n                        <div class=\"text-danger\">{formik.errors.EMI_type}</div>\r\n                      ) : null}\r\n\r\n                    </Form.Group>\r\n\r\n                  </Row>\r\n                  <Button variant=\"primary\" type=\"submit\">\r\n                    Save\r\n                  </Button>\r\n\r\n                </Form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* </Container> */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AddScheme;","import {API_ROOT} from \"./BaseUrl\"\r\nimport axios from \"./interceptor-middleware\";\r\n//const url = '/memberGroups/';\r\n\r\nconst DashboardModel = {\r\n  receivedAmount(){\r\n    return axios.get(`${API_ROOT}/dashboard/totalReceivedAmount`)\r\n  },\r\n  paidAmount(){\r\n    return axios.get(`${API_ROOT}/dashboard/totalPaidAmount`)\r\n  },\r\n  countActiveInactive(){\r\n    return axios.get(`${API_ROOT}/dashboard/countActiveInactive`)\r\n  }\r\n}\r\n    export default DashboardModel;","import React,{useEffect,useState} from 'react'\r\nimport agent from '../../agent'\r\nimport Loader from '../layout/Loader';\r\nimport { useDispatch } from 'react-redux';\r\nimport {CHANGE_PAGE} from '../../constants/actionTypes'\r\nimport DashboardModel from '../../models/dashboard'\r\n//var demo;\r\nexport default function Dashboard() {\r\n  const dispatch = useDispatch();\r\n  const [paidAmount,setPaidAmount] = useState({});\r\n  const [receivedAmount,setReceivedAmount] = useState({});\r\n  const [countActiveInactive,setCountActiveInactive] = useState({});\r\n  const [isShowLoader, setisShowLoader] = useState(false)\r\n  useEffect(()=>{\r\n    dispatch({type:CHANGE_PAGE,page:\"Dashboard\"});\r\n    getReport();\r\n  },[])\r\n  const getReport=async()=>{\r\n    try {\r\n      setisShowLoader(true);\r\n       let data =await Promise.allSettled([\r\n        DashboardModel.paidAmount(),\r\n        DashboardModel.receivedAmount(),\r\n        DashboardModel.countActiveInactive()]);\r\n        setisShowLoader(false);\r\n        setPaidAmount(data[0].value?.body?.message)\r\n        setReceivedAmount(data[1].value?.body?.message)\r\n        setCountActiveInactive(data[2].value?.body?.message)\r\n    } catch (error) {\r\n      setisShowLoader(false);\r\n      console.log(error);\r\n    }\r\n  }\r\n    return (\r\n      <>\r\n      <Loader show={isShowLoader} />\r\n      <div className=\"content\">\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-3 col-md-6 col-sm-6\">\r\n          <div className=\"card card-stats\">\r\n            <div className=\"card-body \">\r\n              <div className=\"row\">\r\n                <div className=\"col-5 col-md-4\">\r\n                  <div className=\"icon-big text-center icon-warning\">\r\n                    <i className=\"nc-icon nc-globe text-warning\"></i>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-7 col-md-8\">\r\n                  <div className=\"numbers\">\r\n                    <p className=\"card-category\">Paid</p>\r\n                    <p className=\"card-title\">{paidAmount.total}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"card-footer \">\r\n              <hr/>\r\n              <div className=\"stats\">\r\n                <i className=\"nc-icon nc-bullet-list-67\"></i>\r\n                Detail View\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-lg-3 col-md-6 col-sm-6\">\r\n          <div className=\"card card-stats\">\r\n            <div className=\"card-body \">\r\n              <div className=\"row\">\r\n                <div className=\"col-5 col-md-4\">\r\n                  <div className=\"icon-big text-center icon-warning\">\r\n                    <i className=\"nc-icon nc-money-coins text-success\"></i>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-7 col-md-8\">\r\n                  <div className=\"numbers\">\r\n                    <p className=\"card-category\">Received</p>\r\n                    <p className=\"card-title\">{receivedAmount.total?.toFixed(0)}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"card-footer \">\r\n              <hr/>\r\n              <div className=\"stats\">\r\n                <i className=\"nc-icon nc-bullet-list-67\"></i>\r\n                Detail View\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-lg-3 col-md-6 col-sm-6\">\r\n          <div className=\"card card-stats\">\r\n            <div className=\"card-body \">\r\n              <div className=\"row\">\r\n                <div className=\"col-5 col-md-4\">\r\n                  <div className=\"icon-big text-center icon-warning\">\r\n                    <i className=\"nc-icon nc-vector text-danger\"></i>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-7 col-md-8\">\r\n                  <div className=\"numbers\">\r\n                    <p className=\"card-category\">Active Borrowers</p>\r\n                    <p className=\"card-title\">{countActiveInactive.active_accounts}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* <div className=\"card-footer \">\r\n              <hr/>\r\n              <div className=\"stats\">\r\n                <i className=\"fa fa-clock-o\"></i>\r\n                In the last hour\r\n              </div>\r\n            </div> */}\r\n          </div>\r\n        </div>\r\n        <div className=\"col-lg-3 col-md-6 col-sm-6\">\r\n          <div className=\"card card-stats\">\r\n            <div className=\"card-body \">\r\n              <div className=\"row\">\r\n                <div className=\"col-5 col-md-4\">\r\n                  <div className=\"icon-big text-center icon-warning\">\r\n                    <i className=\"nc-icon nc-favourite-28 text-primary\"></i>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-7 col-md-8\">\r\n                  <div className=\"numbers\">\r\n                    <p className=\"card-category\">Inactive Borrowers</p>\r\n                    <p className=\"card-title\">{countActiveInactive.inactive_accounts}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* <div className=\"card-footer \">\r\n              <hr/>\r\n              <div className=\"stats\">\r\n                <i className=\"fa fa-refresh\"></i>\r\n                Update now\r\n              </div>\r\n            </div> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <div className=\"card \">\r\n            <div className=\"card-header \">\r\n              <h5 className=\"card-title\">Users Behavior</h5>\r\n              <p className=\"card-category\">24 Hours performance</p>\r\n            </div>\r\n            <div className=\"card-body \">\r\n              <canvas id=\"chartHours\" width=\"400\" height=\"100\"></canvas>\r\n            </div>\r\n            <div className=\"card-footer \">\r\n              <hr/>\r\n              <div className=\"stats\">\r\n                <i className=\"fa fa-history\"></i> Updated 3 minutes ago\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> */}\r\n      {/* <div className=\"row\">\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card \">\r\n            <div className=\"card-header \">\r\n              <h5 className=\"card-title\">Email Statistics</h5>\r\n              <p className=\"card-category\">Last Campaign Performance</p>\r\n            </div>\r\n            <div className=\"card-body \">\r\n              <canvas id=\"chartEmail\"></canvas>\r\n            </div>\r\n            <div className=\"card-footer \">\r\n              <div className=\"legend\">\r\n                <i className=\"fa fa-circle text-primary\"></i> Opened\r\n                <i className=\"fa fa-circle text-warning\"></i> Read\r\n                <i className=\"fa fa-circle text-danger\"></i> Deleted\r\n                <i className=\"fa fa-circle text-gray\"></i> Unopened\r\n              </div>\r\n              <hr/>\r\n              <div className=\"stats\">\r\n                <i className=\"fa fa-calendar\"></i> Number of emails sent\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-8\">\r\n          <div className=\"card card-chart\">\r\n            <div className=\"card-header\">\r\n              <h5 className=\"card-title\">NASDAQ: AAPL</h5>\r\n              <p className=\"card-category\">Line Chart with Points</p>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <canvas id=\"speedChart\" width=\"400\" height=\"100\"></canvas>\r\n            </div>\r\n            <div className=\"card-footer\">\r\n              <div className=\"chart-legend\">\r\n                <i className=\"fa fa-circle text-info\"></i> Tesla Model S\r\n                <i className=\"fa fa-circle text-warning\"></i> BMW 5 Series\r\n              </div>\r\n              <hr />\r\n              <div className=\"card-stats\">\r\n                <i className=\"fa fa-check\"></i> Data information certified\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> */}\r\n    </div>\r\n    </>\r\n    )\r\n}\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport { Button, Form, Container, Row, Col, Toast, Card, useAccordionButton, AccordionContext, Accordion } from 'react-bootstrap';\r\nimport { useFormik } from 'formik';\r\nimport DatePicker from \"react-datepicker\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport groupLoan from '../../models/groupLoan';\r\nimport Loader from '../layout/Loader';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { CHANGE_PAGE } from '../../constants/actionTypes'\r\nimport {API_ROOT} from \"../../models/BaseUrl\"\r\nfunction ContextAwareToggle({ children, eventKey, callback }) {\r\n    const { activeEventKey } = useContext(AccordionContext);\r\n\r\n    const decoratedOnClick = useAccordionButton(\r\n        eventKey,\r\n        () => callback && callback(eventKey),\r\n    );\r\n\r\n    const isCurrentEventKey = activeEventKey === eventKey;\r\n\r\n    return (\r\n        <Button variant=\"info\" onClick={decoratedOnClick}>\r\n            {/* <i className=\"nc-icon nc-simple-add mr-2\"></i> */}\r\n            {children}\r\n        </Button>\r\n\r\n    );\r\n}\r\nfunction LoanApplication(props) {\r\n    const auth = useSelector(state => state.auth);\r\n    const [enrollmentDate, setEnrollmentDate] = useState(new Date());\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [showToast, setShowToast] = useState({ isShow: false, type: \"\", message: \"\" })\r\n    const [memberRecords, setMemberRecords] = useState([]);\r\n    const [schemeRecords, setSchemeRecords] = useState([]);\r\n    const [selectedScheme, setSelectedScheme] = useState({});\r\n    const [image,setImage] = useState(\"\");\r\n    let baseURL = API_ROOT.replace('/api','/')\r\n    const tanure = { \"weekly\": \"Weeks\", \"monthly\": \"Months\", \"daily\": \"Days\", \"fortnight\": \"Fortnight\" };\r\n    let history = useHistory();\r\n    const dispatch = useDispatch();\r\n    //const selectedSm = {\"interest_rate\":0,\"EMI_type\":\"\",\"max_amount\":0};\r\n    useEffect(() => {\r\n        getSchemesAndMembers();\r\n        dispatch({ type: CHANGE_PAGE, page: \"Loan Application\" });\r\n    }, [])\r\n    const getSchemesAndMembers = async () => {\r\n        try {\r\n            setisShowLoader(true);\r\n            const response = await Promise.all(groupLoan.SchemeModel.getLoanAppInitialData())\r\n            setisShowLoader(false);\r\n            setSchemeRecords(response[0].body.message);\r\n            setMemberRecords(response[1].body.message);\r\n            console.log(response);\r\n        } catch (error) {\r\n            setisShowLoader(false);\r\n            setShowToast({ isShow: true, type: \"bg-danger\", message: error.response.body.message })\r\n        }\r\n    }\r\n    const validate = values => {\r\n        const errors = {};\r\n        if (!values.scheme_id) {\r\n            errors.scheme_id = 'Scheme code is Required!';\r\n        }\r\n        if (!values.member_id) {\r\n            errors.member_id = 'Member name is Required!';\r\n        }\r\n        if (!values.interest_rate) {\r\n            errors.interest_rate = 'Interest rate is Required!';\r\n        }\r\n        if (selectedScheme?.interest_rate > 0 && values.interest_rate > selectedScheme?.interest_rate) {\r\n            errors.interest_rate = `As per the Selected Scheme. Interest rate should not greater than ${selectedScheme.interest_rate}.`;\r\n        }\r\n        if (!values.loan_amount) {\r\n            errors.loan_amount = 'Loan amount is Required!';\r\n        }\r\n        if (selectedScheme?.max_amount > 0 && values.loan_amount > selectedScheme.max_amount) {\r\n            errors.loan_amount = `As per the Selected Scheme. Loan amount should not greater than ${selectedScheme.max_amount}.`;\r\n        }\r\n        if (!values.EMI_payout) {\r\n            errors.EMI_payout = 'EMI payout is Required!';\r\n        }\r\n        if (!values.tenure) {\r\n            errors.tenure = 'Tenure is Required!';\r\n        }\r\n        return errors;\r\n    };\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            scheme_id: '',\r\n            application_date: '',\r\n            member_id: '',\r\n            address: '',\r\n            interest_rate: \"\",\r\n            loan_amount: '',\r\n            // EMI_amount: '',\r\n            EMI_payout: \"\",\r\n            EMI_type: \"\",\r\n            tenure: \"\",\r\n            user_id: auth.id,\r\n            co_borrower_name: \"\",\r\n            co_borrower_aadhar_card: \"\",\r\n            co_borrower_pan_card: \"\",\r\n            co_borrower_ele_bill: \"\",\r\n            co_borrower_relationship:\"\"\r\n        },\r\n        validate,\r\n        onSubmit: async (values) => {\r\n            console.log(values);\r\n            setisShowLoader(true);\r\n            try {\r\n                //delete values.EMI_type;\r\n                values.application_date = enrollmentDate;\r\n                let response = await groupLoan.GroupLoanModel.applyForloan(values);\r\n                setisShowLoader(false);\r\n                if (response.statusCode == 200) {\r\n                    formik.resetForm();\r\n                    setShowToast({ isShow: true, type: \"bg-success\", message: \"Record created successfully. Loan goes for approval.\" })\r\n                } else {\r\n                    setShowToast({ isShow: true, type: \"bg-danger\", message: \"Something went wrong!\" })\r\n                }\r\n\r\n            } catch (error) {\r\n                setisShowLoader(false);\r\n                setShowToast({ isShow: true, type: \"bg-danger\", message: error.response.body.message })\r\n            }\r\n        }\r\n    });\r\n    const handleScheme = (e) => {\r\n        console.log(e.target.value);\r\n        let selectedScheme = schemeRecords.filter(scheme => scheme.scheme_code == e.target.value);\r\n        setSelectedScheme(selectedScheme[0]);\r\n        formik.values.EMI_type = selectedScheme[0].EMI_type;\r\n        formik.values.interest_rate = selectedScheme[0].interest_rate;\r\n        formik.handleChange(e);\r\n    }\r\n    const handleMemberSelection = (e)=>{\r\n        if(e.target.value!=\"\"){\r\n            let selectMember = memberRecords.filter(val=>val.member_id.toString()==e.target.value);\r\n            setImage(selectMember[0].image);\r\n        }\r\n        formik.handleChange(e);\r\n    }\r\n    return (\r\n\r\n        <>\r\n\r\n            <div className=\"content\">\r\n                <Toast key={1} autohide delay={3000} show={showToast.isShow} onClose={() => setShowToast({ isShow: false, type: \"\", message: \"\" })} className={\"loader \" + (showToast.type)} >\r\n                    <Toast.Header>\r\n                        <strong className=\"me-auto\">{showToast.type == \"bg-danger\" ? \"Error\" : \"Success\"} Message</strong>\r\n                    </Toast.Header>\r\n                    <Toast.Body className=\"Dark\">\r\n                        {showToast.message}\r\n                    </Toast.Body>\r\n                </Toast>\r\n                <Loader show={isShowLoader} />\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-8\">\r\n                        <Form onSubmit={formik.handleSubmit}>\r\n                            <Accordion defaultActiveKey=\"0\" >\r\n                                <Card className=\"card card-user\">\r\n                                    <Card.Header>\r\n                                        <ContextAwareToggle eventKey=\"0\">Borrower Details</ContextAwareToggle>\r\n                                    </Card.Header>\r\n\r\n                                    <Accordion.Collapse eventKey=\"0\">\r\n                                        <Card.Body className=\"card-body\">\r\n\r\n                                            <Row className=\"mb-3\" >\r\n                                                <Form.Group as={Col} className=\"form-group required\" controlId=\"formGridEnroll\">\r\n                                                    <Form.Label >Application Date</Form.Label>\r\n                                                    <DatePicker className=\"form-control\"\r\n                                                        selected={enrollmentDate}\r\n                                                        onChange={(date) => setEnrollmentDate(date)}\r\n                                                        name=\"application_date\"\r\n                                                        dateFormat=\"dd/MM/yyyy\"\r\n                                                    />\r\n                                                </Form.Group>\r\n                                                <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                                                    <Form.Label>Member name</Form.Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"member_id\"\r\n                                                        onChange={(e)=>handleMemberSelection(e)}\r\n                                                        value={formik.values.member_id}\r\n                                                    >\r\n                                                        <option key=\"\" value=\"\">Select Member</option>\r\n                                                        {memberRecords.map((member, id) => (\r\n                                                            <option key={member.member_id} value={member.member_id}>{`name= ${member.member_name} - member_id= ${member.member_id} `}</option>\r\n                                                        ))}\r\n\r\n                                                    </select>\r\n                                                    {formik.touched.member_id && formik.errors.member_id ? (\r\n                                                        <div className=\"text-danger\">{formik.errors.member_id}</div>\r\n                                                    ) : null}\r\n                                                </Form.Group>\r\n\r\n                                            </Row>\r\n                                            <Row className=\"mb-3\" >\r\n                                                <Form.Group as={Col} controlId=\"formGriddob\">\r\n                                                    <Form.Label>Member Address</Form.Label>\r\n                                                    <Form.Control\r\n                                                        name=\"address\"\r\n                                                        as=\"textarea\"\r\n                                                        onChange={formik.handleChange}\r\n                                                        value={formik.values.address}\r\n\r\n                                                    />\r\n                                                </Form.Group>\r\n                                                <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                                                    <Form.Label>Scheme</Form.Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"scheme_id\"\r\n                                                        onChange={handleScheme}\r\n                                                        value={formik.values.scheme_id}\r\n                                                    >\r\n                                                        <option key=\"\" value=\"\">Select Scheme</option>\r\n                                                        {schemeRecords.map((schems, id) => (\r\n                                                            <option key={schems.scheme_code} value={schems.scheme_code}>{schems.scheme_code}</option>\r\n                                                        ))}\r\n\r\n                                                    </select>\r\n                                                    {formik.touched.scheme_id && formik.errors.scheme_id ? (\r\n                                                        <div className=\"text-danger\">{formik.errors.scheme_id}</div>\r\n                                                    ) : null}\r\n\r\n                                                </Form.Group>\r\n\r\n                                            </Row>\r\n                                            <Row className=\"mb-3\" >\r\n                                                <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                                                    <Form.Label>Interest Rate (in %)</Form.Label>\r\n                                                    <Form.Control\r\n                                                        name=\"interest_rate\"\r\n                                                        type=\"number\"\r\n                                                        min=\"0\"\r\n                                                        onChange={formik.handleChange}\r\n                                                        value={formik.values.interest_rate}\r\n                                                    />\r\n                                                    <Form.Text className=\"text-muted\">\r\n                                                        It will change as per scheme.\r\n                                                    </Form.Text>\r\n                                                    {formik.touched.interest_rate && formik.errors.interest_rate ? (\r\n                                                        <div className=\"text-danger\">{formik.errors.interest_rate}</div>\r\n                                                    ) : null}\r\n\r\n                                                </Form.Group>\r\n                                                <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                                                    <Form.Label>Loan Amount</Form.Label>\r\n                                                    <Form.Control\r\n                                                        name=\"loan_amount\"\r\n                                                        type=\"number\"\r\n                                                        min=\"0\"\r\n                                                        onChange={formik.handleChange}\r\n                                                        value={formik.values.loan_amount}\r\n                                                    />\r\n                                                    <Form.Text className=\"text-muted\">\r\n                                                        Default will be Max amount of selected scheme.\r\n                                                    </Form.Text>\r\n\r\n                                                    {formik.touched.loan_amount && formik.errors.loan_amount ? (\r\n                                                        <div className=\"text-danger\">{formik.errors.loan_amount}</div>\r\n                                                    ) : null}\r\n\r\n                                                </Form.Group>\r\n\r\n                                            </Row>\r\n                                            <Row className=\"mb-3\" >\r\n                                                <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                                                    <Form.Label>EMI Payout</Form.Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"EMI_payout\"\r\n                                                        onChange={formik.handleChange}\r\n                                                        value={formik.values.EMI_payout}\r\n                                                    >\r\n                                                        <option key=\"\" value=\"\">Select Payout</option>\r\n                                                        {/* <option key=\"weekly\" value=\"weekly\">Weekly</option>\r\n                                                <option key=\"monthly\" value=\"fortnight\">Fortnight</option> */}\r\n                                                        <option key=\"monthly\" value=\"monthly\">Monthly</option>\r\n                                                    </select>\r\n                                                    {formik.touched.EMI_payout && formik.errors.EMI_payout ? (\r\n                                                        <div className=\"text-danger\">{formik.errors.EMI_payout}</div>\r\n                                                    ) : null}\r\n\r\n                                                </Form.Group>\r\n                                                <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                                                    <Form.Label>Tenure(in {formik.values.EMI_payout != \"\" ? tanure[formik.values.EMI_payout] : \"Months\"})</Form.Label>\r\n                                                    <Form.Control\r\n                                                        name=\"tenure\"\r\n                                                        type=\"number\"\r\n                                                        min=\"1\"\r\n                                                        onChange={formik.handleChange}\r\n                                                        value={formik.values.tenure}\r\n                                                    />\r\n                                                    {formik.touched.tenure && formik.errors.tenure ? (\r\n                                                        <div className=\"text-danger\">{formik.errors.tenure}</div>\r\n                                                    ) : null}\r\n\r\n                                                </Form.Group>\r\n                                            </Row>\r\n                                            <Row className=\"mb-3\">\r\n                                                <Form.Group as={Col} md={6} controlId=\"formGriddob\" className=\"form-group required\">\r\n                                                    <Form.Label>EMI Type</Form.Label>\r\n                                                    <Form.Control\r\n                                                        name=\"EMI_type\"\r\n                                                        type=\"text\"\r\n                                                        onChange={formik.handleChange}\r\n                                                        value={formik.values.EMI_type}\r\n                                                        disabled=\"disabled\"\r\n                                                    />\r\n                                                    <Form.Text className=\"text-muted\">\r\n                                                        It will change as per selected scheme.\r\n                                                    </Form.Text>\r\n                                                </Form.Group>\r\n                                            </Row>\r\n                                            {/* <Button variant=\"primary\" type=\"button\" onClick={()=>setActiveCard(\"1\")}>\r\n                                                Save\r\n                                            </Button> */}\r\n                                            <ContextAwareToggle eventKey=\"1\">Next</ContextAwareToggle>\r\n                                            <Button variant=\"danger\" onClick={() => { history.push(\"/\") }} type=\"button\" className=\"ml-2\">\r\n                                                Cancel\r\n                                            </Button>\r\n                                            {/* </Form> */}\r\n                                        </Card.Body>\r\n                                    </Accordion.Collapse>\r\n                                </Card>\r\n                                <Card className=\"card card-user\">\r\n                                    <Card.Header>\r\n                                        <ContextAwareToggle eventKey=\"1\">Co-Borrower Details</ContextAwareToggle>\r\n                                    </Card.Header>\r\n\r\n                                    <Accordion.Collapse eventKey=\"1\">\r\n                                        <Card.Body className=\"card-body\">\r\n                                            {/* <Form onSubmit={formik.handleSubmit}> */}\r\n                                            <Row className=\"mb-3\" >\r\n                                                <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                                                    <Form.Label>Co-Borrower name</Form.Label>\r\n                                                    <Form.Control\r\n                                                        name=\"co_borrower_name\"\r\n                                                        type=\"input\"\r\n                                                        min=\"0\"\r\n                                                        onChange={formik.handleChange}\r\n                                                        value={formik.values.co_borrower_name}\r\n                                                    />\r\n                                                </Form.Group>\r\n                                                <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                                                    <Form.Label>Relation ship</Form.Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"co_borrower_relationship\"\r\n                                                        onChange={formik.handleChange}\r\n                                                        value={formik.values.co_borrower_relationship}\r\n                                                    >\r\n                                                        <option key=\"\" value=\"\">Select</option>\r\n                                                        <option key=\"husband\" value=\"husband\">Husband</option>\r\n                                                        <option key=\"father\" value=\"father\">Father</option>\r\n                                                    </select>\r\n                                                </Form.Group>\r\n                                            </Row>\r\n                                            <Row className=\"mb-3\" >\r\n                                                <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                                                    <Form.Label>Aadhar Card</Form.Label>\r\n                                                    <Form.Control\r\n                                                        name=\"co_borrower_aadhar_card\"\r\n                                                        type=\"number\"\r\n                                                        min=\"0\"\r\n                                                        onChange={formik.handleChange}\r\n                                                        value={formik.values.co_borrower_aadhar_card}\r\n                                                    />\r\n                                                </Form.Group>\r\n                                                <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                                                    <Form.Label>PAN Card</Form.Label>\r\n                                                    <Form.Control\r\n                                                        name=\"co_borrower_pan_card\"\r\n                                                        type=\"input\"\r\n                                                        min=\"0\"\r\n                                                        onChange={formik.handleChange}\r\n                                                        value={formik.values.co_borrower_pan_card}\r\n                                                    />\r\n                                                </Form.Group>\r\n                                            </Row>\r\n                                            <Row className=\"mb-3\">\r\n                                                <Form.Group as={Col} md={6} controlId=\"formGriddob\" className=\"form-group required\">\r\n                                                    <Form.Label>Ele Bill no</Form.Label>\r\n                                                    <Form.Control\r\n                                                        name=\"co_borrower_ele_bill\"\r\n                                                        type=\"text\"\r\n                                                        onChange={formik.handleChange}\r\n                                                        value={formik.values.co_borrower_ele_bill}\r\n                                                    />\r\n                                                </Form.Group>\r\n                                            </Row>\r\n\r\n                                            <Button variant=\"primary\" type=\"submit\">\r\n                                                Save\r\n                                            </Button>\r\n                                            <Button variant=\"danger\" onClick={() => { history.push(\"/\") }} type=\"button\" className=\"ml-2\">\r\n                                                Cancel\r\n                                            </Button>\r\n                                        </Card.Body>\r\n                                    </Accordion.Collapse>\r\n                                </Card>\r\n                            </Accordion>\r\n                        </Form>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        <div className=\"card card-user\">\r\n                            <div className=\"card-body\">\r\n                                <div className=\"image\">\r\n                                    <img src=\"../assets/img/damir-bosnjak.jpg\" alt=\"...\" />\r\n                                </div>\r\n\r\n                                <div className=\"author\">\r\n                                    <a href=\"#\">\r\n\r\n                                        <img className=\"avatar border-gray\" src={image==\"\"?\"../assets/img/blank_image.jpg\":baseURL+image} alt=\"...\" />\r\n                                        {/* <input type=\"file\" name=\"profile_image\"/> */}\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LoanApplication;","import React, { useEffect, useState } from 'react';\r\nimport { Table, Button, Container, Row, Col } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport groupLoan from '../../models/groupLoan';\r\nimport Loader from '../layout/Loader';\r\nimport { useHistory } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { CHANGE_PAGE } from '../../constants/actionTypes'\r\n\r\nfunction LoanApproval(props) {\r\n    let history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [loanlist, setLoanlist] = useState([]);\r\n    useEffect(() => {\r\n        getLoanList();\r\n        dispatch({ type: CHANGE_PAGE, page: \"Applications for Approval\" });\r\n    }, [])\r\n\r\n    const getLoanList = async () => {\r\n        try {\r\n            setisShowLoader(true);\r\n            let response = await groupLoan.GroupLoanModel.getApprovalList();\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n                setLoanlist(response.body.message);\r\n            }\r\n\r\n        } catch (error) {\r\n            setisShowLoader(false);\r\n            console.log(error);\r\n        }\r\n    }\r\n    const redirectApproval = (loan_id) => {\r\n        history.push(\"/loanApprovalDetails\", loan_id);\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"content\">\r\n                <Loader show={isShowLoader} />\r\n                {/* <Container fluid> */}\r\n                <Row>\r\n                    <Col>\r\n                        <Table className=\" shadow-lg p-3 mb-5 bg-white rounded\" striped bordered hover responsive>\r\n                            <thead className=\"bg-primary\">\r\n                                <tr>\r\n                                    <th>Application Date</th>\r\n                                    <th>Member name</th>\r\n                                    <th>Scheme ID</th>\r\n                                    <th>Loan Amount</th>\r\n                                    <th>Interest rate</th>\r\n                                    <th>Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {loanlist.length!=0?loanlist.map((loan, id) => (<tr key={loan.id}>\r\n                                    <td>{moment(loan.application_date).format(\"DD-MM-YYYY hh:ss A\")}</td>\r\n                                    <td>{loan.member?.member_name}</td>\r\n                                    <td>{loan.scheme_id}</td>\r\n                                    <td>{loan.loan_amount}</td>\r\n                                    <td>{loan.interest_rate}</td>\r\n                                    <td><Button variant=\"success\" size={\"sm\"} onClick={() => redirectApproval(loan.id)}>Approve</Button></td>\r\n                                </tr>)):<tr><td colSpan={\"6\"} className=\"text-center\">No Application for Approval!</td></tr>}\r\n                            </tbody>\r\n                        </Table>\r\n                    </Col>\r\n                </Row>\r\n                {/* </Container>             */}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LoanApproval;","import React, { useEffect, useState } from 'react';\r\nimport { Table, Button, Container, Row, Col } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport groupLoan from '../../models/groupLoan';\r\nimport Loader from '../layout/Loader';\r\nimport { useHistory } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { CHANGE_PAGE } from '../../constants/actionTypes'\r\n\r\nfunction DisburseLoan(props) {\r\n    let history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [loanlist, setLoanlist] = useState([]);\r\n    useEffect(() => {\r\n        getLoanList();\r\n        dispatch({ type: CHANGE_PAGE, page: \"Applications for Disburse\" });\r\n    }, [])\r\n\r\n    const getLoanList = async () => {\r\n        try {\r\n            setisShowLoader(true);\r\n            let response = await groupLoan.GroupLoanModel.getDisburseList();\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n                setLoanlist(response.body.message);\r\n            }\r\n\r\n        } catch (error) {\r\n            setisShowLoader(false);\r\n            console.log(error);\r\n        }\r\n    }\r\n    const redirectDisburse = (loan_id) => {\r\n        history.push(\"/loanApprovalDetails\", loan_id);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"content\">\r\n                <Loader show={isShowLoader} />\r\n                {/* <Container fluid> */}\r\n                {/* <h2 className=\"text-info text-center\">Applications For Disburse</h2> */}\r\n                <Row >\r\n                    <Col>\r\n                        <Table className=\" shadow-lg p-3 mb-5 bg-white rounded\" striped bordered hover responsive>\r\n                            <thead className=\"bg-primary\">\r\n                                <tr>\r\n                                    <th>Application Date</th>\r\n                                    <th>Member name</th>\r\n                                    <th>Scheme ID</th>\r\n                                    <th>Loan Amount</th>\r\n                                    <th>Interest rate</th>\r\n                                    <th>Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {loanlist.length!=0?loanlist.map((loan, id) => (<tr key={loan.id}>\r\n                                    <td>{moment(loan.application_date).format(\"DD-MM-YYYY hh:ss A\")}</td>\r\n                                    <td>{loan.member?.member_name}</td>\r\n                                    <td>{loan.scheme_id}</td>\r\n                                    <td>{loan.loan_amount}</td>\r\n                                    <td>{loan.interest_rate}</td>\r\n                                    <td><Button variant=\"success\" size={\"sm\"} onClick={() => redirectDisburse(loan.id)}>Disburse</Button></td>\r\n                                </tr>)):<tr><td colSpan={\"6\"} className=\"text-center\">No Application for Disbursement!</td></tr>}\r\n                            </tbody>\r\n                        </Table>\r\n                    </Col>\r\n                </Row>\r\n                {/* </Container>             */}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default DisburseLoan;","import React from 'react';\r\nimport { Table, Card} from 'react-bootstrap';\r\n\r\nfunction EmiCard(props) {\r\n    console.log(\"emi card\");\r\n    return (\r\n        <Card border=\"primary\" header\r\n        key={0}\r\n        text={'dark'}\r\n        className=\"m-2\"\r\n    >\r\n        <Card.Header className=\"bg-primary text-center\"><b>Loan Card</b>\r\n            <svg onClick={props.handlePrintEMI} xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" className=\"bi bi-printer float-right cursar\" viewBox=\"0 0 16 16\">\r\n            <path d=\"M2.5 8a.5.5 0 1 0 0-1 .5.5 0 0 0 0 1z\"/>\r\n            <path d=\"M5 1a2 2 0 0 0-2 2v2H2a2 2 0 0 0-2 2v3a2 2 0 0 0 2 2h1v1a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-1h1a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-1V3a2 2 0 0 0-2-2H5zM4 3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v2H4V3zm1 5a2 2 0 0 0-2 2v1H2a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1h-1v-1a2 2 0 0 0-2-2H5zm7 2v3a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1z\"/>\r\n            </svg>\r\n        </Card.Header>\r\n        <Card.Body>\r\n        {/* <Loader show={isShowEMILoader} relative={true}/> */}\r\n        <Table size={\"sm\"} className=\"bg-white rounded small\" bordered responsive>\r\n            <thead>\r\n              <tr className=\"bg-success\">\r\n                  <th>EMI date</th>\r\n                  <th>EMI Amount</th>\r\n                  <th>Principal</th>\r\n                  <th>Interest</th>\r\n                  <th>Outstanding</th>\r\n                  {props.showDisburseButton?<th>EMI Paid</th>:\"\"}\r\n                  \r\n              </tr>\r\n          </thead>\r\n                <tbody>\r\n                {props.emiData.map((value,id)=>(<tr className={props.paidEmiRecord[value.date]?\"bg-warning\":\"\"}>\r\n                    <td>{value.date}</td>\r\n                    <td>{value.EMI}</td>\r\n                    <td>{value.principal}</td>\r\n                    <td>{value.int_amount}</td>\r\n                    <td>{value.outstanding }</td>\r\n                    {props.showDisburseButton?\r\n                    <td>{props.paidEmiRecord[value.date]?\r\n                    \r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-check-circle\" viewBox=\"0 0 16 16\">\r\n                        <path d=\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\r\n                        <path d=\"M10.97 4.97a.235.235 0 0 0-.02.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-1.071-1.05z\"/>\r\n                        </svg>:\"\"}</td>:\"\"}\r\n                </tr>))}\r\n                </tbody>\r\n        </Table>\r\n        </Card.Body>\r\n    </Card>\r\n);\r\n}\r\n\r\nexport default  React.memo(EmiCard);","import React from 'react';\r\nimport { Table, Card} from 'react-bootstrap';\r\n\r\nclass EmiCardPrint extends React.PureComponent {\r\n    render() {\r\n        console.log(this.props.emiData());\r\n    return (\r\n        <div style={{margin:\"20px\"}}>\r\n        <div>\r\n            <p style={{textAlign:\"left\",float: \"left\",fontSize:\"14px\"}}>CIN : U85300UP2021NPL148302</p>\r\n            <p style={{textAlign:\"right\",float: \"right\",fontSize:\"14px\"}}>License No. : 126877</p>\r\n        </div>\r\n        <h3 className=\"text-center mb-5 mt-3\">Micro Finance Company</h3>\r\n        <Card border=\"primary\" header\r\n        key={0}\r\n        text={'dark'}\r\n        className=\"m-2\">\r\n        <Card.Header className=\" text-center\"><b>{this.props.heading}</b>\r\n\r\n        </Card.Header>\r\n        <Card.Body>\r\n        {/* <Loader show={isShowEMILoader} relative={true}/> */}\r\n        <Table size={\"sm\"} className=\"bg-white rounded\" striped bordered hover >\r\n            <thead>\r\n              <tr>{this.props.column.map(val=>(\r\n                  <th width=\"30%\" key={val}>{val}</th>\r\n              ))}\r\n              </tr>\r\n          </thead>\r\n                <tbody>\r\n                {this.props.emiData()}\r\n                {/* {this.props.emiData.map((value,id)=>(<tr>\r\n                    <td>{value.date}</td>\r\n                    <td>{value.EMI}</td>\r\n                    <td>{value.principal}</td>\r\n                    <td>{value.int_amount}</td>\r\n                    <td>{value.outstanding }</td>\r\n                    <td></td>\r\n                </tr>))} */}\r\n                </tbody>\r\n        </Table>\r\n        <div style={{marginTop:\"50px\"}}>\r\n            <p>“I ____________________ , declare that all the information submitted by me in the application form is correct, true and valid. I will present the supporting documents as and when required.” Please note that there should be no change in this text.</p>\r\n        </div>\r\n        <div style={{bottom:0,textAlign:'right',marginTop:\"100px\"}}>\r\n        <span>\r\n            <div><label><strong>Borrower Signature:_____________________</strong></label></div>\r\n            <div><label><strong>Co-Borrower Signature:_____________________</strong></label></div>\r\n        </span>\r\n        </div>\r\n        </Card.Body>\r\n    </Card>\r\n    </div>\r\n);\r\n\r\n    }\r\n}\r\n\r\nexport default EmiCardPrint;","import React from 'react';\r\nimport { Table, Card } from 'react-bootstrap';\r\nimport moment from 'moment';\r\n\r\nclass BorrowerPrint extends React.PureComponent {\r\n    render() {\r\n        const {loanDetails} = this.props;\r\n        return (\r\n            <>\r\n                <div style={{margin:\"20px\"}}>\r\n                    <div>\r\n                        <p style={{textAlign:\"left\",float: \"left\",fontSize:\"14px\"}}>CIN : U85300UP2021NPL148302</p>\r\n                        <p style={{textAlign:\"right\",float: \"right\",fontSize:\"14px\"}}>License No. : 126877</p>\r\n                    </div>\r\n                    <h2 style={{textAlign:\"center\",marginBottom:\"10px\"}}>Micro Finance Company</h2>\r\n                    <div style={{marginBottom:\"10px\"}}>\r\n                        <div style={{textAlign:'center'}}><h4>Application Form</h4></div>\r\n                        <div style={{textAlign:'center'}}><h4>Borrower Details</h4></div>\r\n                        <div style={{borderBlockColor:\"black\",width:\"150px\",height:\"150px\", border:\"1px solid black\",textAlign:'center'}}>Photo</div>\r\n                    </div>\r\n                    <Table className=\"bg-white rounded\" striped bordered hover style={{ border:\"1px solid black\"}} >\r\n                        <tbody>\r\n                        <tr><th width=\"30%\">Member Name</th><td>{loanDetails.member?.member_name}</td> </tr>\r\n                        <tr><th width=\"30%\">Member Group ID</th>  <td>{loanDetails.member?.member_group_id}</td></tr>\r\n                        <tr> <th width=\"30%\">Member Address</th>  <td>{loanDetails.address}</td></tr>\r\n                        <tr><th width=\"30%\">DOB</th>   <td>{loanDetails.member?.date_of_birth?moment(loanDetails.member?.date_of_birth).format(\"DD-MM-YYYY\"):\"\"}</td></tr>\r\n                        <tr><th width=\"30%\">Phone</th> <td>{loanDetails.member?.mobile_number}</td></tr>\r\n                        <tr><th width=\"30%\">Gender</th>  <td>{loanDetails.member?.gender}</td></tr>\r\n                        <tr><th width=\"30%\">Aadhar No.</th> <td>{loanDetails.member?.aadhar_number}</td></tr>\r\n                        <tr><th width=\"30%\">PAN</th> <td>{loanDetails.member?.pan_card_number}</td></tr>\r\n                        <tr><th width=\"30%\">Driving License</th> <td>{loanDetails.member?.driving_license_number}</td></tr>\r\n                        <tr><th width=\"30%\">Ration Card No.</th> <td>{loanDetails.member?.ration_card_number}</td></tr>\r\n                        <tr><th width=\"30%\">Voter ID No.</th> <td>{loanDetails.member?.voter_id_number}</td></tr>\r\n                        <tr><th width=\"30%\">Bank Account No.</th> <td>{loanDetails.member?.bank_account}</td></tr>\r\n                        <tr><th width=\"30%\">Bank IFSC code</th> <td>{loanDetails.member?.bank_ifsc_code}</td></tr>\r\n                        <tr><th width=\"30%\">Bank Account Holder</th> <td>{loanDetails.member?.bank_account_holder}</td></tr>\r\n                        </tbody>\r\n                    </Table>\r\n                    <div style={{marginBottom:\"5px\"}}>\r\n                        <div style={{textAlign:'center',paddingBottom:\"10px\"}}><h4>Co-Borrower Details</h4></div>\r\n                    </div>\r\n                    <Table className=\"bg-white rounded\" striped bordered hover >\r\n                        <tbody>\r\n                        <tr><th width=\"30%\">Name</th><td>{loanDetails.co_borrower_name}</td> </tr>\r\n                        <tr><th width=\"30%\">Relationship</th>  <td>{loanDetails.co_borrower_relationship}</td></tr>\r\n                        <tr><th width=\"30%\">Aadhar Card</th>  <td>{loanDetails.co_borrower_aadhar_card}</td></tr>\r\n                        <tr><th width=\"30%\">PAN Card</th>   <td>{loanDetails.co_borrower_pan_card}</td></tr>\r\n                        <tr><th width=\"30%\">Ele Card</th> <td>{loanDetails.co_borrower_ele_bill}</td></tr>\r\n                        </tbody>\r\n                    </Table>\r\n                    <div style={{marginTop:\"30px\"}}>\r\n                        <p>“I ____________________ , declare that all the information submitted by me in the application form is correct, true and valid. I will present the supporting documents as and when required.” Please note that there should be no change in this text.</p>\r\n                    </div>\r\n                    <div style={{bottom:0,textAlign:'right',marginTop:\"50px\"}}>\r\n                        <span>\r\n                            <div><label>Borrower Signature:_____________________</label></div>\r\n                            <div><label>Co-Borrower Signature:_____________________</label></div>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\nexport default BorrowerPrint;","import moment from 'moment';\r\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\r\nimport { Table, Button, Container, Row, Col, Card, ListGroup, Modal, Toast, Form } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport groupLoan from '../../models/groupLoan';\r\nimport Loader from '../layout/Loader';\r\nimport { useSelector } from \"react-redux\";\r\nimport { useReactToPrint } from 'react-to-print';\r\nimport { useRef } from 'react';\r\nimport EmiCard from './EmiCard';\r\nimport EmiCardPrint from './EmiCardPrint';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { CHANGE_PAGE } from '../../constants/actionTypes'\r\nimport BorrowerPrint from './BorrowerPrint';\r\nimport DatePicker from \"react-datepicker\";\r\nfunction LoanApprovalDetails(props) {\r\n    const memberDetailsRef = useRef();\r\n    const dispatch = useDispatch();\r\n    const handlePrintMemberDetail = useReactToPrint({\r\n        content: () => memberDetailsRef.current,\r\n        documentTitle: \"AA2-Member\",\r\n    });\r\n\r\n    const applicationRef = useRef();\r\n    const handlePrintApplication = useReactToPrint({\r\n        content: () => applicationRef.current,\r\n        documentTitle: \"AA2-application\",\r\n    });\r\n\r\n    const emiRef = useRef();\r\n    const handlePrintEMI = useReactToPrint({\r\n        content: () => emiRef.current,\r\n        documentTitle: \"AA2-EMI-details\",\r\n    });\r\n    const handlePrintEMICallbak = useCallback(handlePrintEMI, [])\r\n\r\n    const coBorrowerRef = useRef();\r\n    const handleCoBorrowerPrint = useReactToPrint({\r\n        content: () => coBorrowerRef.current,\r\n        documentTitle: \"AA2-CoBorrower\",\r\n    });\r\n\r\n    const borrowerRef = useRef();\r\n    const handlePrintBorrower = useReactToPrint({\r\n        content: () => borrowerRef.current,\r\n        documentTitle: \"AA2-Borrower\",\r\n    });\r\n\r\n    const auth = useSelector(state => state.auth);\r\n    const [paidEmiRecord, setPaidEmiRecord] = useState([])\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [isShowEMILoader, setisShowEMILoader] = useState(false)\r\n    const [emiData, setEmiData] = useState([])\r\n    const [loanDetails, setLoanDetails] = useState({});\r\n    const [showToast, setShowToast] = useState({ isShow: false, type: \"\", message: \"\" })\r\n    const [showApprovalButton, setShowApprovalButton] = useState(false);\r\n    const [showDisburseButton, setShowDisburseButton] = useState(false);\r\n    const [show, setShow] = useState(false);\r\n    const [disburseDate, setDisburseDate] = useState(new Date());\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    //const [disburseActionButton,setDisburseActionButton]\r\n    useEffect(() => {\r\n        console.log(props);\r\n        getLoanDetails();\r\n        dispatch({ type: CHANGE_PAGE, page: \"Application for Approval/Disburse\" });\r\n    }, [])\r\n\r\n    const getLoanDetails = async () => {\r\n        try {\r\n            setisShowLoader(true);\r\n            setisShowEMILoader(true);\r\n\r\n            let response = await groupLoan.GroupLoanModel.getLoanDetailbyId(props.location.state);\r\n            let calculateEmi = {\r\n                \"loanStartDate\": response.body.message[0].disburse_date,\r\n                \"interest_rate\": response.body.message[0].interest_rate,\r\n                \"tenure\": response.body.message[0].tenure,\r\n                \"EMI_payout\": response.body.message[0].EMI_payout,\r\n                \"loan_amount\": response.body.message[0].loan_amount,\r\n                \"EMI_type\": response.body.message[0].EMI_type\r\n            }\r\n            setisShowEMILoader(true);\r\n            let EmiData = await groupLoan.EmiModel.calculateEMI(calculateEmi);\r\n            let paidData = [];\r\n            let result = {};\r\n            paidData = await groupLoan.EmiModel.getPaidEmis(response.body.message[0].loan_account_no);\r\n            for (let i = 0; i < paidData.body.message.length; i++) {\r\n                let emiDate = moment(paidData.body.message[i].EMI_date).format(\"DD-MM-yyyy\");\r\n                result[emiDate] = true;\r\n            }\r\n            setPaidEmiRecord(result);\r\n            setEmiData(EmiData.body.message);\r\n            setisShowEMILoader(false);\r\n            console.log(response);\r\n\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n                setShowApprovalButton(response.body.message[0].is_approved != 0 ? false : true);\r\n                setShowDisburseButton(response.body.message[0].is_approved == 1 && response.body.message[0].is_disbursed == 0 ? true : false);\r\n                setLoanDetails(response.body.message[0]);\r\n            }\r\n\r\n        } catch (error) {\r\n            setisShowEMILoader(false);\r\n            setisShowLoader(false);\r\n            console.log(error);\r\n        }\r\n    }\r\n    const actionOnLoan = async (actionType) => {\r\n        try {\r\n            setisShowLoader(true);\r\n            const data = { \"id\": props.location.state, \"actionType\": actionType }\r\n            let response = await groupLoan.GroupLoanModel.approveRejectLoan(data);\r\n            console.log(response);\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n                setShowApprovalButton(false);\r\n                //setShowDisburseButton(false);\r\n                setShowToast({ isShow: true, type: \"bg-success\", message: response.body.message })\r\n            }\r\n        } catch (error) {\r\n            setisShowLoader(false);\r\n            setShowToast({ isShow: true, type: \"bg-danger\", message: error.response.body.message })\r\n            console.log(error);\r\n        }\r\n    }\r\n    const actionDisburseLoan = async (actionType) => {\r\n        try {\r\n            handleClose();\r\n            setisShowLoader(true);\r\n            const data = { \"id\": props.location.state, \"actionType\": actionType, disburseDate: disburseDate }\r\n            let response = await groupLoan.GroupLoanModel.disburseRejectLoan(data);\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n                setShowDisburseButton(false);\r\n                setShowToast({ isShow: true, type: \"bg-success\", message: response.body.message })\r\n            }\r\n        } catch (error) {\r\n            setisShowLoader(false);\r\n            setShowToast({ isShow: true, type: \"bg-danger\", message: error.response.body.message })\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n    const emiCol = useMemo(() => {\r\n        return [\"EMI date\", \"EMI Amount\", \"Principal\", \"Interest\", \"Outstanding\", \"Signature\"];\r\n    }, [])\r\n    const emiRecords = useCallback(() => {\r\n        return (emiData.map((value, id) => (\r\n            <tr>\r\n                <td>{value.date}</td>\r\n                <td>{value.EMI}</td>\r\n                <td>{value.principal}</td>\r\n                <td>{value.int_amount}</td>\r\n                <td>{value.outstanding}</td>\r\n                <td></td>\r\n            </tr>\r\n        )))\r\n    }, [emiData]);\r\n    const applicationRecords = useCallback(() => {\r\n        return (\r\n            <>\r\n                <tr><th>Account No</th>  <td>{loanDetails.loan_account_no}</td></tr>\r\n                <tr><th>Application Date</th><td>{moment(loanDetails.application_date).format(\"DD-MM-YYYY HH:SS\")}</td> </tr>\r\n                <tr><th>Scheme Id</th>  <td>{loanDetails.scheme_id}</td></tr>\r\n                <tr> <th>Member Address</th>  <td>{loanDetails.address}</td></tr>\r\n                <tr><th>Loan Amount</th>   <td>{loanDetails.loan_amount}</td></tr>\r\n                <tr><th>Interest rate</th> <td>{loanDetails.interest_rate}</td></tr>\r\n                <tr><th>EMI payout</th>  <td>{loanDetails.EMI_payout}</td></tr>\r\n                <tr><th>EMI type</th>  <td>{loanDetails.EMI_type}</td></tr>\r\n                <tr><th>Tenure</th> <td>{loanDetails.tenure}</td></tr>\r\n            </>)\r\n    }, [loanDetails]);\r\n\r\n    const coBorrowRecords = useCallback(() => {\r\n        return (\r\n            <>\r\n                <tr><th>Name</th>  <td>{loanDetails.co_borrower_name}</td></tr>\r\n                <tr><th>Relationship</th><td>{loanDetails.co_borrower_relationship}</td> </tr>\r\n                <tr><th>Aadhar Card</th><td>{loanDetails.co_borrower_aadhar_card}</td> </tr>\r\n                <tr><th>PAN Card</th><td>{loanDetails.co_borrower_pan_card}</td> </tr>\r\n                <tr><th>Ele Card</th><td>{loanDetails.co_borrower_ele_bill}</td> </tr>\r\n            </>)\r\n    }, [loanDetails]);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"content\">\r\n                <Modal show={show} onHide={handleClose}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Loan Disbursement</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Form>\r\n                            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\r\n                                <Form.Label>Disbursement Date:</Form.Label>\r\n                                <DatePicker className=\"form-control\"\r\n                                selected={disburseDate}\r\n                                onChange={(date) => setDisburseDate(date)}\r\n                                name=\"disburseDate\"\r\n                                dateFormat=\"dd/MM/yyyy\"\r\n                            />\r\n                           </Form.Group>\r\n                        </Form>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={handleClose}>\r\n                            Close\r\n                        </Button>\r\n                        <Button variant=\"primary\" onClick={()=>actionDisburseLoan(1)}>\r\n                            Disburse\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n                <Toast key={1} autohide delay={3000} show={showToast.isShow} onClose={() => setShowToast({ isShow: false, type: \"\", message: \"\" })} className={\"loader \" + (showToast.type)} >\r\n                    <Toast.Header>\r\n                        <strong className=\"me-auto\">{showToast.type == \"bg-danger\" ? \"Error\" : \"Success\"} Message</strong>\r\n                    </Toast.Header>\r\n                    <Toast.Body className=\"Dark\">\r\n                        {showToast.message}\r\n                    </Toast.Body>\r\n                </Toast>\r\n                <Loader show={isShowLoader} />\r\n                {showApprovalButton && (auth.role == \"checker\" || auth.role == \"admin\") ? <Row className=\"m-5\">\r\n                    <Col className=\"text-center\">\r\n                        <Button variant=\"primary\" type=\"button\" onClick={() => actionOnLoan(1)}>\r\n                            Approve\r\n                        </Button>{'  '}\r\n                        <Button variant=\"danger\" type=\"button\" onClick={() => actionOnLoan(-1)}>\r\n                            Reject\r\n                        </Button>\r\n                    </Col>\r\n                </Row> : \"\"}\r\n\r\n                {showDisburseButton && (auth.role == \"checker\" || auth.role == \"admin\") ? <Row className=\"m-5\">\r\n                    <Col className=\"text-center\">\r\n                        <Button variant=\"primary\" type=\"button\" onClick={() => handleShow()}>\r\n                            Disburse\r\n                        </Button>{'  '}\r\n                        <Button variant=\"danger\" type=\"button\" onClick={() => actionDisburseLoan(-1)}>\r\n                            Reject\r\n                        </Button>\r\n                    </Col>\r\n                </Row> : \"\"}\r\n\r\n                <Row xs={1} md={2} className=\"g-1\">\r\n                    <Col>\r\n                        <Card border=\"success\" header\r\n                            key={0}\r\n                            text={'dark'}\r\n                            className=\"m-2\"\r\n                            ref={memberDetailsRef}\r\n                        >\r\n                            <Card.Header className=\"bg-success text-center\"><b>Borrower Details</b>\r\n                                <svg onClick={handlePrintBorrower} xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" className=\"bi bi-printer float-right cursar\" viewBox=\"0 0 16 16\">\r\n                                    <path d=\"M2.5 8a.5.5 0 1 0 0-1 .5.5 0 0 0 0 1z\" />\r\n                                    <path d=\"M5 1a2 2 0 0 0-2 2v2H2a2 2 0 0 0-2 2v3a2 2 0 0 0 2 2h1v1a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-1h1a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-1V3a2 2 0 0 0-2-2H5zM4 3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v2H4V3zm1 5a2 2 0 0 0-2 2v1H2a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1h-1v-1a2 2 0 0 0-2-2H5zm7 2v3a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1z\" />\r\n                                </svg>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <Table size=\"sm\" className=\"bg-white rounded\" striped bordered hover responsive>\r\n                                    <tbody>\r\n                                        <tr><th>Member Name</th><td>{loanDetails.member?.member_name}</td> </tr>\r\n                                        <tr><th>Member Group ID</th>  <td>{loanDetails.member?.member_group_id}</td></tr>\r\n                                        <tr> <th>Member Address</th>  <td>{loanDetails.address}</td></tr>\r\n\r\n                                        <tr><th>DOB</th>   <td>{loanDetails.member?.date_of_birth ? moment(loanDetails.member?.date_of_birth).format(\"DD-MM-YYYY\") : \"\"}</td></tr>\r\n                                        <tr><th>Phone</th> <td>{loanDetails.member?.mobile_number}</td></tr>\r\n                                        <tr><th>Gender</th>  <td>{loanDetails.member?.gender}</td></tr>\r\n                                        <tr><th>Aadhar No.</th> <td>{loanDetails.member?.aadhar_number}</td></tr>\r\n                                        <tr><th>PAN</th> <td>{loanDetails.member?.pan_card_number}</td></tr>\r\n                                        <tr><th>Driving License</th> <td>{loanDetails.member?.driving_license_number}</td></tr>\r\n                                        <tr><th>Ration Card No.</th> <td>{loanDetails.member?.ration_card_number}</td></tr>\r\n                                        <tr><th>Voter ID No.</th> <td>{loanDetails.member?.voter_id_number}</td></tr>\r\n                                        <tr><th>Bank Account No.</th> <td>{loanDetails.member?.bank_account}</td></tr>\r\n                                        <tr><th>Bank IFSC code</th> <td>{loanDetails.member?.bank_ifsc_code}</td></tr>\r\n                                        <tr><th>Bank Account Holder</th> <td>{loanDetails.member?.bank_account_holder}</td></tr>\r\n                                    </tbody>\r\n                                </Table>\r\n\r\n                            </Card.Body>\r\n                        </Card>\r\n                        <div style={{ display: \"none\" }}><BorrowerPrint ref={borrowerRef} loanDetails={loanDetails} /></div>\r\n\r\n                    </Col>\r\n                    <Col>\r\n                        <Card border=\"info\" header\r\n                            key={0}\r\n                            text={'dark'}\r\n                            // style={{ width: '18rem' }}\r\n                            className=\"m-2\"\r\n\r\n                        >\r\n                            <Card.Header className=\"bg-info text-center\"><b>Application Details</b><svg onClick={handlePrintApplication} xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" className=\"bi bi-printer float-right cursar\" viewBox=\"0 0 16 16\">\r\n                                <path d=\"M2.5 8a.5.5 0 1 0 0-1 .5.5 0 0 0 0 1z\" />\r\n                                <path d=\"M5 1a2 2 0 0 0-2 2v2H2a2 2 0 0 0-2 2v3a2 2 0 0 0 2 2h1v1a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-1h1a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-1V3a2 2 0 0 0-2-2H5zM4 3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v2H4V3zm1 5a2 2 0 0 0-2 2v1H2a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1h-1v-1a2 2 0 0 0-2-2H5zm7 2v3a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1z\" />\r\n                            </svg></Card.Header>\r\n                            <Card.Body>\r\n\r\n                                <Table size=\"sm\" className=\"bg-white rounded\" striped bordered hover responsive>\r\n                                    <tbody>\r\n                                        <tr><th>Account No</th>  <td>{loanDetails.loan_account_no}</td></tr>\r\n                                        <tr><th>Application Date</th><td>{moment(loanDetails.application_date).format(\"DD-MM-YYYY HH:SS\")}</td> </tr>\r\n                                        <tr><th>Scheme Id</th>  <td>{loanDetails.scheme_id}</td></tr>\r\n                                        <tr> <th>Member Address</th>  <td>{loanDetails.address}</td></tr>\r\n                                        <tr><th>Loan Amount</th>   <td>{loanDetails.loan_amount}</td></tr>\r\n                                        <tr><th>Interest rate</th> <td>{loanDetails.interest_rate}</td></tr>\r\n                                        <tr><th>EMI payout</th>  <td>{loanDetails.EMI_payout}</td></tr>\r\n                                        <tr><th>EMI type</th>  <td>{loanDetails.EMI_type}</td></tr>\r\n                                        {/* <tr><th>EMI amount</th> <td>{loanDetails.EMI_amount}</td></tr> */}\r\n                                        <tr><th>Tenure</th> <td>{loanDetails.tenure}</td></tr>\r\n                                    </tbody>\r\n                                </Table>\r\n\r\n                            </Card.Body>\r\n                        </Card>\r\n                        <div style={{ display: \"none\" }}><EmiCardPrint ref={applicationRef} emiData={applicationRecords} column={[]} heading=\"Application Details\" /></div>\r\n                    </Col>\r\n                    <Col >\r\n                        <Loader show={isShowEMILoader} relative={true} />\r\n                        <EmiCard showDisburseButton={loanDetails.is_approved == 1 && loanDetails.is_disbursed == 1} emiData={emiData} paidEmiRecord={paidEmiRecord} handlePrintEMI={handlePrintEMICallbak} />\r\n                        <div style={{ display: \"none\" }}><EmiCardPrint ref={emiRef} emiData={emiRecords} column={emiCol} heading=\"Loan Card\" /></div>\r\n                    </Col>\r\n                    <Col>\r\n                        <Card border=\"info\" header\r\n                            key={0}\r\n                            text={'dark'}\r\n                            // style={{ width: '18rem' }}\r\n                            className=\"m-2\"\r\n                        // ref={applicationRef}\r\n                        >\r\n                            <Card.Header className=\"bg-info text-center\"><b>Co-Borrower Details</b>\r\n                                <svg onClick={handleCoBorrowerPrint} xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" className=\"bi bi-printer float-right cursar\" viewBox=\"0 0 16 16\">\r\n                                    <path d=\"M2.5 8a.5.5 0 1 0 0-1 .5.5 0 0 0 0 1z\" />\r\n                                    <path d=\"M5 1a2 2 0 0 0-2 2v2H2a2 2 0 0 0-2 2v3a2 2 0 0 0 2 2h1v1a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-1h1a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-1V3a2 2 0 0 0-2-2H5zM4 3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v2H4V3zm1 5a2 2 0 0 0-2 2v1H2a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1h-1v-1a2 2 0 0 0-2-2H5zm7 2v3a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1z\" />\r\n                                </svg>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n\r\n                                <Table size=\"sm\" className=\"bg-white rounded\" striped bordered hover responsive>\r\n                                    <tbody>\r\n                                        <tr><th>Name</th>  <td>{loanDetails.co_borrower_name}</td></tr>\r\n                                        <tr><th>Relationship</th><td>{loanDetails.co_borrower_relationship}</td> </tr>\r\n                                        <tr><th>Aadhar Card</th><td>{loanDetails.co_borrower_aadhar_card}</td> </tr>\r\n                                        <tr><th>PAN Card</th><td>{loanDetails.co_borrower_pan_card}</td> </tr>\r\n                                        <tr><th>Ele Card</th><td>{loanDetails.co_borrower_ele_bill}</td> </tr>\r\n                                    </tbody>\r\n                                </Table>\r\n\r\n                            </Card.Body>\r\n                        </Card>\r\n                        <div style={{ display: \"none\" }}><EmiCardPrint ref={coBorrowerRef} emiData={coBorrowRecords} column={[]} heading=\"Co-Borrower Details\" /></div>\r\n                    </Col>\r\n\r\n                </Row>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LoanApprovalDetails;","import React, { useEffect, useState, useMemo } from 'react';\r\nimport { Table, Badge, Container, Row, Col, Button, Pagination } from 'react-bootstrap';\r\nimport groupLoan from '../../models/groupLoan';\r\nimport Loader from '../layout/Loader';\r\nimport { useHistory } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport { useTable, useSortBy, usePagination, useFilters } from 'react-table'\r\nimport { useDispatch } from \"react-redux\";\r\nimport { CHANGE_PAGE } from '../../constants/actionTypes'\r\n\r\nfunction AllApplications(props) {\r\n    let history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [loanlist, setLoanlist] = useState([]);\r\n    useEffect(() => {\r\n        getLoanList();\r\n        dispatch({ type: CHANGE_PAGE, page: \"All Loan Applications\" });\r\n    }, [])\r\n    const data = useMemo(\r\n        () =>\r\n\r\n            loanlist.map((record, index) => {\r\n                return {\r\n                    col1: record.loan_account_no ? record.loan_account_no : \"N/A\",\r\n                    col2: moment(record.application_date).format('DD-MM-yyy hh:ss A'),\r\n                    col3: record.member?.member_name,\r\n                    col4: record.scheme_id,\r\n                    col5: record.loan_amount,\r\n                    col6: record.interest_rate,\r\n                    col7: record.actionStatus,\r\n                    col8: record\r\n                }\r\n            }\r\n            )\r\n        ,\r\n        [loanlist]\r\n    )\r\n\r\n    const columns = useMemo(\r\n        () => [\r\n            {\r\n                Header: 'Account no.',\r\n                accessor: 'col1', // accessor is the \"key\" in the data\r\n                allowFilter: true\r\n            },\r\n            {\r\n                Header: 'Application date',\r\n                accessor: 'col2', // accessor is the \"key\" in the data\r\n                allowFilter: true\r\n            },\r\n            {\r\n                Header: 'Member name',\r\n                accessor: 'col3',\r\n                allowFilter: true\r\n            },\r\n            {\r\n                Header: 'Scheme ID',\r\n                accessor: 'col4',\r\n                allowFilter: true\r\n            },\r\n            {\r\n                Header: 'Loan amount',\r\n                accessor: 'col5',\r\n                allowFilter: true\r\n            },\r\n            {\r\n                Header: 'Interest rate',\r\n                accessor: 'col6',\r\n                allowFilter: true\r\n            },\r\n            {\r\n                Header: 'Status',\r\n                accessor: 'col7',\r\n                allowFilter: false\r\n            },\r\n            {\r\n                Header: 'Action',\r\n                accessor: 'col8',\r\n                allowFilter: false\r\n            }\r\n\r\n        ],\r\n        []\r\n    )\r\n    function DefaultColumnFilter({\r\n        column: { filterValue, preFilteredRows, setFilter },\r\n    }) {\r\n        const count = preFilteredRows.length\r\n\r\n        return (\r\n            <input\r\n                className=\"form-control\"\r\n                value={filterValue || ''}\r\n                onChange={e => {\r\n                    setFilter(e.target.value || undefined)\r\n                }}\r\n                placeholder={`Search ${count} records...`}\r\n            />\r\n        )\r\n    }\r\n    const defaultColumn = React.useMemo(\r\n        () => ({\r\n            // Default Filter UI\r\n            Filter: DefaultColumnFilter,\r\n        }),\r\n        []\r\n    )\r\n    const paginate = (totalPage) => {\r\n        let pageNumberArray = [];\r\n        for (let i = 1; i <= totalPage; i++) {\r\n            pageNumberArray.push(i);\r\n        }\r\n        return (\r\n            <Pagination>\r\n                <Pagination.First onClick={() => gotoPage(0)} />\r\n                <Pagination.Prev onClick={() => previousPage()} disabled={!canPreviousPage} />\r\n                {pageNumberArray.map(num => <Pagination.Item key={num} active={num === (pageIndex + 1)} onClick={() => gotoPage(num - 1)}>{num}</Pagination.Item>)}\r\n                <Pagination.Next onClick={() => nextPage()} disabled={!canNextPage} />\r\n                <Pagination.Last onClick={() => gotoPage(totalPage - 1)} />\r\n            </Pagination>\r\n        );\r\n\r\n    }\r\n\r\n    const getLoanList = async () => {\r\n        try {\r\n            setisShowLoader(true);\r\n            let response = await groupLoan.GroupLoanModel.getAllLoanApplications();\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n                let formatedData = response.body.message.map((loan, id) => {\r\n                    if (loan.is_approved == 1 && loan.is_disbursed == 1) {\r\n                        loan[\"actionStatus\"] = \"Disbursed\";\r\n                    } else if (loan.is_approved == 1 && loan.is_disbursed == 0) {\r\n                        loan[\"actionStatus\"] = \"Approved\";\r\n                    } else if (loan.is_disbursed == -1) {\r\n                        loan[\"actionStatus\"] = \"Disburse Rejected\";\r\n                    } else if (loan.is_approved == -1) {\r\n                        loan[\"actionStatus\"] = \"Approval Rejected\";\r\n                    } else {\r\n                        loan[\"actionStatus\"] = \"Pending\";\r\n                    }\r\n\r\n                    return loan;\r\n                });\r\n                setLoanlist(formatedData);\r\n            }\r\n\r\n        } catch (error) {\r\n            setisShowLoader(false);\r\n            console.log(error);\r\n        }\r\n    }\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n        pageOptions,\r\n        page,\r\n        pageCount,\r\n        state: { pageIndex, pageSize },\r\n        gotoPage,\r\n        previousPage,\r\n        nextPage,\r\n        setPageSize,\r\n        canPreviousPage,\r\n        canNextPage,\r\n    } = useTable({ columns, data, defaultColumn, initialState: { pageIndex: 0 } }, useFilters, useSortBy, usePagination)\r\n    return (\r\n        <>\r\n            <div className=\"content\">\r\n                <Loader show={isShowLoader} />\r\n                {/* <Container fluid> */}\r\n                <Row>\r\n                    <Col>\r\n                        <div className=\"text-right\">\r\n                            {paginate(pageCount)}\r\n                        </div>\r\n\r\n                        <Table  {...getTableProps()} className=\"shadow-lg p-3 mb-5 bg-white rounded small\" striped bordered hover responsive>\r\n                            <thead className=\"bg-primary\">\r\n                                {headerGroups.map(headerGroup => (\r\n                                    <tr {...headerGroup.getHeaderGroupProps()}>\r\n                                        {headerGroup.headers.map(column => (\r\n                                            <th\r\n                                                {...column.getHeaderProps(column.getSortByToggleProps())}\r\n                                            >\r\n                                                {column.render('Header')}\r\n                                                <span>\r\n                                                    {column.isSorted ? (column.isSortedDesc ? ' 🔽' : ' 🔼') : ''}\r\n                                                </span>\r\n                                                <div>{column.allowFilter ? column.render('Filter') : null}</div>\r\n                                            </th>\r\n                                        ))}\r\n                                    </tr>\r\n                                ))}\r\n                            </thead>\r\n                            <tbody{...getTableBodyProps()}>\r\n\r\n                                {page.map(row => {\r\n                                    prepareRow(row)\r\n                                    return (\r\n                                        <tr {...row.getRowProps()}>\r\n                                            {row.cells.map(cell => {\r\n                                                console.log(cell);\r\n                                                if (cell.column.id != \"col8\" && cell.column.id != \"col7\") {\r\n                                                    return (\r\n                                                        <td {...cell.getCellProps()}>\r\n                                                            {cell.render('Cell')}\r\n                                                        </td>\r\n                                                    )\r\n                                                } else if (cell.column.id == \"col8\") {\r\n                                                    return (\r\n                                                        <td>\r\n                                                            <Button size={\"sm\"} variant=\"info\" onClick={() => { history.push(\"/loanApprovalDetails\", cell.value.id) }} type=\"button\" className=\"ml-2\">\r\n                                                                View\r\n                                                            </Button>\r\n                                                        </td>\r\n                                                    )\r\n                                                } else if (cell.column.id == \"col7\") {\r\n                                                    return (\r\n                                                        <td>\r\n                                                            <Badge className={cell.value == \"Approved\" || cell.value == \"Disbursed\" ? \"bg-success\" : \"bg-danger\"}>\r\n                                                                {cell.value}\r\n                                                            </Badge>\r\n                                                        </td>)\r\n\r\n                                                }\r\n                                            })}\r\n                                        </tr>\r\n                                    )\r\n                                })}\r\n\r\n                            </tbody>\r\n                        </Table>\r\n                        <div className=\"text-right\">\r\n                            {paginate(pageCount)}\r\n                        </div>\r\n\r\n                    </Col>\r\n                </Row>\r\n\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AllApplications;","import React,{useState,useRef,useEffect } from 'react';\r\nimport { Table,Button, Container, Row, Col, Card, Form } from 'react-bootstrap';\r\nimport Loader from '../layout/Loader';\r\nimport { useFormik } from 'formik';\r\nimport DatePicker from \"react-datepicker\";\r\nimport groupLoan from \"../../models/groupLoan\";\r\nimport { useReactToPrint } from 'react-to-print';\r\nfunction EmiCalculator(props) {\r\n    const [enrollmentDate, setEnrollmentDate] = useState(new Date());\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [calculatedData,setCalculatedData] = useState([]);\r\n    const componentRef = useRef();\r\n    const handlePrint = useReactToPrint({\r\n      content: () => componentRef.current,\r\n      documentTitle:\"EMI-details\",\r\n    });\r\n    const validate = values => {\r\n        const errors = {};\r\n        if (!values.interest_rate) {\r\n          errors.interest_rate = 'Interest rate is Required';\r\n        }\r\n        if (!values.loan_amount) {\r\n            errors.loan_amount = 'Loan amount is Required';\r\n          }\r\n          if (!values.tenure) {\r\n            errors.tenure = 'Tenure is Required';\r\n          }\r\n          if (!values.EMI_payout) {\r\n            errors.EMI_payout = 'EMI payout is Required';\r\n          }\r\n          return errors;\r\n      };\r\n      const formik = useFormik({\r\n        initialValues: {\r\n        loanStartDate: '',\r\n        interest_rate: '',\r\n        tenure: '',\r\n        EMI_payout:'',\r\n        loan_amount:'',\r\n        EMI_type:\"flat\"\r\n        },\r\n        validate,\r\n        onSubmit: async (values) => {\r\n          setisShowLoader(true);\r\n          try {\r\n             values.loanStartDate = enrollmentDate;\r\n             console.log(values);\r\n            let response = await groupLoan.EmiModel.calculateEMI(values);\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n              //formik.resetForm();\r\n              setCalculatedData(response.body.message);\r\n            } else {\r\n              //setShowToast({ isShow: true,type:\"bg-danger\", message: response.body.message })\r\n            }\r\n    \r\n          } catch (error) {\r\n            setisShowLoader(false);\r\n            //setShowToast({ isShow: true,type:\"bg-danger\", message: error.response.body.message })\r\n          }\r\n        },\r\n      });\r\n    \r\n    return (\r\n        <>\r\n        <Loader show={isShowLoader}/>\r\n        <div className=\"content\">\r\n        <div className=\"row\">\r\n        <div className=\"col-md-4\">\r\n            <Container className=\"bg-white mt-2 shadow-lg p-3 mb-5 bg-white rounded\">\r\n            <Form onSubmit={formik.handleSubmit}>\r\n            <Form.Group as={Col} className=\"form-group required pl-0 pr-0\" controlId=\"formGridEnroll\">\r\n                            <Form.Label >Application Date</Form.Label>\r\n                            <DatePicker className=\"form-control\"\r\n                                selected={enrollmentDate}\r\n                                onChange={(date) => setEnrollmentDate(date)}\r\n                                name=\"loanStartDate\"\r\n                                dateFormat=\"dd/MM/yyyy\"\r\n                            />\r\n                {formik.touched.loanStartDate && formik.errors.loanStartDate ? (\r\n                  <div className=\"text-danger\">{formik.errors.loanStartDate}</div>\r\n                ) : null}\r\n\r\n            </Form.Group>\r\n\r\n              <Form.Group className=\"mb-3 form-group required\" controlId=\"formBasicEmail\">\r\n                <Form.Label>Loan amount</Form.Label>\r\n                <Form.Control\r\n                \r\n                  type=\"number\"\r\n                  name=\"loan_amount\"\r\n                  placeholder=\"Enter loan amount\"\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.loan_amount}\r\n                />\r\n                {formik.touched.loan_amount && formik.errors.loan_amount ? (\r\n                  <div className=\"text-danger\">{formik.errors.loan_amount}</div>\r\n                ) : null}\r\n\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-3 form-group required\" controlId=\"formBasicEmail\">\r\n                <Form.Label>Interest rate</Form.Label>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  name=\"interest_rate\"\r\n                  placeholder=\"Enter interest rate\"\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.interest_rate}\r\n\r\n                />\r\n                {formik.touched.interest_rate && formik.errors.interest_rate ? (\r\n                  <div className=\"text-danger\">{formik.errors.interest_rate}</div>\r\n                ) : null}\r\n\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-3 form-group required\" controlId=\"formBasicEmail\">\r\n                <Form.Label>Tenure</Form.Label>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  name=\"tenure\"\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.tenure}\r\n\r\n                />\r\n                {formik.touched.tenure && formik.errors.tenure ? (\r\n                  <div className=\"text-danger\">{formik.errors.tenure}</div>\r\n                ) : null}\r\n\r\n              </Form.Group>\r\n              <Form.Group as={Col} className=\"mb-3 pl-0 pr-0\" controlId=\"formGridAddress1\">\r\n                <Form.Label>EMI payout</Form.Label>\r\n                <select\r\n                    className=\"form-control\"\r\n                    name=\"EMI_payout\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.EMI_payout}\r\n                >\r\n                    <option key=\"\" value=\"\">Select payout</option>\r\n\r\n                    {/* <option key=\"daily\" value=\"daily\">Daily</option> */}\r\n                    {/* <option key=\"weekly\" value=\"weekly\">Weekly</option>\r\n                    <option key=\"monthly\" value=\"fortnight\">Fortnight</option> */}\r\n                    <option key=\"monthly\" value=\"monthly\">Monthly</option>\r\n                </select>\r\n                {formik.touched.EMI_payout && formik.errors.EMI_payout ? (\r\n                  <div className=\"text-danger\">{formik.errors.EMI_payout}</div>\r\n                ) : null}\r\n\r\n            </Form.Group>\r\n\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                Calculate\r\n              </Button>\r\n\r\n            </Form>\r\n            </Container>\r\n            </div>\r\n            <div className=\"col-md-8\">\r\n            <Card border=\"primary\" header\r\n                        key={0}\r\n                        text={'dark'}\r\n                        // style={{ width: '18rem' }}\r\n                        className=\"m-2\"\r\n                        ref={componentRef}\r\n                    >\r\n                      {/* {isclickPrint?<h2 className=\"text-center mb-3\">AA2 MicroFinance Foundation</h2>:\"\"} */}\r\n                        <Card.Header className=\"bg-primary text-center\"><b>Micro Finance EMI Details</b><svg onClick={handlePrint} xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" className=\"bi bi-printer float-right cursar\" viewBox=\"0 0 16 16\">\r\n  <path d=\"M2.5 8a.5.5 0 1 0 0-1 .5.5 0 0 0 0 1z\"/>\r\n  <path d=\"M5 1a2 2 0 0 0-2 2v2H2a2 2 0 0 0-2 2v3a2 2 0 0 0 2 2h1v1a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-1h1a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-1V3a2 2 0 0 0-2-2H5zM4 3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v2H4V3zm1 5a2 2 0 0 0-2 2v1H2a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1h-1v-1a2 2 0 0 0-2-2H5zm7 2v3a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1z\"/>\r\n</svg></Card.Header>\r\n                        <Card.Body >\r\n                            <Table  size={\"sm\"} className=\"bg-white rounded\" striped bordered hover responsive>\r\n                            <thead>\r\n                              <tr>\r\n                                  <th>EMI date</th>\r\n                                  <th>EMI Amount</th>\r\n                                  <th>Principal</th>\r\n                                  <th>Interest</th>\r\n                                  <th>Outstanding</th>\r\n                              </tr>\r\n                          </thead>\r\n                                <tbody>\r\n                                {calculatedData.map((value,id)=>(<tr key={id}>\r\n                                    <td>{value.date}</td>\r\n                                    <td>{value.EMI}</td>\r\n                                    <td>{value.principal}</td>\r\n                                    <td>{value.int_amount}</td>\r\n                                    <td>{value.outstanding }</td>\r\n                                </tr>))}\r\n                                </tbody>\r\n                            </Table>\r\n\r\n                        </Card.Body>\r\n                    </Card>\r\n            </div>\r\n\r\n    </div>\r\n    </div>            \r\n        </>\r\n    );\r\n}\r\n\r\nexport default EmiCalculator;","import React, { useEffect, useState } from 'react';\r\nimport { Table, Button, Container, Row, Col, Modal, InputGroup, FormLabel } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport groupLoan from '../../models/groupLoan';\r\nimport Loader from '../layout/Loader';\r\nimport DatePicker from \"react-datepicker\";\r\nimport moment from \"moment\"\r\nimport { useDispatch } from \"react-redux\";\r\nimport { CHANGE_PAGE } from '../../constants/actionTypes'\r\nfunction DueEmis(props) {\r\n    const dispatch = useDispatch();\r\n    const [showDeleteModel, setShowDeleteModel] = useState(false)\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [dueEmis, setDueEmis] = useState([]);\r\n    const [paidID, setPaidID] = useState(0)\r\n    const [enrollmentDate, setEnrollmentDate] = useState(new Date());\r\n    useEffect(() => {\r\n        getDueEmisRecord();\r\n        dispatch({ type: CHANGE_PAGE, page: \"EMI Dues\" });\r\n    }, [])\r\n\r\n    const getDueEmisRecord = (today = moment().format(\"yyyy-MM-DD\")) => {\r\n        setisShowLoader(true);\r\n        groupLoan.EmiModel.getDueEmis(today).then(res => {\r\n            setisShowLoader(false);\r\n            if (res.statusCode == 200) {\r\n                let emiData = [];\r\n                emiData = res.body.message.map(emi=>{ \r\n                   // return emi\r\n                   emi[\"loan_table_id\"]=emi.loan_account_no.substring(11)\r\n                   return emi;\r\n                });\r\n                setDueEmis(emiData);\r\n            } else {\r\n                setDueEmis([]);\r\n            }\r\n        })\r\n    }\r\n    const paidEMI = async()=>{\r\n        setShowDeleteModel(false);\r\n        try{\r\n            setisShowLoader(true);\r\n            let response = await groupLoan.EmiModel.paidEmi(paidID);\r\n            setisShowLoader(false);\r\n            if(response.statusCode == 200){\r\n                let UpdatedList = dueEmis.filter((emidata,idx)=>emidata.id!=paidID);\r\n                setDueEmis(UpdatedList);\r\n            }\r\n        }catch (error) {\r\n            console.log(error.response.body.message);\r\n            setisShowLoader(false);\r\n        }\r\n    }\r\n    const paidHandle=(id)=>{\r\n        setPaidID(id);        \r\n        setShowDeleteModel(true);\r\n    }\r\n    const changeEmiDate = (selectedDate)=>{\r\n        setEnrollmentDate(selectedDate)\r\n        getDueEmisRecord(moment(selectedDate).format(\"yyyy-MM-DD\"));\r\n    }\r\n    return (\r\n        <>\r\n      <Modal show={showDeleteModel} onHide={()=>setShowDeleteModel(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Paid EMI </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>Are you sure?</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={()=>setShowDeleteModel(false)}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={()=>paidEMI()}>\r\n            Paid\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>        \r\n\r\n            <Loader show={isShowLoader} />\r\n            <div className=\"content\">\r\n                {/* <h2 className=\"text-info text-center\">Due EMIs</h2> */}\r\n                <Row>\r\n              <Col>\r\n                    <InputGroup className=\"mb-3\">\r\n                    <FormLabel className=\"mr-3\">EMI Date:</FormLabel>\r\n                    <DatePicker className=\"form-control\"\r\n                                selected={enrollmentDate}\r\n                                onChange={(date) => changeEmiDate(date)}\r\n                                name=\"enrollment_date\"\r\n                                dateFormat=\"dd/MM/yyyy\"\r\n                            />\r\n\r\n                    </InputGroup>\r\n\r\n                        <Table className=\" shadow-lg p-3 mb-5 bg-white rounded small\" striped bordered hover responsive>\r\n                            <thead className=\"bg-primary\">\r\n                                <tr>\r\n                                    <th>Account No.</th>\r\n                                    <th>Group</th>\r\n                                    <th>Member ID</th>\r\n                                    <th>Name</th>\r\n                                    <th>No. of Emi</th>\r\n                                    <th>EMI Amount</th>\r\n                                    <th>Outstanding</th>\r\n                                    <th>Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {dueEmis.length!=0?dueEmis.map((emi, id) => (<tr key={emi.id}>\r\n                                    <td><Link to={{\r\n                                        pathname: '/loanApprovalDetails',\r\n                                        state: emi.loan_table_id\r\n                                        }}>{emi.loan_account_no}</Link></td>\r\n                                    <td><Link to=\"/memberGroup\">{emi.group_loan?.member?.member_group_id}</Link></td>\r\n                                    <td><Link to={{\r\n                                        pathname: '/viewMemberDetail',\r\n                                        state: emi.group_loan?.member?.member_id\r\n                                        }}>{emi.group_loan?.member?.member_id}</Link></td>\r\n                                    <td><Link to={{\r\n                                        pathname: '/viewMemberDetail',\r\n                                        state: emi.group_loan?.member?.member_id\r\n                                        }}>{emi.group_loan?.member?.member_name}</Link></td>\r\n                                    <td>{emi.remain_EMI}</td>\r\n                                    <td>{emi.EMI_amount}</td>\r\n                                    <td>{emi.outstanding}</td>\r\n                                    <td><Button size={\"sm\"} variant=\"success\" onClick={() => paidHandle(emi.id) }>Pay</Button></td>\r\n                                </tr>)):<tr><td colSpan={\"8\"} className=\"text-center\">No Dues for selected date!</td></tr>}\r\n                            </tbody>\r\n                        </Table>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default DueEmis;","import React from 'react'\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport Home from './components/home/Home'\r\nimport Registration from './components/users/Registration'\r\nimport Login from './components/users/Login'\r\n// import FillItr from './components/finance-Itr/FillItr'\r\nimport InnerLayout from './components/layout/InnerLayout'\r\n//import CategoryList from './components/food-order/CategoryList'\r\n// import MyCart from './components/food-order/MyCart'\r\n// import PlaceOrder from './components/food-order/PlaceOrder'\r\n// import OrderSuccess from './components/food-order/OrderSuccess'\r\n//import AdminHome from './components/Admin/Home';\r\n//import CategoryManagement from './components/Admin/CategoryManagement';\r\n//import AddCategory from './components/Admin/AddCategory';\r\n//import OrderHistory from './components/Admin/orders/OrderHistory';\r\nimport UserOrderHistory from './components/users/UserOrderHistory';\r\nimport UserAction from './components/users/user-actions/UserAction';\r\n//import ProductManagement from './components/Admin/products/ProductManagement';\r\n//import AddProduct from './components/Admin/products/AddProduct';\r\n//import EditProduct from './components/Admin/products/EditProduct';\r\n// import OrderFailed from './components/food-order/OrderFailed';\r\n//import FinanceRequests from './components/Admin/finance/FinanceRequests';\r\n//import Form16Requests from './components/Admin/finance/Form16Requests';\r\n//import InqueryForm from './components/home/InqueryForm';\r\nimport MemberGroup from  './components/masterRecord/memberGroup/MemberGroup';\r\nimport AddMemberGroup from  './components/masterRecord/memberGroup/AddMemberGroup';\r\nimport AddMember from  './components/masterRecord/member/AddMember';\r\nimport Member from  './components/masterRecord/member/Member';\r\nimport MemberViewDetails from  './components/masterRecord/member/MemberViewDetails';\r\nimport Scheme from  './components/groupLoan/Scheme';\r\nimport AddScheme from  './components/groupLoan/AddScheme';\r\nimport Dashboard from './components/dashboard/Dashboard';\r\nimport LoanApplication from  './components/groupLoan/LoanApplication';\r\nimport LoanApproval from  './components/groupLoan/LoanApproval';\r\nimport DisburseLoan from  './components/groupLoan/DisburseLoan';\r\nimport LoanApprovalDetails from  './components/groupLoan/LoanApprovalDetails';\r\nimport AllApplications from  './components/groupLoan/AllApplications';\r\nimport EmiCalculator from  './components/groupLoan/EmiCalculator';\r\nimport DueEmis from './components/emis/DueEmis';\r\n\r\nfunction Routes() {\r\n    const checkLogin=()=>{\r\n        console.log(\"check login\")\r\n    }\r\n    return (\r\n        <BrowserRouter>\r\n            <Switch>\r\n            <InnerLayout exact path=\"/\" component={Dashboard}/>\r\n            <InnerLayout exact path=\"/memberGroup\" component={MemberGroup} />\r\n            <InnerLayout exact path=\"/addMemberGroup\" component={AddMemberGroup} />\r\n            <InnerLayout exact path=\"/addMember\" component={AddMember} />\r\n            <InnerLayout exact path=\"/addMember\" component={AddMember} />\r\n            <InnerLayout exact path=\"/scheme\" component={Scheme} />\r\n            <InnerLayout exact path=\"/viewMemberDetail\" component={MemberViewDetails} />\r\n            <InnerLayout exact path=\"/addScheme\" component={AddScheme} />\r\n            <InnerLayout exact path=\"/loanApplication\" component={LoanApplication} />\r\n            <InnerLayout exact path=\"/loanApproval\" component={LoanApproval} />\r\n            <InnerLayout exact path=\"/disburseLoan\" component={DisburseLoan} />\r\n            <InnerLayout exact path=\"/loanApprovalDetails\" component={LoanApprovalDetails} />\r\n            <InnerLayout exact path=\"/allApplications\" component={AllApplications} />\r\n            <InnerLayout exact path=\"/emiCalculator\" component={EmiCalculator} />\r\n            <InnerLayout exact path=\"/dueEmis\" component={DueEmis} />\r\n                <Route path=\"/login\" component={Login} />\r\n                <InnerLayout path=\"/registration\" component={Registration} />\r\n                {/* <InnerLayout path=\"/fillItr\" component={FillItr} />\r\n                <InnerLayout path=\"/CategoryList\" component={CategoryList} />\r\n                <InnerLayout path=\"/myCart\" component={MyCart} />\r\n                <InnerLayout path=\"/placeOrder\" component={PlaceOrder} />\r\n                <InnerLayout path=\"/orderSuccess\" component={OrderSuccess} />\r\n                <InnerLayout path=\"/adminHome\" component={AdminHome} />\r\n                <InnerLayout path=\"/categoryManagement\" component={CategoryManagement} />\r\n                <InnerLayout path=\"/addCategory\" component={AddCategory} />\r\n                <InnerLayout path=\"/orderHistory\" component={OrderHistory} />\r\n                <InnerLayout path=\"/userOrderHistory\" component={UserOrderHistory} />\r\n                <InnerLayout path=\"/userAction\" component={UserAction} />\r\n                <InnerLayout path=\"/productManagement\" component={ProductManagement} />\r\n                <InnerLayout path=\"/addProduct\" component={AddProduct} />\r\n                <InnerLayout path=\"/editProduct\" component={EditProduct} />\r\n                <InnerLayout path=\"/orderFailed\" component={OrderFailed} />\r\n                <InnerLayout path=\"/financeRequests\" component={FinanceRequests} />\r\n                <InnerLayout path=\"/form16Requests\" component={Form16Requests} />\r\n                <InnerLayout path=\"/inqueryForm\" component={InqueryForm} /> */}\r\n                <InnerLayout path=\"/member\" component={Member} />\r\n\r\n            </Switch>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default Routes\r\n","import './App.css';\r\nimport { Provider } from 'react-redux';\r\nimport { store, persistor} from './store';\r\nimport Routes from './Routes';\r\nimport { PersistGate } from 'redux-persist/integration/react'\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <div className=\"App\">\r\n          <Routes/>\r\n        </div>\r\n      </PersistGate>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","import superagentPromise from 'superagent-promise';\r\nimport _superagent from 'superagent';\r\n\r\nconst superagent = superagentPromise(_superagent, global.Promise);\r\n\r\nconst API_ROOT = '/api';\r\n\r\nconst encode = encodeURIComponent;\r\nconst responseBody = res => res;\r\nconst errorBody = err =>{\r\n  return err.response\r\n} ;\r\nlet token = null;\r\nconst tokenPlugin = req => {\r\n  if (token) {\r\n    req.set('Token', token);\r\n  }\r\n}\r\n\r\nconst requests = {\r\n  // del: url =>\r\n  //   superagent.del(`${API_ROOT}${url}`).use(tokenPlugin).then(responseBody),\r\n  get: url =>\r\n    superagent.get(`${API_ROOT}${url}`).use(tokenPlugin).then(responseBody,errorBody),\r\n  // put: (url, body) =>\r\n  //   superagent.put(`${API_ROOT}${url}`, body).use(tokenPlugin).then(responseBody),\r\n  post: (url, body) =>\r\n    superagent.post(`${API_ROOT}${url}`, body).use(tokenPlugin).then(responseBody,errorBody)\r\n};\r\n\r\nconst Auth = {\r\n  login: (email, password) =>\r\n    requests.post('/user/login',  { email, password } ),\r\n  register: (userDetails) =>\r\n    requests.post('/user/registration',  userDetails ),\r\n};\r\n\r\nconst Order = {\r\n  getProductsByCat:(catname)=>\r\n  requests.get(`/products?category=${catname}`),\r\n  getCatgoryInitialData:()=>{\r\n    return [superagent.get(`${API_ROOT}/category`),superagent.get(`${API_ROOT}/products`)]\r\n  },\r\n  placeOrder:(data)=>{\r\n    //requests.post(\"/orders/place-order\",data)\r\n    return superagent.post(`${API_ROOT}/orders/place-order`, data).use(tokenPlugin)\r\n  },\r\n  getCategoryAdmin(){\r\n    return superagent.get(`${API_ROOT}/category`).use(tokenPlugin)\r\n  },\r\n  getOrdersHistoryAdmin(page){\r\n    return superagent.get(`${API_ROOT}/orders/admin-order-list?page=${page}`).use(tokenPlugin)\r\n  },\r\n  getOrderHistoryByUserEmail(){\r\n    return superagent.get(`${API_ROOT}/orders/get-order`).use(tokenPlugin)\r\n  },\r\n  addCategory(data){\r\n    return superagent.post(`${API_ROOT}/category`,data).use(tokenPlugin)\r\n  },\r\n  deleteCategory(data){\r\n    return superagent.del(`${API_ROOT}/category?name=${data}`,data).use(tokenPlugin)\r\n  },\r\n  editCategory(data){\r\n    return superagent.put(`${API_ROOT}/category`,data).use(tokenPlugin)\r\n  },\r\n  getProducts(){\r\n    return superagent.get(`${API_ROOT}/products`).use(tokenPlugin)\r\n  },\r\n  deleteProduct(data){\r\n    return superagent.del(`${API_ROOT}/products?title=${data}`,data).use(tokenPlugin)\r\n  },\r\n  addProducts(data){\r\n    return superagent.post(`${API_ROOT}/products`,data).use(tokenPlugin)\r\n  },\r\n  editProducts(data){\r\n    return superagent.put(`${API_ROOT}/products`,data).use(tokenPlugin)\r\n  }\r\n};\r\nconst Payment = {\r\n  getRazorpayOrderId(data){\r\n    return superagent.post(`${API_ROOT}/payment/food-create-order-no`,data).use(tokenPlugin)\r\n  },\r\n  updatePaymentStatus(data){\r\n    return superagent.post(`${API_ROOT}/payment/updatePaymentStatus`,data).use(tokenPlugin)\r\n  }\r\n};\r\nconst Finance = {\r\n  fillItr(data){\r\n    return superagent.post(`${API_ROOT}/finance/fill-itr`,data).use(tokenPlugin)\r\n  },\r\n  getAdminItr(){\r\n    return superagent.get(`${API_ROOT}/finance/fill-itr`).use(tokenPlugin)\r\n  },\r\n  uploadForm16(data){\r\n    return superagent.post(`${API_ROOT}/finance/form16Upload`,data).use(tokenPlugin)\r\n  },\r\n  getAdminForm16(){\r\n    return superagent.get(`${API_ROOT}/finance/form16Upload`).use(tokenPlugin)\r\n  },\r\n  downloadForm16(data){\r\n    return superagent.get(`${API_ROOT}/download?fileName=${data.fileName}`).use(tokenPlugin)\r\n  }\r\n \r\n}\r\nconst Inquery = {\r\n  submitInquery(data){\r\n    return superagent.post(`${API_ROOT}/user/submitInquery`,data).use(tokenPlugin)\r\n  }\r\n}\r\nexport default {\r\n  Auth,\r\n  Order,\r\n  Payment,\r\n  Finance,\r\n  Inquery,\r\n  getToken:()=>{return token},\r\n  setToken: _token => { token = _token; }\r\n};"],"sourceRoot":""}