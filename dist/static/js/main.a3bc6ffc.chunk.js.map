{"version":3,"sources":["constants/actionTypes.js","reducers/order.js","reducers/product.js","reducer.js","reducers/auth.js","reducers/common.js","middleware.js","store.js","components/layout/ListErrors.js","models/user.js","components/layout/Loader.js","components/users/Login.js","components/layout/LogedInView.js","components/layout/LogedOutView.js","components/finance-Itr/ItrPopup.js","components/layout/InnerHeader.js","components/layout/Footer.js","components/layout/Leftbar.js","components/layout/TopNav.js","components/layout/InnerLayout.js","models/masterRecord.js","components/masterRecord/memberGroup/MemberGroup.js","components/masterRecord/memberGroup/AddMemberGroup.js","models/memberDetails.js","components/masterRecord/member/AddMember.js","components/masterRecord/member/Member.js","components/masterRecord/member/MemberViewDetails.js","models/groupLoan.js","components/groupLoan/Scheme.js","components/groupLoan/AddScheme.js","models/dashboard.js","components/dashboard/Dashboard.js","components/groupLoan/LoanApplication.js","components/groupLoan/LoanApproval.js","components/groupLoan/DisburseLoan.js","components/groupLoan/EmiCard.js","components/groupLoan/EmiCardPrint.js","components/groupLoan/LoanApprovalDetails.js","components/groupLoan/AllApplications.js","components/groupLoan/EmiCalculator.js","components/emis/printDueEmis.js","components/emis/DueEmis.js","components/groupLoan/Village.js","components/groupLoan/AddVillage.js","models/expenseRecord.js","components/expenses/Expense.js","components/expenses/AddExpense.js","models/processingFee.js","components/processing-fee/ProcessingFee.js","components/processing-fee/AddProcessingFee.js","components/dashboard/Ladger.js","models/RDApplications.js","components/rdModule/PrintRdApplication.js","components/rdModule/RdApplications.js","components/rdModule/RdDetails.js","components/rdModule/openNewRdAccount.js","components/rdModule/RdDeposites.js","components/dashboard/CompleteLadger.js","components/rdModule/RdLadger.js","components/dashboard/LadgerSavingAccount.js","components/rdModule/RdPaid.js","components/rdModule/RdCollectionTabs.js","Routes.js","App.js","reportWebVitals.js","index.js","models/BaseUrl.js","agent.js"],"names":["REDIRECT","LOGIN","LOGOUT","REGISTER","LOGIN_PAGE_UNLOADED","REGISTER_PAGE_UNLOADED","ASYNC_START","ASYNC_END","UPDATE_FIELD_AUTH","ADD_ITEM_INITIAL","INCREASE_QUANTITY","DECREASE_QUANTITY","RESET_ORDER","STORE_EDIT_PRODUCT","GET_EDIT_PRODUCT","UPDATE_PRODUCT_FIELD","defaultState","addedItem","product","appReducer","combineReducers","auth","state","action","type","inProgress","errors","payload","message","role","record","id","statusCode","jwtToken","isLoginSuccess","subtype","key","value","common","redirectTo","order","productId","item","_id","quantity","perItemPrice","price","map","data","prod","rootReducer","undefined","promiseMiddleware","store","next","v","then","dispatch","currentView","getState","viewChangeCounter","skipTracking","res","currentState","promise","error","response","body","localStorageMiddleware","window","localStorage","setItem","agent","setToken","createStore","reducer","composeWithDevTools","applyMiddleware","ListErrors","this","props","Alert","variant","Component","getUsers","superagent","get","API_ROOT","login","username","password","post","Loader","show","Spinner","animation","className","relative","Login","submitForm","ev","preventDefault","setState","isShowLoader","user","console","log","onSubmit","changeEmail","onChangeEmail","target","changePassword","onChangePassword","history","push","onUnload","Form","Row","Group","as","Col","controlId","Label","Control","placeholder","onChange","required","Button","disabled","connect","LogedInView","currentUser","aactiveClassName","to","LogedOutView","useDispatch","useHistory","name","email","split","isAdmin","isPrimeMember","onClick","ItrPopup","Modal","isopen","onHide","hide","centered","Header","closeButton","Title","Body","pathname","query","InnerHeader","handleITRPopup","Footer","Leftbar","useSelector","Nav","Item","Link","href","class","eventKey","TopNav","Navbar","collapseOnSelect","expand","bg","toggleSidebar","Toggle","Collapse","InnerLayout","component","rest","useState","showSidebar","setshowSidebar","useEffect","innerWidth","checkLogin","jwt","getItem","hasOwnProperty","render","Container","fluid","md","sm","getMemberGroups","saveMemberGroups","getMembersBygroup","group_code","deleteGroup","del","MemberGroup","setisShowLoader","memberGroupRecords","setMemberGroupsRecords","memberList","setMemberList","showDeleteModel","setShowDeleteModel","deleteID","setDeleteID","showMemberModel","setshowMemberModel","getMemberGroup","masterRecord","deleteMemberGroup","a","UpdatedList","filter","member","idx","length","Table","striped","bordered","hover","responsive","val","member_id","member_name","gender","moment","date_of_birth","format","age","marital_status","mobile_number","aadhar_number","voter_id_number","pan_card_number","driving_license_number","ration_card_number","bank_ifsc_code","bank_account","bank_account_holder","size","active","group","group_name","remark","Badge","member_count","deleteHandle","AddMemberGroup","values","setValues","isShow","showToast","setShowToast","formik","useFormik","initialValues","user_id","validate","resetForm","handleChange","prevValues","Toast","autohide","delay","onClose","handleSubmit","touched","rows","getMemberDetailsData","getMemberPageData","saveMemberDetails","deleteMember","editMember","put","AddMember","Date","enrollmentDate","setEnrollmentDate","dob","setDob","groups","setGroups","location","getMemberDetails","memberDetails","email_id","member_group_id","enrollment_date","selected","date","dateFormat","peekNextMonth","showMonthDropdown","showYearDropdown","dropdownMode","Members","memberRecords","setMemberRecords","useMemo","index","col1","col2","col3","col4","col5","columns","accessor","allowFilter","memberRecord","DefaultColumnFilter","column","filterValue","preFilteredRows","setFilter","count","e","defaultColumn","React","Filter","paginate","totalPage","pageNumberArray","i","Pagination","First","gotoPage","Prev","previousPage","canPreviousPage","num","pageIndex","Next","nextPage","canNextPage","Last","useTable","initialState","useFilters","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","pageOptions","pageCount","pageSize","setPageSize","headerGroup","getHeaderGroupProps","headers","getHeaderProps","getSortByToggleProps","isSorted","isSortedDesc","row","getRowProps","cells","cell","getCellProps","loanAccounts","setLoanAccounts","getMemberData","Promise","all","loanStatus","loan","is_approved","is_disbursed","Card","border","header","text","loan_account_no","application_date","scheme_id","village_name","day","week","address","loan_amount","interest_rate","EMI_payout","EMI_type","Tenure","getScheme","saveScheme","deleteScheme","getLoanAppInitialData","applyForloan","getApprovalList","getDisburseList","getLoanDetailbyId","approveRejectLoan","getAllLoanApplications","disburseRejectLoan","calculateEMI","getDueEmis","today","paidEmi","getPaidEmis","loanAccountNo","saveVillage","getVillage","Scheme","schemes","setSchemes","getSchemes","groupLoan","scheme","scheme_code","scheme_name","max_amount","AddScheme","min","getReceivedAmount","getPaidAmount","getEmiRecord","getSavingAccountLadger","Dashboard","isShowReceivedLoader","setisShowReceivedLoader","receivedAmount","setReceivedAmount","isShowPaidLoader","setisShowPaidLoader","paidAmount","setPaidAmount","notPaid","paid","emiCounts","setEmiCounts","todayEmis","dashboard","notPaidCount","paidCount","gotoLedger","ledgerType","xs","Number","total","toFixed","Text","style","xmlns","width","height","fill","viewBox","d","chartType","loader","options","chartArea","pieSliceText","rootProps","LoanApplication","schemeRecords","setSchemeRecords","selectedScheme","setSelectedScheme","villageRecords","setVillageRecords","getSchemesAndMembers","tenure","village_id","schems","selectedvill","vill","LoanApproval","loanlist","setLoanlist","getLoanList","loan_id","DisburseLoan","EmiCard","handlePrintEMI","showDisburseButton","emiData","paidEmiRecord","EMI","principal","int_amount","outstanding","EmiCardPrint","PureComponent","LoanApprovalDetails","memberDetailsRef","useRef","handlePrintMemberDetail","useReactToPrint","content","current","documentTitle","applicationRef","handlePrintApplication","emiRef","setPaidEmiRecord","isShowEMILoader","setisShowEMILoader","setEmiData","loanDetails","setLoanDetails","showApprovalButton","setShowApprovalButton","setShowDisburseButton","getLoanDetails","calculateEmi","EmiData","paidData","result","emiDate","EMI_date","actionOnLoan","actionType","actionDisburseLoan","goBack","ref","display","AllApplications","col6","col7","actionStatus","col8","Cell","emi","formatedData","EmiCalculator","calculatedData","setCalculatedData","componentRef","handlePrint","loanStartDate","PrintDueEmis","add","parseFloat","dueEmis","colSpan","reduce","DueEmis","setDueEmis","paidID","setPaidID","emiDetailsRef","handlePrintEmiDetail","getDueEmisRecord","remain_EMI","EMI_amount","col9","loan_table_id","paidHandle","emi_id","substring","paidEMI","emidata","InputGroup","FormLabel","selectedDate","cursor","Village","getVillages","AddVillage","getExpense","saveExpense","deleteExpense","editExpense","Expense","expense","setExpense","getExpenses","expenseRecord","expense_type","amount","date_of_expense","created_at","AddExpense","getExpenseDetails","getProcessingFee","saveProcessingFee","deleteProcessingFee","editProcessingFee","ProcessingFee","processingFees","setProcessingFees","getProcessingFees","processingFee","particular","date_of_processing","AddProcessingFee","Ladger","isShowLoaderLoader","setisShowLoaderLoader","ladger","setLadger","refContainer","emiLadger","emis","processingFeeLadger","sort","compare","expensesLadger","expenses","loanLadger","b","toString","replace","previous","RDApplicationsModel","getAllRdApplications","agent_id","openRdAccount","getRdDetails","getDeposits","deposites_date","postDeposit","getDepositsGroupBy","getDepositsByAgent","calculateCloseAmount","account_number","closeAmount","getDepositDetailsByAcccount","getPaidDetails","deleteDeposit","updateDepositAmount","PrintRdApplication","RdApplications","selectedAccountID","setselectedAccountID","rdAccounts","setRdAccounts","agent_name","account_holder_name","phone","totalDeposited","is_account_closed","handleCloseAccount","formatedAccounts","RDApplications","User","list","ac","obj","closeRdAccount","RdDetails","depositDetails","setDepositDetails","getDepositDetails","father_husband_name","aadhar_card","pan_card","driving_licence","ration_card","voter_id","account_close_amount","deposited_date","debited_amount","deposited_amount","OpenNewRdAccount","loading","setLoading","setdob","checked","rd_amount","period","initial_deposited_amount","status","RdDeposites","amountInputRefArr","entries","setEntries","setAmount","showEntryModel","setShowEntryModel","selectedEntryUpdate","setSelectedEntryUpdate","entriesHandle","pageno","is_deposited","is_account_open_amount","rDApplications","alert","confirm","remainingEnitiy","ent","handleInlineSave","el","callbackRef","forEach","entry","focus","CompleteLadger","progress","setProgress","balance","received","ladgerArray","fetchData","calculateTotal","dr","cr","formatAmount","float","top","position","ProgressBar","now","label","RdLadger","totalCollection","agentCollections","setAgentCollections","agentCollectionDetails","setAgentCollectionDetails","selectedAgent","setSelectedAgent","autoComplete","agentId","preState","getAgentCollections","LadgerSavingAccount","fetchLadger","RdPaid","RdCollectionTabs","Tabs","defaultActiveKey","transition","Tab","title","Routes","exact","path","MemberViewDetails","openNewRdAccount","Member","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById","superagentPromise","_superagent","global","hostname","encodeURIComponent","responseBody","errorBody","err","token","tokenPlugin","req","set","requests","url","use","Auth","register","userDetails","Order","getProductsByCat","catname","getCatgoryInitialData","placeOrder","getCategoryAdmin","getOrdersHistoryAdmin","getOrderHistoryByUserEmail","addCategory","deleteCategory","editCategory","getProducts","deleteProduct","addProducts","editProducts","Payment","getRazorpayOrderId","updatePaymentStatus","Finance","fillItr","getAdminItr","uploadForm16","getAdminForm16","downloadForm16","fileName","Inquery","submitInquery","getToken","_token"],"mappings":"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","file":"static/js/main.a3bc6ffc.chunk.js","sourcesContent":["\r\n  \r\nexport const APP_LOAD = 'APP_LOAD';\r\nexport const REDIRECT = 'REDIRECT';\r\nexport const ARTICLE_SUBMITTED = 'ARTICLE_SUBMITTED';\r\nexport const SETTINGS_SAVED = 'SETTINGS_SAVED';\r\nexport const DELETE_ARTICLE = 'DELETE_ARTICLE';\r\nexport const SETTINGS_PAGE_UNLOADED = 'SETTINGS_PAGE_UNLOADED';\r\nexport const HOME_PAGE_LOADED = 'HOME_PAGE_LOADED';\r\nexport const HOME_PAGE_UNLOADED = 'HOME_PAGE_UNLOADED';\r\nexport const ARTICLE_PAGE_LOADED = 'ARTICLE_PAGE_LOADED';\r\nexport const ARTICLE_PAGE_UNLOADED = 'ARTICLE_PAGE_UNLOADED';\r\nexport const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const DELETE_COMMENT = 'DELETE_COMMENT';\r\nexport const ARTICLE_FAVORITED = 'ARTICLE_FAVORITED';\r\nexport const ARTICLE_UNFAVORITED = 'ARTICLE_UNFAVORITED';\r\nexport const SET_PAGE = 'SET_PAGE';\r\nexport const APPLY_TAG_FILTER = 'APPLY_TAG_FILTER';\r\nexport const CHANGE_TAB = 'CHANGE_TAB';\r\nexport const PROFILE_PAGE_LOADED = 'PROFILE_PAGE_LOADED';\r\nexport const PROFILE_PAGE_UNLOADED = 'PROFILE_PAGE_UNLOADED';\r\nexport const LOGIN = 'LOGIN';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const REGISTER = 'REGISTER';\r\nexport const LOGIN_PAGE_UNLOADED = 'LOGIN_PAGE_UNLOADED';\r\nexport const REGISTER_PAGE_UNLOADED = 'REGISTER_PAGE_UNLOADED';\r\nexport const ASYNC_START = 'ASYNC_START';\r\nexport const ASYNC_END = 'ASYNC_END';\r\nexport const EDITOR_PAGE_LOADED = 'EDITOR_PAGE_LOADED';\r\nexport const EDITOR_PAGE_UNLOADED = 'EDITOR_PAGE_UNLOADED';\r\nexport const ADD_TAG = 'ADD_TAG';\r\nexport const REMOVE_TAG = 'REMOVE_TAG';\r\nexport const UPDATE_FIELD_AUTH = 'UPDATE_FIELD_AUTH';\r\nexport const UPDATE_FIELD_EDITOR = 'UPDATE_FIELD_EDITOR';\r\nexport const FOLLOW_USER = 'FOLLOW_USER';\r\nexport const UNFOLLOW_USER = 'UNFOLLOW_USER';\r\nexport const PROFILE_FAVORITES_PAGE_UNLOADED = 'PROFILE_FAVORITES_PAGE_UNLOADED';\r\nexport const PROFILE_FAVORITES_PAGE_LOADED = 'PROFILE_FAVORITES_PAGE_LOADED';\r\nexport const ADD_ITEM_INITIAL = 'ADD_ITEM_INITIAL';\r\nexport const INCREASE_QUANTITY = 'INCREASE_QUANTITY';\r\nexport const DECREASE_QUANTITY = 'DECREASE_QUANTITY';\r\nexport const RESET_ORDER = 'RESET_ORDER';\r\nexport const STORE_EDIT_PRODUCT = 'STORE_EDIT_PRODUCT';\r\nexport const GET_EDIT_PRODUCT = 'GET_EDIT_PRODUCT';\r\nexport const UPDATE_PRODUCT_FIELD = 'UPDATE_PRODUCT_FIELD';","import {\r\n    ADD_ITEM_INITIAL,\r\n    INCREASE_QUANTITY,\r\n    DECREASE_QUANTITY,\r\n    RESET_ORDER\r\n  } from '../constants/actionTypes';\r\n  const defaultState = {\r\n    addedItem: [],\r\n  };\r\n  \r\n  export default (state = defaultState, action) => {\r\n      switch (action.type) {\r\n        case ADD_ITEM_INITIAL:\r\n            const addedItem =[...state.addedItem,{\r\n                productId:action.item._id,\r\n                quantity:1,\r\n                perItemPrice:action.item.price,\r\n                item:action.item\r\n            }]\r\n            return {...state, addedItem};\r\n        case INCREASE_QUANTITY:\r\n             state.addedItem.map(record=>{\r\n                if(record.productId == action.productId){\r\n                    record.quantity +=1\r\n                }\r\n                return record;\r\n            });\r\n            return {...state,state}\r\n        case DECREASE_QUANTITY:\r\n            state.addedItem.map(record=>{\r\n                if(record.productId == action.productId && record.quantity !=0){\r\n                        record.quantity -=1\r\n                }\r\n                return record;\r\n            });\r\n            return {...state,state}\r\n        case RESET_ORDER:\r\n            state.addedItem = []\r\n            return {...state}\r\n        default:\r\n          return state;\r\n      }\r\n      return state;\r\n    };","import {\r\n    STORE_EDIT_PRODUCT,\r\n    GET_EDIT_PRODUCT,\r\n    UPDATE_PRODUCT_FIELD\r\n  } from '../constants/actionTypes';\r\n  const defaultState = {\r\n    product: {},\r\n  };\r\n  \r\n  export default (state = defaultState, action) => {\r\n      switch (action.type) {\r\n        case STORE_EDIT_PRODUCT:\r\n            return {...state,\r\n                product:action.data \r\n            };\r\n        case GET_EDIT_PRODUCT:\r\n            return {...state};\r\n        case UPDATE_PRODUCT_FIELD:\r\n            let prod = state.product;\r\n            prod[action.data.key]=action.data.value;\r\n           return {...state,product:prod}\r\n        default:\r\n          return state;\r\n      }\r\n      return state;\r\n    };","import auth from './reducers/auth';\r\nimport common from './reducers/common';\r\nimport order from './reducers/order';\r\nimport product from './reducers/product';\r\nimport { combineReducers } from 'redux';\r\n//import { routerReducer } from 'react-router-redux';\r\n\r\nconst appReducer = combineReducers({\r\n  auth,\r\n  common,\r\n  order,\r\n  product\r\n  /* your app’s top-level reducers */\r\n})\r\n\r\nconst rootReducer = (state, action) => {\r\n  if (action.type === 'LOGOUT') {\r\n    state = undefined\r\n  }\r\n\r\n  return appReducer(state, action)\r\n}\r\nexport default rootReducer\r\n// export default combineReducers({\r\n//   auth,\r\n//   common,\r\n//   order,\r\n//     //router: routerReducer\r\n//   });","import {\r\n    LOGIN,\r\n    REGISTER,\r\n    LOGIN_PAGE_UNLOADED,\r\n    REGISTER_PAGE_UNLOADED,\r\n    ASYNC_START,\r\n    UPDATE_FIELD_AUTH,\r\n    LOGOUT\r\n  } from '../constants/actionTypes';\r\n  \r\n  export default (state = {}, action) => {\r\n  //console.log(action);\r\n    switch (action.type) {\r\n      case LOGIN:\r\n        return {\r\n          ...state,\r\n          inProgress: false,\r\n          errors: action.payload.message,\r\n          role:action.payload.record[0]?.role,\r\n          id:action.payload.record[0]?.id,\r\n          statusCode:action.payload.jwtToken != \"\"?\"200\":\"\",\r\n          isLoginSuccess:action.payload.jwtToken != \"\"? true:false\r\n        }\r\n      case REGISTER:\r\n        return {\r\n          ...state,\r\n          inProgress: false,\r\n          errors: action.payload,\r\n          statusCode:action.payload.statusCode\r\n        };\r\n      case LOGIN_PAGE_UNLOADED:\r\n      return{\r\n        ...state,\r\n        //errors: action.payload,\r\n        //userDetails:\r\n      }\r\n      case REGISTER_PAGE_UNLOADED:\r\n        return {};\r\n      case ASYNC_START:\r\n        if (action.subtype === LOGIN || action.subtype === REGISTER) {\r\n          return { ...state, inProgress: true };\r\n        }\r\n        break;\r\n      case UPDATE_FIELD_AUTH:\r\n        return { ...state, [action.key]: action.value };\r\n      default:\r\n        return state;\r\n    }\r\n    return state;\r\n  };","import {\r\n    LOGOUT,\r\n    REDIRECT\r\n  } from '../constants/actionTypes';\r\n  const defaultState = {\r\n    appName: 'Conduit',\r\n    token: null,\r\n    viewChangeCounter: 0\r\n  };\r\n  \r\n  export default (state = {}, action) => {\r\n    //console.log(action);\r\n      switch (action.type) {\r\n        case REDIRECT:\r\n            return { ...state, redirectTo: null };\r\n        // case LOGOUT:\r\n        //     return { redirectTo: '/login', token: null, currentUser: null };\r\n        default:\r\n          return state;\r\n      }\r\n      return state;\r\n    };","import agent from './agent';\r\nimport {\r\n  ASYNC_START,\r\n  ASYNC_END,\r\n  LOGIN,\r\n  LOGOUT,\r\n  REGISTER\r\n} from './constants/actionTypes';\r\n\r\nconst promiseMiddleware = store => next => action => {\r\n  if (isPromise(action.payload)) {\r\n    store.dispatch({ type: ASYNC_START, subtype: action.type });\r\n\r\n    const currentView = store.getState().viewChangeCounter;\r\n    const skipTracking = action.skipTracking;\r\n\r\n    action.payload.then(\r\n      res => {\r\n        const currentState = store.getState()\r\n        if (!skipTracking && currentState.viewChangeCounter !== currentView) {\r\n          return\r\n        }\r\n        action.payload = res;\r\n        store.dispatch({ type: ASYNC_END, promise: action.payload });\r\n        store.dispatch(action);\r\n      },\r\n      error => {\r\n        const currentState = store.getState()\r\n        if (!skipTracking && currentState.viewChangeCounter !== currentView) {\r\n          return\r\n        }\r\n        action.error = true;\r\n        action.payload = error.response.body;\r\n        if (!action.skipTracking) {\r\n          store.dispatch({ type: ASYNC_END, promise: action.payload });\r\n        }\r\n        store.dispatch(action);\r\n      }\r\n    );\r\n\r\n    return;\r\n  }\r\n\r\n  next(action);\r\n};\r\n\r\nconst localStorageMiddleware = store => next => action => {\r\n  if (action.type === LOGIN && action.payload != undefined) {\r\n    if (action.payload.jwtToken!=\"\") {\r\n      window.localStorage.setItem('jwt', action.payload.jwtToken);\r\n      agent.setToken(action.payload.jwtToken);\r\n    }\r\n  } else if (action.type === LOGOUT) {\r\n    window.localStorage.setItem('jwt','');\r\n    agent.setToken(null);\r\n  }\r\n\r\n   next(action);\r\n};\r\n\r\nfunction isPromise(v) {\r\n  return v && typeof v.then === 'function';\r\n}\r\n\r\n\r\nexport { promiseMiddleware, localStorageMiddleware }","import { applyMiddleware, createStore } from 'redux';\r\nimport reducer from './reducer';\r\nimport { promiseMiddleware, localStorageMiddleware } from './middleware';\r\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\r\n\r\nconst getMiddleware = () => {\r\n      return applyMiddleware( promiseMiddleware, localStorageMiddleware);\r\n  };\r\nexport const store = createStore(reducer,composeWithDevTools(getMiddleware()));","import React, { Component } from 'react'\r\nimport { Button, Form, Col, Alert } from 'react-bootstrap';\r\n\r\nexport default class ListErrors extends Component {\r\n    render() {\r\n        const errors = this.props.errors;\r\n        const statusCode = this.props.statusCode;\r\n        if (errors) {\r\n            return (\r\n                <Alert  variant={statusCode==200?\"success\":\"danger\"}>\r\n                    {errors}\r\n              </Alert>\r\n            );\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n","import { requests, superagent, API_ROOT } from \"./BaseUrl\"\r\n\r\nconst Auth = {\r\n    getUsers:()=>\r\n      superagent.get(`${API_ROOT}/user/userList/`),\r\n    login: (username, password) =>\r\n    superagent.post(`${API_ROOT}/user/login`,  { username, password } ),\r\n  };\r\n  \r\n  export default {Auth};\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\nfunction Loader(props) {\r\n    if(props.show){\r\n        return (\r\n            <Spinner animation=\"border\" role=\"status\" className={props?.relative?\"loader-relative\":\"loader\"}>\r\n            </Spinner>\r\n        )\r\n    }else{\r\n        return null\r\n    }\r\n}\r\n\r\nexport default Loader\r\n","import React, { Component}  from 'react'\r\nimport { Button, Form, Col, Alert } from 'react-bootstrap';\r\nimport { Route, NavLink, Link,useHistory } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport agent from '../../agent'\r\nimport ListErrors from '../layout/ListErrors';\r\nimport user from \"../../models/user\";\r\nimport Loader from '../layout/Loader';\r\nimport {\r\n    UPDATE_FIELD_AUTH,\r\n    LOGIN,\r\n    LOGIN_PAGE_UNLOADED\r\n} from '../../constants/actionTypes';\r\n\r\nclass Login extends Component {\r\n   // let history = useHistory();\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state ={isShowLoader:false};\r\n        this.changeEmail = ev => {this.props.onChangeEmail(ev.target.value)};\r\n        this.changePassword = ev => {this.props.onChangePassword(ev.target.value)};\r\n    }\r\n    submitForm=ev=> {\r\n        ev.preventDefault();\r\n        this.setState({isShowLoader:true});\r\n        user.Auth.login(this.props.username, this.props.password).then(res=>{\r\n            this.setState({isShowLoader:false});\r\n            console.log(res);\r\n            this.props.onSubmit(res.body);\r\n        })\r\n    };\r\n\r\n    componentDidUpdate(){\r\n        if(this.props.isLoginSuccess){\r\n            this.props.history.push('/')\r\n        }\r\n        \r\n    }\r\n    \r\n    componentWillUnmount() {\r\n        this.props.onUnload();\r\n      }\r\n    render() {\r\n        const username = this.props.username;\r\n        const password = this.props.password;\r\n        return (\r\n            <>\r\n            <div className=\"login-div\">\r\n            <Loader show={this.state.isShowLoader} />\r\n        {/* <Alert key={this.state.errormsg} variant=\"danger\">{this.state.errormsg}</Alert> */}\r\n            <ListErrors errors={this.props.errors} statusCode={this.props.statusCode}/>\r\n                <Form className=\"login-form\" onSubmit={this.submitForm}>\r\n                    <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"formBasicEmail\">\r\n                            <Form.Label>Username</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Enter username\" value={username} onChange={this.changeEmail} required/>\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"formBasicPassword\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type=\"password\" placeholder=\"Password\" value={password}  onChange={this.changePassword} required/>\r\n                        </Form.Group>\r\n\r\n                    </Form.Row>\r\n                    <Form.Row >\r\n                        <Col>\r\n                        <Button variant=\"primary\" disabled={this.props.inProgress} type=\"submit\">{this.props.inProgress ? 'Loading…' : \"Login\"}</Button>\r\n\r\n                        </Col>\r\n                    </Form.Row>\r\n                    {/* <Form.Row>\r\n                        <Link as={Col} to=\"/registration\" > SignUp</Link>\r\n                    </Form.Row> */}\r\n\r\n                </Form>\r\n            </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => ({ ...state.auth });\r\nconst mapDispatchToProps = dispatch => ({\r\n    onChangeEmail: value =>\r\n        dispatch({ type: UPDATE_FIELD_AUTH, key: 'username', value }),\r\n    onChangePassword: value =>\r\n        dispatch({ type: UPDATE_FIELD_AUTH, key: 'password', value }),\r\n    onSubmit: (data) =>\r\n        dispatch({ type: LOGIN, payload: data }),\r\n    onUnload: () =>\r\n        dispatch({ type: LOGIN_PAGE_UNLOADED })\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","import React from 'react'\r\nimport { Route,NavLink } from 'react-router-dom'\r\n\r\nfunction LogedInView(props) {\r\n    if(!props.currentUser.errors || props.currentUser.errors.statusCode ==500){\r\n        return (\r\n\r\n        <li className=\"nav-item\">\r\n        <NavLink aactiveClassName=\"active\" className=\"nav-link\" to=\"/login\">Login</NavLink>\r\n        </li>\r\n        )\r\n    }\r\n    return null;\r\n\r\n}\r\n\r\nexport default LogedInView\r\n","import React from 'react'\r\nimport { Route, NavLink } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux'\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nimport {\r\n    LOGOUT\r\n  } from '../../constants/actionTypes';\r\nfunction LogedOutView(props) {\r\n    const dispatch = useDispatch();\r\n    let history = useHistory();\r\n\r\n    const logout = ()=>{\r\n         dispatch({ type: LOGOUT })\r\n           console.log(\"hollo\");\r\n           history.push(\"/\");\r\n       }\r\n         if (props.currentUser.errors && props.currentUser.errors.statusCode == 200) {\r\n        let name = props.currentUser.email.split(\"@\");\r\n\r\n        return (<>\r\n            \r\n            {props.currentUser.errors.body.record.isAdmin?<li className=\"nav-item\">\r\n            <li className=\"nav-item\">\r\n            <NavLink aactiveClassName=\"active\" to=\"/adminHome\" className=\"nav-link\">Admin</NavLink>\r\n            </li>\r\n                \r\n            </li>:\"\"}            \r\n            <li className=\"nav-item\">\r\n                <NavLink aactiveClassName=\"active\" to=\"/userAction\" className=\"nav-link\">\r\n                    {name[0]}\r\n\r\n                    {props.currentUser.errors.body.record.isPrimeMember?<label className=\"clr-cyan\">(Prime member)</label>:\"\"}  \r\n\r\n                    \r\n                    </NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <a className=\"nav-link\" onClick={logout} >Logout</a>\r\n                {/* <NavLink className=\"nav-link\">{props.email}</NavLink> */}\r\n            </li>\r\n        </>\r\n        )\r\n    }\r\n    return null;\r\n}\r\n\r\nexport default LogedOutView\r\n","import React from 'react'\r\nimport { Modal, Button } from 'react-bootstrap';\r\nimport {Link} from 'react-router-dom';\r\n\r\n//import \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nfunction ItrPopup(props) {\r\n    return (\r\n    <Modal show={props.isopen} onHide={props.hide} centered className=\"text-center\">\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Tax Return</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Link to={{ pathname: `/fillItr`, query:{type: 'fill'}}}  className=\"btn btn-danger btn-sm\">Start Your Tax Return</Link>\r\n                <Link to={{ pathname: `/fillItr`, query:{type: 'uploadForm16'}}} className=\"btn btn-danger btn-sm\">Upload Form-16 Now</Link>\r\n            </Modal.Body>\r\n        </Modal>\r\n        )\r\n}\r\n\r\nexport default ItrPopup\r\n","import React, { Component } from 'react'\r\nimport { Route,NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport LoggedInView from './LogedInView';\r\nimport LoggedOutView from './LogedOutView';\r\nimport ItrPopup from '../finance-Itr/ItrPopup'\r\n\r\nclass InnerHeader extends Component {\r\n    isopen = false;\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        isopen:false\r\n      }\r\n    }\r\n    handleITRPopup = () =>{\r\n        this.setState({\r\n          isopen:this.state.isopen?false:true\r\n        })\r\n      }\r\n    render(){\r\n    return (\r\n        <header>\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark top-nav-collapse\">\r\n                <div className=\"container\">\r\n                <NavLink className=\"navbar-brand\" to=\"/\"> <h2>AA2 Mutualhelp</h2></NavLink>\r\n\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent-7\"\r\n                        aria-controls=\"navbarSupportedContent-7\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent-7\">\r\n                        <ul className=\"navbar-nav ml-auto\">\r\n                            {/* <li className=\"nav-item\">\r\n                            <NavLink aactiveClassName=\"active\" className=\"nav-link\" to=\"/\">Home</NavLink> */}\r\n\r\n                                {/* <a className=\"nav-link\" href=\"#\">Home\r\n                    <span className=\"sr-only\">(current)</span>\r\n                                </a> */}\r\n                            {/* </li> */}\r\n                            {/* <li className=\"nav-item\" onClick={this.handleITRPopup}>\r\n                                <a className=\"nav-link\" onClick={this.handleITRPopup}>File ITR</a>\r\n                            </li> */}\r\n                            {/* <li className=\"nav-item\"> */}\r\n                                {/* <a className=\"nav-link\" href=\"#\">Order Food</a> */}\r\n                                {/* <NavLink aactiveClassName=\"active\" to=\"/CategoryList\" className=\"nav-link\">Order Food</NavLink>\r\n                            </li> */}\r\n                            {/* <li className=\"nav-item\">\r\n                            <NavLink className=\"nav-link\" to=\"/login\">Login</NavLink>\r\n\r\n                            </li> */}\r\n                            <LoggedOutView currentUser={this.props}/>\r\n                            <LoggedInView currentUser={this.props}/>\r\n\r\n                        </ul>\r\n\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n            <ItrPopup isopen={this.state.isopen} hide={this.handleITRPopup}/>\r\n        </header>\r\n    )}\r\n\r\n}\r\nconst mapStateToProps = state => ({ ...state.auth});\r\nconst mapDispatchToProps = dispatch => ({\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InnerHeader)\r\n","import React from 'react'\r\nimport TotalAmount from '../food-order/TotalAmount'\r\nfunction Footer() {\r\n    return (\r\n      <>\r\n\r\n        <footer className=\"page-footer font-small stylish-color-dark pt-4\">\r\n        {/* <div className=\"container text-center text-md-left\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-4 mx-auto\">\r\n              <h5 className=\"font-weight-bold text-uppercase mt-3 mb-4\">Footer Content</h5>\r\n              <p>Here you can use rows and columns to organize your footer content. Lorem ipsum dolor sit amet,\r\n                consectetur\r\n                adipisicing elit.</p>\r\n            </div>\r\n            <hr className=\"clearfix w-100 d-md-none\"/>\r\n            <div className=\"col-md-2 mx-auto\">\r\n              <h5 className=\"font-weight-bold text-uppercase mt-3 mb-4\">Links</h5>\r\n              <ul className=\"list-unstyled\">\r\n                <li>\r\n                  <a href=\"#!\">Link 1</a>\r\n                </li>\r\n              </ul>\r\n            </div>    \r\n            <hr className=\"clearfix w-100 d-md-none\"/>\r\n            <div className=\"col-md-2 mx-auto\">\r\n              <h5 className=\"font-weight-bold text-uppercase mt-3 mb-4\">Links</h5>\r\n              <ul className=\"list-unstyled\">\r\n                <li>\r\n                  <a href=\"#!\">Link 1</a>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            <hr className=\"clearfix w-100 d-md-none\"/>\r\n            <div className=\"col-md-2 mx-auto\">\r\n              <h5 className=\"font-weight-bold text-uppercase mt-3 mb-4\">Links</h5>\r\n              <ul className=\"list-unstyled\">\r\n                <li>\r\n                  <a href=\"#!\">Link 1</a>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div> */}\r\n    \r\n        {/* <ul className=\"list-unstyled list-inline text-center py-2\">\r\n          <li className=\"list-inlin e-item\">\r\n            <h5 className=\"mb-1\">Register for free</h5>\r\n          </li>\r\n          <li className=\"list-inline-item\">\r\n            <a href=\"#!\" className=\"btn btn-danger btn-rounded\">Sign up!</a>\r\n          </li>\r\n        </ul> */}\r\n    \r\n        <hr/>\r\n    \r\n        <ul className=\"list-unstyled list-inline text-center\">\r\n          <li className=\"list-inline-item\">\r\n            <a className=\"btn-floating btn-fb mx-1\">\r\n              <i className=\"fab fa-facebook-f\"> </i>\r\n            </a>\r\n          </li>\r\n          <li className=\"list-inline-item\">\r\n            <a className=\"btn-floating btn-tw mx-1\">\r\n              <i className=\"fab fa-twitter\"> </i>\r\n            </a>\r\n          </li>\r\n          <li className=\"list-inline-item\">\r\n            <a className=\"btn-floating btn-gplus mx-1\">\r\n              <i className=\"fab fa-google-plus-g\"> </i>\r\n            </a>\r\n          </li>\r\n          <li className=\"list-inline-item\">\r\n            <a className=\"btn-floating btn-li mx-1\">\r\n              <i className=\"fab fa-linkedin-in\"> </i>\r\n            </a>\r\n          </li>\r\n          <li className=\"list-inline-item\">\r\n            <a className=\"btn-floating btn-dribbble mx-1\">\r\n              <i className=\"fab fa-dribbble\"> </i>\r\n            </a>\r\n          </li>\r\n        </ul>\r\n        <div className=\"footer-copyright text-center py-3\">© 2020 Copyright:\r\n        </div>\r\n        <TotalAmount/>\r\n      </footer>\r\n      </>\r\n        )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport { useSelector } from \"react-redux\";\r\nimport { Col, Nav} from 'react-bootstrap';\r\nimport { LinkContainer} from 'react-router-bootstrap'\r\nexport default function Leftbar() {\r\n    const auth = useSelector(state => state.auth);\r\n    return (\r\n        // <Col md={2} id=\"sidebar-col\" className=\"pr-0\">\r\n            <nav id=\"sidebar\">\r\n                {/* <div className=\"sidebar-header\">\r\n                    <h5>AA2 MutualHelp</h5>\r\n                </div> */}\r\n                <Nav className=\"list-unstyled components flex-column\" as=\"ul\" >\r\n                <Nav.Item as=\"li\" className=\"active\">\r\n                <LinkContainer to=\"/\">\r\n                <Nav.Link>\r\n                     Dashboard\r\n            </Nav.Link>\r\n            </LinkContainer>\r\n                </Nav.Item>\r\n                    <Nav.Item as=\"li\" >\r\n                   \r\n                        <Nav.Link href=\"#homeSubmenu\" className=\"dropdown-toggle\" data-toggle=\"collapse\" aria-expanded=\"false\">Master Record</Nav.Link>\r\n                        \r\n                        {/* <ul class=\"collapse list-unstyled\" id=\"homeSubmenu\"> */}\r\n                        <Nav class=\"collapse list-unstyled\" id=\"homeSubmenu\" as=\"ul\">\r\n                            <Nav.Item as=\"li\">\r\n                            <LinkContainer to=\"/memberGroup\">\r\n                                <Nav.Link href=\"/home\">Member Group</Nav.Link>\r\n                                </LinkContainer>\r\n                                {/* <NavLink to=\"/memberGroup\">Member Group</NavLink> */}\r\n                            </Nav.Item>\r\n                            <Nav.Item as=\"li\">\r\n                            <LinkContainer to=\"/member\">\r\n                                <Nav.Link eventKey=\"link-1\">Members</Nav.Link>\r\n                            </LinkContainer>\r\n                            </Nav.Item>\r\n                        </Nav>\r\n                    </Nav.Item>\r\n                    <Nav.Item as=\"li\" >\r\n                        <Nav.Link href=\"#groupLoan\" data-toggle=\"collapse\" aria-expanded=\"false\" className=\"dropdown-toggle\">Group Loan</Nav.Link>\r\n                        {/* <ul class=\"collapse list-unstyled\" id=\"homeSubmenu\"> */}\r\n                        <Nav class=\"collapse list-unstyled\" id=\"groupLoan\" as=\"ul\">\r\n                            <Nav.Item as=\"li\">\r\n                            <LinkContainer to=\"/emiCalculator\">\r\n                                <Nav.Link href=\"#\">Calculator</Nav.Link>\r\n                                </LinkContainer>\r\n                            </Nav.Item>\r\n                            <Nav.Item as=\"li\">\r\n                            <LinkContainer to=\"/scheme\">\r\n                                <Nav.Link eventKey=\"link-1\">Scheme</Nav.Link>\r\n                                </LinkContainer>\r\n                            </Nav.Item>\r\n                            <Nav.Item as=\"li\">\r\n                            <LinkContainer to=\"/village\">\r\n                                <Nav.Link eventKey=\"link-1\">Village</Nav.Link>\r\n                                </LinkContainer>\r\n                            </Nav.Item>\r\n\r\n                            <Nav.Item as=\"li\">\r\n                            <LinkContainer to=\"/loanApplication\">\r\n                                <Nav.Link eventKey=\"link-2\">Application</Nav.Link>\r\n                                </LinkContainer>\r\n                            </Nav.Item>\r\n                            {(auth.role==\"checker\"||auth.role==\"admin\")?<Nav.Item as=\"li\">\r\n                            <LinkContainer to=\"/loanApproval\">\r\n                                <Nav.Link eventKey=\"link-2\">Approve Application</Nav.Link>\r\n                                </LinkContainer>\r\n                            </Nav.Item>:\"\"}\r\n                            {(auth.role==\"checker\"||auth.role==\"admin\")?<Nav.Item as=\"li\">\r\n                            <LinkContainer to=\"/disburseLoan\">\r\n                                <Nav.Link eventKey=\"link-2\">Disbure Application</Nav.Link>\r\n                                </LinkContainer>\r\n                            </Nav.Item>:\"\"}\r\n                            <Nav.Item as=\"li\">\r\n                            <LinkContainer to=\"/allApplications\">\r\n                                <Nav.Link eventKey=\"link-2\">Loan Applications</Nav.Link>\r\n                                </LinkContainer>\r\n                            </Nav.Item>\r\n\r\n                        </Nav>\r\n                    </Nav.Item>\r\n                    <Nav.Item as=\"li\" >\r\n                        <Nav.Link href=\"#rdApplications\" data-toggle=\"collapse\" aria-expanded=\"false\" className=\"dropdown-toggle\">Recurring Deposit</Nav.Link>\r\n                        {/* <ul class=\"collapse list-unstyled\" id=\"homeSubmenu\"> */}\r\n                        <Nav class=\"collapse list-unstyled\" id=\"rdApplications\" as=\"ul\">\r\n                            <Nav.Item as=\"li\">\r\n                            <LinkContainer to=\"/rdApplications\">\r\n                                <Nav.Link href=\"#\">RD applications</Nav.Link>\r\n                                </LinkContainer>\r\n                            </Nav.Item>\r\n                            <Nav.Item as=\"li\">\r\n                            <LinkContainer to=\"/rdLadger\">\r\n                                <Nav.Link href=\"#\">RD Ladger</Nav.Link>\r\n                                </LinkContainer>\r\n                            </Nav.Item>\r\n\r\n                        </Nav>\r\n                    </Nav.Item>\r\n\r\n                    <Nav.Item as=\"li\" >\r\n                        <Nav.Link href=\"#processingFee\" data-toggle=\"collapse\" aria-expanded=\"false\" className=\"dropdown-toggle\">Processing Fee</Nav.Link>\r\n                        {/* <ul class=\"collapse list-unstyled\" id=\"homeSubmenu\"> */}\r\n                        <Nav class=\"collapse list-unstyled\" id=\"processingFee\" as=\"ul\">\r\n                            <Nav.Item as=\"li\">\r\n                            <LinkContainer to=\"/processingFee\">\r\n                                <Nav.Link href=\"#\">List Processing Fee</Nav.Link>\r\n                                </LinkContainer>\r\n                            </Nav.Item>\r\n\r\n                        </Nav>\r\n                    </Nav.Item>\r\n\r\n                    <Nav.Item as=\"li\" >\r\n                        <Nav.Link href=\"#expense\" data-toggle=\"collapse\" aria-expanded=\"false\" className=\"dropdown-toggle\">Expense</Nav.Link>\r\n                        {/* <ul class=\"collapse list-unstyled\" id=\"homeSubmenu\"> */}\r\n                        <Nav class=\"collapse list-unstyled\" id=\"expense\" as=\"ul\">\r\n                            <Nav.Item as=\"li\">\r\n                                <LinkContainer to=\"/expense\">\r\n                                <Nav.Link href=\"#\">List Expense</Nav.Link>\r\n                                </LinkContainer>\r\n                            </Nav.Item>\r\n\r\n                        </Nav>\r\n                    </Nav.Item>\r\n\r\n                    <Nav.Item as=\"li\" >\r\n                        <Nav.Link href=\"#payments\" data-toggle=\"collapse\" aria-expanded=\"false\" className=\"dropdown-toggle\">Payment to collect</Nav.Link>\r\n                        {/* <ul class=\"collapse list-unstyled\" id=\"homeSubmenu\"> */}\r\n                        <Nav class=\"collapse list-unstyled\" id=\"payments\" as=\"ul\">\r\n                            <Nav.Item as=\"li\">\r\n                                <LinkContainer to=\"/dueEmis\">\r\n                                    <Nav.Link href=\"#\">Payment to collect(Loan)</Nav.Link>\r\n                                </LinkContainer>\r\n                            </Nav.Item>\r\n                            <Nav.Item as=\"li\">\r\n                                <LinkContainer to=\"/rdDeposites\">\r\n                                    <Nav.Link href=\"#\">Deposites collect(RD)</Nav.Link>\r\n                                </LinkContainer>\r\n                            </Nav.Item>\r\n\r\n                        </Nav>\r\n                    </Nav.Item>\r\n                </Nav>\r\n            </nav>\r\n        // </Col>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {  Navbar, Nav } from 'react-bootstrap';\r\nimport { useSelector,useDispatch } from \"react-redux\";\r\nimport { useHistory } from 'react-router';\r\nimport {LOGOUT} from '../../constants/actionTypes';\r\n\r\nexport default function TopNav(props) {\r\nconst auth = useSelector(state => state.auth);\r\nconst dispatch = useDispatch();\r\nlet history = useHistory();\r\nconst logout = ()=>{\r\n     dispatch({ type: LOGOUT })\r\n       history.push(\"/login\");\r\n   }\r\n    return (\r\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"info\" variant=\"dark\">\r\n               \r\n                <h4 id=\"logo-web\" className=\"mr-4\">AA2 MutualHelp</h4>\r\n            <button type=\"button\" onClick={props.toggleSidebar} className=\"btn btn-dark\">\r\n                <i className=\"fas fa-align-left\"></i>\r\n            </button>\r\n            <h4 id=\"logo-mobile\" className=\"\">AA2 MutualHelp</h4>\r\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                <Nav className=\"ml-auto\">\r\n                    <Nav.Link href=\"#\">{auth.username}</Nav.Link>\r\n                    <Nav.Link eventKey={2} onClick={logout}>\r\n                        Logout\r\n                    </Nav.Link>\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport { useSelector,useDispatch } from \"react-redux\";\r\nimport InnerHeader from './InnerHeader';\r\nimport Footer from './Footer';\r\nimport Leftbar from './Leftbar';\r\nimport TopNav from './TopNav';\r\nimport { useHistory } from 'react-router';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nconst InnerLayout = ({ component: Component, ...rest }) => {\r\n    const auth = useSelector(state => state.auth);\r\n    const history = useHistory();\r\n    const [showSidebar, setshowSidebar] = useState(true)\r\n    useEffect(() => {\r\n        setshowSidebar(window.innerWidth <= 768 ? false : true);\r\n        checkLogin();\r\n    }, [Component]);\r\n    const toggleSidebar = () => {\r\n\r\n        console.log(window);\r\n        setshowSidebar(showSidebar ? false : true)\r\n        // this.setState({\r\n        //   isopen:this.state.isopen?false:true\r\n        // })\r\n    }\r\n    const checkLogin = () =>{\r\n        let jwt = \"\";\r\n         jwt = localStorage.getItem(\"jwt\");\r\n         console.log(jwt);\r\n         if(jwt==\"\" || !auth.hasOwnProperty(\"username\")){\r\n             history.push(\"/login\");\r\n         }\r\n    }\r\n    return (\r\n        <Route {...rest} render={props => (\r\n            <>\r\n            \r\n            <Container fluid className=\"pl-0 pr-0\">\r\n            <Row>\r\n                <Col>\r\n                <TopNav toggleSidebar={toggleSidebar} />\r\n                </Col>\r\n            \r\n            </Row>\r\n                \r\n                <Row>\r\n                    \r\n                        {showSidebar ?<Col md={2} sm={2} id=\"sidebar-col\" className=\"bg-info\"><Leftbar/></Col> : \"\"}\r\n                        \r\n                   \r\n                    <Col sm={showSidebar ? 10 : 12} >\r\n                        <div id=\"content\">\r\n\r\n                            <Component {...props} />\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n\r\n                {/* <Footer /> */}\r\n                </Container>\r\n            </>\r\n        )} />)\r\n}\r\n\r\nexport default InnerLayout\r\n","import {requests, superagent, API_ROOT} from \"./BaseUrl\"\r\n\r\n//const url = '/memberGroups/';\r\n\r\nconst MemberGroupModel = {\r\n  getMemberGroups(){\r\n    return superagent.get(`${API_ROOT}/memberGroups/entry`)\r\n  },\r\n  saveMemberGroups(data){\r\n    return superagent.post(`${API_ROOT}/memberGroups/entry`,data)\r\n  },\r\n  getMembersBygroup(group_code){\r\n    return superagent.get(`${API_ROOT}/memberGroups/memberByGroupCode/${group_code}`)\r\n  },\r\n  deleteGroup(group_code){\r\n    return superagent.del(`${API_ROOT}/memberGroups/entry/${group_code}`)\r\n  }\r\n\r\n  }\r\n    export default {MemberGroupModel};","import React, { useEffect, useState } from 'react';\r\nimport { Table,Button, Container, Row, Col,Modal,Badge } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport masterRecord from '../../../models/masterRecord';\r\nimport Loader from '../../layout/Loader';\r\nimport moment from 'moment';\r\nfunction MemberGroup(props) {\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [memberGroupRecords,setMemberGroupsRecords]=useState([]);\r\n    const [memberList,setMemberList]=useState([]);\r\n    const [showDeleteModel, setShowDeleteModel] = useState(false)\r\n    const [deleteID, setDeleteID] = useState(0)\r\n\r\n    const [showMemberModel, setshowMemberModel] = useState(false)\r\n    const memberRecord = [];\r\n    useEffect(() => {\r\n            getMemberGroup();\r\n    },[])\r\n\r\n    const getMemberGroup = () =>{\r\n        setisShowLoader(true);\r\n        masterRecord.MemberGroupModel.getMemberGroups().then(res=>{\r\n            setisShowLoader(false);\r\n            if(res.statusCode == 200){\r\n                setMemberGroupsRecords(res.body.message);\r\n            }else{\r\n                setMemberGroupsRecords([]);\r\n            }\r\n        })\r\n    }\r\n    \r\n    const handleMemmberList = (group_code)=>{\r\n        console.log(group_code);\r\n        setisShowLoader(true);\r\n        masterRecord.MemberGroupModel.getMembersBygroup(group_code).then(res=>{\r\n            setisShowLoader(false);\r\n            if(res.statusCode == 200){\r\n                setMemberList(res.body.message);\r\n                setshowMemberModel(true);\r\n            }else{\r\n                setMemberList([]);\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    const deleteHandle=(id)=>{\r\n        setDeleteID(id);        \r\n        setShowDeleteModel(true);\r\n    }\r\n    const deleteMemberGroup=async()=>{\r\n        setShowDeleteModel(false);\r\n        try{\r\n            setisShowLoader(true);\r\n            let response = await masterRecord.MemberGroupModel.deleteGroup(deleteID);\r\n            setisShowLoader(false);\r\n            if(response.statusCode == 200){\r\n                let UpdatedList = memberGroupRecords.filter((member,idx)=>member.group_code!=deleteID);\r\n                setMemberGroupsRecords(UpdatedList);\r\n             }\r\n        }catch (error) {\r\n                console.log(error.response.body.message);\r\n                setisShowLoader(false);\r\n            }\r\n              \r\n    }\r\n\r\n    return (\r\n        <>\r\n      <Modal show={showDeleteModel} onHide={()=>setShowDeleteModel(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Delete Group</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>Are you sure?</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={()=>setShowDeleteModel(false)}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={()=>deleteMemberGroup()}>\r\n            Delete\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>        \r\n\r\n      <Modal show={showMemberModel} onHide={()=>setshowMemberModel(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Members</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>{memberList.length!=0?<Table className=\"bg-white rounded small\" striped bordered hover responsive>\r\n        <thead className=\"bg-primary\">\r\n            <tr>\r\n                <th>ID</th>\r\n                <th>Name</th>\r\n                <th>Gender</th>\r\n                <th>DOB</th>\r\n                <th>age</th>\r\n                <th>Marital status</th>\r\n                <th>Mobile</th>\r\n                <th>Aadhar</th>\r\n                <th>Voter id</th>\r\n                <th>PAN</th>\r\n                <th>Driving licence</th>\r\n                <th>Ration card</th>\r\n                <th>Bank IFSC code</th>\r\n                <th>Bank account</th>\r\n                <th>Bank account holder</th>\r\n            </tr>\r\n            </thead> \r\n                <tbody>\r\n                {memberList.map(val=>\r\n            <tr>\r\n                <td>{val.member_id}</td>\r\n                <td>{val.member_name}</td>\r\n                <td>{val.gender}</td>\r\n                <td>{moment(val.date_of_birth).format(\"DD-MM-YYYY\") }</td>\r\n                <td>{val.age}</td>\r\n                <td>{val.marital_status}</td>\r\n                <td>{val.mobile_number}</td>\r\n                <td>{val.aadhar_number}</td>\r\n                <td>{val.voter_id_number}</td>\r\n                <td>{val.pan_card_number}</td>\r\n                <td>{val.driving_license_number}</td>\r\n                <td>{val.ration_card_number}</td>\r\n                <td>{val.bank_ifsc_code}</td>\r\n                <td>{val.bank_account}</td>\r\n                <td>{val.bank_account_holder}</td>\r\n            </tr>\r\n            )}\r\n            </tbody></Table>:<h5>No members in this group!</h5>}</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={()=>setshowMemberModel(false)}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={()=>setshowMemberModel(false)}>\r\n            Ok\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>        \r\n\r\n        <Loader show={isShowLoader}/>\r\n        <Container fluid>\r\n        <h2 className=\"text-info text-center\">Member Groups</h2>\r\n            <Row className=\"mb-5 mt-3\">\r\n                <Col>\r\n                <Link to=\"/addMemberGroup\">\r\n                <Button variant=\"info\" size=\"sm\" active>\r\n                    Add Member Group\r\n                </Button>\r\n                </Link>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n            <Col>\r\n            <Table className=\" shadow-lg p-3 mb-5 bg-white rounded\" striped bordered hover responsive>\r\n            <thead className=\"bg-primary\">\r\n                <tr>\r\n                    <th>Group Code</th>\r\n                    <th>Name</th>\r\n                    <th>Remark</th>\r\n                    <th>Member</th>\r\n                    <th>Action</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {memberGroupRecords.map((group,id)=>(<tr>\r\n                    <td>{group.group_code}</td>\r\n                    <td>{group.group_name}</td>\r\n                    <td>{group.remark}</td>\r\n                    <td><Button size=\"sm\" variant=\"info\" onClick={()=>handleMemmberList(group.group_code)}>\r\n                            Members<Badge className=\"bg-secondary\">{group.member_count}</Badge></Button></td>\r\n                    <td><Button size=\"sm\" disabled={group.member_count==0?false:true} variant=\"danger\" onClick={()=>deleteHandle(group.group_code)}>\r\n                        Delete</Button></td>\r\n                </tr>))}\r\n            </tbody>\r\n        </Table>\r\n</Col>\r\n            </Row>\r\n        </Container>\r\n        </>\r\n        );\r\n}\r\n\r\nexport default MemberGroup;","import React, { useState } from 'react';\r\nimport { Button, Form, Container, Row, Col, Toast } from 'react-bootstrap';\r\nimport { useFormik } from 'formik';\r\nimport masterRecord from '../../../models/masterRecord';\r\nimport Loader from '../../layout/Loader';\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction AddMemberGroup(props) {\r\n  const auth = useSelector(state => state.auth);\r\n  const [values, setValues] = useState({});\r\n  const [isShowLoader, setisShowLoader] = useState(false)\r\n  const [showToast, setShowToast] = useState({ isShow: false,type:\"\", message: \"\" })\r\n  const validate = values => {\r\n    const errors = {};\r\n    if (!values.group_code) {\r\n      errors.group_code = 'Group Code is Required';\r\n    }\r\n    return errors;\r\n  };\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      group_code: '',\r\n      group_name: '',\r\n      remark: '',\r\n      user_id:auth.id\r\n    },\r\n    validate,\r\n    onSubmit: async (values) => {\r\n      setisShowLoader(true);\r\n      try {\r\n        let response = await masterRecord.MemberGroupModel.saveMemberGroups(values);\r\n        setisShowLoader(false);\r\n        if (response.statusCode == 200) {\r\n          setShowToast({ isShow: true,type:\"bg-success\", message: response.body.message })\r\n          formik.resetForm();\r\n        } else {\r\n          setShowToast({ isShow: true,type:\"bg-danger\", message: response.body.message })\r\n        }\r\n\r\n      } catch (error) {\r\n        setisShowLoader(false);\r\n        setShowToast({ isShow: true,type:\"bg-danger\", message: error.response.body.message })\r\n      }\r\n    },\r\n    handleChange: () => {\r\n      setValues(prevValues => ({\r\n        ...prevValues,\r\n        // we use the name to tell Formik which key of `values` to update\r\n        [values.target.name]: values.target.value\r\n      }))\r\n    },\r\n  });\r\n  return (\r\n    <>\r\n      <Toast key={1} autohide delay={3000} show={showToast.isShow} onClose={() => setShowToast({ isShow: false,type:\"\", message: \"\" })} className={\"loader \"+ (showToast.type) } >\r\n        <Toast.Header>\r\n          <strong className=\"me-auto\">{showToast.type==\"bg-danger\"?\"Error\":\"Success\"} Message</strong>\r\n        </Toast.Header>\r\n        <Toast.Body className=\"Dark\">\r\n        {showToast.message}\r\n        </Toast.Body>\r\n      </Toast>\r\n\r\n      <Loader show={isShowLoader} />\r\n      <h2 className=\"text-info text-center\">Add Member Group</h2>\r\n      <Row>\r\n        <Col md={6}>\r\n          <Container fluid className=\"bg-white mt-5 shadow-lg p-3 mb-5 bg-white rounded\">\r\n            <Form onSubmit={formik.handleSubmit}>\r\n              <Form.Group className=\"mb-3 form-group required\" controlId=\"formBasicEmail\">\r\n                <Form.Label>Group Code</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"group_code\"\r\n                  placeholder=\"Enter group code\"\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.group_code}\r\n\r\n                />\r\n                {formik.touched.group_code && formik.errors.group_code ? (\r\n                  <div class=\"text-danger\">{formik.errors.group_code}</div>\r\n                ) : null}\r\n\r\n              </Form.Group>\r\n\r\n              <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                <Form.Label>Group Name</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"group_name\"\r\n                  placeholder=\"Enter group name\"\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.group_name}\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                <Form.Label>Remark</Form.Label>\r\n                <Form.Control as=\"textarea\" rows={3} name=\"remark\"\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.remark} />\r\n              </Form.Group>\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                Save\r\n              </Button>\r\n\r\n            </Form>\r\n          </Container>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n\r\n  );\r\n}\r\n\r\nexport default AddMemberGroup;","import {requests, superagent, API_ROOT} from \"./BaseUrl\"\r\n\r\n//const url = '/memberGroups/';\r\n\r\nconst MemberDetailModel = {\r\n  getMemberDetailsData(member_id=\"all\"){\r\n    return superagent.get(`${API_ROOT}/member/entry/${member_id}`)\r\n  },\r\n  getMemberPageData(member_id=\"\"){\r\n    return [superagent.get(`${API_ROOT}/member/entry/${member_id}`),superagent.get(`${API_ROOT}/member/loanByMember/${member_id}`)]\r\n\r\n  },\r\n  saveMemberDetails(data){\r\n    return superagent.post(`${API_ROOT}/member/entry`,data)\r\n\r\n  },\r\n  deleteMember(id){\r\n    return superagent.del(`${API_ROOT}/member/entry/${id}`)\r\n  },  \r\n  editMember(data,id){\r\n    return superagent.put(`${API_ROOT}/member/entry/${id}`,data)\r\n  }  \r\n    \r\n  }\r\n    export default {MemberDetailModel};","import React, { useState, useEffect } from 'react';\r\nimport { Button, Form, Container, Row, Col, Toast } from 'react-bootstrap';\r\nimport DatePicker from \"react-datepicker\";\r\nimport { useFormik } from 'formik';\r\nimport memberDetails from \"../../../models/memberDetails\"\r\nimport masterRecord from '../../../models/masterRecord';\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport Loader from '../../layout/Loader';\r\n\r\n//import \"react-datepicker/dist/react-datepicker.css\";\r\nfunction AddMember(props) {\r\n    const auth = useSelector(state => state.auth);\r\n    let history = useHistory();\r\n\r\n    const [enrollmentDate, setEnrollmentDate] = useState(new Date());\r\n    const [dob, setDob] = useState();\r\n\r\n    const [values, setValues] = useState({});\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [groups, setGroups] = useState([])\r\n    const [showToast, setShowToast] = useState({ isShow: false, type: \"\", message: \"\" })\r\n    useEffect(() => {\r\n        console.log(props);\r\n        if(props.location.state)\r\n            getMemberDetails(props.location.state);\r\n        getMemberGroups();\r\n    }, [])\r\n    const getMemberGroups = async () => {\r\n        try {\r\n            setisShowLoader(true);\r\n            let response = await masterRecord.MemberGroupModel.getMemberGroups();\r\n            setisShowLoader(false);\r\n            setGroups(response.body.message)\r\n        } catch (error) {\r\n            setisShowLoader(false);\r\n            setShowToast({ isShow: true, type: \"bg-danger\", message: error.response.body.message })\r\n        }\r\n    }\r\n    const getMemberDetails = async(member_id)=>{\r\n        try {\r\n            setisShowLoader(true);\r\n            let response = await memberDetails.MemberDetailModel.getMemberDetailsData(member_id);\r\n            console.log(response);\r\n            formik.values.aadhar_number = response.body.message[0].aadhar_number  \r\n            formik.values.member_name = response.body.message[0].member_name \r\n            formik.values.gender = response.body.message[0].gender \r\n            formik.values.age = response.body.message[0].age \r\n            formik.values.marital_status = response.body.message[0].marital_status \r\n            formik.values.mobile_number = response.body.message[0].mobile_number \r\n            formik.values.email_id = response.body.message[0].email_id \r\n            formik.values.member_group_id = response.body.message[0].member_group_id \r\n            formik.values.pan_card_number = response.body.message[0].pan_card_number \r\n            formik.values.driving_license_number = response.body.message[0].driving_license_number \r\n            formik.values.voter_id_number = response.body.message[0].voter_id_number \r\n            formik.values.ration_card_number = response.body.message[0].ration_card_number \r\n            formik.values.bank_account = response.body.message[0].bank_account \r\n            formik.values.bank_ifsc_code = response.body.message[0].bank_ifsc_code \r\n            formik.values.bank_account_holder = response.body.message[0].bank_account_holder \r\n            formik.values.enrollment_date = response.body.message[0].enrollment_date \r\n            setEnrollmentDate(new Date(response.body.message[0].enrollment_date));\r\n            formik.values.date_of_birth = response.body.message[0].date_of_birth \r\n            setDob(new Date(response.body.message[0].date_of_birth));\r\n\r\n            setisShowLoader(false);\r\n            //setGroups(response.body.message)\r\n        } catch (error) {\r\n            setisShowLoader(false);\r\n            setShowToast({ isShow: true, type: \"bg-danger\", message: error.response.body.message })\r\n        }\r\n\r\n    }\r\n    const validate = values => {\r\n        const errors = {};\r\n        if (!values.member_name) {\r\n            errors.member_name = 'Please provide member name';\r\n        }\r\n        return errors;\r\n    };\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            enrollment_date: enrollmentDate,\r\n            date_of_birth: dob,\r\n            member_name: '',\r\n            gender: \"\",\r\n            age: \"\",\r\n            marital_status: \"\",\r\n            mobile_number: \"\",\r\n            email_id: \"\",\r\n            member_group_id: \"\",\r\n            aadhar_number: \"\",\r\n            pan_card_number: \"\",\r\n            driving_license_number: \"\",\r\n            voter_id_number: \"\",\r\n            ration_card_number: \"\",\r\n            bank_account:\"\",\r\n            bank_ifsc_code:\"\",\r\n            bank_account_holder:\"\",\r\n            user_id:auth.id\r\n        },\r\n        validate,\r\n        onSubmit: async (values) => {\r\n            setisShowLoader(true);\r\n            try {\r\n                values.enrollment_date = enrollmentDate;\r\n                values.date_of_birth = dob;\r\n                let response = [];\r\n                if(props.location.state){\r\n                     response = await memberDetails.MemberDetailModel.editMember(values,props.location.state);\r\n\r\n                }else{\r\n                     response = await memberDetails.MemberDetailModel.saveMemberDetails(values);\r\n                }\r\n                setisShowLoader(false);\r\n                if (response.statusCode == 200) {\r\n                    formik.resetForm();\r\n                    if(props.location.state)\r\n                        history.push(\"/member\")\r\n                    setShowToast({ isShow: true, type: \"bg-success\", message: response.body.message })\r\n                } else {\r\n                    setShowToast({ isShow: true, type: \"bg-danger\", message: response.body.message })\r\n                }\r\n\r\n            } catch (error) {\r\n                console.log(error.response.body.message);\r\n                setisShowLoader(false);\r\n                setShowToast({ isShow: true, type: \"bg-danger\", message: error.response.body.message })\r\n            }\r\n        }\r\n    });\r\n    return (\r\n        <>\r\n            <Toast key={1} autohide delay={3000}  show={showToast.isShow} onClose={() => setShowToast({ isShow: false, type: \"\", message: \"\" })} className={\"loader \" + (showToast.type)} >\r\n                <Toast.Header>\r\n                    <strong className=\"me-auto\">{showToast.type == \"bg-danger\" ? \"Error\" : \"Success\"} Message</strong>\r\n                </Toast.Header>\r\n                <Toast.Body className=\"Dark\">\r\n                    {showToast.message}\r\n                </Toast.Body>\r\n            </Toast>\r\n\r\n            <Loader show={isShowLoader} />\r\n            <h2 className=\"text-info text-center\">Add Member</h2>\r\n            <Container fluid className=\"bg-white mt-5 shadow-lg p-3 mb-5 bg-white rounded\">\r\n\r\n                <Form onSubmit={formik.handleSubmit}>\r\n                    <Row className=\"mb-3\" >\r\n                        <Form.Group as={Col} className=\"form-group required\" controlId=\"formGridEnroll\">\r\n                            <Form.Label >Enrollment Date</Form.Label>\r\n                            <DatePicker class=\"form-control\"\r\n                                selected={enrollmentDate}\r\n                                onChange={(date) => setEnrollmentDate(date)}\r\n                                name=\"enrollment_date\"\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} className=\"form-group required\" controlId=\"formGridName\">\r\n                            <Form.Label >Member Name</Form.Label>\r\n                            <Form.Control type=\"text\"\r\n                                placeholder=\"member name\"\r\n                                name=\"member_name\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.member_name}\r\n\r\n                            />\r\n                            {formik.touched.member_name && formik.errors.member_name ? (\r\n                                <div class=\"text-danger\">{formik.errors.member_name}</div>\r\n                            ) : null}\r\n                        </Form.Group>\r\n                    </Row>\r\n                    <Row className=\"mb-3\" >\r\n                        <Form.Group as={Col} controlId=\"formGriddob\">\r\n                            <Form.Label>Date of Birth</Form.Label>\r\n                            <DatePicker\r\n                                class=\"form-control\"\r\n                                selected={dob}\r\n                                onChange={(date) => setDob(date)}\r\n                                name=\"date_of_birth\"\r\n                                dateFormat=\"dd/MM/yyyy\"\r\n                                peekNextMonth\r\n                                showMonthDropdown\r\n                                showYearDropdown\r\n                                dropdownMode=\"select\"\r\n\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} className=\"mb-3\" controlId=\"formGridAddress1\">\r\n                            <Form.Label>Gender</Form.Label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                name=\"gender\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.gender}\r\n                            >\r\n                                <option key=\"\" value=\"\">Select Gender</option>\r\n\r\n                                <option key=\"male\" value=\"male\">Male</option>\r\n                                <option key=\"female\" value=\"female\">Female</option>\r\n\r\n                            </select>\r\n                        </Form.Group>\r\n\r\n                    </Row>\r\n                    <Row className=\"mb-3\" >\r\n                        <Form.Group as={Col} controlId=\"formGridAge\">\r\n                            <Form.Label>Age</Form.Label>\r\n                            <Form.Control\r\n                                name=\"age\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.age}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"formGridState\">\r\n                            <Form.Label>Marital Status</Form.Label>\r\n                            <Form.Control\r\n                                name=\"marital_status\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.marital_status}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                    </Row>\r\n\r\n                    <Row className=\"mb-3\" >\r\n                        <Form.Group as={Col} controlId=\"formGridAge\">\r\n                            <Form.Label>Phone number</Form.Label>\r\n                            <Form.Control\r\n                                name=\"mobile_number\"\r\n                                type=\"number\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.mobile_number}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"formGridState\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control\r\n                                name=\"email_id\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.email_id}\r\n                                type=\"text\"\r\n                            />\r\n                        </Form.Group>\r\n\r\n                    </Row>\r\n                    <Row className=\"mb-3\">\r\n                        <Form.Group as={Col} md={6} className=\"mb-3\" controlId=\"formGridAddress1\">\r\n                            <Form.Label>Member Group</Form.Label>\r\n                            <select className=\"form-control\" name=\"member_group_id\" onChange={formik.handleChange}\r\n                                value={formik.values.member_group_id}\r\n                            >\r\n                                <option key=\"\" value=\"\">Select Member Group</option>\r\n                                {groups.map((group,id)=>(\r\n                                    <option key={group.group_code} value={group.group_code}>{group.group_code}</option>\r\n                                ))}\r\n                            </select>\r\n                        </Form.Group>\r\n\r\n                    </Row>\r\n                    <Row className=\"mb-3\">\r\n                        <Col>\r\n                            <h3 className=\"text-info\">KYC Information</h3>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"mb-3\" >\r\n                        <Form.Group as={Col} controlId=\"formGridAge\">\r\n                            <Form.Label>Aadhar no.</Form.Label>\r\n                            <Form.Control\r\n                                name=\"aadhar_number\"\r\n                                type=\"number\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.aadhar_number}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"formGridState\">\r\n                            <Form.Label>PAN</Form.Label>\r\n                            <Form.Control\r\n                                name=\"pan_card_number\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.pan_card_number}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                    </Row>\r\n                    <Row className=\"mb-3\" >\r\n                        <Form.Group as={Col} controlId=\"formGridAge\">\r\n                            <Form.Label>Driving Licence No.</Form.Label>\r\n                            <Form.Control\r\n                                name=\"driving_license_number\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.driving_license_number}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"formGridState\">\r\n                            <Form.Label>Voter Id No.</Form.Label>\r\n                            <Form.Control\r\n                                name=\"voter_id_number\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.voter_id_number}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                    </Row>\r\n                    <Row className=\"mb-3\" >\r\n                        <Form.Group as={Col} md={6} controlId=\"formGridAge\">\r\n                            <Form.Label>Ration Card No.</Form.Label>\r\n                            <Form.Control\r\n                                name=\"ration_card_number\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.ration_card_number}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                    </Row>\r\n \r\n                    <Row className=\"mb-3\">\r\n                        <Col>\r\n                            <h3 className=\"text-info\">Bank Details</h3>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"mb-3\" >\r\n                        <Form.Group as={Col} controlId=\"formGridAge\">\r\n                            <Form.Label>Bank Account No.</Form.Label>\r\n                            <Form.Control\r\n                                name=\"bank_account\"\r\n                                type=\"number\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.bank_account}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"formGridState\">\r\n                            <Form.Label>IFSC code</Form.Label>\r\n                            <Form.Control\r\n                                name=\"bank_ifsc_code\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.bank_ifsc_code}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                    </Row>\r\n                    <Row className=\"mb-3\" >\r\n                        <Form.Group as={Col} md={6} controlId=\"formGridAge\">\r\n                            <Form.Label>Account holder name</Form.Label>\r\n                            <Form.Control\r\n                                name=\"bank_account_holder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.bank_account_holder}\r\n                            />\r\n                        </Form.Group>\r\n\r\n\r\n                    </Row>\r\n\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Save\r\n                    </Button>\r\n                </Form>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AddMember;","import React, { useEffect, useState, useMemo } from 'react';\r\nimport { Table,Button, Container, Row, Col,Modal,Pagination } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport memberRecord from '../../../models/memberDetails';\r\nimport Loader from '../../layout/Loader';\r\nimport moment from 'moment';\r\nimport {useTable,useSortBy,usePagination,useFilters } from 'react-table'\r\nimport { useHistory } from 'react-router-dom';\r\nfunction Members(props) {\r\n    let history = useHistory();\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [showDeleteModel, setShowDeleteModel] = useState(false)\r\n    const [deleteID, setDeleteID] = useState(0)\r\n    const [memberRecords,setMemberRecords]=useState([]);\r\n    useEffect(() => {\r\n            getMemberGroup();\r\n    },[])\r\n    \r\n    const data = useMemo(\r\n        () => \r\n        memberRecords.map((record,index)=>\r\n                { \r\n             return {\r\n                col1:record.member_id,\r\n                col2:record.member_name,\r\n                col3:record.member_group_id,\r\n                col4:record.mobile_number,\r\n                col5:record\r\n                }\r\n            }\r\n        )\r\n        ,\r\n        [memberRecords]\r\n      )   \r\n\r\n    const columns = useMemo(\r\n        () => [\r\n          {\r\n            Header: 'Member ID',\r\n            accessor: 'col1', // accessor is the \"key\" in the data\r\n            allowFilter:true\r\n          },\r\n          {\r\n            Header: 'Member Name',\r\n            accessor: 'col2',\r\n            allowFilter:true\r\n          },\r\n          {\r\n            Header: 'Member Group Code',\r\n            accessor: 'col3',\r\n            allowFilter:true\r\n            },\r\n          {\r\n            Header: 'Mobile Number',\r\n            accessor: 'col4',\r\n            allowFilter:true\r\n          },\r\n          {\r\n            Header: 'Action',\r\n            accessor: 'col5',\r\n            allowFilter:false\r\n          }\r\n\r\n        ],\r\n        []\r\n      )    \r\n\r\n    const getMemberGroup = () =>{\r\n        setisShowLoader(true);\r\n        memberRecord.MemberDetailModel.getMemberDetailsData().then(res=>{\r\n            setisShowLoader(false);\r\n            if(res.statusCode == 200){\r\n                setMemberRecords(res.body.message);\r\n            }else{\r\n                setMemberRecords([]);\r\n            }\r\n        })\r\n    }\r\n    const deleteHandle=(id)=>{\r\n        setDeleteID(id);        \r\n        setShowDeleteModel(true);\r\n    }\r\n    const deleteMember=async()=>{\r\n        setShowDeleteModel(false);\r\n        try{\r\n            setisShowLoader(true);\r\n            let response = await memberRecord.MemberDetailModel.deleteMember(deleteID);\r\n            setisShowLoader(false);\r\n            if(response.statusCode == 200){\r\n                let UpdatedList = memberRecords.filter((member,idx)=>member.member_id!=deleteID);\r\n                setMemberRecords(UpdatedList);\r\n             }\r\n        }catch (error) {\r\n                console.log(error.response.body.message);\r\n                setisShowLoader(false);\r\n            }\r\n              \r\n    }\r\n  \r\n    function DefaultColumnFilter({\r\n        column: { filterValue, preFilteredRows, setFilter },\r\n    }) {\r\n        const count = preFilteredRows.length\r\n    \r\n        return (\r\n            <input\r\n                className=\"form-control\"\r\n                value={filterValue || ''}\r\n                onChange={e => {\r\n                    setFilter(e.target.value || undefined)\r\n                }}\r\n                placeholder={`Search ${count} records...`}\r\n            />\r\n        )\r\n    }    \r\n    const defaultColumn = React.useMemo(\r\n        () => ({\r\n            // Default Filter UI\r\n            Filter: DefaultColumnFilter,\r\n        }),\r\n        []\r\n    ) \r\n    const paginate = (totalPage)=>{\r\n      let pageNumberArray = [];\r\n      for(let i=1;i<=totalPage;i++){\r\n        pageNumberArray.push(i);\r\n      }\r\n      return(      \r\n      <Pagination>\r\n        <Pagination.First  onClick={() => gotoPage(0)}/>\r\n        <Pagination.Prev onClick={() => previousPage()} disabled={!canPreviousPage}/>\r\n        {pageNumberArray.map(num=><Pagination.Item key={num} active={num === (pageIndex+1)} onClick={() => gotoPage(num-1)}>{num}</Pagination.Item>)}\r\n        <Pagination.Next onClick={() => nextPage()} disabled={!canNextPage}/>\r\n        <Pagination.Last onClick={() => gotoPage(totalPage-1)}/>\r\n        </Pagination>\r\n      );\r\n    \r\n    }\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n        pageOptions,\r\n        page,\r\n        pageCount,\r\n        state: { pageIndex, pageSize },\r\n        gotoPage,\r\n        previousPage,\r\n        nextPage,\r\n        setPageSize,\r\n        canPreviousPage,\r\n        canNextPage,  \r\n      } = useTable({ columns, data, defaultColumn, initialState: { pageIndex: 0 }},useFilters,useSortBy,usePagination)\r\n    return (\r\n        <>\r\n      <Modal show={showDeleteModel} onHide={()=>setShowDeleteModel(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Delete Member</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>Are you sure?</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={()=>setShowDeleteModel(false)}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={()=>deleteMember()}>\r\n            Delete\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>        \r\n        <Loader show={isShowLoader}/>\r\n        <Container fluid>\r\n        <h2 className=\"text-info text-center\">Members</h2>\r\n            <Row className=\"mb-5 mt-3\">\r\n                <Col>\r\n                <Link to=\"/addMember\">\r\n                <Button variant=\"info\" size=\"lg\" active>\r\n                    Add Member\r\n                </Button>\r\n                </Link>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n            <Col>\r\n            <div className=\"text-right\">\r\n              {paginate(pageCount)}\r\n            </div>   \r\n\r\n            <Table {...getTableProps()} className=\"shadow-lg p-3 mb-5 bg-white rounded small\" striped bordered hover responsive>\r\n            <thead className=\"bg-primary\">\r\n                    {headerGroups.map(headerGroup => (\r\n                    <tr {...headerGroup.getHeaderGroupProps()}>\r\n                        {headerGroup.headers.map(column => (\r\n                        <th\r\n                            {...column.getHeaderProps(column.getSortByToggleProps())}\r\n                        >\r\n                            {column.render('Header')}\r\n                            <span>\r\n                            {column.isSorted ? (column.isSortedDesc ? ' 🔽' : ' 🔼') : ''}\r\n                            </span>\r\n                            <div>{column.allowFilter? column.render('Filter') : null}</div>\r\n                        </th>\r\n                        ))}\r\n                    </tr>\r\n                    ))}\r\n            </thead>\r\n            <tbody{...getTableBodyProps()}>\r\n\r\n                    {page.map(row => {\r\n                        prepareRow(row)\r\n                        return (\r\n                            <tr {...row.getRowProps()}>\r\n                            {row.cells.map(cell => {\r\n                                console.log(cell);\r\n                                if(cell.column.id !=\"col5\"){                                \r\n                                    return (\r\n                                        <td {...cell.getCellProps()}>\r\n                                            {cell.render('Cell')}\r\n                                        </td>\r\n                                        )\r\n                                    }else{\r\n                                        return (\r\n                                            <td>\r\n                                                {/* <Link to = \"/viewMemberDetail/:5\" params={{ member_id: cell.value.member_id }}> */}\r\n                                                <Button size={\"sm\"} variant=\"primary\"  onClick={()=>{history.push(\"/viewMemberDetail\",cell.value.member_id)}}>View</Button>\r\n                                                {' '}\r\n                                                <Button size={\"sm\"} variant=\"success\" onClick={()=>{history.push(\"/addMember\",cell.value.member_id)}} >Edit</Button>\r\n                                                {' '}\r\n                                                <Button size={\"sm\"} variant=\"danger\" onClick={()=>deleteHandle(cell.value.member_id)} >Delete</Button>\r\n                                            </td>\r\n                                        )\r\n                                    }\r\n                            })}\r\n                            </tr>\r\n                        )\r\n                        })}\r\n\r\n            </tbody>\r\n        </Table>\r\n        <div className=\"text-right\">\r\n          {paginate(pageCount)}\r\n        </div>   \r\n        </Col>\r\n        </Row>\r\n        </Container>\r\n        </>\r\n        );\r\n}\r\n\r\nexport default Members;","import React, { useEffect, useState } from 'react';\r\nimport { Table, Badge, Container, Row, Col, Card } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport memberRecord from '../../../models/memberDetails';\r\nimport Loader from '../../layout/Loader';\r\nimport moment from 'moment';\r\n\r\nfunction Members(props) {\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [memberRecords, setMemberRecords] = useState([]);\r\n    const [loanAccounts, setLoanAccounts] = useState([]);\r\n\r\n    useEffect(() => {\r\n        console.log(props);\r\n        getMemberData();\r\n    }, [])\r\n\r\n    const getMemberData = async() => {\r\n        try{\r\n            setisShowLoader(true);\r\n            const response =await Promise.all(memberRecord.MemberDetailModel.getMemberPageData(props.location.state))\r\n            setisShowLoader(false);\r\n            setMemberRecords(response[0].body.message[0]);\r\n            setLoanAccounts(response[1].body.message);          \r\n        } catch (error) {\r\n            setisShowLoader(false);\r\n    }\r\n\r\n        // setisShowLoader(true);\r\n        // memberRecord.MemberDetailModel.getMemberDetailsData(props.location.state).then(res => {\r\n        //     setisShowLoader(false);\r\n        //     if (res.statusCode == 200) {\r\n        //         setMemberRecords(res[0].body.message[0]);\r\n        //     } else {\r\n        //         setMemberRecords([]);\r\n        //     }\r\n        // })\r\n    }\r\n    const loanStatus=(loan)=>{\r\n        let actionStatus = \"\";\r\n        if (loan.is_approved == 1 && loan.is_disbursed == 1) {\r\n            actionStatus = \"Disbursed\";\r\n        } else if (loan.is_approved == 1 && loan.is_disbursed == 0) {\r\n            actionStatus = \"Approved\";\r\n        } else if (loan.is_disbursed == -1) {\r\n            actionStatus = \"Disburse Rejected\";\r\n        } else if (loan.is_approved == -1) {\r\n            actionStatus = \"Approval Rejected\";\r\n        } else {\r\n            actionStatus = \"Pending\";\r\n        }\r\n        return actionStatus;\r\n    }\r\n    return (\r\n        <>\r\n            <Loader show={isShowLoader} />\r\n            <Container fluid>\r\n            <Row>\r\n                    <Col>\r\n                    <Card border=\"success\" header\r\n                            key={0}\r\n                            text={'dark'}\r\n                            className=\"m-2\"\r\n                        >\r\n                            <Card.Header className=\"bg-info text-center\"><b>Loan Accounts</b></Card.Header>\r\n                            {isShowLoader==true?<Card.Body><h5 className=\"text-center\">Loading...</h5></Card.Body>:\r\n                            <Card.Body>{ loanAccounts.length==0?<h5 className=\"text-center\">Not running any loan!</h5>:\r\n                                <Table className=\"shadow-lg bg-white rounded small\" striped bordered hover responsive>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Loan Account</th> \r\n                                        <th>Application date</th> \r\n                                        <th>Scheme id</th>\r\n                                        <th>Village name</th>  \r\n                                        <th>EMI day</th>\r\n                                        <th>EMI week</th>  \r\n                                        <th>Member address</th>\r\n                                        <th>Loan amount</th>\r\n                                        <th>Interest rate</th>\r\n                                        <th>EMI payout</th>\r\n                                        <th>EMI type</th>\r\n                                        <th>Tenure</th>\r\n                                        <th>Status</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {loanAccounts.map(res=><tr>\r\n                                        <td><Link to={{\r\n                    pathname: '/loanApprovalDetails',\r\n                    state: res.id\r\n                }}><u>{res.loan_account_no}</u></Link></td>\r\n                                        <td>{res.application_date}</td>\r\n                                        <td>{res.scheme_id}</td>\r\n                                        <td>{res.village_name}</td>\r\n                                        <td>{res.day}</td>\r\n                                        <td>{res.week}</td>\r\n                                        <td>{res.address}</td>\r\n                                        <td>{res.loan_amount}</td>\r\n                                        <td>{res.interest_rate}</td>\r\n                                        <td>{res.EMI_payout}</td>\r\n                                        <td>{res.EMI_type}</td>\r\n                                        <td>{res.Tenure}</td>\r\n                                        <td><Badge className={loanStatus(res) == \"Approved\" || loanStatus(res) == \"Disbursed\" ? \"bg-success\" : \"bg-danger\"}>{loanStatus(res)}</Badge>\r\n                                            </td>\r\n                                    </tr>)}\r\n                                </tbody>\r\n                                </Table>\r\n                                }\r\n                            </Card.Body>\r\n                            }\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col>\r\n                        <Card border=\"success\" header\r\n                            key={0}\r\n                            text={'dark'}\r\n                            className=\"m-2\"\r\n                        >\r\n                            <Card.Header className=\"bg-success text-center\"><b>Member Details</b></Card.Header>\r\n                            <Card.Body>\r\n\r\n                                <Table className=\"shadow-lg bg-white rounded small\" striped bordered hover responsive>\r\n                                    <tbody>\r\n                                        <tr><th>Enrollment Date</th><td>{moment(memberRecords.enrollment_date).format(\"DD-MM-YYYY hh:ss A\")}</td> </tr>\r\n                                        <tr><th>Member Name</th>  <td>{memberRecords.member_name}</td></tr>\r\n                                        <tr><th>Member Id</th>  <td>{memberRecords.member_id}</td></tr>\r\n                                        <tr> <th>Gender</th>  <td>{memberRecords.gender}</td></tr>\r\n                                        <tr><th>DOB</th>   <td>{moment(memberRecords.date_of_birth).format(\"DD-MM-YYYY\")} </td></tr>\r\n                                        <tr><th>Age</th> <td>{memberRecords.age}</td></tr>\r\n                                        <tr><th>Marital Status</th>  <td>{memberRecords.marital_status}</td></tr>\r\n                                        <tr><th>Mobile Number</th> <td>{memberRecords.mobile_number}</td></tr>\r\n                                        <tr><th>Email Id</th> <td>{memberRecords.email_id}</td></tr>\r\n                                        <tr> <th>Member Group Id</th>  <td>{memberRecords.member_group_id}</td></tr>\r\n                                        <tr> <th>Aadhar Number</th> <td>{memberRecords.aadhar_number}</td></tr>\r\n                                        <tr> <th>Driving License Number</th>  <td>{memberRecords.driving_license_number}</td></tr>\r\n                                        <tr> <th>Voter Id Number </th>  <td>{memberRecords.voter_id_number}</td></tr>\r\n                                        <tr>  <th>Ration Card Number</th> <td>{memberRecords.ration_card_number}</td></tr>\r\n                                        <tr> <th>PAN Number</th> <td>{memberRecords.pan_card_number}</td></tr>\r\n                                        <tr> <th>Bank Account no.</th> <td>{memberRecords.bank_account}</td></tr>\r\n                                        <tr> <th>IFSC Code</th> <td>{memberRecords.bank_ifsc_code}</td></tr>\r\n                                        <tr> <th>Bank Account Holder</th> <td>{memberRecords.bank_account_holder}</td></tr>\r\n\r\n                                    </tbody>\r\n                                </Table>\r\n                            </Card.Body>\r\n                        </Card>\r\n\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Members;","import moment from \"moment\"\r\nimport { requests, superagent, API_ROOT } from \"./BaseUrl\"\r\n//const url = '/memberGroups/';\r\n\r\nconst SchemeModel = {\r\n  getScheme() {\r\n    return superagent.get(`${API_ROOT}/scheme/entry`)\r\n  },\r\n  saveScheme(data) {\r\n    return superagent.post(`${API_ROOT}/scheme/entry`, data)\r\n  },\r\n  deleteScheme(id){\r\n    return superagent.del(`${API_ROOT}/scheme/entry/${id}`)\r\n  },  \r\n  getLoanAppInitialData(){\r\n      return [superagent.get(`${API_ROOT}/scheme/entry`),superagent.get(`${API_ROOT}/member/entry/all`),superagent.get(`${API_ROOT}/village/entry`)]\r\n  }\r\n\r\n}\r\nconst GroupLoanModel = {\r\n  applyForloan(data){\r\n    return superagent.post(`${API_ROOT}/groupLoan/applyGroupLoan`, data)\r\n  },\r\n  getApprovalList(){\r\n    return superagent.get(`${API_ROOT}/groupLoan/entry/pendingApproval`);\r\n  },\r\n  getDisburseList(){\r\n    return superagent.get(`${API_ROOT}/groupLoan/entry/pendingDisburse`);\r\n  },\r\n  getLoanDetailbyId(id){\r\n    return superagent.get(`${API_ROOT}/groupLoan/entry/${id}`);\r\n  },\r\n  approveRejectLoan(data){\r\n    return superagent.post(`${API_ROOT}/groupLoan/approveLoan`, data)\r\n  },\r\n  getAllLoanApplications(){\r\n    return superagent.get(`${API_ROOT}/groupLoan/entry/all`);\r\n  },\r\n  disburseRejectLoan(data){\r\n    return superagent.post(`${API_ROOT}/groupLoan/disburseLoan`, data)\r\n  },\r\n\r\n}\r\nconst EmiModel = {\r\n  calculateEMI(data){\r\n    return superagent.post(`${API_ROOT}/emis/calculateEMI`, data);\r\n  },\r\n  getDueEmis(today = moment().format(\"yyyy-MM-DD\")){\r\n    return superagent.get(`${API_ROOT}/emis/dueEMIs/${today}`);\r\n  },\r\n  paidEmi(id){\r\n    return superagent.put(`${API_ROOT}/emis/entry`,{\"id\":id});\r\n  },\r\n  getPaidEmis(loanAccountNo){\r\n    return superagent.get(`${API_ROOT}/emis/entry/${loanAccountNo}`);\r\n  }\r\n}\r\nconst villageModel = {\r\n  saveVillage(data){\r\n    return superagent.post(`${API_ROOT}/village/entry`, data); \r\n  },\r\n  getVillage(){\r\n    return superagent.get(`${API_ROOT}/village/entry`); \r\n  }\r\n}\r\nexport default { SchemeModel,GroupLoanModel,EmiModel,villageModel };","import React, { useEffect, useState } from 'react';\r\nimport { Table,Button, Container, Row, Col,Modal } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport groupLoan from '../../models/groupLoan';\r\nimport Loader from '../layout/Loader';\r\n\r\nfunction Scheme(props) {\r\n    const [showDeleteModel, setShowDeleteModel] = useState(false)\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [schemes,setSchemes]=useState([]);\r\n    const [deleteID, setDeleteID] = useState(0)\r\n    useEffect(() => {\r\n        getSchemes();\r\n    },[])\r\n\r\n    const getSchemes = () =>{\r\n        setisShowLoader(true);\r\n        groupLoan.SchemeModel.getScheme().then(res=>{\r\n            setisShowLoader(false);\r\n            if(res.statusCode == 200){\r\n                setSchemes(res.body.message);\r\n            }else{\r\n                setSchemes([]);\r\n            }\r\n        })\r\n    }\r\n    const  deleteHandle=(id)=>{\r\n        setDeleteID(id); \r\n        setShowDeleteModel(true);\r\n    }\r\n\r\n    const deleteScheme=async()=>{\r\n        setShowDeleteModel(false);\r\n        try{\r\n            setisShowLoader(true);\r\n            let response = await groupLoan.SchemeModel.deleteScheme(deleteID);\r\n            setisShowLoader(false);\r\n            if(response.statusCode == 200){\r\n                let UpdatedList = schemes.filter((scheme,idx)=>scheme.id!=deleteID);\r\n                setSchemes(UpdatedList);\r\n             }\r\n        }catch (error) {\r\n                console.log(error.response.body.message);\r\n                setisShowLoader(false);\r\n            }\r\n    }    \r\n    return (\r\n        <>\r\n      <Modal show={showDeleteModel} onHide={()=>setShowDeleteModel(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Delete Scheme</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>Are you sure?</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={()=>setShowDeleteModel(false)}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={()=>deleteScheme()}>\r\n            Delete\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>        \r\n        \r\n        <Loader show={isShowLoader}/>\r\n        <Container fluid>\r\n        <h2 className=\"text-info text-center\">Schemes</h2>\r\n            <Row className=\"mb-5 mt-3\">\r\n                <Col>\r\n                <Link to=\"/addScheme\">\r\n                <Button variant=\"info\" size=\"lg\" active>\r\n                    Add Scheme\r\n                </Button>\r\n                </Link>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n            <Col>\r\n            <Table className=\"shadow-lg p-3 mb-5 bg-white rounded\" striped bordered hover responsive>\r\n            <thead className=\"bg-primary\">\r\n                <tr>\r\n                    <th>Scheme code</th>\r\n                    <th>Scheme name</th>\r\n                    <th>Max amount</th>\r\n                    <th>Interest rate (%)</th>\r\n                    <th>EMI type</th>\r\n                    <th>Action</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {schemes.map((scheme,id)=>(<tr>\r\n                    <td>{scheme.scheme_code}</td>\r\n                    <td>{scheme.scheme_name}</td>\r\n                    <td>{scheme.max_amount}</td>\r\n                    <td>{scheme.interest_rate }%</td>\r\n                    <td>{scheme.EMI_type }</td>\r\n                    <td>\r\n                    <Button variant=\"danger\" size={\"sm\"} onClick={()=>deleteHandle(scheme.id)} className=\"ml-2\">Delete</Button>\r\n\r\n                    </td>\r\n                </tr>))}\r\n            </tbody>\r\n        </Table>\r\n</Col>\r\n            </Row>\r\n        </Container>\r\n        </>\r\n        );\r\n}\r\n\r\n\r\nexport default Scheme;","import React, { useState } from 'react';\r\nimport { Button, Form, Container, Row, Col, Toast } from 'react-bootstrap';\r\nimport { useFormik } from 'formik';\r\nimport groupLoan from '../../models/groupLoan';\r\nimport Loader from '../layout/Loader';\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction AddScheme(props) {\r\n  const auth = useSelector(state => state.auth);\r\n\r\n  const [values, setValues] = useState({});\r\n  const [isShowLoader, setisShowLoader] = useState(false)\r\n  const [showToast, setShowToast] = useState({ isShow: false, type: \"\", message: \"\" })\r\n  const validate = values => {\r\n    const errors = {};\r\n    if (!values.scheme_code) {\r\n      errors.scheme_code = 'Scheme code is Required!';\r\n    }\r\n    if (!values.scheme_name) {\r\n      errors.scheme_name = 'Scheme name is Required!';\r\n    }\r\n    if (!values.max_amount) {\r\n      errors.max_amount = 'Max amount is Required!';\r\n    }\r\n    if (!values.interest_rate) {\r\n      errors.interest_rate = 'Interest rate is Required!';\r\n    }\r\n    if (!values.EMI_type) {\r\n      errors.EMI_type = 'EMI type is Required!';\r\n    }\r\n    return errors;\r\n  };\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      scheme_code: '',\r\n      scheme_name: '',\r\n      max_amount: '',\r\n      interest_rate: '',\r\n      EMI_type: '',\r\n      user_id:auth.id\r\n    },\r\n    validate,\r\n    onSubmit: async (values) => {\r\n      setisShowLoader(true);\r\n        try {\r\n          let response = await groupLoan.SchemeModel.saveScheme(values);\r\n          setisShowLoader(false);\r\n          if (response.statusCode == 200) {\r\n            formik.resetForm();\r\n            setShowToast({ isShow: true,type:\"bg-success\", message: response.body.message })\r\n          } else {\r\n            setShowToast({ isShow: true,type:\"bg-danger\", message: response.body.message })\r\n          }\r\n\r\n        } catch (error) {\r\n          setisShowLoader(false);\r\n          setShowToast({ isShow: true,type:\"bg-danger\", message: error.response.body.message })\r\n        }\r\n    },\r\n    handleChange: () => {\r\n      setValues(prevValues => ({\r\n        ...prevValues,\r\n        // we use the name to tell Formik which key of `values` to update\r\n        [values.target.name]: values.target.value\r\n      }))\r\n    },\r\n  });\r\n  return (\r\n    <>\r\n      <Toast key={1} autohide delay={3000} show={showToast.isShow} onClose={() => setShowToast({ isShow: false,type:\"\", message: \"\" })} className={\"loader \"+ (showToast.type) } >\r\n        <Toast.Header>\r\n          <strong className=\"me-auto\">{showToast.type==\"bg-danger\"?\"Error\":\"Success\"} Message</strong>\r\n        </Toast.Header>\r\n        <Toast.Body className=\"Dark\">\r\n        {showToast.message}\r\n        </Toast.Body>\r\n      </Toast>\r\n      <Loader show={isShowLoader} />\r\n      <h2 className=\"text-info text-center\">Add Scheme</h2>\r\n      <Container fluid className=\"bg-white mt-5 shadow-lg p-3 mb-5 bg-white rounded\">\r\n        <Form onSubmit={formik.handleSubmit}>\r\n          <Row className=\"mb-3\" >\r\n            <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n              <Form.Label>Scheme Code</Form.Label>\r\n              <Form.Control\r\n                name=\"scheme_code\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.scheme_code}\r\n              />\r\n                {formik.touched.scheme_code && formik.errors.scheme_code ? (\r\n                  <div class=\"text-danger\">{formik.errors.scheme_code}</div>\r\n                ) : null}              \r\n            </Form.Group>\r\n            <Form.Group as={Col} controlId=\"formGriddob\">\r\n              <Form.Label>Scheme Name</Form.Label>\r\n              <Form.Control\r\n                name=\"scheme_name\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.scheme_name}\r\n              />\r\n                {formik.touched.scheme_name && formik.errors.scheme_name ? (\r\n                  <div class=\"text-danger\">{formik.errors.scheme_name}</div>\r\n                ) : null}              \r\n\r\n            </Form.Group>\r\n\r\n          </Row>\r\n          <Row className=\"mb-3\" >\r\n            <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n              <Form.Label>Max amount</Form.Label>\r\n              <Form.Control\r\n                name=\"max_amount\"\r\n                type=\"number\"\r\n                min=\"1\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.max_amount}\r\n              />\r\n                {formik.touched.max_amount && formik.errors.max_amount ? (\r\n                  <div class=\"text-danger\">{formik.errors.max_amount}</div>\r\n                ) : null}              \r\n\r\n            </Form.Group>\r\n            <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n              <Form.Label>Interest Rate (in %)</Form.Label>\r\n              <Form.Control\r\n                name=\"interest_rate\"\r\n                type=\"number\"\r\n                min=\"0\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.interest_rate}\r\n              />\r\n                {formik.touched.interest_rate && formik.errors.interest_rate ? (\r\n                  <div class=\"text-danger\">{formik.errors.interest_rate}</div>\r\n                ) : null}              \r\n\r\n            </Form.Group>\r\n\r\n          </Row>\r\n          <Row className=\"mb-3\" md={6}>\r\n            <Form.Group as={Col} className=\"mb-3\" controlId=\"formGridAddress1\">\r\n              <Form.Label>EMI type</Form.Label>\r\n              <select\r\n                className=\"form-control\"\r\n                name=\"EMI_type\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.EMI_type}\r\n              >\r\n                <option key=\"\" value=\"\">Select EMI type</option>\r\n                <option key=\"flat\" value=\"flat\">Flat rate</option>\r\n                {/* <option key=\"reduceing\" value=\"reduceing\">Reduceing rate</option> */}\r\n              </select>\r\n              {formik.touched.EMI_type && formik.errors.EMI_type ? (\r\n                  <div class=\"text-danger\">{formik.errors.EMI_type}</div>\r\n                ) : null}              \r\n\r\n            </Form.Group>\r\n\r\n          </Row>\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Save\r\n          </Button>\r\n\r\n        </Form>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AddScheme;","import {requests, superagent, API_ROOT} from \"./BaseUrl\"\r\n\r\n//const url = '/memberGroups/';\r\n\r\nconst DashboardModel = {\r\n  getReceivedAmount(){\r\n    return superagent.get(`${API_ROOT}/dashboard/totalReceivedAmount`)\r\n  },\r\n  getPaidAmount(){\r\n    return superagent.get(`${API_ROOT}/dashboard/totalPaidAmount`)\r\n  },\r\n  getEmiRecord(today){\r\n    return superagent.get(`${API_ROOT}/emis/allEmis/${today}`);\r\n  },\r\n  getSavingAccountLadger(){\r\n    return superagent.get(`${API_ROOT}/dashboard/rdLadger/`);\r\n  }\r\n}\r\n    export default {DashboardModel};","import React, { useState, useEffect } from 'react'\r\nimport dashboard from '../../models/dashboard'\r\nimport { Card, Col, Row, Spinner, Button } from 'react-bootstrap';\r\nimport { useHistory } from 'react-router';\r\nimport Chart from \"react-google-charts\";\r\nimport moment from \"moment\";\r\nimport { useSelector } from \"react-redux\";\r\nexport default function Dashboard() {\r\n    const auth = useSelector(state => state.auth);\r\n    const history = useHistory();\r\n    const [isShowReceivedLoader, setisShowReceivedLoader] = useState(false)\r\n    const [receivedAmount, setReceivedAmount] = useState([]);\r\n    const [isShowPaidLoader, setisShowPaidLoader] = useState(false)\r\n    const [paidAmount, setPaidAmount] = useState([]);\r\n    const [emiCounts, setEmiCounts] = useState({notPaid:0,paid:0});\r\n    useEffect(() => {\r\n        getReceivedAmount();\r\n        getPaidAmount();\r\n        todayEmis();\r\n    }, [])\r\n\r\n    const getReceivedAmount = async () => {\r\n        try {\r\n            setisShowReceivedLoader(true);\r\n            let response = await dashboard.DashboardModel.getReceivedAmount();\r\n            setisShowReceivedLoader(false);\r\n            if (response.statusCode == 200) {\r\n                setReceivedAmount(response.body.message);\r\n            } else {\r\n                setReceivedAmount([]);\r\n            }\r\n        } catch (error) {\r\n            setisShowReceivedLoader(false);\r\n        }\r\n\r\n    }\r\n    const getPaidAmount = async () => {\r\n        try {\r\n            setisShowPaidLoader(true);\r\n            let response = await dashboard.DashboardModel.getPaidAmount();\r\n            setisShowPaidLoader(false);\r\n            if (response.statusCode == 200) {\r\n                setPaidAmount(response.body.message);\r\n            } else {\r\n                setPaidAmount([]);\r\n            }\r\n        } catch (error) {\r\n            setisShowPaidLoader(false);\r\n        }\r\n    }\r\n    const todayEmis = async()=>{\r\n        let response = await dashboard.DashboardModel.getEmiRecord(moment().format(\"yyyy-MM-DD\"));\r\n        if(response?.body){\r\n            setEmiCounts({notPaid:response.body.notPaidCount,paid:response.body.paidCount})\r\n        }\r\n    }\r\n    const gotoLedger = (ledgerType) => {\r\n        history.push(\"/ladger\", ledgerType);\r\n    }\r\n\r\n    const formatAmount = (amount) => {\r\n        return amount ? amount.toString().replace(/.(?=(..)*...$)/g, '$&,') : \"\";\r\n    }\r\n    return (\r\n        <>\r\n          {(auth.role==\"checker\"||auth.role==\"admin\")?<Row xs={1} md={3} className=\"g-2\">\r\n                <Col>\r\n                    <Card\r\n                        bg={\"primary\"}\r\n                        key={0}\r\n                        text={'dark'}\r\n                        className=\"m-2\"\r\n                    >\r\n                        {isShowReceivedLoader ? <Card.Body className=\"text-center\"><Spinner animation=\"border\" variant=\"dark\" /></Card.Body> :\r\n                            <Card.Body>\r\n                                <Card.Title><h2 class=\"text-center\">{Number(receivedAmount?.total).toFixed(2)}</h2></Card.Title>\r\n                                <Card.Text class=\"text-center\">\r\n\r\n                                    Received Amount(Rs)\r\n                                </Card.Text>\r\n                            </Card.Body>}\r\n                        <Card.Footer className=\"text-white text-center\"><span style={{ \"cursor\": \"pointer\" }} className=\"\" onClick={() => gotoLedger('totalReceived')}>More Info\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-arrow-right-circle\" viewBox=\"0 0 16 16\">\r\n                                <path fill-rule=\"evenodd\" d=\"M1 8a7 7 0 1 0 14 0A7 7 0 0 0 1 8zm15 0A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM4.5 7.5a.5.5 0 0 0 0 1h5.793l-2.147 2.146a.5.5 0 0 0 .708.708l3-3a.5.5 0 0 0 0-.708l-3-3a.5.5 0 1 0-.708.708L10.293 7.5H4.5z\" />\r\n                            </svg></span>\r\n                        </Card.Footer>\r\n                    </Card>\r\n                </Col>\r\n\r\n                <Col>\r\n                    <Card\r\n                        bg={\"danger\"}\r\n                        key={0}\r\n                        text={'dark'}\r\n                        className=\"m-2\"\r\n                    >\r\n                        {isShowPaidLoader ? <Card.Body className=\"text-center\"><Spinner animation=\"border\" variant=\"dark\" /></Card.Body> :\r\n                            <Card.Body>\r\n                                <Card.Title><h2 class=\"text-center\">{Number(paidAmount?.total).toFixed(2)}</h2></Card.Title>\r\n                                <Card.Text class=\"text-center\">\r\n\r\n                                    Paid Amount(Rs)\r\n                                </Card.Text>\r\n                            </Card.Body>}\r\n                        <Card.Footer className=\"text-white text-center\"><span style={{ \"cursor\": \"pointer\" }} className=\"\" onClick={() => gotoLedger('totalPaid')}>More Info\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-arrow-right-circle\" viewBox=\"0 0 16 16\">\r\n                                <path fill-rule=\"evenodd\" d=\"M1 8a7 7 0 1 0 14 0A7 7 0 0 0 1 8zm15 0A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM4.5 7.5a.5.5 0 0 0 0 1h5.793l-2.147 2.146a.5.5 0 0 0 .708.708l3-3a.5.5 0 0 0 0-.708l-3-3a.5.5 0 1 0-.708.708L10.293 7.5H4.5z\" />\r\n                            </svg></span>\r\n                        </Card.Footer>\r\n\r\n                    </Card>\r\n                </Col>\r\n                <Col>\r\n                    <Card\r\n                        bg={\"success\"}\r\n                        key={0}\r\n                        text={'dark'}\r\n                        className=\"m-2\"\r\n                    >\r\n                        {isShowReceivedLoader && isShowPaidLoader ? <Card.Body className=\"text-center\"><Spinner animation=\"border\" variant=\"dark\" /></Card.Body> :\r\n                            <Card.Body>\r\n                                <Card.Title><h2 class=\"text-center\">{Number(receivedAmount?.total - paidAmount?.total).toFixed(2)}</h2></Card.Title>\r\n                                <Card.Text class=\"text-center\">\r\n\r\n                                    Cash in hand(Rs)\r\n                                </Card.Text>\r\n                            </Card.Body>}\r\n\r\n                    </Card>\r\n                </Col>\r\n            </Row>:\"\"}\r\n            {(auth.role==\"checker\"||auth.role==\"admin\")?<Row xs={1} md={3} className=\"g-2\">\r\n                <Col>\r\n                    <Card\r\n\r\n                        key={0}\r\n                        text={'dark'}\r\n\r\n                        className=\"m-2\">\r\n                        <Card.Header className=\"text-center bg-warning\">\r\n                        <b>Main Ladger(Loan)</b>\r\n                        </Card.Header>\r\n                        <Card.Body className=\"text-center\">\r\n                            <Button variant=\"primary\" onClick={() => { history.push(\"/completeLadger\") }}>Go to Main Ladger</Button>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n                <Col>\r\n                    <Card\r\n                        key={0}\r\n                        text={'dark'}\r\n                        className=\"m-2\">\r\n                        <Card.Header className=\"text-center bg-warning\">\r\n                        <b>Main Ladger(Saving Accounts)</b>\r\n                        </Card.Header>\r\n                        <Card.Body className=\"text-center\">\r\n                            <Button variant=\"primary\" onClick={() => { history.push(\"/ladgerSavingAccount\") }}>Go to Main Ladger</Button>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n\r\n            </Row>:\"\"}\r\n            <Row xs={1} md={3} className=\"g-2\">\r\n                <Col></Col>\r\n                <Col>\r\n                <Card\r\n\r\n                    key={0}\r\n                    text={'dark'}\r\n\r\n                    className=\"m-2\">\r\n                    <Card.Header className=\"text-center bg-dark text-white\">\r\n                        Today's Due EMIs\r\n                    </Card.Header>\r\n                    <Card.Body className=\"text-center\">\r\n                    {emiCounts.paid==0 && emiCounts.notPaid==0?\"No Due Emi today\":\r\n                    <Chart\r\n                        \r\n                        \r\n                        chartType=\"PieChart\"\r\n                        loader={<div>Loading Chart</div>}\r\n                        data={[\r\n                            ['Task', 'Hours per Day'],\r\n                            [`Paid (${emiCounts.paid})`, emiCounts.paid],\r\n                            [`Not Paid (${emiCounts.notPaid})`, emiCounts.notPaid]\r\n                        ]}\r\n                        options={{\r\n                            chartArea: { width: '100%', height: '100%' },\r\n                            pieSliceText:\"label\"\r\n                            // lineWidth: 25\r\n                          }}\r\n                        rootProps={{ 'data-testid': '0' }}\r\n                    />}\r\n\r\n                    </Card.Body>\r\n                    </Card>\r\n\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Button, Form, Container, Row, Col, Toast } from 'react-bootstrap';\r\nimport { useFormik } from 'formik';\r\nimport DatePicker from \"react-datepicker\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport groupLoan from '../../models/groupLoan';\r\nimport Loader from '../layout/Loader';\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction LoanApplication(props) {\r\n    const auth = useSelector(state => state.auth);\r\n    const [enrollmentDate, setEnrollmentDate] = useState(new Date());\r\n    const [values, setValues] = useState({});\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [showToast, setShowToast] = useState({ isShow: false, type: \"\", message: \"\" })\r\n    const [memberRecords, setMemberRecords] = useState([]);\r\n    const [schemeRecords, setSchemeRecords] = useState([]);\r\n    const [selectedScheme, setSelectedScheme] = useState({});\r\n    const [villageRecords, setVillageRecords] = useState([]);\r\n    const tanure = {\"weekly\":\"Weeks\",\"monthly\":\"Months\",\"daily\":\"Days\",\"fortnight\":\"Fortnight\",\"village\":\"Village\"};\r\n    let history = useHistory();\r\n    //const selectedSm = {\"interest_rate\":0,\"EMI_type\":\"\",\"max_amount\":0};\r\n    useEffect(()=>{\r\n        getSchemesAndMembers();\r\n    },[])\r\n    const getSchemesAndMembers=async()=>{\r\n        try{\r\n            setisShowLoader(true);\r\n            const response =await Promise.all(groupLoan.SchemeModel.getLoanAppInitialData())\r\n            setisShowLoader(false);\r\n            setSchemeRecords(response[0].body.message);\r\n            setMemberRecords(response[1].body.message);\r\n            setVillageRecords(response[2].body.message);\r\n        } catch (error) {\r\n            setisShowLoader(false);\r\n            setShowToast({ isShow: true,type:\"bg-danger\", message: error.response.body.message })\r\n          }\r\n    }\r\n    const validate = values => {\r\n        const errors = {};\r\n        if (!values.scheme_id) {\r\n            errors.scheme_id = 'Scheme code is Required!';\r\n        }\r\n        if (!values.member_id) {\r\n            errors.member_id = 'Member name is Required!';\r\n        }\r\n        if (!values.interest_rate) {\r\n            errors.interest_rate = 'Interest rate is Required!';\r\n        }\r\n        if (selectedScheme?.interest_rate>0 && values.interest_rate>selectedScheme?.interest_rate) {\r\n            errors.interest_rate = `As per the Selected Scheme. Interest rate should not greater than ${selectedScheme.interest_rate}.`;\r\n        }\r\n        if (!values.loan_amount) {\r\n            errors.loan_amount = 'Loan amount is Required!';\r\n        }\r\n        if (selectedScheme?.max_amount>0 && values.loan_amount>selectedScheme.max_amount) {\r\n            errors.loan_amount = `As per the Selected Scheme. Loan amount should not greater than ${selectedScheme.max_amount}.`;\r\n        }\r\n        // if (!values.EMI_amount) {\r\n        //     errors.EMI_amount = 'EMI amount is Required!';\r\n        // }\r\n        if (!values.EMI_payout) {\r\n            errors.EMI_payout = 'EMI payout is Required!';\r\n        }\r\n        if (!values.tenure) {\r\n            errors.tenure = 'Tenure is Required!';\r\n        }\r\n        if (values.EMI_payout==\"village\" && !values.village_id) {\r\n            errors.village_id = 'Village name is Required!';\r\n        }\r\n        if (values.week==\"village\" && !values.week) {\r\n            errors.week = 'Week is Required!';\r\n        }\r\n        if (values.day==\"village\" && !values.day) {\r\n            errors.day = 'Day is Required!';\r\n        }\r\n        return errors;\r\n    };\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            scheme_id: '',\r\n            application_date: '',\r\n            member_id: '',\r\n            address:'',\r\n            interest_rate: \"\",\r\n            loan_amount:'',\r\n            // EMI_amount: '',\r\n            EMI_payout:\"\",\r\n            EMI_type:\"\",\r\n            tenure:\"\",\r\n            user_id:auth.id,\r\n            village_id:\"\",\r\n            week:\"\",\r\n            day:\"\"\r\n        },\r\n        validate,\r\n        onSubmit: async (values) => {\r\n            console.log(values);\r\n           setisShowLoader(true);\r\n            try {\r\n                //delete values.EMI_type;\r\n                values.application_date = enrollmentDate;\r\n                delete values.week;\r\n                delete values.day;\r\n              let response = await groupLoan.GroupLoanModel.applyForloan(values);\r\n              setisShowLoader(false);\r\n              if (response.statusCode == 200) {\r\n                formik.resetForm();\r\n                setShowToast({ isShow: true,type:\"bg-success\", message: response.body.message })\r\n              } else {\r\n                setShowToast({ isShow: true,type:\"bg-danger\", message: response.body.message })\r\n              }\r\n\r\n            } catch (error) {\r\n              setisShowLoader(false);\r\n              setShowToast({ isShow: true,type:\"bg-danger\", message: error.response.body.message })\r\n            }\r\n        }\r\n    });\r\n    const handleScheme=(e)=>{\r\n        console.log(e.target.value);\r\n        let selectedScheme = schemeRecords.filter(scheme=>scheme.scheme_code==e.target.value);\r\n        setSelectedScheme(selectedScheme[0]);\r\n         formik.values.EMI_type = selectedScheme[0].EMI_type;\r\n         formik.values.interest_rate = selectedScheme[0].interest_rate;\r\n        formik.handleChange(e);\r\n    }\r\n    const handleVillage=(e)=>{\r\n        let selectedvill = villageRecords.filter(vill=>vill.id==e.target.value);\r\n        \r\n         formik.values.week = selectedvill[0].week;\r\n         formik.values.day = selectedvill[0].day;\r\n        formik.handleChange(e);\r\n\r\n    }\r\n    return (\r\n        \r\n        <>\r\n        <Toast key={1} autohide delay={3000} show={showToast.isShow} onClose={() => setShowToast({ isShow: false,type:\"\", message: \"\" })} className={\"loader \"+ (showToast.type) } >\r\n            <Toast.Header>\r\n            <strong className=\"me-auto\">{showToast.type==\"bg-danger\"?\"Error\":\"Success\"} Message</strong>\r\n            </Toast.Header>\r\n            <Toast.Body className=\"Dark\">\r\n            {showToast.message}\r\n            </Toast.Body>\r\n        </Toast>\r\n         <Loader show={isShowLoader} />\r\n            <h2 className=\"text-info text-center\">Add Loan Application</h2>\r\n            \r\n            <Container fluid className=\"bg-white mt-5 shadow-lg p-3 mb-5 bg-white rounded\">\r\n                <Form onSubmit={formik.handleSubmit}>\r\n                    <Row className=\"mb-3\" >\r\n                    <Form.Group as={Col} className=\"form-group required\" controlId=\"formGridEnroll\">\r\n                            <Form.Label >Application Date</Form.Label>\r\n                            <DatePicker class=\"form-control\"\r\n                                selected={enrollmentDate}\r\n                                onChange={(date) => setEnrollmentDate(date)}\r\n                                name=\"application_date\"\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                            <Form.Label>Member name</Form.Label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                name=\"member_id\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.member_id}\r\n                            >\r\n                                <option key=\"\" value=\"\">Select Member</option>\r\n                                {memberRecords.map((member,id)=>(\r\n                                    <option key={member.member_id} value={member.member_id}>{`name= ${member.member_name} - member_id= ${member.member_id} `}</option>\r\n                                ))}\r\n\r\n                            </select>\r\n                            {formik.touched.member_id && formik.errors.member_id ? (\r\n                  <div class=\"text-danger\">{formik.errors.member_id}</div>\r\n                ) : null}              \r\n                        </Form.Group>\r\n\r\n                    </Row>\r\n                    <Row className=\"mb-3\" >\r\n                    <Form.Group as={Col} controlId=\"formGriddob\">\r\n                            <Form.Label>Member Address</Form.Label>\r\n                            <Form.Control\r\n                                name=\"address\"\r\n                                as=\"textarea\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.address}\r\n\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                            <Form.Label>Scheme</Form.Label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                name=\"scheme_id\"\r\n                                onChange={handleScheme}\r\n                                value={formik.values.scheme_id}\r\n                            >\r\n                                <option key=\"\" value=\"\">Select Scheme</option>\r\n                                {schemeRecords.map((schems,id)=>(\r\n                                    <option key={schems.scheme_code} value={schems.scheme_code}>{schems.scheme_code}</option>\r\n                                ))}\r\n\r\n                            </select>\r\n                            {formik.touched.scheme_id && formik.errors.scheme_id ? (\r\n                                <div class=\"text-danger\">{formik.errors.scheme_id}</div>\r\n                            ) : null}\r\n\r\n                        </Form.Group>\r\n\r\n                    </Row>\r\n                    <Row className=\"mb-3\" >\r\n                        <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                            <Form.Label>Interest Rate (in %)</Form.Label>\r\n                            <Form.Control\r\n                                name=\"interest_rate\"\r\n                                type=\"number\"\r\n                                min=\"0\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.interest_rate}\r\n                            />\r\n                            <Form.Text className=\"text-muted\">\r\n                            It will change as per scheme.\r\n                            </Form.Text>                            \r\n                            {formik.touched.interest_rate && formik.errors.interest_rate ? (\r\n                                <div class=\"text-danger\">{formik.errors.interest_rate}</div>\r\n                            ) : null}\r\n\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                            <Form.Label>Loan Amount</Form.Label>\r\n                            <Form.Control\r\n                                name=\"loan_amount\"\r\n                                type=\"number\"\r\n                                min=\"0\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.loan_amount}\r\n                            />\r\n                            <Form.Text className=\"text-muted\">\r\n                            Default will be Max amount of selected scheme.\r\n                            </Form.Text>                            \r\n\r\n                            {formik.touched.loan_amount && formik.errors.loan_amount ? (\r\n                                <div class=\"text-danger\">{formik.errors.loan_amount}</div>\r\n                            ) : null}\r\n\r\n                        </Form.Group>\r\n\r\n                    </Row>\r\n                    <Row className=\"mb-3\" >\r\n                        <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                            <Form.Label>EMI Payout</Form.Label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                name=\"EMI_payout\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.EMI_payout}\r\n                            >\r\n                                <option key=\"\" value=\"\">Select Payout</option>\r\n                                {/* <option key=\"daily\" value=\"daily\">Daily</option> */}\r\n                                <option key=\"weekly\" value=\"weekly\">Weekly</option>\r\n                                <option key=\"monthly\" value=\"fortnight\">Fortnight</option>\r\n                                <option key=\"village\" value=\"village\">By village</option>\r\n                            </select>\r\n                            {formik.touched.EMI_payout && formik.errors.EMI_payout ? (\r\n                                <div class=\"text-danger\">{formik.errors.EMI_payout}</div>\r\n                            ) : null}\r\n\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                            <Form.Label>Tenure(in {formik.values.EMI_payout!=\"\"?tanure[formik.values.EMI_payout]:\"Months\"})</Form.Label>\r\n                            <Form.Control\r\n                                name=\"tenure\"\r\n                                type=\"number\"\r\n                                min=\"1\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.tenure}\r\n                            />\r\n                            {formik.touched.tenure && formik.errors.tenure ? (\r\n                                <div class=\"text-danger\">{formik.errors.tenure}</div>\r\n                            ) : null}\r\n\r\n                        </Form.Group>\r\n                    </Row>\r\n                    <Row className=\"mb-3\">\r\n                        <Form.Group as={Col} md={6} controlId=\"formGriddob\" className=\"form-group required\">\r\n                            <Form.Label>EMI Type</Form.Label>\r\n                            <Form.Control\r\n                                name=\"EMI_type\"\r\n                                type=\"text\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.EMI_type}\r\n                                disabled=\"disabled\"\r\n                            />\r\n                            <Form.Text className=\"text-muted\">\r\n                            It will change as per selected scheme.\r\n                            </Form.Text>                            \r\n                        </Form.Group>\r\n                        {formik.values.EMI_payout == \"village\"?\r\n                        <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                            <Form.Label>Village</Form.Label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                name=\"village_id\"\r\n                                onChange={handleVillage}\r\n                                value={formik.values.village_id}\r\n                            >\r\n                                <option key=\"\" value=\"\">Select Village</option>\r\n                                {villageRecords.map((vill,id)=>(\r\n                                    <option key={vill.id} value={vill.id}>{vill.village_name}</option>\r\n                                ))}\r\n\r\n                            </select>\r\n                            {formik.touched.village_id && formik.errors.village_id ? (\r\n                                <div class=\"text-danger\">{formik.errors.village_id}</div>\r\n                            ) : null}\r\n\r\n                        </Form.Group>\r\n                        :\"\"}\r\n                    </Row>\r\n                    {formik.values.EMI_payout == \"village\"?\r\n                    <Row className=\"mb-3\">\r\n                        <Form.Group as={Col} md={6} controlId=\"formGriddob\" className=\"form-group\">\r\n                            <Form.Label>Week</Form.Label>\r\n                            <Form.Control\r\n                                name=\"week\"\r\n                                type=\"text\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.week}\r\n                                disabled=\"disabled\"\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} md={6} controlId=\"formGriddob\" className=\"form-group\">\r\n                            <Form.Label>Day</Form.Label>\r\n                            <Form.Control\r\n                                name=\"day\"\r\n                                type=\"text\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.day}\r\n                                disabled=\"disabled\"\r\n                            />\r\n                        </Form.Group>\r\n                    </Row>:\"\"}\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Save\r\n                    </Button>\r\n                    <Button variant=\"danger\" onClick={()=>{history.push(\"/\")}} type=\"button\" className=\"ml-2\">\r\n                        Cancel\r\n                    </Button>\r\n                </Form>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LoanApplication;","import React, { useEffect, useState } from 'react';\r\nimport { Table,Button, Container, Row, Col } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport groupLoan from '../../models/groupLoan';\r\nimport Loader from '../layout/Loader';\r\nimport { useHistory } from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nfunction LoanApproval(props) {\r\n    let history = useHistory();\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\nconst [loanlist,setLoanlist]=useState([]);\r\n    useEffect(() => {\r\n        getLoanList();\r\n    },[])\r\n\r\n    const getLoanList = async() =>{\r\n        try {\r\n            setisShowLoader(true);\r\n            let response = await groupLoan.GroupLoanModel.getApprovalList();\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n                setLoanlist(response.body.message);\r\n            } \r\n  \r\n          } catch (error) {\r\n            setisShowLoader(false);\r\n            console.log(error);\r\n          }\r\n      }\r\n      const redirectApproval=(loan_id)=>{\r\n        history.push(\"/loanApprovalDetails\",loan_id);\r\n      }\r\n    return (\r\n        <>\r\n        <Loader show={isShowLoader}/>\r\n        <Container fluid>\r\n        <h2 className=\"text-info text-center\">Applications for Approval</h2>\r\n            <Row>\r\n            <Col>\r\n            <Table className=\" shadow-lg p-3 mb-5 bg-white rounded\" striped bordered hover responsive>\r\n            <thead className=\"bg-primary\">\r\n                <tr>\r\n                    <th>Application Date</th>\r\n                    <th>Member name</th>\r\n                    <th>Scheme ID</th>\r\n                    <th>Loan Amount</th>\r\n                    <th>Village</th>\r\n                    <th>Action</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {loanlist.map((loan,id)=>(<tr>\r\n                    <td>{moment(loan.application_date).format(\"DD-MM-YYYY hh:ss A\") }</td>\r\n                    <td>{loan.member_name}</td>\r\n                    <td>{loan.scheme_id}</td>\r\n                    <td>{loan.loan_amount }</td>\r\n                    <td>{loan.village_name }</td>\r\n                    <td><Button variant=\"success\" size={\"sm\"} onClick={()=>redirectApproval(loan.id)}>Approve</Button></td>\r\n                </tr>))}\r\n            </tbody>\r\n        </Table>\r\n</Col>\r\n            </Row>\r\n        </Container>            \r\n        </>\r\n    );\r\n}\r\n\r\nexport default LoanApproval;","import React, { useEffect, useState } from 'react';\r\nimport { Table,Button, Container, Row, Col } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport groupLoan from '../../models/groupLoan';\r\nimport Loader from '../layout/Loader';\r\nimport { useHistory } from 'react-router-dom';\r\nimport moment from 'moment';\r\nfunction DisburseLoan(props) {\r\n    let history = useHistory();\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\nconst [loanlist,setLoanlist]=useState([]);\r\n    useEffect(() => {\r\n        getLoanList();\r\n    },[])\r\n\r\n    const getLoanList = async() =>{\r\n        try {\r\n            setisShowLoader(true);\r\n            let response = await groupLoan.GroupLoanModel.getDisburseList();\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n                setLoanlist(response.body.message);\r\n            } \r\n  \r\n          } catch (error) {\r\n            setisShowLoader(false);\r\n            console.log(error);\r\n          }\r\n      }\r\n      const redirectDisburse=(loan_id)=>{\r\n        history.push(\"/loanApprovalDetails\",loan_id);\r\n      }\r\n\r\n    return (\r\n        <>\r\n        <Loader show={isShowLoader}/>\r\n        <Container fluid>\r\n        <h2 className=\"text-info text-center\">Applications For Disburse</h2>\r\n            <Row >\r\n            <Col>\r\n            <Table className=\" shadow-lg p-3 mb-5 bg-white rounded\" striped bordered hover responsive>\r\n            <thead className=\"bg-primary\">\r\n                <tr>\r\n                    <th>Application Date</th>\r\n                    <th>Member name</th>\r\n                    <th>Scheme ID</th>\r\n                    <th>Loan Amount</th>\r\n                    <th>Village</th>\r\n                    <th>Action</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {loanlist.map((loan,id)=>(<tr>\r\n                    <td>{moment(loan.application_date).format(\"DD-MM-YYYY hh:ss A\") }</td>\r\n                    <td>{loan.member_name}</td>\r\n                    <td>{loan.scheme_id}</td>\r\n                    <td>{loan.loan_amount }</td>\r\n                    <td>{loan.village_name }</td>\r\n                    <td><Button variant=\"success\" size={\"sm\"} onClick={()=>redirectDisburse(loan.id)}>Disburse</Button></td>\r\n                </tr>))}\r\n            </tbody>\r\n        </Table>\r\n</Col>\r\n            </Row>\r\n        </Container>            \r\n        </>\r\n    );}\r\n\r\nexport default DisburseLoan;","import React from 'react';\r\nimport { Table, Card} from 'react-bootstrap';\r\n\r\nfunction EmiCard(props) {\r\n\r\n    return (\r\n        <Card border=\"primary\" header\r\n        key={0}\r\n        text={'dark'}\r\n        className=\"m-2\"\r\n    >\r\n        <Card.Header className=\"bg-primary text-center\"><b>EMI Details</b>\r\n            <svg onClick={props.handlePrintEMI} xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" className=\"bi bi-printer float-right cursar\" viewBox=\"0 0 16 16\">\r\n            <path d=\"M2.5 8a.5.5 0 1 0 0-1 .5.5 0 0 0 0 1z\"/>\r\n            <path d=\"M5 1a2 2 0 0 0-2 2v2H2a2 2 0 0 0-2 2v3a2 2 0 0 0 2 2h1v1a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-1h1a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-1V3a2 2 0 0 0-2-2H5zM4 3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v2H4V3zm1 5a2 2 0 0 0-2 2v1H2a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1h-1v-1a2 2 0 0 0-2-2H5zm7 2v3a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1z\"/>\r\n            </svg>\r\n        </Card.Header>\r\n        <Card.Body>\r\n        {/* <Loader show={isShowEMILoader} relative={true}/> */}\r\n        <Table size={\"sm\"} className=\"bg-white rounded small\" bordered responsive>\r\n            <thead>\r\n              <tr className=\"bg-success\">\r\n                  <th>EMI date</th>\r\n                  <th>EMI Amount</th>\r\n                  <th>Principal</th>\r\n                  <th>Interest</th>\r\n                  <th>Outstanding</th>\r\n                  {props.showDisburseButton?<th>EMI Paid</th>:\"\"}\r\n                  \r\n              </tr>\r\n          </thead>\r\n                <tbody>\r\n                {props.emiData.map((value,id)=>(<tr className={props.paidEmiRecord[value.date]?\"bg-warning\":\"\"}>\r\n                    <td>{value.date}</td>\r\n                    <td>{value.EMI.toFixed(2)}</td>\r\n                    <td>{value.principal}</td>\r\n                    <td>{value.int_amount}</td>\r\n                    <td>{value.outstanding }</td>\r\n                    {props.showDisburseButton?\r\n                    <td>{props.paidEmiRecord[value.date]?\r\n                    \r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-check-circle\" viewBox=\"0 0 16 16\">\r\n                        <path d=\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\r\n                        <path d=\"M10.97 4.97a.235.235 0 0 0-.02.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-1.071-1.05z\"/>\r\n                        </svg>:\"\"}</td>:\"\"}\r\n                </tr>))}\r\n                </tbody>\r\n        </Table>\r\n        </Card.Body>\r\n    </Card>\r\n);\r\n}\r\n\r\nexport default EmiCard;","import React from 'react';\r\nimport { Table, Card} from 'react-bootstrap';\r\n\r\nclass EmiCardPrint extends React.PureComponent {\r\n    render() {\r\n    return (\r\n        <div>\r\n        <h3 className=\"text-center mb-5 mt-3\">AA2 MutualHelp Micro Finance</h3>\r\n        <Card border=\"primary\" header\r\n        key={0}\r\n        text={'dark'}\r\n        className=\"m-2\"\r\n    >\r\n        <Card.Header className=\"bg-primary text-center\"><b>EMI Details</b>\r\n\r\n        </Card.Header>\r\n        <Card.Body>\r\n        {/* <Loader show={isShowEMILoader} relative={true}/> */}\r\n        <Table size={\"sm\"} className=\"bg-white rounded\" striped bordered hover responsive>\r\n            <thead>\r\n              <tr>\r\n                  <th>EMI date</th>\r\n                  <th>EMI Amount</th>\r\n                  <th>Principal</th>\r\n                  <th>Interest</th>\r\n                  <th>Outstanding</th>\r\n                  <th>Signature</th>\r\n              </tr>\r\n          </thead>\r\n                <tbody>\r\n                {this.props.emiData.map((value,id)=>(<tr>\r\n                    <td>{value.date}</td>\r\n                    <td>{value.EMI}</td>\r\n                    <td>{value.principal}</td>\r\n                    <td>{value.int_amount}</td>\r\n                    <td>{value.outstanding }</td>\r\n                    <td></td>\r\n                </tr>))}\r\n                </tbody>\r\n        </Table>\r\n        </Card.Body>\r\n    </Card>\r\n    </div>\r\n);\r\n\r\n    }\r\n}\r\n\r\nexport default EmiCardPrint;","import moment from 'moment';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Table, Button, Container, Row, Col, Card, ListGroup,Modal,Toast } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport groupLoan from '../../models/groupLoan';\r\nimport Loader from '../layout/Loader';\r\nimport { useSelector } from \"react-redux\";\r\nimport { useReactToPrint } from 'react-to-print';\r\nimport { useRef } from 'react';\r\nimport EmiCard from './EmiCard';\r\nimport EmiCardPrint from './EmiCardPrint';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction LoanApprovalDetails(props) {\r\n    let history = useHistory();\r\n    const memberDetailsRef = useRef();\r\n    const handlePrintMemberDetail = useReactToPrint({\r\n        content: () => memberDetailsRef.current,\r\n        documentTitle:\"AA2-Member\",\r\n      });\r\n\r\n      const applicationRef = useRef();\r\n      const handlePrintApplication = useReactToPrint({\r\n          content: () => applicationRef.current,\r\n          documentTitle:\"AA2-application\",\r\n        });\r\n\r\n        const emiRef = useRef();\r\n        const handlePrintEMI = useReactToPrint({\r\n            content: () => emiRef.current,\r\n            documentTitle:\"AA2-EMI-details\",\r\n          });\r\n      \r\n    const auth = useSelector(state => state.auth);\r\n    const [paidEmiRecord, setPaidEmiRecord] = useState([])\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [isShowEMILoader, setisShowEMILoader] = useState(false)\r\n    const [emiData, setEmiData] = useState([])\r\n    const [loanDetails, setLoanDetails] = useState({});\r\n    const [showToast, setShowToast] = useState({ isShow: false, type: \"\", message: \"\" })\r\n    const [showApprovalButton,setShowApprovalButton]= useState(false);\r\n    const [showDisburseButton,setShowDisburseButton]= useState(false);\r\n    \r\n    //const [disburseActionButton,setDisburseActionButton]\r\n    useEffect(() => {\r\n        console.log(props);\r\n        getLoanDetails();\r\n    }, [])\r\n\r\n    const getLoanDetails = async () => {\r\n        try {\r\n            setisShowLoader(true);\r\n            setisShowEMILoader(true);\r\n\r\n            let response = await groupLoan.GroupLoanModel.getLoanDetailbyId(props.location.state);\r\n            let calculateEmi ={\r\n                \"loanStartDate\":response.body.message[0].application_date,\r\n                \"interest_rate\":response.body.message[0].interest_rate,\r\n                \"tenure\":response.body.message[0].Tenure,\r\n                \"EMI_payout\":response.body.message[0].EMI_payout,\r\n                \"loan_amount\":response.body.message[0].loan_amount,\r\n                \"EMI_type\":response.body.message[0].EMI_type,\r\n                \"week\":response.body.message[0].week,\r\n                \"day\":response.body.message[0].day,\r\n            }\r\n            setisShowEMILoader(true);\r\n            let EmiData = await groupLoan.EmiModel.calculateEMI(calculateEmi);\r\n            let paidData = [];\r\n            let result = [];\r\n            if(response.body.message[0].loan_account_no){\r\n                paidData = await groupLoan.EmiModel.getPaidEmis(response.body.message[0].loan_account_no);\r\n                for(let i=0;i<paidData.body.message.length;i++){\r\n                    let emiDate = moment(paidData.body.message[i].EMI_date).format(\"DD-MM-yyyy\");\r\n                    result[emiDate]=true;\r\n                }   \r\n                setPaidEmiRecord(result);\r\n            }\r\n            setEmiData(EmiData.body.message);\r\n            setisShowEMILoader(false);\r\n            console.log(response);\r\n\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n                setShowApprovalButton(response.body.message[0].is_approved!=0?false:true);\r\n                setShowDisburseButton(response.body.message[0].is_approved ==1 && response.body.message[0].is_disbursed==0?true:false);\r\n                setLoanDetails(response.body.message[0]);\r\n            }\r\n\r\n        } catch (error) {\r\n            setisShowLoader(false);\r\n            console.log(error);\r\n        }\r\n    }\r\n    const actionOnLoan = async(actionType)=>{\r\n        try {\r\n            setisShowLoader(true);\r\n            const data = {\"id\":props.location.state,\"actionType\":actionType}\r\n            let response = await groupLoan.GroupLoanModel.approveRejectLoan(data);\r\n            console.log(response);\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n                setShowApprovalButton(false);\r\n                //setShowDisburseButton(false);\r\n                setShowToast({ isShow: true,type:\"bg-success\", message: response.body.message })\r\n            }\r\n        } catch (error) {\r\n            setisShowLoader(false);\r\n            setShowToast({ isShow: true,type:\"bg-danger\", message: error.response.body.message })\r\n            console.log(error);\r\n        }\r\n    }\r\n    const actionDisburseLoan = async(actionType)=>{\r\n        try {\r\n            setisShowLoader(true);\r\n            const data = {\"id\":props.location.state,\"actionType\":actionType}\r\n            let response = await groupLoan.GroupLoanModel.disburseRejectLoan(data);\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n                setShowDisburseButton(false);\r\n                setShowToast({ isShow: true,type:\"bg-success\", message: response.body.message })\r\n            }\r\n        } catch (error) {\r\n            setisShowLoader(false);\r\n            setShowToast({ isShow: true,type:\"bg-danger\", message: error.response.body.message })\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n    const goback = ()=>{\r\n        history.goBack();\r\n    }\r\n    return (\r\n        <>\r\n        <Button className=\"mt-2 ml-2\" onClick={goback} size={\"sm\"}>Back</Button>\r\n        <Toast key={1} autohide delay={3000} show={showToast.isShow} onClose={() => setShowToast({ isShow: false,type:\"\", message: \"\" })} className={\"loader \"+ (showToast.type) } >\r\n            <Toast.Header>\r\n            <strong className=\"me-auto\">{showToast.type==\"bg-danger\"?\"Error\":\"Success\"} Message</strong>\r\n            </Toast.Header>\r\n            <Toast.Body className=\"Dark\">\r\n            {showToast.message}\r\n            </Toast.Body>\r\n        </Toast>\r\n            <Loader show={isShowLoader} />\r\n            {showApprovalButton && (auth.role==\"checker\"||auth.role==\"admin\")?<Row >\r\n                <Col className=\"text-center\">\r\n                <Button variant=\"primary\" type=\"button\" onClick={()=>actionOnLoan(1)}>\r\n                        Approve\r\n                    </Button>{'  '}\r\n                    <Button variant=\"danger\" type=\"button\" onClick={()=>actionOnLoan(-1)}>\r\n                        Reject\r\n                    </Button>\r\n                </Col>\r\n            </Row>:\"\"}\r\n\r\n            {showDisburseButton&& (auth.role==\"checker\"||auth.role==\"admin\")?<Row >\r\n                <Col className=\"text-center\">\r\n                <Button variant=\"primary\" type=\"button\" onClick={()=>actionDisburseLoan(1)}>\r\n                        Disburse\r\n                    </Button>{'  '}\r\n                    <Button variant=\"danger\" type=\"button\" onClick={()=>actionDisburseLoan(-1)}>\r\n                        Reject\r\n                    </Button>\r\n                </Col>\r\n            </Row>:\"\"}\r\n\r\n            <Row xs={1} md={2} className=\"g-1\">\r\n                <Col>\r\n                    <Card border=\"success\" header\r\n                        key={0}\r\n                        text={'dark'}\r\n                        className=\"m-2\"\r\n                        ref={memberDetailsRef}\r\n                    >\r\n                        <Card.Header className=\"bg-success text-center\"><b>Member Details</b><svg onClick={handlePrintMemberDetail} xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" className=\"bi bi-printer float-right cursar\" viewBox=\"0 0 16 16\">\r\n  <path d=\"M2.5 8a.5.5 0 1 0 0-1 .5.5 0 0 0 0 1z\"/>\r\n  <path d=\"M5 1a2 2 0 0 0-2 2v2H2a2 2 0 0 0-2 2v3a2 2 0 0 0 2 2h1v1a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-1h1a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-1V3a2 2 0 0 0-2-2H5zM4 3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v2H4V3zm1 5a2 2 0 0 0-2 2v1H2a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1h-1v-1a2 2 0 0 0-2-2H5zm7 2v3a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1z\"/>\r\n</svg></Card.Header>\r\n                        <Card.Body>\r\n                            <Table size=\"sm\" className=\"bg-white rounded\" striped bordered hover responsive>\r\n                                <tbody>\r\n                                    <tr><th>Member Name</th><td>{loanDetails.member_name}</td> </tr>\r\n                                    <tr><th>Member Group ID</th>  <td>{loanDetails.member_group_id}</td></tr>\r\n                                    <tr> <th>Member Address</th>  <td>{loanDetails.address}</td></tr>\r\n                                    <tr><th>DOB</th>   <td>{moment(loanDetails.date_of_birth).format(\"DD-MM-YYYY\") }</td></tr>\r\n                                    <tr><th>Phone</th> <td>{loanDetails.mobile_number}</td></tr>\r\n                                    <tr><th>Gender</th>  <td>{loanDetails.gender}</td></tr>\r\n                                    <tr><th>Aadhar No.</th> <td>{loanDetails.aadhar_number}</td></tr>\r\n                                    <tr><th>PAN</th> <td>{loanDetails.pan_card_number}</td></tr>\r\n                                    <tr><th>Driving License</th> <td>{loanDetails.driving_license_number}</td></tr>\r\n                                    <tr><th>Ration Card No.</th> <td>{loanDetails.ration_card_number}</td></tr>\r\n                                    <tr><th>Voter ID No.</th> <td>{loanDetails.voter_id_number}</td></tr>\r\n                                    <tr><th>Bank Account No.</th> <td>{loanDetails.bank_account}</td></tr>\r\n                                    <tr><th>Bank IFSC code</th> <td>{loanDetails.bank_ifsc_code}</td></tr>\r\n                                    <tr><th>Bank Account Holder</th> <td>{loanDetails.bank_account_holder}</td></tr>\r\n\r\n                                </tbody>\r\n                            </Table>\r\n\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n                <Col>\r\n                    <Card border=\"info\" header\r\n                        key={0}\r\n                        text={'dark'}\r\n                        // style={{ width: '18rem' }}\r\n                        className=\"m-2\"\r\n                        ref={applicationRef}\r\n                    >\r\n                        <Card.Header className=\"bg-info text-center\"><b>Application Details</b><svg onClick={handlePrintApplication} xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" className=\"bi bi-printer float-right cursar\" viewBox=\"0 0 16 16\">\r\n  <path d=\"M2.5 8a.5.5 0 1 0 0-1 .5.5 0 0 0 0 1z\"/>\r\n  <path d=\"M5 1a2 2 0 0 0-2 2v2H2a2 2 0 0 0-2 2v3a2 2 0 0 0 2 2h1v1a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-1h1a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-1V3a2 2 0 0 0-2-2H5zM4 3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v2H4V3zm1 5a2 2 0 0 0-2 2v1H2a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1h-1v-1a2 2 0 0 0-2-2H5zm7 2v3a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1z\"/>\r\n</svg></Card.Header>\r\n                        <Card.Body>\r\n                            \r\n                            <Table size=\"sm\" className=\"bg-white rounded\" striped bordered hover responsive>\r\n                                <tbody>\r\n                                    <tr><th>Account No</th>  <td>{loanDetails.loan_account_no}</td></tr>\r\n                                    <tr><th>Application Date</th><td>{moment(loanDetails.application_date).format(\"DD-MM-YYYY HH:SS\") }</td> </tr>\r\n                                    <tr><th>Scheme Id</th>  <td>{loanDetails.scheme_id}</td></tr>\r\n                                    <tr><th>Village Name</th><td>{loanDetails.village_name}</td></tr>\r\n                                    <tr><th>EMI Week</th><td>{loanDetails.week}</td></tr>\r\n                                    <tr><th>EMI Day</th><td>{loanDetails.day}</td></tr>\r\n                                    <tr> <th>Member Address</th>  <td>{loanDetails.address}</td></tr>\r\n                                    <tr><th>Loan Amount</th>   <td>{loanDetails.loan_amount}</td></tr>\r\n                                    <tr><th>Interest rate</th> <td>{loanDetails.interest_rate}</td></tr>\r\n                                    <tr><th>EMI payout</th>  <td>{loanDetails.EMI_payout}</td></tr>\r\n                                    <tr><th>EMI type</th>  <td>{loanDetails.EMI_type}</td></tr>\r\n                                    {/* <tr><th>EMI amount</th> <td>{loanDetails.EMI_amount}</td></tr> */}\r\n                                    <tr><th>Tenure</th> <td>{loanDetails.Tenure}</td></tr>\r\n                                </tbody>\r\n                            </Table>\r\n\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n                <Col >\r\n                    <Loader show={isShowEMILoader} relative={true}/>\r\n                    <EmiCard showDisburseButton={loanDetails.is_approved ==1 && loanDetails.is_disbursed==1}  emiData={emiData} paidEmiRecord={paidEmiRecord} handlePrintEMI={handlePrintEMI}/>\r\n                    <div style={{display:\"none\"}}><EmiCardPrint ref={emiRef} emiData={emiData}/></div> \r\n                </Col>\r\n\r\n            </Row>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LoanApprovalDetails;","import React, { useEffect, useState, useMemo } from 'react';\r\nimport { Table, Badge, Container, Row, Col, Button, Pagination } from 'react-bootstrap';\r\nimport groupLoan from '../../models/groupLoan';\r\nimport Loader from '../layout/Loader';\r\nimport { useHistory } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport { useTable, useSortBy, usePagination, useFilters } from 'react-table'\r\n\r\nfunction AllApplications(props) {\r\n    let history = useHistory();\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [loanlist, setLoanlist] = useState([]);\r\n    useEffect(() => {\r\n        getLoanList();\r\n    }, [])\r\n    const data = useMemo(\r\n        () =>\r\n\r\n            loanlist.map((record, index) => {\r\n                return {\r\n                    col1: record.loan_account_no ? record.loan_account_no : \"N/A\",\r\n                    col2: moment(record.application_date).format('DD-MM-yyy hh:ss A'),\r\n                    col3: record.member_name,\r\n                    col4: record.scheme_id,\r\n                    col5: record.loan_amount,\r\n                    col6: record.village_name,\r\n                    col7: record.actionStatus,\r\n                    col8: record\r\n                }\r\n            }\r\n            )\r\n        ,\r\n        [loanlist]\r\n    )\r\n\r\n    const columns = useMemo(\r\n        () => [\r\n            {\r\n                Header: 'Account no.',\r\n                accessor: 'col1', // accessor is the \"key\" in the data\r\n                allowFilter: true\r\n            },\r\n            {\r\n                Header: 'Application date',\r\n                accessor: 'col2', // accessor is the \"key\" in the data\r\n                allowFilter: true\r\n            },\r\n            {\r\n                Header: 'Member name',\r\n                accessor: 'col3',\r\n                allowFilter: true\r\n            },\r\n            {\r\n                Header: 'Scheme ID',\r\n                accessor: 'col4',\r\n                allowFilter: true\r\n            },\r\n            {\r\n                Header: 'Loan amount',\r\n                accessor: 'col5',\r\n                allowFilter: true\r\n            },\r\n            {\r\n                Header: 'Village',\r\n                accessor: 'col6',\r\n                allowFilter: true\r\n            },\r\n            {\r\n                Header: 'Status',\r\n                accessor: 'col7',\r\n                allowFilter: false,\r\n                Cell:emi=><Badge className={emi.value == \"Approved\" || emi.value == \"Disbursed\" ? \"bg-success\" : \"bg-danger\"}>{emi.value}</Badge>\r\n            },\r\n            {\r\n                Header: 'Action',\r\n                accessor: 'col8',\r\n                allowFilter: false,\r\n                Cell: emi => {\r\n                    return (<Button size={\"sm\"} variant=\"info\" onClick={() => { history.push(\"/loanApprovalDetails\", emi.value.id) }} type=\"button\" className=\"ml-2\">\r\n                        View\r\n                    </Button>\r\n                    )\r\n                }\r\n\r\n            }\r\n\r\n        ],\r\n        []\r\n    )\r\n    function DefaultColumnFilter({\r\n        column: { filterValue, preFilteredRows, setFilter },\r\n    }) {\r\n        const count = preFilteredRows.length\r\n\r\n        return (\r\n            <input\r\n                className=\"form-control\"\r\n                value={filterValue || ''}\r\n                onChange={e => {\r\n                    setFilter(e.target.value || undefined)\r\n                }}\r\n                placeholder={`Search ${count} records...`}\r\n            />\r\n        )\r\n    }\r\n    const defaultColumn = React.useMemo(\r\n        () => ({\r\n            // Default Filter UI\r\n            Filter: DefaultColumnFilter,\r\n        }),\r\n        []\r\n    )\r\n    const paginate = (totalPage) => {\r\n        let pageNumberArray = [];\r\n        for (let i = 1; i <= totalPage; i++) {\r\n            pageNumberArray.push(i);\r\n        }\r\n        return (\r\n            <Pagination>\r\n                <Pagination.First onClick={() => gotoPage(0)} />\r\n                <Pagination.Prev onClick={() => previousPage()} disabled={!canPreviousPage} />\r\n                {pageNumberArray.map(num => <Pagination.Item key={num} active={num === (pageIndex + 1)} onClick={() => gotoPage(num - 1)}>{num}</Pagination.Item>)}\r\n                <Pagination.Next onClick={() => nextPage()} disabled={!canNextPage} />\r\n                <Pagination.Last onClick={() => gotoPage(totalPage - 1)} />\r\n            </Pagination>\r\n        );\r\n\r\n    }\r\n\r\n    const getLoanList = async () => {\r\n        try {\r\n            setisShowLoader(true);\r\n            let response = await groupLoan.GroupLoanModel.getAllLoanApplications();\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n                let formatedData = response.body.message.map((loan, id) => {\r\n                    if (loan.is_approved == 1 && loan.is_disbursed == 1) {\r\n                        loan[\"actionStatus\"] = \"Disbursed\";\r\n                    } else if (loan.is_approved == 1 && loan.is_disbursed == 0) {\r\n                        loan[\"actionStatus\"] = \"Approved\";\r\n                    } else if (loan.is_disbursed == -1) {\r\n                        loan[\"actionStatus\"] = \"Disburse Rejected\";\r\n                    } else if (loan.is_approved == -1) {\r\n                        loan[\"actionStatus\"] = \"Approval Rejected\";\r\n                    } else {\r\n                        loan[\"actionStatus\"] = \"Pending\";\r\n                    }\r\n\r\n                    return loan;\r\n                });\r\n                setLoanlist(formatedData);\r\n            }\r\n\r\n        } catch (error) {\r\n            setisShowLoader(false);\r\n            console.log(error);\r\n        }\r\n    }\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n        pageOptions,\r\n        page,\r\n        pageCount,\r\n        state: { pageIndex, pageSize },\r\n        gotoPage,\r\n        previousPage,\r\n        nextPage,\r\n        setPageSize,\r\n        canPreviousPage,\r\n        canNextPage,\r\n    } = useTable({ columns, data, defaultColumn, initialState: { pageIndex: 0 } }, useFilters, useSortBy, usePagination)\r\n    return (\r\n        <>\r\n            <Loader show={isShowLoader} />\r\n            <Container fluid>\r\n                <h2 className=\"text-info text-center\">All Loan Applications</h2>\r\n                <Row>\r\n                    <Col>\r\n                        <div className=\"text-right\">\r\n                            {paginate(pageCount)}\r\n                        </div>\r\n\r\n                        <Table  {...getTableProps()} className=\"shadow-lg p-3 mb-5 bg-white rounded small\" striped bordered hover responsive>\r\n                            <thead className=\"bg-primary\">\r\n                                {headerGroups.map(headerGroup => (\r\n                                    <tr {...headerGroup.getHeaderGroupProps()}>\r\n                                        {headerGroup.headers.map(column => (\r\n                                            <th\r\n                                                {...column.getHeaderProps(column.getSortByToggleProps())}\r\n                                            >\r\n                                                {column.render('Header')}\r\n                                                <span>\r\n                                                    {column.isSorted ? (column.isSortedDesc ? ' 🔽' : ' 🔼') : ''}\r\n                                                </span>\r\n                                                <div>{column.allowFilter ? column.render('Filter') : null}</div>\r\n                                            </th>\r\n                                        ))}\r\n                                    </tr>\r\n                                ))}\r\n                            </thead>\r\n                            <tbody{...getTableBodyProps()}>\r\n\r\n                                {page.map(row => {\r\n                                    prepareRow(row)\r\n                                    return (\r\n                                        <tr {...row.getRowProps()}>\r\n                                            {row.cells.map(cell => {\r\n                                                console.log(cell);\r\n                                                    return (\r\n                                                        <td {...cell.getCellProps()}>\r\n                                                            {cell.render('Cell')}\r\n                                                        </td>\r\n                                                    )\r\n                                            })}\r\n                                        </tr>\r\n                                    )\r\n                                })}\r\n\r\n                            </tbody>\r\n                        </Table>\r\n                        <div className=\"text-right\">\r\n                            {paginate(pageCount)}\r\n                        </div>\r\n\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AllApplications;","import React,{useState,useRef,useEffect } from 'react';\r\nimport { Table,Button, Container, Row, Col, Card, Form } from 'react-bootstrap';\r\nimport Loader from '../layout/Loader';\r\nimport { useFormik } from 'formik';\r\nimport DatePicker from \"react-datepicker\";\r\nimport groupLoan from \"../../models/groupLoan\";\r\nimport { useReactToPrint } from 'react-to-print';\r\nfunction EmiCalculator(props) {\r\n    const [enrollmentDate, setEnrollmentDate] = useState(new Date());\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [calculatedData,setCalculatedData] = useState([]);\r\n    //const [isclickPrint,setisclickPrint] = useState(false);\r\n    const componentRef = useRef();\r\n    // useEffect(()=>{\r\n    //   handlePrint()\r\n    // },[isclickPrint==true])\r\n    const handlePrint = useReactToPrint({\r\n      content: () => componentRef.current,\r\n      documentTitle:\"AA2-EMI-details\",\r\n     // onAfterPrint:()=>{setisclickPrint(false)}\r\n\r\n    });\r\n    // const setPrintCompany = ()=>{\r\n    //   setisclickPrint(true,()=>{console.log(\"print\")})\r\n    // }    \r\n    const validate = values => {\r\n        const errors = {};\r\n        if (!values.interest_rate) {\r\n          errors.interest_rate = 'Interest rate is Required';\r\n        }\r\n        if (!values.loan_amount) {\r\n            errors.loan_amount = 'Loan amount is Required';\r\n          }\r\n          if (!values.tenure) {\r\n            errors.tenure = 'Tenure is Required';\r\n          }\r\n          if (!values.EMI_payout) {\r\n            errors.EMI_payout = 'EMI payout is Required';\r\n          }\r\n          if (values.EMI_payout==\"village\" && !values.week) {\r\n            errors.week = 'Week is Required';\r\n          }\r\n          if (values.EMI_payout==\"village\" && !values.day) {\r\n            errors.day = 'Day is Required';\r\n          }\r\n          return errors;\r\n      };\r\n      const formik = useFormik({\r\n        initialValues: {\r\n        loanStartDate: '',\r\n        interest_rate: '',\r\n        tenure: '',\r\n        EMI_payout:'',\r\n        loan_amount:'',\r\n        EMI_type:\"flat\",\r\n        week:'',\r\n        day:''\r\n        },\r\n        validate,\r\n        onSubmit: async (values) => {\r\n          setisShowLoader(true);\r\n          try {\r\n             values.loanStartDate = enrollmentDate;\r\n             console.log(values);\r\n            let response = await groupLoan.EmiModel.calculateEMI(values);\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n              //formik.resetForm();\r\n              setCalculatedData(response.body.message);\r\n            } else {\r\n              //setShowToast({ isShow: true,type:\"bg-danger\", message: response.body.message })\r\n            }\r\n    \r\n          } catch (error) {\r\n            setisShowLoader(false);\r\n            //setShowToast({ isShow: true,type:\"bg-danger\", message: error.response.body.message })\r\n          }\r\n        },\r\n      });\r\n    \r\n    return (\r\n        <>\r\n        <Loader show={isShowLoader}/>\r\n        <Container fluid>\r\n            <Row >\r\n            <Col>\r\n            <Container className=\"bg-white mt-2 shadow-lg p-3 mb-5 bg-white rounded\">\r\n            <Form onSubmit={formik.handleSubmit}>\r\n            <Form.Group as={Col} className=\"form-group required pl-0 pr-0\" controlId=\"formGridEnroll\">\r\n                            <Form.Label >Application Date</Form.Label>\r\n                            <DatePicker class=\"form-control\"\r\n                                selected={enrollmentDate}\r\n                                onChange={(date) => setEnrollmentDate(date)}\r\n                                name=\"loanStartDate\"\r\n                            />\r\n                {formik.touched.loanStartDate && formik.errors.loanStartDate ? (\r\n                  <div class=\"text-danger\">{formik.errors.loanStartDate}</div>\r\n                ) : null}\r\n\r\n            </Form.Group>\r\n\r\n              <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                <Form.Label>Loan amount</Form.Label>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  name=\"loan_amount\"\r\n                  placeholder=\"Enter loan amount\"\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.loan_amount}\r\n                />\r\n                {formik.touched.loan_amount && formik.errors.loan_amount ? (\r\n                  <div class=\"text-danger\">{formik.errors.loan_amount}</div>\r\n                ) : null}\r\n\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-3 form-group required\" controlId=\"formBasicEmail\">\r\n                <Form.Label>Interest rate</Form.Label>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  name=\"interest_rate\"\r\n                  placeholder=\"Enter interest rate\"\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.interest_rate}\r\n\r\n                />\r\n                {formik.touched.interest_rate && formik.errors.interest_rate ? (\r\n                  <div class=\"text-danger\">{formik.errors.interest_rate}</div>\r\n                ) : null}\r\n\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-3 form-group required\" controlId=\"formBasicEmail\">\r\n                <Form.Label>Tenure</Form.Label>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  name=\"tenure\"\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.tenure}\r\n\r\n                />\r\n                {formik.touched.tenure && formik.errors.tenure ? (\r\n                  <div class=\"text-danger\">{formik.errors.tenure}</div>\r\n                ) : null}\r\n\r\n              </Form.Group>\r\n              <Form.Group as={Col} className=\"mb-3 pl-0 pr-0 required\" controlId=\"formGridAddress1\">\r\n                <Form.Label>EMI payout</Form.Label>\r\n                <select\r\n                    className=\"form-control\"\r\n                    name=\"EMI_payout\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.EMI_payout}\r\n                >\r\n                    <option key=\"\" value=\"\">Select payout</option>\r\n\r\n                    <option key=\"weekly\" value=\"weekly\">Weekly</option>\r\n                    <option key=\"monthly\" value=\"fortnight\">Fortnight</option>\r\n                    <option key=\"village\" value=\"village\">By village</option>\r\n\r\n                </select>\r\n                {formik.touched.EMI_payout && formik.errors.EMI_payout ? (\r\n                  <div class=\"text-danger\">{formik.errors.EMI_payout}</div>\r\n                ) : null}\r\n\r\n            </Form.Group>\r\n            {formik.values.EMI_payout == \"village\"?\r\n            <Form.Group as={Col} className=\"mb-3 pl-0 pr-0 required\" controlId=\"formGridAddress1\">\r\n                <Form.Label>Week</Form.Label>\r\n                <select\r\n                    className=\"form-control\"\r\n                    name=\"week\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.week}>\r\n                    <option key=\"\" value=\"\">Select Week</option>\r\n                    <option key=\"1\" value=\"1\">Week 1</option>\r\n                    <option key=\"2\" value=\"2\">Week 2</option>\r\n                </select>\r\n                {formik.touched.week && formik.errors.week ? (\r\n                  <div class=\"text-danger\">{formik.errors.week}</div>\r\n                ) : null}\r\n            </Form.Group>:\"\"}\r\n            {formik.values.EMI_payout == \"village\"?\r\n            <Form.Group as={Col} className=\"mb-3 pl-0 pr-0 required\" controlId=\"formGridAddress1\">\r\n                <Form.Label>Day</Form.Label>\r\n                <select\r\n                    className=\"form-control\"\r\n                    name=\"day\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.day}>\r\n                    <option key=\"\" value=\"\">Select day</option>\r\n                    <option key=\"monday\" value=\"monday\">Monday</option>\r\n                    <option key=\"tuesday\" value=\"tuesday\">Tuesday</option>\r\n                    <option key=\"wednesday\" value=\"wednesday\">Wednesday</option>\r\n                    <option key=\"thrusday\" value=\"thrusday\">Thrusday</option>\r\n                    <option key=\"friday\" value=\"friday\">Friday</option>\r\n                </select>\r\n                {formik.touched.day && formik.errors.day ? (\r\n                  <div class=\"text-danger\">{formik.errors.day}</div>\r\n                ) : null}\r\n\r\n            </Form.Group>\r\n:\"\"}\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                Calculate\r\n              </Button>\r\n\r\n            </Form>\r\n            </Container>\r\n            </Col>\r\n            <Col md={8}>\r\n            <Card border=\"primary\" header\r\n                        key={0}\r\n                        text={'dark'}\r\n                        // style={{ width: '18rem' }}\r\n                        className=\"m-2\"\r\n                        ref={componentRef}\r\n                    >\r\n                      {/* {isclickPrint?<h2 className=\"text-center mb-3\">AA2 MicroFinance Foundation</h2>:\"\"} */}\r\n                        <Card.Header className=\"bg-primary text-center\"><b>AA2 Micro Finance EMI Details</b><svg onClick={handlePrint} xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" className=\"bi bi-printer float-right cursar\" viewBox=\"0 0 16 16\">\r\n  <path d=\"M2.5 8a.5.5 0 1 0 0-1 .5.5 0 0 0 0 1z\"/>\r\n  <path d=\"M5 1a2 2 0 0 0-2 2v2H2a2 2 0 0 0-2 2v3a2 2 0 0 0 2 2h1v1a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-1h1a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-1V3a2 2 0 0 0-2-2H5zM4 3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v2H4V3zm1 5a2 2 0 0 0-2 2v1H2a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1h-1v-1a2 2 0 0 0-2-2H5zm7 2v3a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1z\"/>\r\n</svg></Card.Header>\r\n                        <Card.Body >\r\n                            <Table  size={\"sm\"} className=\"bg-white rounded\" striped bordered hover responsive>\r\n                            <thead>\r\n                              <tr>\r\n                                  <th>EMI date</th>\r\n                                  <th>EMI Amount</th>\r\n                                  <th>Principal</th>\r\n                                  <th>Interest</th>\r\n                                  <th>Outstanding</th>\r\n                              </tr>\r\n                          </thead>\r\n                                <tbody>\r\n                                {calculatedData.map((value,id)=>(<tr>\r\n                                    <td>{value.date}</td>\r\n                                    <td>{value.EMI.toFixed(2)}</td>\r\n                                    <td>{value.principal}</td>\r\n                                    <td>{value.int_amount}</td>\r\n                                    <td>{value.outstanding }</td>\r\n                                </tr>))}\r\n                                </tbody>\r\n                            </Table>\r\n\r\n                        </Card.Body>\r\n                    </Card>\r\n            </Col>\r\n\r\n    </Row>\r\n    </Container>            \r\n        </>\r\n    );\r\n}\r\n\r\nexport default EmiCalculator;","import React from 'react';\r\nimport { Table } from 'react-bootstrap';\r\n\r\nclass PrintDueEmis extends React.PureComponent { \r\n    add =(row,a)=>{\r\n        console.log(row,a.values);\r\n        return parseFloat(a.values.col7) + row;\r\n    }\r\n    render() {\r\n    return (\r\n        <div>\r\n            <h3 className=\"text-center mb-5 mt-3\">AAs2 MutualHelp Micro Finance</h3>\r\n            <Table className=\" shadow-lg p-3 mb-5 bg-white rounded small\" striped bordered hover responsive>\r\n                <thead className=\"bg-primary\">\r\n                    <tr>\r\n                        <th>Account No.</th>\r\n                        <th>Group</th>\r\n                        <th>Village Name</th>\r\n                        <th>Member ID</th>\r\n                        <th>Name</th>\r\n                        <th>No. of Emi</th>\r\n                        <th>EMI Amount</th>\r\n                        <th>Outstanding</th>\r\n                        <th>Company Signature</th>\r\n                        <th>Customer Signature</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {this.props.dueEmis.map((emi, id) => (<tr>\r\n                        <td>{emi.values.col1}</td>\r\n                        <td>{emi.values.col2}</td>\r\n                        <td>{emi.values.col3}</td>\r\n                        <td>{emi.values.col4}</td>\r\n                        <td>{emi.values.col5}</td>\r\n                        <td>{emi.values.col6}</td>\r\n                        <td>{emi.values.col7}</td>\r\n                        <td>{emi.values.col8}</td>\r\n                        <td className=\"border\"></td>\r\n                        <td className=\"border\"></td>\r\n                    </tr>))}\r\n                </tbody>\r\n                <tfoot>\r\n                <tr>\r\n                <th>Total Collection</th><th colSpan=\"9\">{this.props.dueEmis.reduce(this.add,0)}</th>\r\n                    \r\n                </tr>\r\n                </tfoot>\r\n            </Table> \r\n            \r\n        </div>\r\n    );\r\n    }\r\n}\r\n\r\nexport default PrintDueEmis;","import React, { useEffect, useState, useMemo } from 'react';\r\nimport { Table, Button, Container, Row, Col, Modal, InputGroup, FormLabel, Pagination } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport groupLoan from '../../models/groupLoan';\r\nimport Loader from '../layout/Loader';\r\nimport DatePicker from \"react-datepicker\";\r\nimport moment from \"moment\";\r\nimport { useTable, useSortBy, usePagination, useFilters } from 'react-table';\r\nimport { useReactToPrint } from 'react-to-print';\r\nimport { useRef } from 'react';\r\nimport PrintDueEmis from './printDueEmis';\r\nfunction DueEmis(props) {\r\n    const [showDeleteModel, setShowDeleteModel] = useState(false)\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [dueEmis, setDueEmis] = useState([]);\r\n    const [paidID, setPaidID] = useState(0)\r\n    const [enrollmentDate, setEnrollmentDate] = useState(new Date());\r\n    const emiDetailsRef = useRef();\r\n    const handlePrintEmiDetail = useReactToPrint({\r\n        content: () => emiDetailsRef.current,\r\n        documentTitle:\"AA2-Due-EMIs\",\r\n      });\r\n\r\n    useEffect(() => {\r\n        getDueEmisRecord();\r\n    }, [])\r\n\r\n    const data = useMemo(\r\n        () =>\r\n            dueEmis.map((record, index) => {\r\n                return {\r\n                    col1: record.loan_account_no,\r\n                    col2: record.member_group_id,\r\n                    col3: record.village_name,\r\n                    col4: record.member_id,\r\n                    col5: record.member_name,\r\n                    col6: record.remain_EMI,\r\n                    col7: record.EMI_amount.toFixed(2),\r\n                    col8: record.outstanding,\r\n                    col9: record,\r\n                }\r\n            }\r\n            )\r\n        ,\r\n        [dueEmis]\r\n    )\r\n\r\n    const columns = useMemo(\r\n        () => [\r\n            {\r\n                Header: 'Account no.',\r\n                accessor: 'col1', // accessor is the \"key\" in the data\r\n                allowFilter: true,\r\n                Cell: e => { return(<Link to={{\r\n                    pathname: '/loanApprovalDetails',\r\n                    state: dueEmis[e.row.id]?.loan_table_id\r\n                }}>{e.value}</Link>)}\r\n            },\r\n            {\r\n                Header: 'Group',\r\n                accessor: 'col2', // accessor is the \"key\" in the data\r\n                allowFilter: true,\r\n                 Cell: e => <Link to=\"/memberGroup\">{e.value}</Link>\r\n            },\r\n            {\r\n                Header: 'Village Name',\r\n                accessor: 'col3', // accessor is the \"key\" in the data\r\n                allowFilter: true,\r\n                 Cell: e => <Link to=\"/village\">{e.value}</Link>\r\n            },\r\n            {\r\n                Header: 'Member ID',\r\n                accessor: 'col4',\r\n                allowFilter: true,\r\n                Cell: emi => {\r\n                    return (<Link to={{\r\n                    pathname: '/viewMemberDetail',\r\n                    state: emi.value\r\n                }}>{emi.value}</Link>)}\r\n            },\r\n            {\r\n                Header: 'Name',\r\n                accessor: 'col5',\r\n                allowFilter: true,\r\n                Cell: emi => <Link to={{\r\n                    pathname: '/viewMemberDetail',\r\n                    state:dueEmis[emi.row.id]?.member_id\r\n                }}>{emi.value}</Link>\r\n            },\r\n            {\r\n                Header: 'No. of EMI',\r\n                accessor: 'col6',\r\n                allowFilter: true\r\n            },\r\n            {\r\n                Header: 'EMI Amount',\r\n                accessor: 'col7',\r\n                allowFilter: true\r\n            },\r\n            {\r\n                Header: 'Outstanding',\r\n                accessor: 'col8',\r\n                allowFilter: false\r\n            },\r\n            {\r\n                Header: 'Action',\r\n                accessor: 'col9',\r\n                allowFilter: false,\r\n                Cell: emi => <Button size={\"sm\"} variant=\"success\" onClick={() => paidHandle(emi.value.emi_id)}>Pay</Button>\r\n            },\r\n        ],\r\n        [dueEmis]\r\n    )\r\n    function DefaultColumnFilter({\r\n        column: { filterValue, preFilteredRows, setFilter },\r\n    }) {\r\n        const count = preFilteredRows.length\r\n\r\n        return (\r\n            <input\r\n                className=\"form-control\"\r\n                value={filterValue || ''}\r\n                onChange={e => {\r\n                    setFilter(e.target.value || undefined)\r\n                }}\r\n                placeholder={`Search ${count} records...`}\r\n            />\r\n        )\r\n    }\r\n    const defaultColumn = React.useMemo(\r\n        () => ({\r\n            // Default Filter UI\r\n            Filter: DefaultColumnFilter,\r\n        }),\r\n        []\r\n    )\r\n    const paginate = (totalPage) => {\r\n        let pageNumberArray = [];\r\n        for (let i = 1; i <= totalPage; i++) {\r\n            pageNumberArray.push(i);\r\n        }\r\n        return (\r\n            <Pagination className=\"text-left\">\r\n                <Pagination.First onClick={() => gotoPage(0)} />\r\n                <Pagination.Prev onClick={() => previousPage()} disabled={!canPreviousPage} />\r\n                {pageNumberArray.map(num => <Pagination.Item key={num} active={num === (pageIndex + 1)} onClick={() => gotoPage(num - 1)}>{num}</Pagination.Item>)}\r\n                <Pagination.Next onClick={() => nextPage()} disabled={!canNextPage} />\r\n                <Pagination.Last onClick={() => gotoPage(totalPage - 1)} />\r\n            </Pagination>\r\n        );\r\n\r\n    }\r\n\r\n    const getDueEmisRecord = (today = moment().format(\"yyyy-MM-DD\")) => {\r\n        setisShowLoader(true);\r\n        groupLoan.EmiModel.getDueEmis(today).then(res => {\r\n            setisShowLoader(false);\r\n            if (res.statusCode == 200) {\r\n                let emiData = [];\r\n                emiData = res.body.message.map(emi => {\r\n                    // return emi\r\n                    emi[\"loan_table_id\"] = emi.loan_account_no.substring(11)\r\n                    return emi;\r\n                });\r\n                setDueEmis(emiData);\r\n            } else {\r\n                setDueEmis([]);\r\n            }\r\n        })\r\n    }\r\n    const paidEMI = async () => {\r\n        setShowDeleteModel(false);\r\n        try {\r\n            setisShowLoader(true);\r\n            let response = await groupLoan.EmiModel.paidEmi(paidID);\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n                let UpdatedList = dueEmis.filter((emidata, idx) => emidata.emi_id != paidID);\r\n                setDueEmis(UpdatedList);\r\n            }\r\n        } catch (error) {\r\n            console.log(error.response.body.message);\r\n            setisShowLoader(false);\r\n        }\r\n    }\r\n    const paidHandle = (id) => {\r\n        setPaidID(id);\r\n        setShowDeleteModel(true);\r\n    }\r\n    const changeEmiDate = (selectedDate) => {\r\n        setEnrollmentDate(selectedDate)\r\n        getDueEmisRecord(moment(selectedDate).format(\"yyyy-MM-DD\"));\r\n    }\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n        pageOptions,\r\n        page,\r\n        pageCount,\r\n        state: { pageIndex, pageSize },\r\n        gotoPage,\r\n        previousPage,\r\n        nextPage,\r\n        setPageSize,\r\n        canPreviousPage,\r\n        canNextPage,\r\n    } = useTable({ columns, data, defaultColumn, initialState: { pageIndex: 0 } }, useFilters, useSortBy, usePagination)\r\n    return (\r\n        <>\r\n            <Modal show={showDeleteModel} onHide={() => setShowDeleteModel(false)}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Paid EMI </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>Are you sure?</Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={() => setShowDeleteModel(false)}>\r\n                        Cancel\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={() => paidEMI()}>\r\n                        Paid\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            <Loader show={isShowLoader} />\r\n            <Container fluid>\r\n                <h2 className=\"text-info text-center\">Due EMIs</h2>\r\n                <Row>\r\n                    <Col>\r\n                        <InputGroup className=\"mb-3\">\r\n                            <FormLabel className=\"mr-3\">EMI Date:</FormLabel>\r\n                            <DatePicker class=\"form-control\"\r\n                                selected={enrollmentDate}\r\n                                onChange={(date) => changeEmiDate(date)}\r\n                                name=\"enrollment_date\"\r\n                                dateFormat=\"dd/MM/yyyy\"\r\n                            />\r\n\r\n                        </InputGroup>\r\n\r\n                        <div>\r\n                            {paginate(pageCount)}\r\n                            <svg style={{cursor:'pointer'}} onClick={handlePrintEmiDetail} xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" className=\"bi bi-printer mb-2\" viewBox=\"0 0 16 16\">\r\n            <path d=\"M2.5 8a.5.5 0 1 0 0-1 .5.5 0 0 0 0 1z\"/>\r\n            <path d=\"M5 1a2 2 0 0 0-2 2v2H2a2 2 0 0 0-2 2v3a2 2 0 0 0 2 2h1v1a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-1h1a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-1V3a2 2 0 0 0-2-2H5zM4 3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v2H4V3zm1 5a2 2 0 0 0-2 2v1H2a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1h-1v-1a2 2 0 0 0-2-2H5zm7 2v3a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1z\"/>\r\n            </svg>\r\n                        </div>\r\n                        <Table  {...getTableProps()} className=\"shadow-lg p-3 mb-5 bg-white rounded small\" striped bordered hover responsive>\r\n                            <thead className=\"bg-primary\">\r\n                                {headerGroups.map(headerGroup => (\r\n                                    <tr {...headerGroup.getHeaderGroupProps()}>\r\n                                        {headerGroup.headers.map(column => (\r\n                                            <th\r\n                                                {...column.getHeaderProps(column.getSortByToggleProps())}\r\n                                            >\r\n                                                {column.render('Header')}\r\n                                                <span>\r\n                                                    {column.isSorted ? (column.isSortedDesc ? ' 🔽' : ' 🔼') : ''}\r\n                                                </span>\r\n                                                <div>{column.allowFilter ? column.render('Filter') : null}</div>\r\n                                            </th>\r\n                                        ))}\r\n                                    </tr>\r\n                                ))}\r\n                            </thead>\r\n                            <tbody{...getTableBodyProps()}>\r\n\r\n                                {page.map(row => {\r\n                                    prepareRow(row)\r\n                                    return (\r\n                                        <tr {...row.getRowProps()}>\r\n                                            {row.cells.map(cell => {\r\n                                                //console.log(cell);\r\n                                                return (\r\n                                                    <td {...cell.getCellProps()}>\r\n                                                        {cell.render('Cell')}\r\n                                                    </td>\r\n                                                    )\r\n\r\n                                            })}\r\n                                        </tr>\r\n                                    )\r\n                                })}\r\n\r\n                            </tbody>\r\n                        </Table>\r\n                        <div style={{display:\"none\"}}> <PrintDueEmis ref={emiDetailsRef} dueEmis={rows}/></div>\r\n                        <div className=\"text-right\">\r\n                            {paginate(pageCount)}\r\n                        </div>\r\n\r\n\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default DueEmis;","import React, { useEffect, useState } from 'react';\r\nimport { Table,Button, Container, Row, Col } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport groupLoan from \"../../models/groupLoan\";\r\nimport Loader from '../layout/Loader';\r\nimport moment from 'moment';\r\nfunction Village(props) {\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\nconst [villageRecords,setVillageRecords]=useState([]);\r\n    useEffect(() => {\r\n            getVillages();\r\n    },[])\r\n\r\n    const getVillages = () =>{\r\n        setisShowLoader(true);\r\n        groupLoan.villageModel.getVillage().then(res=>{\r\n            setisShowLoader(false);\r\n            if(res.statusCode == 200){\r\n                setVillageRecords(res.body.message);\r\n            }else{\r\n                setVillageRecords([]);\r\n            }\r\n        })\r\n    }\r\n    \r\n    return (\r\n        <>\r\n        <Loader show={isShowLoader}/>\r\n        <Container fluid>\r\n        <h2 className=\"text-info text-center\">Village</h2>\r\n            <Row className=\"mb-5 mt-3\">\r\n                <Col>\r\n                <Link to=\"/addVillage\">\r\n                <Button variant=\"info\" active>\r\n                    Add Village\r\n                </Button>\r\n                </Link>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n            <Col>\r\n            <Table className=\" shadow-lg p-3 mb-5 bg-white rounded\" striped bordered hover responsive>\r\n            <thead className=\"bg-primary\">\r\n                <tr>\r\n                    <th>Village ID</th>\r\n                    <th>Village Name</th>\r\n                    <th>Week</th>\r\n                    <th>Day</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {villageRecords.map((vill,id)=>(<tr>\r\n                    <td>{vill.id}</td>\r\n                    <td>{vill.village_name}</td>\r\n                    <td>{vill.week}</td>\r\n                    <td>{vill.day }</td>\r\n                </tr>))}\r\n            </tbody>\r\n        </Table>\r\n</Col>\r\n            </Row>\r\n        </Container>\r\n        </>\r\n        );\r\n}\r\n\r\nexport default Village;","import React, { useState } from 'react';\r\nimport { Button, Form, Container, Row, Col, Toast } from 'react-bootstrap';\r\nimport { useFormik } from 'formik';\r\nimport groupLoan from \"../../models/groupLoan\";\r\nimport Loader from '../layout/Loader';\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction AddVillage(props) {\r\n  const [values, setValues] = useState({});\r\n  const [isShowLoader, setisShowLoader] = useState(false)\r\n  const [showToast, setShowToast] = useState({ isShow: false,type:\"\", message: \"\" })\r\n  const validate = values => {\r\n    const errors = {};\r\n    if (!values.village_name) {\r\n      errors.village_name = 'Village name is Required';\r\n    }\r\n    if (!values.week) {\r\n        errors.week = 'Week is Required';\r\n    }\r\n    if (!values.day) {\r\n    errors.day = 'Day is Required';\r\n    }\r\n    return errors;\r\n  };\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      village_name: '',\r\n      week: '',\r\n      day: '',\r\n    },\r\n    validate,\r\n    onSubmit: async (values) => {\r\n      setisShowLoader(true);\r\n      try {\r\n        let response = await groupLoan.villageModel.saveVillage(values);\r\n        setisShowLoader(false);\r\n        if (response.statusCode == 200) {\r\n          setShowToast({ isShow: true,type:\"bg-success\", message: response.body.message })\r\n          formik.resetForm();\r\n        } else {\r\n          setShowToast({ isShow: true,type:\"bg-danger\", message: response.body.message })\r\n        }\r\n\r\n      } catch (error) {\r\n        setisShowLoader(false);\r\n        setShowToast({ isShow: true,type:\"bg-danger\", message: error.response.body.message })\r\n      }\r\n    },\r\n    handleChange: () => {\r\n      setValues(prevValues => ({\r\n        ...prevValues,\r\n        // we use the name to tell Formik which key of `values` to update\r\n        [values.target.name]: values.target.value\r\n      }))\r\n    },\r\n  });\r\n  return (\r\n    <>\r\n      <Toast key={1} autohide delay={3000} show={showToast.isShow} onClose={() => setShowToast({ isShow: false,type:\"\", message: \"\" })} className={\"loader \"+ (showToast.type) } >\r\n        <Toast.Header>\r\n          <strong className=\"me-auto\">{showToast.type==\"bg-danger\"?\"Error\":\"Success\"} Message</strong>\r\n        </Toast.Header>\r\n        <Toast.Body className=\"Dark\">\r\n        {showToast.message}\r\n        </Toast.Body>\r\n      </Toast>\r\n\r\n      <Loader show={isShowLoader} />\r\n      <h2 className=\"text-info text-center\">Add Village</h2>\r\n      <Row>\r\n        <Col md={6}>\r\n          <Container fluid className=\"bg-white mt-5 shadow-lg p-3 mb-5 bg-white rounded\">\r\n            <Form onSubmit={formik.handleSubmit}>\r\n              <Form.Group className=\"mb-3 form-group required\" controlId=\"formBasicEmail\">\r\n                <Form.Label>Village Name</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"village_name\"\r\n                  placeholder=\"Enter village name\"\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.village_name}\r\n\r\n                />\r\n                {formik.touched.village_name && formik.errors.village_name ? (\r\n                  <div class=\"text-danger\">{formik.errors.village_name}</div>\r\n                ) : null}\r\n\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Col} className=\"mb-3 pl-0 pr-0 required\" controlId=\"formGridAddress1\">\r\n                <Form.Label>Week</Form.Label>\r\n                <select\r\n                    className=\"form-control\"\r\n                    name=\"week\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.week}>\r\n                    <option key=\"\" value=\"\">Select Week</option>\r\n                    <option key=\"1\" value=\"1\">Week 1</option>\r\n                    <option key=\"2\" value=\"2\">Week 2</option>\r\n                </select>\r\n                {formik.touched.week && formik.errors.week ? (\r\n                  <div class=\"text-danger\">{formik.errors.week}</div>\r\n                ) : null}\r\n            </Form.Group>\r\n            <Form.Group as={Col} className=\"mb-3 pl-0 pr-0 required\" controlId=\"formGridAddress1\">\r\n                <Form.Label>Day</Form.Label>\r\n                <select\r\n                    className=\"form-control\"\r\n                    name=\"day\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.day}>\r\n                    <option key=\"\" value=\"\">Select day</option>\r\n                    <option key=\"monday\" value=\"monday\">Monday</option>\r\n                    <option key=\"tuesday\" value=\"tuesday\">Tuesday</option>\r\n                    <option key=\"wednesday\" value=\"wednesday\">Wednesday</option>\r\n                    <option key=\"thrusday\" value=\"thrusday\">Thrusday</option>\r\n                    <option key=\"friday\" value=\"friday\">Friday</option>\r\n                </select>\r\n                {formik.touched.day && formik.errors.day ? (\r\n                  <div class=\"text-danger\">{formik.errors.day}</div>\r\n                ) : null}\r\n\r\n            </Form.Group>\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                Save\r\n              </Button>\r\n\r\n            </Form>\r\n          </Container>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n\r\n  );\r\n}\r\n\r\nexport default AddVillage;","import {superagent, API_ROOT} from \"./BaseUrl\"\r\n\r\n//const url = '/memberGroups/';\r\n\r\nconst ExpenseModel = {\r\n    getExpense(filter){\r\n        return superagent.get(`${API_ROOT}/expense/entry/${filter}`)\r\n    },\r\n    saveExpense(data){\r\n        return superagent.post(`${API_ROOT}/expense/entry`,data)\r\n    },\r\n    deleteExpense(id){\r\n        return superagent.del(`${API_ROOT}/expense/entry/${id}`)\r\n    },\r\n    editExpense(data,id){\r\n        return superagent.put(`${API_ROOT}/expense/entry/${id}`,data)\r\n\r\n    }\r\n    \r\n  }\r\n    export default {ExpenseModel};","import React, { useEffect, useState } from 'react';\r\nimport { Table,Button, Container, Row, Col,Modal } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport expenseRecord from '../../models/expenseRecord';\r\nimport Loader from '../layout/Loader';\r\nimport moment from 'moment';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction Expense(props) {\r\n    let history = useHistory();\r\n    const [showDeleteModel, setShowDeleteModel] = useState(false)\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [expense,setExpense]=useState([]);\r\n    const [deleteID, setDeleteID] = useState(0);\r\n\r\n    useEffect(() => {\r\n        getExpenses();\r\n    },[])\r\n\r\n    const getExpenses = () =>{\r\n        setisShowLoader(true);\r\n        expenseRecord.ExpenseModel.getExpense('all').then(res=>{\r\n            setisShowLoader(false);\r\n            if(res.statusCode == 200){\r\n                setExpense(res.body.message);\r\n            }else{\r\n                setExpense([]);\r\n            }\r\n        })\r\n    }\r\n    const  deleteHandle=(id)=>{\r\n        setDeleteID(id); \r\n        setShowDeleteModel(true);\r\n    }\r\n\r\n    const deleteScheme=async()=>{\r\n        setShowDeleteModel(false);\r\n        try{\r\n            setisShowLoader(true);\r\n            let response = await expenseRecord.ExpenseModel.deleteExpense(deleteID);\r\n            setisShowLoader(false);\r\n            if(response.statusCode == 200){\r\n                let UpdatedList = expense.filter((scheme,idx)=>scheme.id!=deleteID);\r\n                setExpense(UpdatedList);\r\n             }\r\n        }catch (error) {\r\n                console.log(error.response.body.message);\r\n                setisShowLoader(false);\r\n            }\r\n    }    \r\n    return (\r\n        <>\r\n      <Modal show={showDeleteModel} onHide={()=>setShowDeleteModel(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Delete Expense</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>Are you sure?</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={()=>setShowDeleteModel(false)}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={()=>deleteScheme()}>\r\n            Delete\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>        \r\n        \r\n        <Loader show={isShowLoader}/>\r\n        <Container fluid>\r\n        <h2 className=\"text-info text-center\">Expenses</h2>\r\n            <Row className=\"mb-5 mt-3\">\r\n                <Col>\r\n                <Link to=\"/addExpense\">\r\n                <Button variant=\"info\" size=\"lg\" active>\r\n                    Add Expense\r\n                </Button>\r\n                </Link>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n            <Col>\r\n            <Table className=\"shadow-lg p-3 mb-5 bg-white rounded\" striped bordered hover responsive>\r\n            <thead>\r\n                <tr>\r\n                    <th>Id</th>\r\n                    <th>Expense Type</th>\r\n                    <th>Amount</th>\r\n                    <th>Date Expense</th>\r\n                    <th>Created At</th>\r\n                    <th>Action</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {expense.map((data,id)=>(<tr>\r\n                    <td>{data.id}</td>\r\n                    <td>{data.expense_type}</td>\r\n                    <td>{data.amount}</td>\r\n                    <td>{data.date_of_expense?moment(data.date_of_expense).format(\"DD-MM-yyyy\"):\"\"}</td>\r\n                    <td>{moment(data.created_at).format(\"DD-MM-yyyy hh:ss A\") }</td>\r\n                    <td>\r\n                        \r\n                    <Button variant=\"success\" size={\"sm\"} onClick={()=>{history.push(\"/addExpense\",data.id)}} >Edit</Button>\r\n                    {' '}\r\n                    <Button variant=\"danger\" size={\"sm\"} onClick={()=>deleteHandle(data.id)} >Delete</Button>\r\n                    </td>\r\n                </tr>))}\r\n            </tbody>\r\n        </Table>\r\n    </Col>\r\n            </Row>\r\n        </Container>\r\n        </>\r\n        );\r\n}\r\n\r\nexport default Expense;","import React, { useState,useEffect } from 'react';\r\nimport { Button, Form, Container, Row, Col, Toast } from 'react-bootstrap';\r\nimport { useFormik } from 'formik';\r\nimport expenseRecord from '../../models/expenseRecord';\r\nimport Loader from '../layout/Loader';\r\nimport { useSelector } from \"react-redux\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction AddExpense(props) {\r\n    let history = useHistory();\r\n    const auth = useSelector(state => state.auth);\r\n    const [enrollmentDate, setEnrollmentDate] = useState(new Date());\r\n\r\n    const [values, setValues] = useState({});\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [showToast, setShowToast] = useState({ isShow: false, type: \"\", message: \"\" })\r\n    useEffect(() => {\r\n      console.log(props);\r\n      if(props.location.state)\r\n          getExpenseDetails(props.location.state);\r\n  }, [])    \r\n    const getExpenseDetails = async(id)=>{\r\n      try {\r\n        setisShowLoader(true);\r\n        let response = await expenseRecord.ExpenseModel.getExpense(props.location.state);\r\n        formik.values.expense_type = response.body.message[0].expense_type  \r\n        formik.values.amount = response.body.message[0].amount \r\n        setEnrollmentDate(new Date(response.body.message[0].date_of_expense));\r\n\r\n        setisShowLoader(false);\r\n    } catch (error) {\r\n        setisShowLoader(false);\r\n        setShowToast({ isShow: true, type: \"bg-danger\", message: error.response.body.message })\r\n    }\r\n    }\r\n    const validate = values => {\r\n      const errors = {};\r\n      if (!values.expense_type) {\r\n        errors.expense_type = 'Expense type is Required!';\r\n      }\r\n      if (!values.amount) {\r\n        errors.amount = 'Amount is Required!';\r\n      }\r\n      return errors;\r\n    };\r\n    const formik = useFormik({\r\n      initialValues: {\r\n        expense_type: '',\r\n        amount: '',\r\n        date_of_expense: '',\r\n        user_id:auth.id\r\n      },\r\n      validate,\r\n      onSubmit: async (values) => {\r\n        setisShowLoader(true);\r\n          try {\r\n            values.date_of_expense = enrollmentDate;\r\n            let response = [];\r\n            if(props.location.state){\r\n              response = await expenseRecord.ExpenseModel.editExpense(values,props.location.state);\r\n\r\n         }else{\r\n\r\n             response = await expenseRecord.ExpenseModel.saveExpense(values);\r\n         }\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n              formik.resetForm();\r\n              if(props.location.state)\r\n              history.push(\"/expense\")              \r\n              setShowToast({ isShow: true,type:\"bg-success\", message: response.body.message })\r\n            } else {\r\n              setShowToast({ isShow: true,type:\"bg-danger\", message: response.body.message })\r\n            }\r\n  \r\n          } catch (error) {\r\n            setisShowLoader(false);\r\n            setShowToast({ isShow: true,type:\"bg-danger\", message: error.response.body.message })\r\n          }\r\n      },\r\n      handleChange: () => {\r\n        setValues(prevValues => ({\r\n          ...prevValues,\r\n          // we use the name to tell Formik which key of `values` to update\r\n          [values.target.name]: values.target.value\r\n        }))\r\n      },\r\n    });\r\n    return (\r\n      <>\r\n        <Toast key={1} autohide delay={3000} show={showToast.isShow} onClose={() => setShowToast({ isShow: false,type:\"\", message: \"\" })} className={\"loader \"+ (showToast.type) } >\r\n          <Toast.Header>\r\n            <strong className=\"me-auto\">{showToast.type==\"bg-danger\"?\"Error\":\"Success\"} Message</strong>\r\n          </Toast.Header>\r\n          <Toast.Body className=\"Dark\">\r\n          {showToast.message}\r\n          </Toast.Body>\r\n        </Toast>\r\n        <Loader show={isShowLoader} />\r\n        <h2 className=\"text-info text-center\">Add Expense</h2>\r\n        <Row>\r\n        <Col md={6}>\r\n          <Container fluid className=\"bg-white mt-5 shadow-lg p-3 mb-5 bg-white rounded\">\r\n          <Form onSubmit={formik.handleSubmit}>\r\n            {/* <Row className=\"mb-3\" md={6}> */}\r\n              <Form.Group  controlId=\"formGriddob\" className=\"form-group required\">\r\n                <Form.Label>Expense Type:</Form.Label>\r\n                <Form.Control\r\n                  name=\"expense_type\"\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.expense_type}\r\n                />\r\n                  {formik.touched.expense_type && formik.errors.expense_type ? (\r\n                    <div class=\"text-danger\">{formik.errors.expense_type}</div>\r\n                  ) : null}              \r\n              </Form.Group>\r\n              {/* </Row> */}\r\n              {/* <Row className=\"mb-3\" md={6}> */}\r\n\r\n              <Form.Group  controlId=\"formGriddob\" className=\"form-group required\">\r\n                <Form.Label>Amount</Form.Label>\r\n                <Form.Control\r\n                  name=\"amount\"\r\n                  type=\"number\"\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.amount}\r\n                />\r\n                  {formik.touched.amount && formik.errors.amount ? (\r\n                    <div class=\"text-danger\">{formik.errors.amount}</div>\r\n                  ) : null}              \r\n  \r\n              </Form.Group>\r\n  \r\n            {/* </Row> */}\r\n            {/* <Row className=\"mb-3\" md={6}> */}\r\n            <Form.Group  className=\"form-group required\" controlId=\"formGridEnroll\">\r\n                            <Form.Label >Enrollment Date</Form.Label>\r\n                            <DatePicker class=\"form-control\"\r\n                                selected={enrollmentDate}\r\n                                onChange={(date) => setEnrollmentDate(date)}\r\n                                name=\"enrollment_date\"\r\n                            />\r\n                        </Form.Group>\r\n\r\n            {/* </Row> */}\r\n            <Button variant=\"primary\" type=\"submit\">\r\n              Save\r\n            </Button>\r\n  \r\n          </Form>\r\n        </Container>\r\n        </Col>\r\n        </Row>\r\n      </>\r\n    );\r\n}\r\n\r\nexport default AddExpense;","import {superagent, API_ROOT} from \"./BaseUrl\"\r\n\r\n//const url = '/memberGroups/';\r\n\r\nconst ProcessingFeeModel = {\r\n    getProcessingFee(filter){\r\n        return superagent.get(`${API_ROOT}/processingFee/entry/${filter}`)\r\n    },\r\n    saveProcessingFee(data){\r\n        return superagent.post(`${API_ROOT}/processingFee/entry`,data)\r\n    },\r\n    deleteProcessingFee(id){\r\n        return superagent.del(`${API_ROOT}/processingFee/entry/${id}`)\r\n    },\r\n    editProcessingFee(data,id){\r\n        return superagent.put(`${API_ROOT}/processingFee/entry/${id}`,data)\r\n\r\n    }\r\n    \r\n  }\r\n    export default {ProcessingFeeModel};","import React, { useEffect, useState } from 'react';\r\nimport { Table,Button, Container, Row, Col,Modal } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport processingFee from '../../models/processingFee';\r\nimport Loader from '../layout/Loader';\r\nimport moment from 'moment';\r\nimport { useHistory } from 'react-router-dom';\r\nfunction ProcessingFee(props) {\r\n    let history = useHistory();\r\n    const [showDeleteModel, setShowDeleteModel] = useState(false)\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [processingFees,setProcessingFees]=useState([]);\r\n    const [deleteID, setDeleteID] = useState(0);\r\n\r\n    useEffect(() => {\r\n        getProcessingFees();\r\n    },[])\r\n\r\n    const getProcessingFees = () =>{\r\n        setisShowLoader(true);\r\n        processingFee.ProcessingFeeModel.getProcessingFee('all').then(res=>{\r\n            setisShowLoader(false);\r\n            if(res.statusCode == 200){\r\n                setProcessingFees(res.body.message);\r\n            }else{\r\n                setProcessingFees([]);\r\n            }\r\n        })\r\n    }\r\n    const  deleteHandle=(id)=>{\r\n        setDeleteID(id); \r\n        setShowDeleteModel(true);\r\n    }\r\n\r\n    const deleteProcessingFee=async()=>{\r\n        setShowDeleteModel(false);\r\n        try{\r\n            setisShowLoader(true);\r\n            let response = await processingFee.ProcessingFeeModel.deleteProcessingFee(deleteID);\r\n            setisShowLoader(false);\r\n            if(response.statusCode == 200){\r\n                let UpdatedList = processingFees.filter((scheme,idx)=>scheme.id!=deleteID);\r\n                setProcessingFees(UpdatedList);\r\n             }\r\n        }catch (error) {\r\n                console.log(error.response.body.message);\r\n                setisShowLoader(false);\r\n            }\r\n    }    \r\n    return (\r\n        <>\r\n      <Modal show={showDeleteModel} onHide={()=>setShowDeleteModel(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Delete Processing Fee</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>Are you sure?</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={()=>setShowDeleteModel(false)}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={()=>deleteProcessingFee()}>\r\n            Delete\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>        \r\n        \r\n        <Loader show={isShowLoader}/>\r\n        <Container fluid>\r\n        <h2 className=\"text-info text-center\">Processing Fee</h2>\r\n            <Row className=\"mb-5 mt-3\">\r\n                <Col>\r\n                <Link to=\"/addProcessingFee\">\r\n                <Button variant=\"info\" size=\"lg\" active>\r\n                    Add Processing Fee\r\n                </Button>\r\n                </Link>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n            <Col>\r\n            <Table className=\"shadow-lg p-3 mb-5 bg-white rounded\" striped bordered hover responsive>\r\n            <thead>\r\n                <tr>\r\n                    <th>Id</th>\r\n                    <th>Particular</th>\r\n                    <th>Amount</th>\r\n                    <th>Date Processing Fee</th>\r\n                    <th>Created At</th>\r\n                    <th>Action</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {processingFees.map((data,id)=>(<tr>\r\n                    <td>{data.id}</td>\r\n                    <td>{data.particular}</td>\r\n                    <td>{data.amount}</td>\r\n                    <td>{data.date_of_processing?moment(data.date_of_processing).format(\"DD-MM-yyyy\"):\"\"}</td>\r\n                    <td>{moment(data.created_at).format(\"DD-MM-yyyy hh:ss A\") }</td>\r\n                    <td>\r\n                        \r\n                    <Button variant=\"success\" size={\"sm\"} onClick={()=>{history.push(\"/addProcessingFee\",data.id)}} >Edit</Button>\r\n                    {' '}\r\n                    <Button variant=\"danger\" size={\"sm\"} onClick={()=>deleteHandle(data.id)} >Delete</Button>\r\n                    </td>\r\n                </tr>))}\r\n            </tbody>\r\n        </Table>\r\n    </Col>\r\n            </Row>\r\n        </Container>\r\n        </>\r\n        );\r\n}\r\n\r\nexport default ProcessingFee;","import React, { useState,useEffect } from 'react';\r\nimport { Button, Form, Container, Row, Col, Toast } from 'react-bootstrap';\r\nimport { useFormik } from 'formik';\r\nimport processingFee from  '../../models/processingFee';\r\nimport Loader from '../layout/Loader';\r\nimport { useSelector } from \"react-redux\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction AddProcessingFee(props) {\r\n    let history = useHistory();\r\n    const auth = useSelector(state => state.auth);\r\n    const [enrollmentDate, setEnrollmentDate] = useState(new Date());\r\n\r\n    const [values, setValues] = useState({});\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [showToast, setShowToast] = useState({ isShow: false, type: \"\", message: \"\" })\r\n    useEffect(() => {\r\n      console.log(props);\r\n      if(props.location.state)\r\n          getExpenseDetails(props.location.state);\r\n  }, [])    \r\n    const getExpenseDetails = async(id)=>{\r\n      try {\r\n        setisShowLoader(true);\r\n        let response = await processingFee.ProcessingFeeModel.getProcessingFee(props.location.state);\r\n        formik.values.particular = response.body.message[0].particular  \r\n        formik.values.amount = response.body.message[0].amount \r\n        setEnrollmentDate(new Date(response.body.message[0].date_of_processing));\r\n\r\n        setisShowLoader(false);\r\n    } catch (error) {\r\n        setisShowLoader(false);\r\n        setShowToast({ isShow: true, type: \"bg-danger\", message: error.response.body.message })\r\n    }\r\n    }\r\n    const validate = values => {\r\n      const errors = {};\r\n      if (!values.particular) {\r\n        errors.particular = 'Particular type is Required!';\r\n      }\r\n      if (!values.amount) {\r\n        errors.amount = 'Amount is Required!';\r\n      }\r\n      return errors;\r\n    };\r\n    const formik = useFormik({\r\n      initialValues: {\r\n        particular: '',\r\n        amount: '',\r\n        date_of_processing: '',\r\n        user_id:auth.id\r\n      },\r\n      validate,\r\n      onSubmit: async (values) => {\r\n        setisShowLoader(true);\r\n          try {\r\n            values.date_of_processing = enrollmentDate;\r\n            let response = [];\r\n            if(props.location.state){\r\n              response = await processingFee.ProcessingFeeModel.editProcessingFee(values,props.location.state);\r\n\r\n         }else{\r\n\r\n             response = await processingFee.ProcessingFeeModel.saveProcessingFee(values);\r\n         }\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n              formik.resetForm();\r\n              if(props.location.state)\r\n              history.push(\"/processingFee\")              \r\n              setShowToast({ isShow: true,type:\"bg-success\", message: response.body.message })\r\n            } else {\r\n              setShowToast({ isShow: true,type:\"bg-danger\", message: response.body.message })\r\n            }\r\n  \r\n          } catch (error) {\r\n            setisShowLoader(false);\r\n            setShowToast({ isShow: true,type:\"bg-danger\", message: error.response.body.message })\r\n          }\r\n      },\r\n      handleChange: () => {\r\n        setValues(prevValues => ({\r\n          ...prevValues,\r\n          // we use the name to tell Formik which key of `values` to update\r\n          [values.target.name]: values.target.value\r\n        }))\r\n      },\r\n    });\r\n    return (\r\n      <>\r\n        <Toast key={1} autohide delay={3000} show={showToast.isShow} onClose={() => setShowToast({ isShow: false,type:\"\", message: \"\" })} className={\"loader \"+ (showToast.type) } >\r\n          <Toast.Header>\r\n            <strong className=\"me-auto\">{showToast.type==\"bg-danger\"?\"Error\":\"Success\"} Message</strong>\r\n          </Toast.Header>\r\n          <Toast.Body className=\"Dark\">\r\n          {showToast.message}\r\n          </Toast.Body>\r\n        </Toast>\r\n        <Loader show={isShowLoader} />\r\n        <h2 className=\"text-info text-center\">{props.location.state?\"Edit\":\"Add\"} Processing Fee</h2>\r\n        <Row>\r\n        <Col md={6}>\r\n          <Container fluid className=\"bg-white mt-5 shadow-lg p-3 mb-5 bg-white rounded\">\r\n          <Form onSubmit={formik.handleSubmit}>\r\n            {/* <Row className=\"mb-3\" md={6}> */}\r\n              <Form.Group  controlId=\"formGriddob\" className=\"form-group required\">\r\n                <Form.Label>Particular:</Form.Label>\r\n                <Form.Control\r\n                  name=\"particular\"\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.particular}\r\n                />\r\n                  {formik.touched.particular && formik.errors.particular ? (\r\n                    <div class=\"text-danger\">{formik.errors.particular}</div>\r\n                  ) : null}              \r\n              </Form.Group>\r\n              {/* </Row> */}\r\n              {/* <Row className=\"mb-3\" md={6}> */}\r\n\r\n              <Form.Group  controlId=\"formGriddob\" className=\"form-group required\">\r\n                <Form.Label>Amount</Form.Label>\r\n                <Form.Control\r\n                  name=\"amount\"\r\n                  type=\"number\"\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.amount}\r\n                />\r\n                  {formik.touched.amount && formik.errors.amount ? (\r\n                    <div class=\"text-danger\">{formik.errors.amount}</div>\r\n                  ) : null}              \r\n  \r\n              </Form.Group>\r\n  \r\n            {/* </Row> */}\r\n            {/* <Row className=\"mb-3\" md={6}> */}\r\n            <Form.Group  className=\"form-group required\" controlId=\"formGridEnroll\">\r\n                            <Form.Label >Date of Processing</Form.Label>\r\n                            <DatePicker class=\"form-control\"\r\n                                selected={enrollmentDate}\r\n                                onChange={(date) => setEnrollmentDate(date)}\r\n                                name=\"date_of_processing\"\r\n                            />\r\n                        </Form.Group>\r\n\r\n            {/* </Row> */}\r\n            <Button variant=\"primary\" type=\"submit\">\r\n              Save\r\n            </Button>\r\n  \r\n          </Form>\r\n        </Container>\r\n        </Col>\r\n        </Row>\r\n      </>\r\n    );\r\n}\r\n\r\nexport default AddProcessingFee;","import React,{useState,useEffect,useRef} from 'react';\r\nimport dashboard from '../../models/dashboard'\r\nimport { Table, Button, Row, Col, Card, Spinner} from 'react-bootstrap';\r\nimport moment from 'moment';\r\nfunction Ladger(props) {\r\n    const [isShowLoaderLoader, setisShowLoaderLoader] = useState(false)\r\n    const [ladger,setLadger] = useState([]);\r\n    const refContainer = useRef(\"\");\r\n    useEffect(()=>{\r\n        if(props.location.state == \"totalReceived\"){\r\n            refContainer.current = \"Received Details\";\r\n            getReceivedAmount();\r\n        }else if(props.location.state == \"totalPaid\"){\r\n            refContainer.current = \"Paid Details\";\r\n            getPaidAmount();\r\n        }\r\n    },[])\r\n    const getReceivedAmount=async()=>{\r\n        try {\r\n            setisShowLoaderLoader(true);\r\n            let response = await dashboard.DashboardModel.getReceivedAmount();\r\n            setisShowLoaderLoader(false);\r\n            if (response.statusCode == 200) {\r\n               let emiLadger = []\r\n               let processingFeeLadger = []\r\n               let data = []\r\n               emiLadger = response.body.message?.emis.map((val,idx)=>{\r\n                   return {\r\n                            \"date\":moment(val.EMI_date).format(\"DD-MM-yyyy\"),\r\n                            \"particular\":`EMI received Loan Account - ${val.loan_account_no}`,\r\n                            \"amount\":val.EMI_amount,\r\n                    }\r\n               });\r\n               processingFeeLadger = response.body.message?.processingFee.map((val,idx)=>{\r\n                   return {\r\n                            \"date\":moment(val.created_at).format(\"DD-MM-yyyy\"),\r\n                            \"particular\":val.particular,\r\n                            \"amount\":val.amount,\r\n                            }\r\n               });\r\n               data = [...emiLadger,...processingFeeLadger];\r\n               data.sort( compare );\r\n               setLadger(data);\r\n            } else {\r\n                setLadger([]);\r\n            }\r\n        } catch (error) {\r\n            setisShowLoaderLoader(false);\r\n          }\r\n    }\r\n    const getPaidAmount=async()=>{\r\n        try {\r\n            setisShowLoaderLoader(true);\r\n            let response = await dashboard.DashboardModel.getPaidAmount();\r\n            setisShowLoaderLoader(false);\r\n            if (response.statusCode == 200) {\r\n               let expensesLadger = []\r\n               let loanLadger = []\r\n               let data = []\r\n               expensesLadger = response.body.message?.expenses.map((val,idx)=>{\r\n                   return {\r\n                            \"date\":moment(val.date_of_expense).format(\"DD-MM-yyyy\"),\r\n                            \"particular\":val.expense_type,\r\n                            \"amount\":val.amount,\r\n                    }\r\n               });\r\n               loanLadger = response.body.message?.loan.map((val,idx)=>{\r\n                   return {\r\n                            \"date\":moment(val.application_date).format(\"DD-MM-yyyy\"),\r\n                            \"particular\":`Loan disbursed to ${val.member_name} - Loan account ${val.loan_account_no}`,\r\n                            \"amount\":val.loan_amount,\r\n                    }\r\n               });\r\n               data = [...expensesLadger,...loanLadger];\r\n               data.sort( compare );\r\n               setLadger(data);\r\n            } else {\r\n                setLadger([]);\r\n            }\r\n        } catch (error) {\r\n            setisShowLoaderLoader(false);\r\n        }\r\n    }\r\n    const compare=( a, b )=>{\r\n        if ( a.date < b.date ){\r\n          return -1;\r\n        }\r\n        if ( a.date > b.date ){\r\n          return 1;\r\n        }\r\n        return 0;\r\n    }\r\n    const formatAmount = (amount) =>{\r\n        return amount?amount.toString().replace(/.(?=(..)*...$)/g, '$&,'):\"\";\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row >\r\n                <Col>\r\n                <Card border=\"success\" header\r\n                        key={0}\r\n                        text={'dark'}\r\n                        className=\"m-2\">\r\n                    <Card.Header className=\"bg-success text-center\"><b>{refContainer.current} </b></Card.Header>\r\n                    {isShowLoaderLoader?<Card.Body className=\"text-center\"><Spinner animation=\"border\"   variant=\"dark\"/></Card.Body> :\r\n                        <Card.Body>\r\n                        <Table size={\"sm\"} className=\"bg-white rounded small\" bordered responsive>\r\n                        <thead>\r\n                        <tr className=\"bg-success\">\r\n                            <th>SR No.</th>\r\n                            <th>Date</th>\r\n                            <th>Particular</th>\r\n                            <th>Amount</th>\r\n                        </tr>\r\n                        </thead>\r\n                            <tbody>\r\n                                {ladger.map((val,idx)=><tr>\r\n                                    <td>\r\n                                        {idx+1}\r\n                                    </td>\r\n                                    <td>\r\n                                        {val.date}\r\n                                    </td>\r\n                                    <td>\r\n                                        {val.particular}\r\n                                    </td>\r\n                                    <td >\r\n                                        {formatAmount(val.amount)}\r\n                                    </td>\r\n\r\n                                </tr>)}\r\n                            </tbody>\r\n                            <tfoot>\r\n                                <tr>\r\n                                    <th>Total</th>\r\n                                    <th colSpan=\"3\" className=\"text-right\">{ladger.reduce(function (previous, current) {\r\n                                            return previous + parseFloat(current.amount);\r\n                                        }, 0)}</th>\r\n                                </tr>\r\n                            </tfoot>\r\n                </Table>\r\n                        </Card.Body> }  \r\n                </Card>\r\n                </Col>\r\n            </Row>\r\n            \r\n        </>\r\n    );\r\n}\r\n\r\nexport default Ladger;","import {requests, superagent, API_ROOT} from \"./BaseUrl\"\r\n\r\n//const url = '/memberGroups/';\r\n\r\nconst RDApplicationsModel = {\r\n  getAllRdApplications(agent_id){\r\n    return superagent.get(`${API_ROOT}/rdApplication/entry/${agent_id}`);\r\n  },\r\n  openRdAccount(data){\r\n    return superagent.post(`${API_ROOT}/rdApplication/entry`,data)\r\n  },\r\n  getRdDetails(id){\r\n    return superagent.get(`${API_ROOT}/rdApplication/entryById/${id}`);\r\n  },\r\n  getDeposits(agent_id,deposites_date){\r\n    return superagent.get(`${API_ROOT}/accountDeposited/entryByDate/${agent_id}/${deposites_date}`);\r\n  },\r\n  postDeposit(data){\r\n    return superagent.post(`${API_ROOT}/accountDeposited/entry/`,data);\r\n\r\n  },\r\n  getDepositsGroupBy(agent_id,deposites_date){\r\n    return superagent.get(`${API_ROOT}/accountDeposited/entryGroupBy/${agent_id}/${deposites_date}`);\r\n  },\r\n  getDepositsByAgent(agent_id,deposites_date){\r\n    return superagent.get(`${API_ROOT}/accountDeposited/entryByDate/${agent_id}/${deposites_date}`);\r\n  },\r\n\r\n  calculateCloseAmount(account_number){\r\n    return superagent.get(`${API_ROOT}/rdApplication/calculateCloseAmount/${account_number}`)\r\n  },\r\n  closeAmount(account_number){\r\n    return superagent.post(`${API_ROOT}/rdApplication/closeAccount/`,account_number)\r\n  },\r\n  getDepositDetailsByAcccount(account_number){\r\n    return superagent.get(`${API_ROOT}/accountDeposited/entryByAccount/${account_number}`)\r\n  },\r\n  getPaidDetails(agent_id){\r\n    return superagent.get(`${API_ROOT}/rdApplication/entryPaid/${agent_id}`)\r\n  },\r\n  deleteDeposit(id){\r\n    return superagent.del(`${API_ROOT}/accountDeposited/entry/${id}`)\r\n  },\r\n  updateDepositAmount(payload){\r\n    return superagent.put(`${API_ROOT}/accountDeposited/updateDeposit/`,payload)\r\n  }\r\n//   deleteGroup(group_code){\r\n//     return superagent.del(`${API_ROOT}/memberGroups/entry/${group_code}`)\r\n//   }\r\n\r\n  }\r\n    export default {RDApplicationsModel};","import moment from 'moment';\r\nimport React from 'react';\r\nimport { Table } from 'react-bootstrap';\r\n\r\nclass PrintRdApplication extends React.PureComponent {\r\n    render() {\r\n        return (\r\n            <div>\r\n            <h3 className=\"text-center mb-5 mt-3\">AAs2 MutualHelp Micro Finance</h3>\r\n            <Table className=\" shadow-lg p-3 mb-5 bg-white rounded small\" striped bordered hover responsive>\r\n                <thead className=\"bg-primary\">\r\n                    <tr>\r\n                        <th>Agent Name</th>\r\n                        <th>Account No.</th>\r\n                        <th>Account Holder</th>\r\n                        <th>Address</th>\r\n                        <th>Phone</th>\r\n                        <th>Account Balance</th>\r\n                        <th>Account Status</th>\r\n                        <th>Account Opening Date</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {this.props.dueEmis.map((emi, id) => (<tr>\r\n                        <td>{emi.values.col3}</td>\r\n                        <td>{emi.values.col1}</td>\r\n                        <td>{emi.values.col2}</td>\r\n                        <td>{emi.values.col4}</td>\r\n                        <td>{emi.values.col5}</td>\r\n                        <td>{emi.values.col6}</td>\r\n                        <td>{emi.values.col7}</td>\r\n                        <td>{emi.values.col8}</td>\r\n                    </tr>))}\r\n                </tbody>\r\n                <tfoot>\r\n                {/* <tr>\r\n                <th>Total Collection</th><th colSpan=\"9\">{this.props.dueEmis.reduce(this.add,0)}</th>\r\n                    \r\n                </tr> */}\r\n                </tfoot>\r\n            </Table> \r\n            \r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PrintRdApplication;","import React, { useEffect, useState, useMemo, useRef } from 'react';\r\nimport { Table,Button, Container, Row, Col,Modal,Pagination, Badge } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport RDApplications from '../../models/RDApplications';\r\nimport User from '../../models/user';\r\nimport Loader from '../layout/Loader';\r\nimport moment from 'moment';\r\nimport {useTable,useSortBy,usePagination,useFilters } from 'react-table'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useSelector,useDispatch } from \"react-redux\";\r\nimport PrintRdApplication from './PrintRdApplication';\r\nimport { useReactToPrint } from 'react-to-print';\r\n\r\nfunction RdApplications(props) {\r\n  const emiDetailsRef = useRef();\r\n  const handlePrintEmiDetail = useReactToPrint({\r\n    content: () => emiDetailsRef.current,\r\n    documentTitle:\"AA2-Accounts\",\r\n  });\r\n\r\n    const auth = useSelector(state => state.auth);\r\n    let history = useHistory();\r\n    const [isShowLoader, setisShowLoader] = useState(false);\r\n    const [userList, setUserList] = useState([]);\r\n    const [showDeleteModel, setShowDeleteModel] = useState(false)\r\n    const [selectedAccountID, setselectedAccountID] = useState({\"account_number\":\"\",\"totalAmount\":\"\"})\r\n    const [rdAccounts,setRdAccounts]=useState([]);\r\n    useEffect(() => {\r\n            getMemberGroup();\r\n    },[])\r\n    \r\n    const data = useMemo(\r\n        () => \r\n        rdAccounts.map((record,index)=>\r\n                { \r\n             return {\r\n                col3:record.agent_name,\r\n                col1:record.account_number,\r\n                col2:record.account_holder_name,\r\n                col4:record.address,\r\n                col5:record.phone,\r\n                col6:record.totalDeposited,\r\n                col7:record.is_account_closed==1?\"Closed\":record.is_account_closed==2?\"Close Requested\":\"Active\",\r\n                col8:moment(record.created_at).format(\"DD-MM-YYYY HH:SS\").toString(),\r\n                col9:record,\r\n                }\r\n            }\r\n        )\r\n        ,\r\n        [rdAccounts]\r\n      )   \r\n\r\n    const columns = useMemo(\r\n        () => [\r\n          {\r\n            Header: 'Agent name',\r\n            accessor: 'col3', // accessor is the \"key\" in the data\r\n            allowFilter:true,\r\n           \r\n          },\r\n          {\r\n            Header: 'Account number',\r\n            accessor: 'col1', // accessor is the \"key\" in the data\r\n            allowFilter:true,\r\n        },\r\n          {\r\n            Header: 'Account holder',\r\n            accessor: 'col2',\r\n            allowFilter:true\r\n          },\r\n          {\r\n            Header: 'Address',\r\n            accessor: 'col4',\r\n            allowFilter:true\r\n          },\r\n          {\r\n            Header: 'Phone',\r\n            accessor: 'col5',\r\n            allowFilter:true\r\n          },\r\n          {\r\n            Header: 'Account Balance',\r\n            accessor: 'col6',\r\n            allowFilter:true\r\n          },\r\n          {\r\n            Header: 'Account Status',\r\n            accessor: 'col7',\r\n            allowFilter:true,\r\n            Cell:emi =><Badge className={emi.value==\"Closed\"?\"bg-danger\":emi.value==\"Close Requested\"?\"bg-warning\":\"bg-success\"}>{emi.value}</Badge>\r\n          },\r\n          {\r\n            Header: 'Account Opening Date',\r\n            accessor: 'col8',\r\n            allowFilter:true,\r\n            // Cell:emi =>moment(emi.value).format(\"DD-MM-YYYY HH:SS\")\r\n\r\n          },\r\n          {\r\n            Header: 'Action',\r\n            accessor: 'col9',\r\n            allowFilter: false,\r\n            Cell: emi => {\r\n                return (<><Button size={\"sm\"} variant=\"info\" onClick={() => { history.push(\"/rdDetails\", emi.value.id) }} type=\"button\" className=\"m-2\">\r\n                    View\r\n                </Button>\r\n                <Button size={\"sm\"} variant=\"danger\" disabled={emi.value.is_account_closed==1?true:false} onClick={() =>handleCloseAccount(emi.value.account_number)} type=\"button\" >\r\n                    Close Account\r\n                </Button>\r\n                </>\r\n                )\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n        ],\r\n        []\r\n      )    \r\n    const getMemberGroup = () =>{\r\n        setisShowLoader(true);\r\n        let formatedAccounts = [];\r\n        let payload = auth.id;\r\n        if(auth.role == \"admin\" || auth.role == \"maker\"|| auth.role == \"checker\"){\r\n          payload = \"all\";\r\n        }\r\n        RDApplications.RDApplicationsModel.getAllRdApplications(payload).then(async(res)=>{\r\n            setisShowLoader(false);\r\n            if(res.statusCode == 200){\r\n              let list = await User.Auth.getUsers();\r\n              //setUserList(list);\r\n              formatedAccounts = res.body.message.map(ac=>{\r\n                let obj = list.body.message.filter(user=>user.id == ac.agent_id)\r\n                ac[\"agent_name\"] = obj[0][\"name\"];\r\n                return ac;\r\n              });\r\n              setRdAccounts(formatedAccounts);\r\n            }else{\r\n                setRdAccounts([]);\r\n            }\r\n        })\r\n    }\r\n    // const deleteHandle=(id)=>{\r\n    //     setDeleteID(id);        \r\n    //     setShowDeleteModel(true);\r\n    // }\r\n    const handleCloseAccount=async(account_number)=>{\r\n        //setShowDeleteModel(false);\r\n        try{\r\n            setisShowLoader(true);\r\n            let response = await RDApplications.RDApplicationsModel.calculateCloseAmount(account_number);\r\n            setisShowLoader(false);\r\n            if(response.statusCode == 200){\r\n              setselectedAccountID({\r\n                \"account_number\":account_number,\r\n                \"totalAmount\":response.body.message\r\n              })\r\n              setShowDeleteModel(true);\r\n               // let UpdatedList = memberRecords.filter((member,idx)=>member.member_id!=deleteID);\r\n                //setMemberRecords(UpdatedList);\r\n             }\r\n        }catch (error) {\r\n                console.log(error.response.body.message);\r\n                setisShowLoader(false);\r\n            }\r\n              \r\n    }\r\n  \r\n    function DefaultColumnFilter({\r\n        column: { filterValue, preFilteredRows, setFilter },\r\n    }) {\r\n        const count = preFilteredRows.length\r\n    \r\n        return (\r\n            <input\r\n                className=\"form-control\"\r\n                value={filterValue || ''}\r\n                onChange={e => {\r\n                    setFilter(e.target.value || undefined)\r\n                }}\r\n                placeholder={`Search ${count} records...`}\r\n            />\r\n        )\r\n    }    \r\n    const defaultColumn = React.useMemo(\r\n        () => ({\r\n            // Default Filter UI\r\n            Filter: DefaultColumnFilter,\r\n        }),\r\n        []\r\n    ) \r\n    const paginate = (totalPage)=>{\r\n      let pageNumberArray = [];\r\n      for(let i=1;i<=totalPage;i++){\r\n        pageNumberArray.push(i);\r\n      }\r\n      return(      \r\n      <Pagination>\r\n        <Pagination.First  onClick={() => gotoPage(0)}/>\r\n        <Pagination.Prev onClick={() => previousPage()} disabled={!canPreviousPage}/>\r\n        {pageNumberArray.map(num=><Pagination.Item key={num} active={num === (pageIndex+1)} onClick={() => gotoPage(num-1)}>{num}</Pagination.Item>)}\r\n        <Pagination.Next onClick={() => nextPage()} disabled={!canNextPage}/>\r\n        <Pagination.Last onClick={() => gotoPage(totalPage-1)}/>\r\n        </Pagination>\r\n      );\r\n    \r\n    }\r\n    const closeRdAccount=async()=>{\r\n      try{\r\n        setisShowLoader(true);\r\n        let response = await RDApplications.RDApplicationsModel.closeAmount({\"account_number\":selectedAccountID.account_number,\"agent_id\":auth.id});\r\n        setisShowLoader(false);\r\n        if(response.statusCode == 200){\r\n          setShowDeleteModel(false);\r\n          getMemberGroup();\r\n         }\r\n    }catch (error) {\r\n            console.log(error.response.body.message);\r\n            setisShowLoader(false);\r\n        }\r\n\r\n    }\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n        pageOptions,\r\n        page,\r\n        pageCount,\r\n        state: { pageIndex, pageSize },\r\n        gotoPage,\r\n        previousPage,\r\n        nextPage,\r\n        setPageSize,\r\n        canPreviousPage,\r\n        canNextPage,  \r\n      } = useTable({ columns, data, defaultColumn, initialState: { pageIndex: 0 }},useFilters,useSortBy,usePagination)\r\n    return (\r\n        <>\r\n      <Modal show={showDeleteModel} onHide={()=>setShowDeleteModel(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Close Account - {selectedAccountID[\"account_number\"]}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>Total Maturity Amount is Rs {parseFloat(selectedAccountID[\"totalAmount\"]).toFixed(2)}. Are you sure. You want to close? </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={()=>setShowDeleteModel(false)}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={()=>closeRdAccount()}>\r\n            Close Account\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>        \r\n        <Loader show={isShowLoader}/>\r\n        <Container fluid>\r\n        <h2 className=\"text-info text-center\">RD applications</h2>\r\n            <Row className=\"mb-5 mt-3\">\r\n                <Col>\r\n                <Link to=\"/openNewRdAccount\">\r\n                <Button variant=\"info\"  active>\r\n                    Open new RD\r\n                </Button>\r\n                </Link>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n            <Col>\r\n            <div className=\"text-right\">\r\n              {paginate(pageCount)}\r\n              <svg style={{cursor:'pointer'}} onClick={handlePrintEmiDetail} xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" className=\"bi bi-printer mb-2\" viewBox=\"0 0 16 16\">\r\n            <path d=\"M2.5 8a.5.5 0 1 0 0-1 .5.5 0 0 0 0 1z\"/>\r\n            <path d=\"M5 1a2 2 0 0 0-2 2v2H2a2 2 0 0 0-2 2v3a2 2 0 0 0 2 2h1v1a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-1h1a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-1V3a2 2 0 0 0-2-2H5zM4 3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v2H4V3zm1 5a2 2 0 0 0-2 2v1H2a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1h-1v-1a2 2 0 0 0-2-2H5zm7 2v3a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1z\"/>\r\n            </svg>\r\n\r\n            </div>   \r\n\r\n            <Table {...getTableProps()} className=\"shadow-lg p-3 mb-5 bg-white rounded small\" striped bordered hover responsive>\r\n            <thead className=\"bg-primary\">\r\n                    {headerGroups.map(headerGroup => (\r\n                    <tr {...headerGroup.getHeaderGroupProps()}>\r\n                        {headerGroup.headers.map(column => (\r\n                        <th\r\n                            {...column.getHeaderProps(column.getSortByToggleProps())}\r\n                        >\r\n                            {column.render('Header')}\r\n                            <span>\r\n                            {column.isSorted ? (column.isSortedDesc ? ' 🔽' : ' 🔼') : ''}\r\n                            </span>\r\n                            <div>{column.allowFilter? column.render('Filter') : null}</div>\r\n                        </th>\r\n                        ))}\r\n                    </tr>\r\n                    ))}\r\n            </thead>\r\n            <tbody {...getTableBodyProps()}>\r\n\r\n                    {page.map(row => {\r\n                        prepareRow(row)\r\n                        return (\r\n                            <tr {...row.getRowProps()}>\r\n                            {row.cells.map(cell => {\r\n                                console.log(cell);\r\n                                // if(cell.column.id !=\"col5\"){                                \r\n                                    return (\r\n                                        <td {...cell.getCellProps()}>\r\n                                            {cell.render('Cell')}\r\n                                        </td>\r\n                                        )\r\n                                    // }else{\r\n                                    //     return (\r\n                                    //         <td>\r\n                                    //             {/* <Link to = \"/viewMemberDetail/:5\" params={{ member_id: cell.value.member_id }}> */}\r\n                                    //             <Button size={\"sm\"} variant=\"primary\"  onClick={()=>{history.push(\"/viewMemberDetail\",cell.value.member_id)}}>View</Button>\r\n                                    //             {' '}\r\n                                    //             <Button size={\"sm\"} variant=\"success\" onClick={()=>{history.push(\"/addMember\",cell.value.member_id)}} >Edit</Button>\r\n                                    //             {' '}\r\n                                    //             {/* <Button size={\"sm\"} variant=\"danger\" onClick={()=>deleteHandle(cell.value.member_id)} >Delete</Button> */}\r\n                                    //         </td>\r\n                                    //     )\r\n                                    // }\r\n                            })}\r\n                            </tr>\r\n                        )\r\n                        })}\r\n\r\n            </tbody>\r\n        </Table>\r\n        <div style={{display:\"none\"}}> <PrintRdApplication ref={emiDetailsRef} dueEmis={rows}/></div>\r\n\r\n        <div className=\"text-right\">\r\n          {paginate(pageCount)}\r\n        </div>   \r\n        </Col>\r\n        </Row>\r\n        </Container>\r\n        </>\r\n        );\r\n}\r\n\r\nexport default RdApplications;","import moment from 'moment';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Table, Button, Container, Row, Col, Card, ListGroup,Modal,Toast } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport RDApplications from '../../models/RDApplications';\r\n\r\nimport Loader from '../layout/Loader';\r\nimport { useSelector } from \"react-redux\";\r\nimport { useReactToPrint } from 'react-to-print';\r\nimport { useRef } from 'react';\r\n// import EmiCard from './EmiCard';\r\n// import EmiCardPrint from './EmiCardPrint';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction RdDetails(props) {\r\n    let history = useHistory();\r\n    const memberDetailsRef = useRef();\r\n    const handlePrintMemberDetail = useReactToPrint({\r\n        content: () => memberDetailsRef.current,\r\n        documentTitle:\"AA2-Member\",\r\n      });\r\n\r\n      const applicationRef = useRef();\r\n      const handlePrintApplication = useReactToPrint({\r\n          content: () => applicationRef.current,\r\n          documentTitle:\"AA2-application\",\r\n        });\r\n\r\n        const emiRef = useRef();\r\n        const handlePrintEMI = useReactToPrint({\r\n            content: () => emiRef.current,\r\n            documentTitle:\"AA2-EMI-details\",\r\n          });\r\n      \r\n    const auth = useSelector(state => state.auth);\r\n    const [paidEmiRecord, setPaidEmiRecord] = useState([])\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [isShowEMILoader, setisShowEMILoader] = useState(false)\r\n    const [emiData, setEmiData] = useState([])\r\n    const [loanDetails, setLoanDetails] = useState({});\r\n    const [depositDetails, setDepositDetails] = useState([]);\r\n    useEffect(() => {\r\n        console.log(props);\r\n        getLoanDetails();\r\n    }, [])\r\n\r\n    const getLoanDetails = async () => {\r\n        try {\r\n            setisShowLoader(true);\r\n            let response = await RDApplications.RDApplicationsModel.getRdDetails(props.location.state);\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n                if(response.body.message[0][\"account_number\"])\r\n                    getDepositDetails(response.body.message[0][\"account_number\"])\r\n                setLoanDetails(response.body.message[0]);\r\n            }\r\n\r\n        } catch (error) {\r\n            setisShowLoader(false);\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const getDepositDetails = async (account_number) => {\r\n        try {\r\n            setisShowLoader(true);\r\n            let response = await RDApplications.RDApplicationsModel.getDepositDetails(account_number);\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n                setDepositDetails(response.body.message);\r\n            }\r\n\r\n        } catch (error) {\r\n            setisShowLoader(false);\r\n            console.log(error);\r\n        }\r\n    }\r\n \r\n    const goback = ()=>{\r\n        history.goBack();\r\n    }\r\n    return (\r\n        <>\r\n        <Button className=\"mt-2 ml-2\" onClick={goback} size={\"sm\"}>Back</Button>\r\n            <Loader show={isShowLoader} />\r\n\r\n            <Row xs={1} md={2} className=\"g-1\">\r\n                <Col>\r\n                    <Card border=\"success\" header\r\n                        key={0}\r\n                        text={'dark'}\r\n                        className=\"m-2\"\r\n                        ref={memberDetailsRef}\r\n                    >\r\n                        <Card.Header className=\"bg-success text-center\"><b>Personal details</b><svg onClick={handlePrintMemberDetail} xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" className=\"bi bi-printer float-right cursar\" viewBox=\"0 0 16 16\">\r\n                            <path d=\"M2.5 8a.5.5 0 1 0 0-1 .5.5 0 0 0 0 1z\"/>\r\n                            <path d=\"M5 1a2 2 0 0 0-2 2v2H2a2 2 0 0 0-2 2v3a2 2 0 0 0 2 2h1v1a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-1h1a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-1V3a2 2 0 0 0-2-2H5zM4 3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v2H4V3zm1 5a2 2 0 0 0-2 2v1H2a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1h-1v-1a2 2 0 0 0-2-2H5zm7 2v3a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1z\"/>\r\n                            </svg>\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            <Table size=\"sm\" className=\"bg-white rounded\" striped bordered hover responsive>\r\n                                <tbody>\r\n                                    <tr><th>Account holder name</th>  <td>{loanDetails.account_holder_name}</td></tr>\r\n                                    <tr> <th>Father/Husband name</th>  <td>{loanDetails.father_husband_name}</td></tr>\r\n                                    <tr><th>DOB</th>   <td>{loanDetails.dob?moment(loanDetails.dob).format(\"DD-MM-YYYY\"):\"\" }</td></tr>\r\n                                    <tr><th>Phone</th> <td>{loanDetails.phone}</td></tr>\r\n                                    <tr><th>Gender</th>  <td>{loanDetails.gender}</td></tr>\r\n                                    <tr><th>Aadhar No.</th> <td>{loanDetails.aadhar_card}</td></tr>\r\n                                    <tr><th>PAN</th> <td>{loanDetails.pan_card}</td></tr>\r\n                                    <tr><th>Driving License</th> <td>{loanDetails.driving_licence}</td></tr>\r\n                                    <tr><th>Ration Card No.</th> <td>{loanDetails.ration_card}</td></tr>\r\n                                    <tr><th>Voter ID No.</th> <td>{loanDetails.voter_id}</td></tr>\r\n\r\n                                </tbody>\r\n                            </Table>\r\n\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n                <Col>\r\n                    <Card border=\"info\" header\r\n                        key={0}\r\n                        text={'dark'}\r\n                        // style={{ width: '18rem' }}\r\n                        className=\"m-2\"\r\n                        ref={applicationRef}\r\n                    >\r\n                        <Card.Header className=\"bg-info text-center\"><b>RD Details</b><svg onClick={handlePrintApplication} xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" className=\"bi bi-printer float-right cursar\" viewBox=\"0 0 16 16\">\r\n                        <path d=\"M2.5 8a.5.5 0 1 0 0-1 .5.5 0 0 0 0 1z\"/>\r\n                        <path d=\"M5 1a2 2 0 0 0-2 2v2H2a2 2 0 0 0-2 2v3a2 2 0 0 0 2 2h1v1a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-1h1a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-1V3a2 2 0 0 0-2-2H5zM4 3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v2H4V3zm1 5a2 2 0 0 0-2 2v1H2a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1h-1v-1a2 2 0 0 0-2-2H5zm7 2v3a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1z\"/>\r\n                        </svg>\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            \r\n                            <Table size=\"sm\" className=\"bg-white rounded\" striped bordered hover responsive>\r\n                                <tbody>\r\n                                     <tr><th>Account Number</th><td>{loanDetails.account_number}</td> </tr>\r\n                                    <tr><th>Account Open Date</th><td>{moment(loanDetails.created_at).format(\"DD-MM-YYYY HH:SS\") }</td> </tr>\r\n                                   <tr><th>Account Balance</th>   <td>{loanDetails.totalDeposited}</td></tr>\r\n                                   <tr><th>Account Status</th>   <td>{loanDetails.is_account_closed==1?\"Closed\":loanDetails.is_account_closed==2?\"Close Requested\":\"Active\"}</td></tr>\r\n                                <tr><th>Account Closed Amount</th><td>{loanDetails.is_account_closed==1?parseFloat(loanDetails.account_close_amount).toFixed(2):\"-\"}</td> </tr>\r\n\r\n                                </tbody>\r\n                            </Table>\r\n\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n\r\n            </Row>\r\n            <Row xs={1} md={2} className=\"g-1\">\r\n            <Col>\r\n                <Card border=\"info\" header\r\n                    key={0}\r\n                    text={'dark'}\r\n                    // style={{ width: '18rem' }}\r\n                    className=\"m-2\"\r\n                    ref={applicationRef}\r\n                >\r\n                    <Card.Header className=\"bg-info text-center\"><b>Passbook</b><svg onClick={handlePrintApplication} xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" className=\"bi bi-printer float-right cursar\" viewBox=\"0 0 16 16\">\r\n                    <path d=\"M2.5 8a.5.5 0 1 0 0-1 .5.5 0 0 0 0 1z\"/>\r\n                    <path d=\"M5 1a2 2 0 0 0-2 2v2H2a2 2 0 0 0-2 2v3a2 2 0 0 0 2 2h1v1a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-1h1a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-1V3a2 2 0 0 0-2-2H5zM4 3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v2H4V3zm1 5a2 2 0 0 0-2 2v1H2a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1h-1v-1a2 2 0 0 0-2-2H5zm7 2v3a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1z\"/>\r\n                    </svg>\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        \r\n                        <Table size=\"sm\" className=\"bg-white rounded\" striped bordered hover responsive>\r\n                            <thead className=\"bg-primary\">\r\n                                <tr>\r\n                                    <th>Date</th>\r\n                                    <th>Debit</th>\r\n                                    <th>Credit</th>\r\n                                </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {depositDetails.map(data=>(\r\n                                    <tr>\r\n                                        <td>{moment(data.deposited_date).format(\"DD-MM-YYYY\")}</td>\r\n                                        <td>{data.debited_amount}</td>\r\n\r\n                                        <td>{data.deposited_amount}</td>\r\n\r\n                                    </tr>\r\n\r\n                                    ))}\r\n                                </tbody>\r\n                        </Table>\r\n\r\n                    </Card.Body>\r\n                </Card>\r\n                </Col>\r\n\r\n            </Row>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default RdDetails;","import React, { useState, useEffect } from 'react';\r\nimport { Button, Form, Container, Row, Col, Toast } from 'react-bootstrap';\r\nimport { useFormik } from 'formik';\r\nimport DatePicker from \"react-datepicker\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport RDApplications from '../../models/RDApplications';\r\nimport Loader from '../layout/Loader';\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction OpenNewRdAccount(props) {\r\n    const auth = useSelector(state => state.auth);\r\n    const [loading, setLoading] = useState(false);\r\n    const [dob, setdob] = useState(new Date());\r\n    const [showToast, setShowToast] = useState({ isShow: false, type: \"\", message: \"\" })\r\n    const [checked, setChecked] = useState(false);\r\n    let history = useHistory();\r\n    const validate = values => {\r\n        const errors = {};\r\n        if (!values.account_holder_name) {\r\n            errors.account_holder_name = 'Account holder name is Required';\r\n        }\r\n        if (!values.rd_amount) {\r\n            errors.rd_amount = 'Account can not open with 0 rupee';\r\n        }\r\n        if (!values.phone) {\r\n            errors.phone = 'Phone number is required. User will get all the account transactions SMS on this phone number.';\r\n        }\r\n\r\n        if (!values.interest_rate) {\r\n            errors.interest_rate = 'Interest rate is Required';\r\n        }\r\n        return errors;\r\n    };\r\n    \r\n    const formik = useFormik({\r\n        initialValues: {\r\n            account_holder_name: '',\r\n            father_husband_name: '',\r\n            dob: '',\r\n            address: '',\r\n            phone: '',\r\n            aadhar_card: '',\r\n            pan_card: '',\r\n            driving_licence: '',\r\n            voter_id: '',\r\n            ration_card: '',\r\n            interest_rate: 2,\r\n            tenure: '',\r\n            rd_amount: '',\r\n            period: '',\r\n            agent_id: '',\r\n            gender: '',\r\n            initial_deposited_amount: ''\r\n        },\r\n        validate,\r\n        onSubmit: async (values) => {\r\n            setLoading(true);\r\n            values.dob = dob;\r\n            values.agent_id = auth.id;\r\n            values.initial_deposited_amount = checked ? values.rd_amount : \"\";\r\n            try {\r\n                let response = await RDApplications.RDApplicationsModel.openRdAccount(values);\r\n                console.log(response);\r\n                setLoading(false);\r\n                if (response.status == 200) {\r\n                    formik.resetForm();\r\n                    setShowToast({ isShow: true,type:\"bg-success\", message: response.body.message })\r\n                } else {\r\n                    setShowToast({ isShow: true,type:\"bg-danger\", message: response.body.message })\r\n                }\r\n            } catch (error) {\r\n                console.log(error);\r\n                setLoading(false);\r\n                setShowToast({ isShow: true,type:\"bg-danger\", message: error.response.body.message })\r\n            }\r\n        },\r\n    });\r\n\r\n    return (\r\n        <>\r\n        <Toast key={1} autohide delay={3000} show={showToast.isShow} onClose={() => setShowToast({ isShow: false,type:\"\", message: \"\" })} className={\"loader \"+ (showToast.type) } >\r\n            <Toast.Header>\r\n            <strong className=\"me-auto\">{showToast.type==\"bg-danger\"?\"Error\":\"Success\"} Message</strong>\r\n            </Toast.Header>\r\n            <Toast.Body className=\"Dark\">\r\n            {showToast.message}\r\n            </Toast.Body>\r\n        </Toast>\r\n            <Loader show={loading} />\r\n            <h2 className=\"text-info text-center\">Open New RD Account</h2>\r\n            <Container fluid className=\"bg-white mt-5 shadow-lg p-3 mb-5 bg-white rounded\">\r\n                <Form onSubmit={formik.handleSubmit}>\r\n                    <Row className=\"mb-3\" >\r\n                        <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                            <Form.Label>Account holder name</Form.Label>\r\n                            <Form.Control\r\n                                name=\"account_holder_name\"\r\n                                type=\"text\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.account_holder_name}\r\n                            />\r\n                            {formik.touched.account_holder_name && formik.errors.account_holder_name ? (\r\n                                <div class=\"text-danger\">{formik.errors.account_holder_name}</div>\r\n                            ) : null}\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} className=\"form-group required\" controlId=\"formGridEnroll\">\r\n                            <Form.Label >Date of Birth</Form.Label>\r\n                            <DatePicker class=\"form-control\"\r\n                                selected={dob}\r\n                                onChange={(date) => setdob(date)}\r\n                                name=\"application_date\"\r\n                                dateFormat=\"dd/MM/yyyy\"\r\n                                peekNextMonth\r\n                                showMonthDropdown\r\n                                showYearDropdown\r\n                                dropdownMode=\"select\"\r\n                            />\r\n                        </Form.Group>\r\n                    </Row>\r\n\r\n                    <Row className=\"mb-3\" >\r\n                        <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                            <Form.Label>Father/Husband name</Form.Label>\r\n                            <Form.Control\r\n                                name=\"father_husband_name\"\r\n                                type=\"text\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.father_husband_name}\r\n                            />\r\n\r\n                            {formik.touched.father_husband_name && formik.errors.father_husband_name ? (\r\n                                <div class=\"text-danger\">{formik.errors.father_husband_name}</div>\r\n                            ) : null}\r\n\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"formGriddob\">\r\n                            <Form.Label>Address</Form.Label>\r\n                            <Form.Control\r\n                                name=\"address\"\r\n                                as=\"textarea\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.address}\r\n\r\n                            />\r\n                        </Form.Group>\r\n                    </Row>\r\n\r\n                    <Row className=\"mb-3\" >\r\n                        <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                            <Form.Label>phone</Form.Label>\r\n                            <Form.Control\r\n                                name=\"phone\"\r\n                                type=\"number\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.phone}\r\n                            />\r\n                            {formik.touched.phone && formik.errors.phone ? (\r\n                                <div class=\"text-danger\">{formik.errors.phone}</div>\r\n                            ) : null}\r\n\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"formGriddob\">\r\n                            <Form.Label>gender</Form.Label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                name=\"gender\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.gender}>\r\n                                <option key=\"\" value=\"\">Select gender</option>\r\n                                <option key=\"male\" value=\"male\">Male</option>\r\n                                <option key=\"female\" value=\"female\">female</option>\r\n                            </select>\r\n                        </Form.Group>\r\n                    </Row>\r\n\r\n                    <Row className=\"mb-3\" >\r\n                        <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group\">\r\n                            <Form.Label>Aadhar card number</Form.Label>\r\n                            <Form.Control\r\n                                name=\"aadhar_card\"\r\n                                type=\"number\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.aadhar_card}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group\">\r\n                            <Form.Label>PAN</Form.Label>\r\n                            <Form.Control\r\n                                name=\"pan_card\"\r\n                                type=\"text\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.pan_card}\r\n                            />\r\n                        </Form.Group>\r\n                    </Row>\r\n\r\n                    <Row className=\"mb-3\" >\r\n                        <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group\">\r\n                            <Form.Label>Driving Licence</Form.Label>\r\n                            <Form.Control\r\n                                name=\"driving_licence\"\r\n                                type=\"text\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.driving_licence}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group\">\r\n                            <Form.Label>Voter Id</Form.Label>\r\n                            <Form.Control\r\n                                name=\"voter_id\"\r\n                                type=\"text\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.voter_id}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                    </Row>\r\n\r\n                    <Row className=\"mb-3\" >\r\n                        <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group\">\r\n                            <Form.Label>Ration card</Form.Label>\r\n                            <Form.Control\r\n                                name=\"ration_card\"\r\n                                type=\"text\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.ration_card}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                            <Form.Label>Interest Rate (in %)</Form.Label>\r\n                            <Form.Control\r\n                                name=\"interest_rate\"\r\n                                type=\"number\"\r\n                                min=\"0\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.interest_rate}\r\n                            />\r\n                            {formik.touched.interest_rate && formik.errors.interest_rate ? (\r\n                                <div class=\"text-danger\">{formik.errors.interest_rate}</div>\r\n                            ) : null}\r\n\r\n                        </Form.Group>\r\n\r\n                    </Row>\r\n\r\n                    <Row className=\"mb-3\">\r\n                        <Form.Group md={6} as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                            <Form.Label>Account Opening Balance</Form.Label>\r\n                            <Form.Control\r\n                                name=\"rd_amount\"\r\n                                type=\"number\"\r\n                                min=\"0\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.rd_amount}\r\n                            />\r\n\r\n                            {formik.touched.rd_amount && formik.errors.rd_amount ? (\r\n                                <div class=\"text-danger\">{formik.errors.rd_amount}</div>\r\n                            ) : null}\r\n\r\n                        </Form.Group>\r\n\r\n                        {/* <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                            <Form.Label>Tenure</Form.Label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                name=\"tenure\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.tenure}\r\n                            >\r\n                                <option key=\"\" value=\"\">Select Tenure</option>\r\n                                <option key=\"daily\" value=\"daily\">Daily</option>\r\n                                <option key=\"monthly\" value=\"monthly\">Monthly</option>\r\n                            </select>\r\n                            {formik.touched.tenure && formik.errors.tenure ? (\r\n                                <div class=\"text-danger\">{formik.errors.tenure}</div>\r\n                            ) : null}\r\n\r\n                        </Form.Group> */}\r\n                    </Row>\r\n\r\n                    {/* <Row className=\"mb-3\">\r\n                        <Form.Group md={6} as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                            <Form.Label>Period (in Months)</Form.Label>\r\n                            <Form.Control\r\n                                name=\"period\"\r\n                                type=\"number\"\r\n                                min=\"0\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.period}\r\n                            />\r\n                            {formik.touched.period && formik.errors.period ? (\r\n                                <div class=\"text-danger\">{formik.errors.period}</div>\r\n                            ) : null}\r\n                        </Form.Group>\r\n                    </Row> */}\r\n\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Save\r\n                    </Button>\r\n                    <Button variant=\"danger\" onClick={() => { history.push(\"/\") }} type=\"button\" className=\"ml-2\">\r\n                        Cancel\r\n                    </Button>\r\n                </Form>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default OpenNewRdAccount;","import React, { useEffect, useState, useMemo, useRef } from 'react';\r\nimport { Table, Button, Container, Row, Col, Modal, Pagination, Form, Alert } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport RDApplications from '../../models/RDApplications';\r\nimport User from '../../models/user';\r\nimport Loader from '../layout/Loader';\r\nimport moment from 'moment';\r\nimport { useTable, useSortBy, usePagination, useFilters } from 'react-table'\r\nimport rDApplications from '../../models/RDApplications';\r\n\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nfunction RdDeposites(props) {\r\n    const auth = useSelector(state => state.auth);\r\n    const amountInputRefArr = [];\r\n    let history = useHistory();\r\n    const [isShowLoader, setisShowLoader] = useState(false);\r\n    const [entries, setEntries] = useState([]);\r\n    const [rdAccounts, setRdAccounts] = useState([]);\r\n    const [showDeleteModel, setShowDeleteModel] = useState(false)\r\n    const [amount, setAmount] = useState(\"\");\r\n    const [showEntryModel, setShowEntryModel] = useState(false);\r\n    const [selectedEntryUpdate,setSelectedEntryUpdate] = useState(\"\");\r\n    const [paidID, setPaidID] = useState({\r\n        \"account_number\":\"\",\r\n        \"deposited_date\":\"\",\r\n        \"deposited_amount\":\"\",\r\n        \"is_deposited\":1,\r\n        \"is_account_open_amount\":0\r\n    })\r\n\r\n    useEffect(() => {\r\n        getMemberGroup(0);\r\n    }, [])\r\n\r\n    const data = useMemo(\r\n        () =>\r\n            rdAccounts.map((record, index) => {\r\n                return {\r\n                    col3: record.agent_name,\r\n                    col1: record.account_number,\r\n                    col2: record.account_holder_name,\r\n                    col4: record.address,\r\n                    col5: record.phone,\r\n                    col6: record.totalDeposited,\r\n                    col9: record,\r\n                }\r\n            }\r\n            )\r\n        ,\r\n        [rdAccounts]\r\n    )\r\n\r\n    const columns = useMemo(\r\n        () => [\r\n            {\r\n                Header: 'Agent name',\r\n                accessor: 'col3', // accessor is the \"key\" in the data\r\n                allowFilter: true,\r\n\r\n            },\r\n            {\r\n                Header: 'Account number',\r\n                accessor: 'col1', // accessor is the \"key\" in the data\r\n                allowFilter: true,\r\n            },\r\n            {\r\n                Header: 'Account holder',\r\n                accessor: 'col2',\r\n                allowFilter: true\r\n            },\r\n            {\r\n                Header: 'Address',\r\n                accessor: 'col4',\r\n                allowFilter: true\r\n            },\r\n            {\r\n                Header: 'Phone',\r\n                accessor: 'col5',\r\n                allowFilter: true\r\n            },\r\n            {\r\n                Header: 'Account Balance',\r\n                accessor: 'col6',\r\n                allowFilter: true\r\n            },\r\n            {\r\n                Header: 'Action',\r\n                accessor: 'col9',\r\n                allowFilter: false,\r\n                Cell: emi => {\r\n                    return (\r\n                    <>\r\n                    <Button className=\"mb-2\" size={\"sm\"} variant=\"info\" onClick={() => entriesHandle(emi.value.account_number)}>Get Entries</Button>\r\n                    \r\n                    <Button size={\"sm\"} variant=\"success\" onClick={() => paidHandle(emi.value.account_number)}>Deposit</Button>\r\n                    </>\r\n                    )}\r\n\r\n            }\r\n        ],\r\n        []\r\n    )\r\n    const entriesHandle = (account_number)=>{\r\n        setEntries([]);\r\n        setisShowLoader(true);\r\n\r\n        RDApplications.RDApplicationsModel.getDepositDetailsByAcccount(account_number).then(async (res) => {\r\n            setisShowLoader(false);\r\n            if (res.statusCode == 200) {\r\n                setEntries(res.body.message);\r\n            } else {\r\n                setEntries([]);\r\n            }\r\n        })\r\n        setShowEntryModel(true);\r\n    }\r\n    const paidHandle = (account_number) => {\r\n        // let dataArray = deposited_date.split('-');\r\n        setPaidID({\r\n            \"account_number\":account_number,\r\n        });\r\n        setShowDeleteModel(true);\r\n    }\r\n\r\n    const getMemberGroup = (pageno) => {\r\n        setisShowLoader(true);\r\n        let formatedAccounts = [];\r\n        let payload = auth.id;\r\n        if (auth.role == \"admin\" || auth.role == \"maker\" || auth.role == \"checker\") {\r\n            payload = \"all\";\r\n        }\r\n        RDApplications.RDApplicationsModel.getAllRdApplications(payload).then(async (res) => {\r\n            setisShowLoader(false);\r\n            if (res.statusCode == 200) {\r\n                let list = await User.Auth.getUsers();\r\n                //setUserList(list);\r\n                formatedAccounts = res.body.message.map(ac => {\r\n                        let obj = list.body.message.filter(user => user.id == ac.agent_id)\r\n                        ac[\"agent_name\"] = obj[0][\"name\"];\r\n                        return ac;\r\n                });\r\n                let result = formatedAccounts.filter(ac=>ac.is_account_closed==0);\r\n                setRdAccounts(result);\r\n                gotoPage(pageno);\r\n            } else {\r\n                setRdAccounts([]);\r\n            }\r\n        })\r\n    }\r\n    function DefaultColumnFilter({\r\n        column: { filterValue, preFilteredRows, setFilter },\r\n    }) {\r\n        const count = preFilteredRows.length\r\n\r\n        return (\r\n            <input\r\n                className=\"form-control\"\r\n                value={filterValue || ''}\r\n                onChange={e => {\r\n                    setFilter(e.target.value || undefined)\r\n                }}\r\n                placeholder={`Search ${count} records...`}\r\n            />\r\n        )\r\n    }\r\n    const defaultColumn = React.useMemo(\r\n        () => ({\r\n            // Default Filter UI\r\n            Filter: DefaultColumnFilter,\r\n        }),\r\n        []\r\n    )\r\n    const paidEMI = async () => {\r\n        try {\r\n            if(amount !=\"\" && amount !=0){\r\n                setShowDeleteModel(false);\r\n                setisShowLoader(true);\r\n                let payload = {\r\n                    account_number:paidID.account_number,\r\n                    agent_id:auth.id,\r\n                    deposited_amount:amount,\r\n                    deposited_date:moment().format(\"YYYY-MM-DD\"),\r\n                    is_deposited:1,\r\n                    is_account_open_amount:0,\r\n                }\r\n                let response = await rDApplications.RDApplicationsModel.postDeposit(payload);\r\n                setisShowLoader(false);\r\n                if (response.statusCode == 200) {\r\n                    alert(response.body.message);\r\n                    getMemberGroup(pageIndex);\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.log(error.response.body.message);\r\n            setisShowLoader(false);\r\n        }\r\n    }\r\n\r\n    const paginate = (totalPage) => {\r\n        let pageNumberArray = [];\r\n        for (let i = 1; i <= totalPage; i++) {\r\n            pageNumberArray.push(i);\r\n        }\r\n        return (\r\n            <Pagination>\r\n                <Pagination.First onClick={() => gotoPage(0)} />\r\n                <Pagination.Prev onClick={() => previousPage()} disabled={!canPreviousPage} />\r\n                {pageNumberArray.map(num => <Pagination.Item key={num} active={num === (pageIndex + 1)} onClick={() => gotoPage(num - 1)}>{num}</Pagination.Item>)}\r\n                <Pagination.Next onClick={() => nextPage()} disabled={!canNextPage} />\r\n                <Pagination.Last onClick={() => gotoPage(totalPage - 1)} />\r\n            </Pagination>\r\n        );\r\n\r\n    }\r\n    const handleAmount =(e)=>{\r\n        setAmount(e.target.value)\r\n    }\r\n    const deleteDeposit = async(data)=>{\r\n        \r\n        if (window.confirm(`Are you sure you want to delete Rs ${data.deposited_amount} from Account ${data.account_number} ?`)) {\r\n            // Save it!\r\n            setisShowLoader(true);\r\n            let response = await rDApplications.RDApplicationsModel.deleteDeposit(data.id);\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n                alert(\"Amount Deleted successfully.\");\r\n                let remainingEnitiy = entries.filter(ent=>ent.id!=data.id);\r\n                setEntries(remainingEnitiy);\r\n                getMemberGroup(pageIndex);\r\n            }\r\n      } else {\r\n            // Do nothing!\r\n            console.log('Thing was not saved to the database.');\r\n          }\r\n    }\r\n    const handleInlineEdit=(id)=>{\r\n            amountInputRefArr.forEach((entry,idx)=>{\r\n                amountInputRefArr[idx].disabled =true;\r\n                amountInputRefArr[idx].style.border = \"0px\";\r\n                if(idx == id){\r\n                    amountInputRefArr[idx].disabled =false;\r\n                    amountInputRefArr[idx].style.border = \"1px solid\";\r\n                    amountInputRefArr[idx].focus();\r\n                    setSelectedEntryUpdate(idx);             \r\n                }   \r\n            })   \r\n    }\r\n    const handleInlineSave = async(id)=>{\r\n        setShowEntryModel(false);\r\n        setisShowLoader(true);\r\n        let payload={\r\n            \"deposited_amount\":amountInputRefArr[id].value,\r\n            \"id\":id\r\n        }\r\n        let response = await rDApplications.RDApplicationsModel.updateDepositAmount(payload);\r\n        setisShowLoader(false);\r\n        if (response.statusCode == 200) {\r\n            alert(\"Deposited Updated Successfully.\");\r\n            setSelectedEntryUpdate(\"\");\r\n            getMemberGroup(pageIndex);\r\n            //amountInputRefArr[id].value = payload.deposited_amount;\r\n        }\r\n\r\n    }\r\n    const handleInlineCancel = (id)=>{\r\n        amountInputRefArr[id].disabled =true;\r\n        amountInputRefArr[id].style.border = \"0px\";\r\n        setSelectedEntryUpdate(\"\");\r\n    }\r\n    const callbackRef=(el, id, amount)=>{\r\n        if(el){\r\n            amountInputRefArr[id] = el;\r\n            amountInputRefArr[id].value = amount;\r\n        }\r\n    }\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n        pageOptions,\r\n        page,\r\n        pageCount,\r\n        state: { pageIndex, pageSize },\r\n        gotoPage,\r\n        previousPage,\r\n        nextPage,\r\n        setPageSize,\r\n        canPreviousPage,\r\n        canNextPage,\r\n    } = useTable({ columns, data, defaultColumn, initialState: { pageIndex: 0 } }, useFilters, useSortBy, usePagination)\r\n    return (\r\n        <>\r\n            <Modal show={showDeleteModel} onHide={() => setShowDeleteModel(false)}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Deposit Money </Modal.Title>\r\n                </Modal.Header>\r\n                    <Modal.Body>                        \r\n                        <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                            <Form.Label>Amount</Form.Label>\r\n                            <Form.Control\r\n                                name=\"amount\"\r\n                                type=\"number\"\r\n                                onChange={handleAmount}\r\n                                value={amount}\r\n                            />\r\n                            {/* {formik.touched.account_holder_name && formik.errors.account_holder_name ? (\r\n                                <div class=\"text-danger\">{formik.errors.account_holder_name}</div>\r\n                            ) : null} */}\r\n                        </Form.Group>\r\n                    </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={() => setShowDeleteModel(false)}>\r\n                        Cancel\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={() => paidEMI()}>\r\n                        Deposit\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            <Modal size=\"lg\" show={showEntryModel} onHide={() => {setShowEntryModel(false);}}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Deposites </Modal.Title>\r\n                </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Table className=\"shadow-lg p-3 mb-5 bg-white rounded small\"  bordered responsive>\r\n                            <thead className=\"bg-primary\">\r\n                                <tr>\r\n                                    <th>\r\n                                        Account Number\r\n                                    </th>\r\n                                    <th>\r\n                                        Date\r\n                                    </th>\r\n                                    <th>\r\n                                        Amount\r\n                                    </th>\r\n                                    <th>\r\n                                        Action\r\n                                    </th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {entries.map(data=>(\r\n                                    <tr>\r\n                                        <td>\r\n                                            {data.account_number}\r\n                                        </td>\r\n                                        <td>\r\n                                            {moment(data.deposited_date).format(\"DD-MM-YYYY\")}\r\n                                        </td>\r\n                                        <td>\r\n                                            <input ref={(el) =>callbackRef(el,data.id,data.deposited_amount) } id={`deposit_${data.id}`} style={{\"width\":\"50%\" ,\"border\":\"0px\",\"background\": \"transparent\"}} type=\"number\" disabled={true}/>\r\n                                        </td>\r\n                                        <td>{selectedEntryUpdate==data.id?(<>\r\n                                            <Button size={\"sm\"} className=\"mr-2\" variant=\"warning\" onClick={()=>handleInlineSave(data.id)} >Save</Button>\r\n                                            <Button size={\"sm\"} variant=\"info\" onClick={()=>handleInlineCancel(data.id)}>Cancel</Button></>)\r\n                                            :\r\n                                            (<><Button size={\"sm\"} className=\"mr-2\" variant=\"success\" onClick={()=>handleInlineEdit(data.id)} >Edit</Button>\r\n                                            <Button size={\"sm\"} variant=\"danger\" onClick={()=>deleteDeposit(data)}>Delete</Button></>)}\r\n                                        </td>\r\n\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>                      \r\n                    </Modal.Body>\r\n            </Modal>\r\n\r\n\r\n            <Loader show={isShowLoader} />\r\n            <Container fluid>\r\n                <h2 className=\"text-info text-center\">RD applications</h2>\r\n                <Row className=\"mb-5 mt-3\">\r\n                    <Col>\r\n                        <Link to=\"/openNewRdAccount\">\r\n                            <Button variant=\"info\" active>\r\n                                Open new RD\r\n                            </Button>\r\n                        </Link>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <div className=\"text-right\">\r\n                            {paginate(pageCount)}\r\n                        </div>\r\n\r\n                        <Table {...getTableProps()} className=\"shadow-lg p-3 mb-5 bg-white rounded small\" striped bordered hover responsive>\r\n                            <thead className=\"bg-primary\">\r\n                                {headerGroups.map(headerGroup => (\r\n                                    <tr {...headerGroup.getHeaderGroupProps()}>\r\n                                        {headerGroup.headers.map(column => (\r\n                                            <th\r\n                                                {...column.getHeaderProps(column.getSortByToggleProps())}\r\n                                            >\r\n                                                {column.render('Header')}\r\n                                                <span>\r\n                                                    {column.isSorted ? (column.isSortedDesc ? ' 🔽' : ' 🔼') : ''}\r\n                                                </span>\r\n                                                <div>{column.allowFilter ? column.render('Filter') : null}</div>\r\n                                            </th>\r\n                                        ))}\r\n                                    </tr>\r\n                                ))}\r\n                            </thead>\r\n                            <tbody{...getTableBodyProps()}>\r\n\r\n                                {page.map(row => {\r\n                                    prepareRow(row)\r\n                                    return (\r\n                                        <tr {...row.getRowProps()}>\r\n                                            {row.cells.map(cell => {\r\n                                                console.log(cell);\r\n                                                // if(cell.column.id !=\"col5\"){                                \r\n                                                return (\r\n                                                    <td {...cell.getCellProps()}>\r\n                                                        {cell.render('Cell')}\r\n                                                    </td>\r\n                                                )\r\n                                            })}\r\n                                        </tr>\r\n                                    )\r\n                                })}\r\n\r\n                            </tbody>\r\n                        </Table>\r\n                        <div className=\"text-right\">\r\n                            {paginate(pageCount)}\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default RdDeposites;","import React, { useState, useEffect,useRef } from 'react';\r\nimport dashboard from '../../models/dashboard'\r\nimport { Table, Button, Row, Col, Card, Spinner, ProgressBar } from 'react-bootstrap';\r\nimport moment from 'moment';\r\nimport { useReactToPrint } from 'react-to-print';\r\n\r\nfunction CompleteLadger(props) {\r\n    const [ladger, setLadger] = useState([]);\r\n    const [progress, setProgress] = useState(0);\r\n    const emiDetailsRef = useRef();\r\n\r\n    const handlePrintEmiDetail = useReactToPrint({\r\n        content: () => emiDetailsRef.current,\r\n        documentTitle:\"AA2-Due-EMIs\",\r\n      });\r\n\r\n    let balance = 0;\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            let received = [];\r\n            let paid = [];\r\n            let ladgerArray = [];\r\n            received = await getReceivedAmount();\r\n            paid = await getPaidAmount();\r\n            ladgerArray = [...received, ...paid];\r\n            ladgerArray.sort(compare);\r\n            setLadger(ladgerArray);\r\n          }\r\n          fetchData();\r\n    }, [])\r\n    const getReceivedAmount = async () => {\r\n        try {\r\n            setProgress(10);\r\n            let response = await dashboard.DashboardModel.getReceivedAmount();\r\n            setProgress(50);\r\n            if (response.statusCode == 200) {\r\n                let emiLadger = []\r\n                let processingFeeLadger = []\r\n                let data = []\r\n                emiLadger = response.body.message?.emis.map((val, idx) => {\r\n                    return {\r\n                        \"date\": moment(val.EMI_date).format(\"DD-MM-yyyy\"),\r\n                        \"particular\": `EMI received Loan Account - ${val.loan_account_no}`,\r\n                        \"cr\": val.EMI_amount,\r\n                        \"dr\": \"\",\r\n                    }\r\n                });\r\n                processingFeeLadger = response.body.message?.processingFee.map((val, idx) => {\r\n                    return {\r\n                        \"date\": moment(val.created_at).format(\"DD-MM-yyyy\"),\r\n                        \"particular\": val.particular,\r\n                        \"cr\": val.amount,\r\n                        \"dr\": \"\",\r\n                    }\r\n                });\r\n                 data = [...emiLadger, ...processingFeeLadger];\r\n                 return data;\r\n                // data.sort(compare);\r\n                // setLadger(data);\r\n            } else {\r\n                // setLadger([]);\r\n                return [];\r\n            }\r\n        } catch (error) {\r\n            setProgress(100);\r\n        }\r\n    }\r\n    const getPaidAmount = async () => {\r\n        try {\r\n            setProgress(70);\r\n            let response = await dashboard.DashboardModel.getPaidAmount();\r\n            setProgress(90);\r\n            if (response.statusCode == 200) {\r\n                let expensesLadger = []\r\n                let loanLadger = []\r\n                let data = []\r\n                expensesLadger = response.body.message?.expenses.map((val, idx) => {\r\n                    return {\r\n                        \"date\": moment(val.date_of_expense).format(\"DD-MM-yyyy\"),\r\n                        \"particular\": val.expense_type,\r\n                        \"cr\": \"\",\r\n                        \"dr\": val.amount,\r\n                    }\r\n                });\r\n                loanLadger = response.body.message?.loan.map((val, idx) => {\r\n                    return {\r\n                        \"date\": moment(val.application_date).format(\"DD-MM-yyyy\"),\r\n                        \"particular\": `Loan disbursed to ${val.member_name} - Loan account ${val.loan_account_no}`,\r\n                        \"dr\": val.loan_amount,\r\n                        \"cr\": \"\",\r\n                    }\r\n                });\r\n                 data = [ ...expensesLadger, ...loanLadger];\r\n                 setProgress(100);\r\n                 return data;\r\n                // data.sort(compare);\r\n                // setLadger(data);\r\n            } else {\r\n                //setLadger([]);\r\n                return [];\r\n            }\r\n        } catch (error) {\r\n            setProgress(100);\r\n        }\r\n    }\r\n    const compare = (a, b) => {\r\n        if (a.date < b.date) {\r\n            return -1;\r\n        }\r\n        if (a.date > b.date) {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n    const calculateTotal = (dr, cr) => {\r\n        let total = balance;\r\n        balance = dr != \"\" ? total - parseFloat(dr) : total + parseFloat(cr);\r\n        return balance;\r\n    }\r\n    const formatAmount = (amount) => {\r\n        return amount ? amount.toString().replace(/.(?=(..)*...$)/g, '$&,') : \"\";\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row >\r\n                <Col>\r\n                \r\n                    <Card border=\"success\" header\r\n                        key={0}\r\n                        text={'dark'}\r\n                        \r\n                        className=\"m-2\">\r\n                        <Card.Header className=\"bg-success text-center\"><b>Ledger </b>\r\n                        <svg style={{cursor:'pointer',float:\"right\"}} onClick={handlePrintEmiDetail} xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" className=\"bi bi-printer mb-2\" viewBox=\"0 0 16 16\">\r\n            <path d=\"M2.5 8a.5.5 0 1 0 0-1 .5.5 0 0 0 0 1z\"/>\r\n            <path d=\"M5 1a2 2 0 0 0-2 2v2H2a2 2 0 0 0-2 2v3a2 2 0 0 0 2 2h1v1a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-1h1a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-1V3a2 2 0 0 0-2-2H5zM4 3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v2H4V3zm1 5a2 2 0 0 0-2 2v1H2a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1h-1v-1a2 2 0 0 0-2-2H5zm7 2v3a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1z\"/>\r\n            </svg>\r\n                        </Card.Header>\r\n                        {progress<100 ? <Card.Body className=\"text-center\"><div style={{ top: '50%',position:\"relative\" }}><ProgressBar style={{\"position\":\"relative\",\"width\":\"30%\",\"left\":\"40%\"}} striped variant=\"info\" now={progress} label={`${progress}%`} /></div></Card.Body> :\r\n                            <Card.Body>\r\n                                <Table ref={emiDetailsRef} size={\"sm\"} className=\"bg-white rounded small\" bordered responsive>\r\n                                    <thead>\r\n                                        <tr className=\"bg-success\">\r\n                                            <th>SR No.</th>\r\n                                            <th>Date</th>\r\n                                            <th>Particular</th>\r\n                                            <th>DR</th>\r\n                                            <th>CR</th>\r\n                                            <th>Balance</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {ladger.map((val, idx) => <tr>\r\n                                            <td>\r\n                                                {idx + 1}\r\n                                            </td>\r\n                                            <td>\r\n                                                {val.date}\r\n                                            </td>\r\n                                            <td>\r\n                                                {val.particular}\r\n                                            </td>\r\n                                            <td>\r\n                                                {formatAmount(val.dr)}\r\n                                            </td>\r\n                                            <td>\r\n                                                {formatAmount(val.cr)}\r\n                                            </td>\r\n                                            <td>\r\n                                                {formatAmount(calculateTotal(val.dr, val.cr))}\r\n                                            </td>\r\n\r\n                                        </tr>)}\r\n                                    </tbody>\r\n                                </Table>\r\n                            </Card.Body>}\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CompleteLadger;","import React, { useState, useEffect, useRef } from 'react';\r\nimport { Button, Card, Col, Container, FormLabel, InputGroup, Row, Table } from 'react-bootstrap';\r\nimport DatePicker from \"react-datepicker\";\r\nimport Loader from '../layout/Loader';\r\nimport moment from 'moment';\r\nimport RDApplications from '../../models/RDApplications';\r\nimport User from '../../models/user';\r\nimport { Link } from 'react-router-dom';\r\nimport { useReactToPrint } from 'react-to-print';\r\n\r\nfunction RdLadger(props) {\r\n    const componentRef = useRef();\r\n    const handlePrint = useReactToPrint({\r\n        content: () => componentRef.current,\r\n        documentTitle:\"AA2-EMI-details\",\r\n       // onAfterPrint:()=>{setisclickPrint(false)}\r\n  \r\n      });\r\n  \r\n    const totalCollection = useRef(0);\r\n    const [enrollmentDate, setEnrollmentDate] = useState(\"\");\r\n    const [agentCollections, setAgentCollections] = useState([]);\r\n    const [isShowLoader, setisShowLoader] = useState(false);\r\n    const [agentCollectionDetails, setAgentCollectionDetails] = useState([]);\r\n    const [selectedAgent, setSelectedAgent] = useState({\"agent_name\":\"\",\"total\":\"\"});\r\n    useEffect(() => {\r\n        getMemberGroup();\r\n    }, []);\r\n    const getMemberGroup = (selectedDate = \"all\") => {\r\n        setisShowLoader(true);\r\n        let formatedAccounts = [];\r\n        RDApplications.RDApplicationsModel.getDepositsGroupBy(\"all\", selectedDate).then(async (res) => {\r\n            setisShowLoader(false);\r\n            if (res.statusCode == 200) {\r\n                let list = await User.Auth.getUsers();\r\n                totalCollection.current = 0;\r\n                formatedAccounts = res.body.message.map(ac => {\r\n                    totalCollection.current +=ac.total\r\n                    let obj = list.body.message.filter(user => user.id == ac.agent_id)\r\n                    ac[\"agent_name\"] = obj[0][\"name\"];                  \r\n                   return ac;\r\n                });\r\n                setSelectedAgent({\"agent_name\":\"\",\"total\":\"\"});\r\n                setAgentCollectionDetails([]);\r\n                setAgentCollections(formatedAccounts);\r\n            } else {\r\n                setAgentCollections([]);\r\n            }\r\n        })\r\n    }\r\n    const getAgentCollections = (agentId=\"all\",deposited_date=\"all\")=>{\r\n        // let isExist = agentCollectionDetails.filter((data,key)=>key==agentId && data.lenght==0)\r\n        // if(isExist.length==0){\r\n            setisShowLoader(true);\r\n            deposited_date=enrollmentDate!=\"\"?moment(enrollmentDate).format(\"YYYY-MM-DD\"):\"all\";\r\n            RDApplications.RDApplicationsModel.getDepositsByAgent(agentId, deposited_date).then(async (res) => {\r\n                setisShowLoader(false);\r\n                if (res.statusCode == 200) {\r\n                    setAgentCollectionDetails((preState)=>{\r\n                        preState=res.body.message;\r\n                        return preState\r\n                    });\r\n                } else {\r\n                    setAgentCollectionDetails([]);\r\n                }\r\n            })\r\n    \r\n        // }\r\n\r\n    }\r\n    return (\r\n        <>\r\n            <Loader show={isShowLoader} />\r\n            <Container fluid>\r\n                <Row>\r\n                    <Col md={6}>\r\n                        <Container fluid className=\"bg-white mt-5 shadow-lg p-3 mb-5 bg-white rounded\">\r\n                            <h3>Total Collection:- Rs {totalCollection.current}</h3>\r\n                            <InputGroup className=\"m-3\">\r\n                                <FormLabel className=\"mr-3\">Collection Date:</FormLabel>\r\n                                <DatePicker class=\"form-control\"\r\n                                    selected={enrollmentDate}\r\n                                    onChange={(date) => setEnrollmentDate(date)}\r\n                                    name=\"enrollment_date\"\r\n                                    dateFormat=\"dd/MM/yyyy\"\r\n                                    autoComplete={false}\r\n                                />\r\n                            <Button className=\"ml-2\" onClick={()=>getMemberGroup(moment(enrollmentDate).format(\"yyyy-MM-DD\"))} variant=\"primary\" type=\"button\">\r\n                                Show\r\n                            </Button>\r\n                            <Button className=\"ml-2\" onClick={()=>{setEnrollmentDate(\"\"); getMemberGroup()}} variant=\"success\" type=\"button\">\r\n                                Get All\r\n                            </Button>\r\n\r\n                            </InputGroup>\r\n\r\n                        </Container>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                <Col md={3}>\r\n                <Table size=\"sm\" className=\"bg-white rounded\" striped bordered hover responsive>\r\n                    <thead className=\"bg-primary\">\r\n                        <tr>\r\n                            <th>Agent</th>\r\n                            <th>Collection</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {agentCollections.map((agent,idx) => (\r\n                        <tr>\r\n                            <td>\r\n                                <Link onClick={()=>{setSelectedAgent({\"agent_name\":agent.agent_name,\"total\":agent.total});getAgentCollections(agent.agent_id);}}>{agent.agent_name}</Link>\r\n                            </td>\r\n                            <td>\r\n                            Rs. {agent.total}\r\n                            </td>\r\n                            </tr>\r\n                    ))}\r\n                    </tbody>\r\n                                </Table>\r\n\r\n                </Col>\r\n                <Col md={9}>\r\n                <Card border=\"success\" header\r\n                        key={0}\r\n                        text={'dark'}\r\n                        ref={componentRef}>\r\n                        <Card.Header className=\"bg-success text-center\"><b>{selectedAgent.agent_name} - Rs. {selectedAgent.total}</b>\r\n                        <svg onClick={handlePrint}  xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" className=\"bi bi-printer float-right cursar\" viewBox=\"0 0 16 16\">\r\n                            <path d=\"M2.5 8a.5.5 0 1 0 0-1 .5.5 0 0 0 0 1z\"/>\r\n                            <path d=\"M5 1a2 2 0 0 0-2 2v2H2a2 2 0 0 0-2 2v3a2 2 0 0 0 2 2h1v1a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-1h1a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-1V3a2 2 0 0 0-2-2H5zM4 3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v2H4V3zm1 5a2 2 0 0 0-2 2v1H2a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1h-1v-1a2 2 0 0 0-2-2H5zm7 2v3a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1z\"/>\r\n                            </svg>\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                        <Table size=\"sm\" className=\"bg-white rounded\" striped bordered hover responsive>\r\n                                        <thead className=\"bg-primary\">\r\n                                            <tr>\r\n                                                <th>\r\n                                                    Account Number\r\n                                                </th>\r\n                                                <th>\r\n                                                    Account Holder\r\n                                                </th>\r\n                                                <th>\r\n                                                   Deposited Amount\r\n                                                </th>\r\n                                                <th>\r\n                                                   Deposited Date\r\n                                                </th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {agentCollectionDetails.map((data,id)=>data.is_deposited?(<tr key={id}>\r\n                                                <td>{data.account_number}</td>\r\n                                                <td>{data.account_holder_name}</td><td>{data.deposited_amount}</td><td>{data.deposited_date}</td>\r\n                                            </tr>):null)}\r\n                                        </tbody>\r\n                                    </Table>\r\n                        </Card.Body>\r\n                        </Card>\r\n\r\n                </Col>\r\n                </Row>\r\n                {/* {agentCollections.map((agent,idx) => (\r\n                    <Accordion key={idx}>\r\n                        <Card>\r\n                            <Accordion.Toggle onClick={()=>{console.log(\"gitt\");getAgentCollections(agent.agent_id)}} style={{ \"cursor\": \"pointer\" }} as={Card.Header} eventKey=\"0\">\r\n                                <b style={{\"color\":\"blue\"}}><u>{agent.agent_name} - Rs. {agent.total} </u></b>\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-caret-down-fill float-right\" viewBox=\"0 0 16 16\">\r\n                                    <path d=\"M7.247 11.14 2.451 5.658C1.885 5.013 2.345 4 3.204 4h9.592a1 1 0 0 1 .753 1.659l-4.796 5.48a1 1 0 0 1-1.506 0z\" />\r\n                                </svg>\r\n                            </Accordion.Toggle>\r\n                            <Accordion.Collapse eventKey=\"0\">\r\n                                <Card.Body>\r\n                                    <Table size=\"sm\" className=\"bg-white rounded\" striped bordered hover responsive>\r\n                                        <thead className=\"bg-primary\">\r\n                                            <tr>\r\n                                                <th>\r\n                                                    Account Number\r\n                                                </th>\r\n                                                <th>\r\n                                                   Deposited Amount\r\n                                                </th>\r\n                                                <th>\r\n                                                   Deposited Date\r\n                                                </th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {agentCollectionDetails[agent.agent_id].map((data,id)=>data.is_deposited?(<tr key={id}>\r\n                                                <td>{data.account_number}</td><td>{data.deposited_amount}</td><td>{data.deposited_date}</td>\r\n                                            </tr>):null)}\r\n                                        </tbody>\r\n                                    </Table>\r\n                                </Card.Body>\r\n                            </Accordion.Collapse>\r\n                        </Card>\r\n                    </Accordion>\r\n\r\n                ))} */}\r\n            </Container>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default RdLadger;","import React, { useState, useEffect,useRef } from 'react';\r\nimport dashboard from '../../models/dashboard'\r\nimport { Table, Button, Row, Col, Card, Spinner, ProgressBar } from 'react-bootstrap';\r\nimport moment from 'moment';\r\nimport { useReactToPrint } from 'react-to-print';\r\n\r\nfunction LadgerSavingAccount(props) {\r\n    const [ladger, setLadger] = useState([]);\r\n    const [progress, setProgress] = useState(0);\r\n    const emiDetailsRef = useRef();\r\n\r\n    const handlePrintEmiDetail = useReactToPrint({\r\n        content: () => emiDetailsRef.current,\r\n        documentTitle:\"AA2-Saving-account-ladger\",\r\n      });\r\n      let balance = 0;\r\n      useEffect(() => {\r\n        fetchLadger();\r\n        //   async function fetchData() {\r\n        //       let received = [];\r\n        //       let paid = [];\r\n        //       let ladgerArray = [];\r\n        //       received = await getReceivedAmount();\r\n        //       paid = await getPaidAmount();\r\n        //       ladgerArray = [...received, ...paid];\r\n        //       ladgerArray.sort(compare);\r\n        //       setLadger(ladgerArray);\r\n        //     }\r\n        //     fetchData();\r\n      }, [])\r\n      const fetchLadger = async()=>{\r\n          try {\r\n                setProgress(10);\r\n                let response = await dashboard.DashboardModel.getSavingAccountLadger();\r\n                setProgress(50);\r\n                if (response.statusCode == 200) {\r\n                    let result = response.body.message.map(val=>{\r\n                        return {\r\n                          \"date\": moment(val.deposited_date).format(\"DD-MM-yyyy\"),\r\n                          \"particular\":val.debited_amount!=null && val.is_account_closed!=null?`Close Account ${val.account_number}`:`Credit account ${val.account_number}`,\r\n                          \"cr\": val.is_deposited==1?val.deposited_amount:\"\",\r\n                          \"dr\": val.is_deposited==0 && val.debited_amount?val.debited_amount:\"\",\r\n                       }\r\n                    })\r\n                    setProgress(100);\r\n                    setLadger(result);\r\n                }\r\n          } catch (error) {\r\n            setProgress(100);\r\n\r\n          }\r\n      }\r\n    //   const getReceivedAmount = async () => {\r\n    //       try {\r\n    //           setProgress(10);\r\n    //           let response = await dashboard.DashboardModel.getReceivedAmount();\r\n    //           setProgress(50);\r\n    //           if (response.statusCode == 200) {\r\n    //               let emiLadger = []\r\n    //               let processingFeeLadger = []\r\n    //               let data = []\r\n    //               emiLadger = response.body.message?.emis.map((val, idx) => {\r\n    //                   return {\r\n    //                       \"date\": moment(val.EMI_date).format(\"DD-MM-yyyy\"),\r\n    //                       \"particular\": `EMI received Loan Account - ${val.loan_account_no}`,\r\n    //                       \"cr\": val.EMI_amount,\r\n    //                       \"dr\": \"\",\r\n    //                   }\r\n    //               });\r\n    //               processingFeeLadger = response.body.message?.processingFee.map((val, idx) => {\r\n    //                   return {\r\n    //                       \"date\": moment(val.created_at).format(\"DD-MM-yyyy\"),\r\n    //                       \"particular\": val.particular,\r\n    //                       \"cr\": val.amount,\r\n    //                       \"dr\": \"\",\r\n    //                   }\r\n    //               });\r\n    //                data = [...emiLadger, ...processingFeeLadger];\r\n    //                return data;\r\n    //               // data.sort(compare);\r\n    //               // setLadger(data);\r\n    //           } else {\r\n    //               // setLadger([]);\r\n    //               return [];\r\n    //           }\r\n    //       } catch (error) {\r\n    //           setProgress(100);\r\n    //       }\r\n    //   }\r\n    //   const getPaidAmount = async () => {\r\n    //       try {\r\n    //           setProgress(70);\r\n    //           let response = await dashboard.DashboardModel.getPaidAmount();\r\n    //           setProgress(90);\r\n    //           if (response.statusCode == 200) {\r\n    //               let expensesLadger = []\r\n    //               let loanLadger = []\r\n    //               let data = []\r\n    //               expensesLadger = response.body.message?.expenses.map((val, idx) => {\r\n    //                   return {\r\n    //                       \"date\": moment(val.date_of_expense).format(\"DD-MM-yyyy\"),\r\n    //                       \"particular\": val.expense_type,\r\n    //                       \"cr\": \"\",\r\n    //                       \"dr\": val.amount,\r\n    //                   }\r\n    //               });\r\n    //               loanLadger = response.body.message?.loan.map((val, idx) => {\r\n    //                   return {\r\n    //                       \"date\": moment(val.application_date).format(\"DD-MM-yyyy\"),\r\n    //                       \"particular\": `Loan disbursed to ${val.member_name} - Loan account ${val.loan_account_no}`,\r\n    //                       \"dr\": val.loan_amount,\r\n    //                       \"cr\": \"\",\r\n    //                   }\r\n    //               });\r\n    //                data = [ ...expensesLadger, ...loanLadger];\r\n    //                setProgress(100);\r\n    //                return data;\r\n    //               // data.sort(compare);\r\n    //               // setLadger(data);\r\n    //           } else {\r\n    //               //setLadger([]);\r\n    //               return [];\r\n    //           }\r\n    //       } catch (error) {\r\n    //           setProgress(100);\r\n    //       }\r\n    //   }\r\n    //   const compare = (a, b) => {\r\n    //       if (a.date < b.date) {\r\n    //           return -1;\r\n    //       }\r\n    //       if (a.date > b.date) {\r\n    //           return 1;\r\n    //       }\r\n    //       return 0;\r\n    //   }\r\n      const calculateTotal = (dr, cr) => {\r\n          let total = balance;\r\n          balance = dr != \"\" ? total - parseFloat(dr) : total + parseFloat(cr);\r\n          return balance;\r\n      }\r\n      const formatAmount = (amount) => {\r\n          return amount ? amount.toString().replace(/.(?=(..)*...$)/g, '$&,') : \"\";\r\n      }\r\n  \r\n      return (\r\n          <>\r\n              <Row >\r\n                  <Col>\r\n                  \r\n                      <Card border=\"success\" header\r\n                          key={0}\r\n                          text={'dark'}\r\n                          \r\n                          className=\"m-2\">\r\n                          <Card.Header className=\"bg-success text-center\"><b>Ledger </b>\r\n                          <svg style={{cursor:'pointer',float:\"right\"}} onClick={handlePrintEmiDetail} xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" className=\"bi bi-printer mb-2\" viewBox=\"0 0 16 16\">\r\n              <path d=\"M2.5 8a.5.5 0 1 0 0-1 .5.5 0 0 0 0 1z\"/>\r\n              <path d=\"M5 1a2 2 0 0 0-2 2v2H2a2 2 0 0 0-2 2v3a2 2 0 0 0 2 2h1v1a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-1h1a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-1V3a2 2 0 0 0-2-2H5zM4 3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v2H4V3zm1 5a2 2 0 0 0-2 2v1H2a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1h-1v-1a2 2 0 0 0-2-2H5zm7 2v3a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1z\"/>\r\n              </svg>\r\n                          </Card.Header>\r\n                          {progress<100 ? <Card.Body className=\"text-center\"><div style={{ top: '50%',position:\"relative\" }}><ProgressBar style={{\"position\":\"relative\",\"width\":\"30%\",\"left\":\"40%\"}} striped variant=\"info\" now={progress} label={`${progress}%`} /></div></Card.Body> :\r\n                              <Card.Body>\r\n                                  <Table ref={emiDetailsRef} size={\"sm\"} className=\"bg-white rounded small\" bordered responsive>\r\n                                      <thead>\r\n                                          <tr className=\"bg-success\">\r\n                                              <th>SR No.</th>\r\n                                              <th>Date</th>\r\n                                              <th>Particular</th>\r\n                                              <th>DR</th>\r\n                                              <th>CR</th>\r\n                                              <th>Balance</th>\r\n                                          </tr>\r\n                                      </thead>\r\n                                      <tbody>\r\n                                          {ladger.map((val, idx) => <tr>\r\n                                              <td>\r\n                                                  {idx + 1}\r\n                                              </td>\r\n                                              <td>\r\n                                                  {val.date}\r\n                                              </td>\r\n                                              <td>\r\n                                                  {val.particular}\r\n                                              </td>\r\n                                              <td>\r\n                                                  {val.dr}\r\n                                              </td>\r\n                                              <td>\r\n                                                  {val.cr}\r\n                                              </td>\r\n                                              <td>\r\n                                                  {calculateTotal(val.dr, val.cr).toFixed(2)}\r\n                                              </td>\r\n  \r\n                                          </tr>)}\r\n                                      </tbody>\r\n                                  </Table>\r\n                              </Card.Body>}\r\n                      </Card>\r\n                  </Col>\r\n              </Row>\r\n  \r\n          </>\r\n      );\r\n    }\r\n\r\nexport default LadgerSavingAccount;","import React, { useEffect, useState, useMemo } from 'react';\r\nimport { Table, Button, Container, Row, Col, Modal, Pagination, Form } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport RDApplications from '../../models/RDApplications';\r\nimport User from '../../models/user';\r\nimport Loader from '../layout/Loader';\r\nimport moment from 'moment';\r\nimport { useTable, useSortBy, usePagination, useFilters } from 'react-table'\r\nimport rDApplications from '../../models/RDApplications';\r\n\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nfunction RdPaid(props) {\r\n    const auth = useSelector(state => state.auth);\r\n    let history = useHistory();\r\n    const [isShowLoader, setisShowLoader] = useState(false);\r\n    const [userList, setUserList] = useState([]);\r\n    const [rdAccounts, setRdAccounts] = useState([]);\r\n    const [showDeleteModel, setShowDeleteModel] = useState(false)\r\n    const [amount, setAmount] = useState(\"\");\r\n    const [paidID, setPaidID] = useState({\r\n        \"account_number\":\"\",\r\n        \"deposited_date\":\"\",\r\n        \"deposited_amount\":\"\",\r\n        \"is_deposited\":1,\r\n        \"is_account_open_amount\":0\r\n    })\r\n\r\n    useEffect(() => {\r\n        getMemberGroup();\r\n    }, [])\r\n\r\n    const data = useMemo(\r\n        () =>\r\n            rdAccounts.map((record, index) => {\r\n                return {\r\n                    col3: record.agent_name,\r\n                    col1: record.account_number,\r\n                    col2: record.account_holder_name,\r\n                    col4: record.address,\r\n                    col5: moment(record.deposited_date).format(\"DD-MM-YYYY\").toString(),\r\n                    col8: record.deposited_amount,\r\n                    col6: record.totalDeposited,\r\n                    col9: record,\r\n                }\r\n            }\r\n            )\r\n        ,\r\n        [rdAccounts]\r\n    )\r\n\r\n    const columns = useMemo(\r\n        () => [\r\n            {\r\n                Header: 'Agent name',\r\n                accessor: 'col3', // accessor is the \"key\" in the data\r\n                allowFilter: true,\r\n\r\n            },\r\n            {\r\n                Header: 'Account number',\r\n                accessor: 'col1', // accessor is the \"key\" in the data\r\n                allowFilter: true,\r\n            },\r\n            {\r\n                Header: 'Account holder',\r\n                accessor: 'col2',\r\n                allowFilter: true\r\n            },\r\n            {\r\n                Header: 'Address',\r\n                accessor: 'col4',\r\n                allowFilter: true\r\n            },\r\n            {\r\n                Header: 'Deposit date',\r\n                accessor: 'col5',\r\n                allowFilter: true\r\n            },\r\n            {\r\n                Header: 'Deposited Amount',\r\n                accessor: 'col8',\r\n                allowFilter: true\r\n            },\r\n\r\n            {\r\n                Header: 'Account Balance',\r\n                accessor: 'col6',\r\n                allowFilter: true\r\n            },\r\n            {\r\n                Header: 'Action',\r\n                accessor: 'col9',\r\n                allowFilter: false,\r\n                Cell: emi => <Button size={\"sm\"} variant=\"success\" onClick={() => paidHandle(emi.value.account_number)}>Deposit</Button>\r\n\r\n            }\r\n        ],\r\n        []\r\n    )\r\n    const paidHandle = (account_number) => {\r\n        // let dataArray = deposited_date.split('-');\r\n        setPaidID({\r\n            \"account_number\":account_number,\r\n        });\r\n        setShowDeleteModel(true);\r\n    }\r\n\r\n    const getMemberGroup = () => {\r\n        setisShowLoader(true);\r\n        let formatedAccounts = [];\r\n        let payload = auth.id;\r\n        if (auth.role == \"admin\" || auth.role == \"maker\" || auth.role == \"checker\") {\r\n            payload = \"all\";\r\n        }\r\n        RDApplications.RDApplicationsModel.getPaidDetails(payload).then(async (res) => {\r\n            setisShowLoader(false);\r\n            if (res.statusCode == 200) {\r\n                let list = await User.Auth.getUsers();\r\n                //setUserList(list);\r\n                formatedAccounts = res.body.message.map(ac => {\r\n                    let obj = list.body.message.filter(user => user.id == ac.agent_id)\r\n                    ac[\"agent_name\"] = obj[0][\"name\"];\r\n                    return ac;\r\n                });\r\n                setRdAccounts(formatedAccounts);\r\n            } else {\r\n                setRdAccounts([]);\r\n            }\r\n        })\r\n    }\r\n    function DefaultColumnFilter({\r\n        column: { filterValue, preFilteredRows, setFilter },\r\n    }) {\r\n        const count = preFilteredRows.length\r\n\r\n        return (\r\n            <input\r\n                className=\"form-control\"\r\n                value={filterValue || ''}\r\n                onChange={e => {\r\n                    setFilter(e.target.value || undefined)\r\n                }}\r\n                placeholder={`Search ${count} records...`}\r\n            />\r\n        )\r\n    }\r\n    const defaultColumn = React.useMemo(\r\n        () => ({\r\n            // Default Filter UI\r\n            Filter: DefaultColumnFilter,\r\n        }),\r\n        []\r\n    )\r\n    const paidEMI = async () => {\r\n        try {\r\n            if(amount !=\"\" && amount !=0){\r\n                setShowDeleteModel(false);\r\n                setisShowLoader(true);\r\n                let payload = {\r\n                    account_number:paidID.account_number,\r\n                    agent_id:auth.id,\r\n                    deposited_amount:amount,\r\n                    deposited_date:moment().format(\"YYYY-MM-DD\"),\r\n                    is_deposited:1,\r\n                    is_account_open_amount:0,\r\n                }\r\n                let response = await rDApplications.RDApplicationsModel.postDeposit(payload);\r\n                setisShowLoader(false);\r\n                if (response.statusCode == 200) {\r\n                    alert(response.body.message);\r\n                    getMemberGroup();\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.log(error.response.body.message);\r\n            setisShowLoader(false);\r\n        }\r\n    }\r\n\r\n    const paginate = (totalPage) => {\r\n        let pageNumberArray = [];\r\n        for (let i = 1; i <= totalPage; i++) {\r\n            pageNumberArray.push(i);\r\n        }\r\n        return (\r\n            <Pagination>\r\n                <Pagination.First onClick={() => gotoPage(0)} />\r\n                <Pagination.Prev onClick={() => previousPage()} disabled={!canPreviousPage} />\r\n                {pageNumberArray.map(num => <Pagination.Item key={num} active={num === (pageIndex + 1)} onClick={() => gotoPage(num - 1)}>{num}</Pagination.Item>)}\r\n                <Pagination.Next onClick={() => nextPage()} disabled={!canNextPage} />\r\n                <Pagination.Last onClick={() => gotoPage(totalPage - 1)} />\r\n            </Pagination>\r\n        );\r\n\r\n    }\r\n    const handleAmount =(e)=>{\r\n        setAmount(e.target.value)\r\n    }\r\n\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n        pageOptions,\r\n        page,\r\n        pageCount,\r\n        state: { pageIndex, pageSize },\r\n        gotoPage,\r\n        previousPage,\r\n        nextPage,\r\n        setPageSize,\r\n        canPreviousPage,\r\n        canNextPage,\r\n    } = useTable({ columns, data, defaultColumn, initialState: { pageIndex: 0 } }, useFilters, useSortBy, usePagination)\r\n    return (\r\n        <>\r\n                <Modal show={showDeleteModel} onHide={() => setShowDeleteModel(false)}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Deposit Money </Modal.Title>\r\n                </Modal.Header>\r\n                    <Modal.Body>                        \r\n                        <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                            <Form.Label>Amount</Form.Label>\r\n                            <Form.Control\r\n                                name=\"amount\"\r\n                                type=\"number\"\r\n                                onChange={handleAmount}\r\n                                value={amount}\r\n                            />\r\n                            {/* {formik.touched.account_holder_name && formik.errors.account_holder_name ? (\r\n                                <div class=\"text-danger\">{formik.errors.account_holder_name}</div>\r\n                            ) : null} */}\r\n                        </Form.Group>\r\n                    </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={() => setShowDeleteModel(false)}>\r\n                        Cancel\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={() => paidEMI()}>\r\n                        Deposit\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            <Loader show={isShowLoader} />\r\n            \r\n                <Row>\r\n                    <Col>\r\n                        <div className=\"text-right\">\r\n                            {paginate(pageCount)}\r\n                        </div>\r\n\r\n                        <Table {...getTableProps()} className=\"shadow-lg p-3 mb-5 bg-white rounded small\" striped bordered hover responsive>\r\n                            <thead className=\"bg-primary\">\r\n                                {headerGroups.map(headerGroup => (\r\n                                    <tr {...headerGroup.getHeaderGroupProps()}>\r\n                                        {headerGroup.headers.map(column => (\r\n                                            <th\r\n                                                {...column.getHeaderProps(column.getSortByToggleProps())}\r\n                                            >\r\n                                                {column.render('Header')}\r\n                                                <span>\r\n                                                    {column.isSorted ? (column.isSortedDesc ? ' 🔽' : ' 🔼') : ''}\r\n                                                </span>\r\n                                                <div>{column.allowFilter ? column.render('Filter') : null}</div>\r\n                                            </th>\r\n                                        ))}\r\n                                    </tr>\r\n                                ))}\r\n                            </thead>\r\n                            <tbody{...getTableBodyProps()}>\r\n\r\n                                {page.map(row => {\r\n                                    prepareRow(row)\r\n                                    return (\r\n                                        <tr {...row.getRowProps()}>\r\n                                            {row.cells.map(cell => {\r\n                                                console.log(cell);\r\n                                                // if(cell.column.id !=\"col5\"){                                \r\n                                                return (\r\n                                                    <td {...cell.getCellProps()}>\r\n                                                        {cell.render('Cell')}\r\n                                                    </td>\r\n                                                )\r\n                                            })}\r\n                                        </tr>\r\n                                    )\r\n                                })}\r\n\r\n                            </tbody>\r\n                        </Table>\r\n                        <div className=\"text-right\">\r\n                            {paginate(pageCount)}\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n           \r\n        </>\r\n    );\r\n}\r\n\r\nexport default RdPaid;","import React from 'react';\r\nimport { Container, Tab, Tabs } from 'react-bootstrap';\r\nimport RdDeposites from './RdDeposites';\r\nimport RdPaid from './RdPaid';\r\n\r\nfunction RdCollectionTabs(props) {\r\n    return (\r\n        <>\r\n        <Container fluid>\r\n        <h2 className=\"text-info text-center\">RD applications</h2>\r\n            <Tabs\r\n                defaultActiveKey=\"home\"\r\n                transition={false}\r\n                id=\"noanim-tab-example\"\r\n                className=\"mb-3\">\r\n                <Tab eventKey=\"home\" title=\"Deposit\">\r\n                    <RdDeposites/>\r\n                </Tab>\r\n                <Tab eventKey=\"profile\" title=\"Paid\">\r\n                    <RdPaid />\r\n                </Tab>\r\n            </Tabs>                    \r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default RdCollectionTabs;","import React from 'react'\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport Login from './components/users/Login'\r\nimport InnerLayout from './components/layout/InnerLayout'\r\nimport MemberGroup from  './components/masterRecord/memberGroup/MemberGroup';\r\nimport AddMemberGroup from  './components/masterRecord/memberGroup/AddMemberGroup';\r\nimport AddMember from  './components/masterRecord/member/AddMember';\r\nimport Member from  './components/masterRecord/member/Member';\r\nimport MemberViewDetails from  './components/masterRecord/member/MemberViewDetails';\r\nimport Scheme from  './components/groupLoan/Scheme';\r\nimport AddScheme from  './components/groupLoan/AddScheme';\r\nimport Dashboard from './components/dashboard/Dashboard';\r\nimport LoanApplication from  './components/groupLoan/LoanApplication';\r\nimport LoanApproval from  './components/groupLoan/LoanApproval';\r\nimport DisburseLoan from  './components/groupLoan/DisburseLoan';\r\nimport LoanApprovalDetails from  './components/groupLoan/LoanApprovalDetails';\r\nimport AllApplications from  './components/groupLoan/AllApplications';\r\nimport EmiCalculator from  './components/groupLoan/EmiCalculator';\r\nimport DueEmis from './components/emis/DueEmis';\r\nimport Village from './components/groupLoan/Village';\r\nimport AddVillage from './components/groupLoan/AddVillage';\r\nimport Expense from './components/expenses/Expense';\r\nimport AddExpense from './components/expenses/AddExpense';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport ProcessingFee from './components/processing-fee/ProcessingFee';\r\nimport AddProcessingFee from './components/processing-fee/AddProcessingFee';\r\nimport Ladger from './components/dashboard/Ladger';\r\nimport RdApplications from './components/rdModule/RdApplications'\r\nimport RdDetails from './components/rdModule/RdDetails'\r\nimport openNewRdAccount from './components/rdModule/openNewRdAccount'\r\nimport RdDeposites from './components/rdModule/RdDeposites';\r\nimport CompleteLadger from './components/dashboard/CompleteLadger';\r\nimport RdLadger from './components/rdModule/RdLadger';\r\nimport LadgerSavingAccount from './components/dashboard/LadgerSavingAccount';\r\nimport RdCollectionTabs from './components/rdModule/RdCollectionTabs';\r\nfunction Routes() {\r\n    return (\r\n        <BrowserRouter>\r\n            <Switch>\r\n            <InnerLayout exact path=\"/\" component={Dashboard}/>\r\n            <InnerLayout exact path=\"/memberGroup\" component={MemberGroup} />\r\n            <InnerLayout exact path=\"/addMemberGroup\" component={AddMemberGroup} />\r\n            <InnerLayout exact path=\"/addMember\" component={AddMember} />\r\n            <InnerLayout exact path=\"/addMember\" component={AddMember} />\r\n            <InnerLayout exact path=\"/scheme\" component={Scheme} />\r\n            <InnerLayout exact path=\"/viewMemberDetail\" component={MemberViewDetails} />\r\n            <InnerLayout exact path=\"/addScheme\" component={AddScheme} />\r\n            <InnerLayout exact path=\"/loanApplication\" component={LoanApplication} />\r\n            <InnerLayout exact path=\"/loanApproval\" component={LoanApproval} />\r\n            <InnerLayout exact path=\"/disburseLoan\" component={DisburseLoan} />\r\n            <InnerLayout exact path=\"/loanApprovalDetails\" component={LoanApprovalDetails} />\r\n            <InnerLayout exact path=\"/allApplications\" component={AllApplications} />\r\n            <InnerLayout exact path=\"/emiCalculator\" component={EmiCalculator} />\r\n            <InnerLayout exact path=\"/dueEmis\" component={DueEmis} />\r\n            <InnerLayout exact path=\"/Village\" component={Village} />\r\n            <InnerLayout exact path=\"/addVillage\" component={AddVillage} />\r\n            <InnerLayout exact path=\"/expense\" component={Expense} />\r\n            <InnerLayout exact path=\"/addExpense\" component={AddExpense} />\r\n            <InnerLayout exact path=\"/processingFee\" component={ProcessingFee} />\r\n            <InnerLayout exact path=\"/addProcessingFee\" component={AddProcessingFee} />\r\n            <InnerLayout exact path=\"/addProcessingFee\" component={AddProcessingFee} />\r\n            <InnerLayout exact path=\"/ladger\" component={Ladger} />\r\n            <InnerLayout exact path=\"/rdApplications\" component={RdApplications} />\r\n            <InnerLayout exact path=\"/rdDetails\" component={RdDetails} />\r\n            <InnerLayout exact path=\"/openNewRdAccount\" component={openNewRdAccount} />\r\n            <InnerLayout exact path=\"/rdDeposites\" component={RdDeposites} />\r\n            <InnerLayout exact path=\"/CompleteLadger\" component={CompleteLadger} />\r\n            <InnerLayout exact path=\"/ladgerSavingAccount\" component={LadgerSavingAccount} />\r\n            <InnerLayout exact path=\"/rdLadger\" component={RdLadger} />\r\n            <InnerLayout exact path=\"/rdCollectionTabs\" component={RdCollectionTabs} />\r\n                <Route path=\"/login\" component={Login} />\r\n                <InnerLayout path=\"/member\" component={Member} />\r\n\r\n            </Switch>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default Routes\r\n","import './App.css';\r\nimport { Provider } from 'react-redux';\r\nimport { store} from './store';\r\n\r\nimport Routes from './Routes';\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n    <div className=\"App\">\r\n      {/* <Header/> */}\r\n      <Routes/>\r\n    </div>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","import superagentPromise from 'superagent-promise';\r\nimport _superagent from 'superagent';\r\n\r\nexport const superagent = superagentPromise(_superagent, global.Promise);\r\nexport const API_ROOT = window.location.hostname==\"localhost\"?\"https://dev-microfinance.herokuapp.com/api\": '/api';\r\n\r\n\r\nconst encode = encodeURIComponent;\r\nconst responseBody = res => res;\r\nconst errorBody = err =>{\r\n  return err.response\r\n} ;\r\nlet token = null;\r\nconst tokenPlugin = req => {\r\n  if (token) {\r\n    req.set('Token', token);\r\n  }\r\n}\r\nexport const requests = {\r\n    del: url =>\r\n      superagent.del(`${API_ROOT}${url}`).then(responseBody,errorBody),\r\n    get: url =>\r\n      superagent.get(`${API_ROOT}${url}`).then(responseBody,errorBody),\r\n    // put: (url, body) =>\r\n    //   superagent.put(`${API_ROOT}${url}`, body).use(tokenPlugin).then(responseBody),\r\n    post: (url, body) =>\r\n      superagent.post(`${API_ROOT}${url}`, body).then(responseBody,errorBody)\r\n  };","import superagentPromise from 'superagent-promise';\r\nimport _superagent from 'superagent';\r\n\r\nconst superagent = superagentPromise(_superagent, global.Promise);\r\n\r\nconst API_ROOT = '/api';\r\n\r\nconst encode = encodeURIComponent;\r\nconst responseBody = res => res;\r\nconst errorBody = err =>{\r\n  return err.response\r\n} ;\r\nlet token = null;\r\nconst tokenPlugin = req => {\r\n  if (token) {\r\n    req.set('Token', token);\r\n  }\r\n}\r\n\r\nconst requests = {\r\n  // del: url =>\r\n  //   superagent.del(`${API_ROOT}${url}`).use(tokenPlugin).then(responseBody),\r\n  get: url =>\r\n    superagent.get(`${API_ROOT}${url}`).use(tokenPlugin).then(responseBody,errorBody),\r\n  // put: (url, body) =>\r\n  //   superagent.put(`${API_ROOT}${url}`, body).use(tokenPlugin).then(responseBody),\r\n  post: (url, body) =>\r\n    superagent.post(`${API_ROOT}${url}`, body).use(tokenPlugin).then(responseBody,errorBody)\r\n};\r\n\r\nconst Auth = {\r\n  login: (email, password) =>\r\n    requests.post('/user/login',  { email, password } ),\r\n  register: (userDetails) =>\r\n    requests.post('/user/registration',  userDetails ),\r\n};\r\n\r\nconst Order = {\r\n  getProductsByCat:(catname)=>\r\n  requests.get(`/products?category=${catname}`),\r\n  getCatgoryInitialData:()=>{\r\n    return [superagent.get(`${API_ROOT}/category`),superagent.get(`${API_ROOT}/products`)]\r\n  },\r\n  placeOrder:(data)=>{\r\n    //requests.post(\"/orders/place-order\",data)\r\n    return superagent.post(`${API_ROOT}/orders/place-order`, data).use(tokenPlugin)\r\n  },\r\n  getCategoryAdmin(){\r\n    return superagent.get(`${API_ROOT}/category`).use(tokenPlugin)\r\n  },\r\n  getOrdersHistoryAdmin(page){\r\n    return superagent.get(`${API_ROOT}/orders/admin-order-list?page=${page}`).use(tokenPlugin)\r\n  },\r\n  getOrderHistoryByUserEmail(){\r\n    return superagent.get(`${API_ROOT}/orders/get-order`).use(tokenPlugin)\r\n  },\r\n  addCategory(data){\r\n    return superagent.post(`${API_ROOT}/category`,data).use(tokenPlugin)\r\n  },\r\n  deleteCategory(data){\r\n    return superagent.del(`${API_ROOT}/category?name=${data}`,data).use(tokenPlugin)\r\n  },\r\n  editCategory(data){\r\n    return superagent.put(`${API_ROOT}/category`,data).use(tokenPlugin)\r\n  },\r\n  getProducts(){\r\n    return superagent.get(`${API_ROOT}/products`).use(tokenPlugin)\r\n  },\r\n  deleteProduct(data){\r\n    return superagent.del(`${API_ROOT}/products?title=${data}`,data).use(tokenPlugin)\r\n  },\r\n  addProducts(data){\r\n    return superagent.post(`${API_ROOT}/products`,data).use(tokenPlugin)\r\n  },\r\n  editProducts(data){\r\n    return superagent.put(`${API_ROOT}/products`,data).use(tokenPlugin)\r\n  }\r\n};\r\nconst Payment = {\r\n  getRazorpayOrderId(data){\r\n    return superagent.post(`${API_ROOT}/payment/food-create-order-no`,data).use(tokenPlugin)\r\n  },\r\n  updatePaymentStatus(data){\r\n    return superagent.post(`${API_ROOT}/payment/updatePaymentStatus`,data).use(tokenPlugin)\r\n  }\r\n};\r\nconst Finance = {\r\n  fillItr(data){\r\n    return superagent.post(`${API_ROOT}/finance/fill-itr`,data).use(tokenPlugin)\r\n  },\r\n  getAdminItr(){\r\n    return superagent.get(`${API_ROOT}/finance/fill-itr`).use(tokenPlugin)\r\n  },\r\n  uploadForm16(data){\r\n    return superagent.post(`${API_ROOT}/finance/form16Upload`,data).use(tokenPlugin)\r\n  },\r\n  getAdminForm16(){\r\n    return superagent.get(`${API_ROOT}/finance/form16Upload`).use(tokenPlugin)\r\n  },\r\n  downloadForm16(data){\r\n    return superagent.get(`${API_ROOT}/download?fileName=${data.fileName}`).use(tokenPlugin)\r\n  }\r\n \r\n}\r\nconst Inquery = {\r\n  submitInquery(data){\r\n    return superagent.post(`${API_ROOT}/user/submitInquery`,data).use(tokenPlugin)\r\n  }\r\n}\r\nexport default {\r\n  Auth,\r\n  Order,\r\n  Payment,\r\n  Finance,\r\n  Inquery,\r\n  getToken:()=>{return token},\r\n  setToken: _token => { token = _token; }\r\n};"],"sourceRoot":""}