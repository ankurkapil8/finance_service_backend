{"version":3,"sources":["models/BaseUrl.js","models/interceptor-middleware.js","constants/actionTypes.js","reducers/order.js","reducers/product.js","reducer.js","reducers/auth.js","reducers/common.js","middleware.js","store.js","components/home/InqueryForm.js","components/layout/SectionMenu.js","components/layout/SectionOffers.js","components/layout/LogedInView.js","components/layout/LogedOutView.js","components/layout/Header.js","components/home/Home.js","components/layout/ListErrors.js","components/users/Registration.js","models/user.js","components/layout/Loader.js","components/users/Login.js","components/layout/InnerHeader.js","components/layout/Leftbar.js","components/layout/TopNav.js","components/layout/ErrorBoundary.js","components/layout/InnerLayout.js","components/users/UserOrderHistory.js","components/users/user-actions/UserAction.js","models/masterRecord.js","components/masterRecord/memberGroup/MemberGroup.js","components/masterRecord/memberGroup/AddMemberGroup.js","models/memberDetails.js","components/masterRecord/member/AddMember.js","components/masterRecord/member/Member.js","components/masterRecord/member/MemberViewDetails.js","models/groupLoan.js","components/groupLoan/Scheme.js","components/groupLoan/AddScheme.js","models/dashboard.js","models/processingFee.js","models/expenseRecord.js","components/dashboard/Dashboard.js","components/groupLoan/LoanApplication.js","components/groupLoan/LoanApproval.js","components/groupLoan/DisburseLoan.js","components/groupLoan/EmiCard.js","components/print/MemberPrint.js","components/print/CompanyDetailsPrint.js","constants/constants.js","components/print/MemberKYCPrint.js","components/print/EmiCardPrint.js","components/print/BorrowerPrint.js","components/groupLoan/CloseAccount.js","components/groupLoan/LoanApprovalDetails.js","components/groupLoan/AllApplications.js","components/groupLoan/EmiCalculator.js","components/emis/DueEmis.js","components/dashboard/PaidDetailView.js","components/dashboard/RecievedDetailView.js","models/profit.js","components/profit/Profit.js","components/processing-fee/ProcessingFee.js","components/processing-fee/AddProcessingFee.js","components/dashboard/OutstandingDetailView.js","components/expenses/Expense.js","components/expenses/AddExpense.js","components/users/ListUser.js","components/users/AddUser.js","Routes.js","App.js","reportWebVitals.js","index.js","agent.js"],"names":["HOST","superagentPromise","_superagent","global","Promise","window","location","hostname","API_ROOT","encodeURIComponent","axios","interceptors","request","use","successfulReq","jwt","sessionStorage","getItem","headers","error","reject","response","successRes","formatedResponse","console","log","toString","href","REDIRECT","LOGIN","LOGOUT","REGISTER","LOGIN_PAGE_UNLOADED","REGISTER_PAGE_UNLOADED","ASYNC_START","ASYNC_END","UPDATE_FIELD_AUTH","ADD_ITEM_INITIAL","INCREASE_QUANTITY","DECREASE_QUANTITY","RESET_ORDER","STORE_EDIT_PRODUCT","GET_EDIT_PRODUCT","UPDATE_PRODUCT_FIELD","CHANGE_PAGE","MESSAGE","defaultState","addedItem","product","appReducer","combineReducers","auth","state","action","type","inProgress","errors","payload","message","role","record","id","statusCode","jwtToken","isLoginSuccess","subtype","key","value","common","page","redirectTo","order","productId","item","_id","quantity","perItemPrice","price","map","data","prod","rootReducer","undefined","promiseMiddleware","store","next","v","then","dispatch","currentView","getState","viewChangeCounter","skipTracking","res","currentState","promise","body","localStorageMiddleware","setItem","agent","setToken","persistConfig","storage","whitelist","pReducer","persistReducer","reducer","createStore","composeWithDevTools","applyMiddleware","persistor","persistStore","InqueryForm","props","useState","fullName","email","business","dob","Date","gender","service","Phone","setState","dobstate","setdobstate","setmessage","loading","setloading","handleChange","e","target","name","Modal","show","isopen","onHide","hide","Header","closeButton","Title","Body","Alert","variant","onClose","dismissible","Form","onSubmit","ev","preventDefault","serviceType","Inquery","submitInquery","reset","Row","Group","as","Col","controlId","Label","Control","onChange","placeholder","selected","date","dateFormat","showYearDropdown","dateFormatCalendar","yearDropdownItemNumber","scrollableYearDropdown","maxDate","defaultValue","readOnly","Button","disabled","Component","LogedInView","currentUser","className","aactiveClassName","to","LogedOutView","useDispatch","history","useHistory","split","isAdmin","isPrimeMember","onClick","push","handleITRPopup","this","connect","Home","ListErrors","Registration","userDetails","submitForm","isLoading","Auth","register","required","Text","React","login","username","password","post","createUser","listUser","get","editUser","put","getUserById","deleteUser","delete","Loader","Spinner","animation","relative","Login","isShowLoader","user","catch","err","changeEmail","onChangeEmail","changePassword","onChangePassword","document","classList","add","onlogout","remove","onUnload","src","autoFocus","InnerHeader","Leftbar","useSelector","useLocation","process","pathname","Nav","Link","eventKey","TopNav","navClick","setNevClick","ErrorBoundary","hasError","errorInfo","children","InnerLayout","component","rest","showSidebar","setshowSidebar","useEffect","innerWidth","checkLogin","toggleSidebar","hasOwnProperty","render","UserOrderHistory","UserAction","getMemberGroups","saveMemberGroups","saveImage","file","MemberGroup","setisShowLoader","memberGroupRecords","setMemberGroupsRecords","getMemberGroup","masterRecord","class","active","Table","group","group_code","group_name","remark","moment","created_at","format","style","top","position","ProgressBar","striped","now","label","AddMemberGroup","values","setValues","isShow","showToast","setShowToast","handleAlertShow","obj","setTimeout","formik","useFormik","initialValues","user_id","validate","resetForm","prevValues","delay","handleSubmit","touched","rows","MemberDetailModel","getMemberDetailsData","member_id","saveMemberDetails","deleteMember","editMember","AddMember","enrollmentDate","setEnrollmentDate","setDob","groups","setGroups","image","setImage","baseURL","replace","getMemberDetails","memberDetails","aadhar_card","member_name","age","marital_status","mobile_number","email_id","member_group_id","pan_card_number","driving_license_number","voter_id_number","ration_card_number","bank_account","bank_ifsc_code","bank_account_holder","enrollment_date","date_of_birth","qualification","spouse","getImage","files","length","fileExtArr","fileExt","formData","FormData","append","status","path","scrollTo","md","alt","Members","showDeleteModel","setShowDeleteModel","deleteID","setDeleteID","memberRecords","setMemberRecords","useMemo","index","col1","col2","col3","col4","col5","col6","columns","accessor","allowFilter","memberRecord","initialData","UpdatedList","filter","member","idx","DefaultColumnFilter","column","filterValue","preFilteredRows","setFilter","count","defaultColumn","Filter","paginate","totalPage","pageNumberArray","i","Pagination","First","gotoPage","Prev","previousPage","canPreviousPage","num","Item","pageIndex","Next","nextPage","canNextPage","Last","useTable","initialState","useFilters","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","pageOptions","pageCount","pageSize","setPageSize","Footer","headerGroup","getHeaderGroupProps","getHeaderProps","getSortByToggleProps","isSorted","isSortedDesc","row","getRowProps","cells","cell","getCellProps","size","EmiModel","calculateEMI","getDueEmis","today","paidEmi","getPaidEmis","loanAccountNo","getAllEmis","getScheme","saveScheme","deleteScheme","getLoanAppInitialData","applyForloan","getApprovalList","getDisburseList","getLoanDetailbyId","approveRejectLoan","getAllLoanApplications","disburseRejectLoan","getSattlementAmount","loan_account_no","closeAccount","Scheme","schemes","setSchemes","getSchemes","groupLoan","scheme","bordered","hover","responsive","scheme_code","scheme_name","max_amount","interest_rate","EMI_type","deleteHandle","AddScheme","Toast","autohide","min","DashboardModel","receivedAmount","paidAmount","countActiveInactive","getProcessingFee","saveProcessingFee","deleteProcessingFee","editProcessingFee","getExpense","saveExpense","deleteExpense","editExpense","Dashboard","setPaidAmount","setReceivedAmount","processingFeeReport","setProcessingFeeReport","setCountActiveInactive","expenseReport","setExpenseReport","totalMainBal","setTotalMainBal","allEmis","setAllEmis","getReport","total","allSettled","processingFee","expenseRecord","totalProcessing","forEach","val","amount","totalExpense","fee","expense","labels","paidCount","notPaidCount","datasets","backgroundColor","borderColor","borderWidth","toFixed","active_accounts","inactive_accounts","unPaidAmount","width","height","options","maintainAspectRatio","ChartJS","ArcElement","Tooltip","Legend","ContextAwareToggle","callback","decoratedOnClick","useContext","AccordionContext","activeEventKey","useAccordionButton","LoanApplication","schemeRecords","setSchemeRecords","selectedScheme","setSelectedScheme","getSchemesAndMembers","all","scheme_id","application_date","address","loan_amount","EMI_payout","tenure","co_borrower_name","co_borrower_aadhar_card","co_borrower_pan_card","co_borrower_ele_bill","co_borrower_relationship","purpose","Accordion","defaultActiveKey","Card","Collapse","selectMember","handleMemberSelection","schems","LoanApproval","loanlist","setLoanlist","getLoanList","loan","loan_id","colSpan","DisburseLoan","EmiCard","border","header","text","handlePrintEMI","xmlns","fill","viewBox","d","showDisburseButton","emiData","paidEmiRecord","EMI","principal","int_amount","outstanding","memo","MemberPrint","loanDetails","rowspan","member_group","CompanyDetailsPrint","maxWidth","maxHeight","toUpperCase","MemberKYCPrint","EmiCardPrint","margin","isMemberRequired","heading","isDeclaration","marginTop","isSign","bottom","textAlign","PureComponent","BorrowerPrint","CloseAccount","sattlementDetails","setSattlementDetails","getDetails","records","fontSize","display","settled_amount","earned_interest","paid_emi_count","LoanApprovalDetails","memberDetailsRef","useRef","applicationRef","useReactToPrint","content","current","documentTitle","handlePrintApplication","emiRef","handlePrintEMICallbak","useCallback","coBorrowerRef","handleCoBorrowerPrint","borrowerRef","handlePrintBorrower","setPaidEmiRecord","isShowEMILoader","setisShowEMILoader","setEmiData","setLoanDetails","setShow","disburseDate","setDisburseDate","handleClose","search","actionTypeParam","URLSearchParams","getLoanDetails","calculateEmi","disburse_date","EmiData","paidData","result","emiDate","EMI_date","actionOnLoan","actionType","actionDisburseLoan","emiCol","emiRecords","applicationRecords","coBorrowRecords","xs","ref","is_approved","is_disbursed","AllApplications","col7","actionStatus","col8","col9","formatedData","Badge","EmiCalculator","calculatedData","setCalculatedData","componentRef","handlePrint","loanStartDate","Container","DueEmis","dueEmis","setDueEmis","paidID","setPaidID","totalEmi","setTotalEmi","getDueEmisRecord","group_loan","remain_EMI","EMI_amount","emi","substring","parseFloat","paidEMI","emidata","InputGroup","FormLabel","selectedDate","loan_table_id","paidHandle","PaidDetailView","loanData","setLoanData","totalAmount","setTotalAmount","getDetailData","sort","a","b","fontWeight","RecievedDetailView","emis","getData","myDate","parseInt","Profit","totalInterestEarned","setTotalInterestEarned","totalPrincipalEarned","setTotalPrincipalEarned","getProfitData","profit","total_interest_earned","total_principal_earned","showMonthYearPicker","ProcessingFee","processingFees","setProcessingFees","getProcessingFees","particular","date_of_processing","AddProcessingFee","getExpenseDetails","ledger","setLedger","concat","formatPaidAmount","formatReceivedAmount","formatProcessingAmount","formatExpenseAmount","isBefore","calculateBalance","credit","debit","expense_type","balance","Expense","setExpense","getExpenses","date_of_expense","AddExpense","ListUser","users","setUsers","getUsers","phone","AddUser","Routes","exact","MemberViewDetails","OutstandingDetailView","Member","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById","superagent","responseBody","errorBody","token","tokenPlugin","req","set","requests","url","Order","getProductsByCat","catname","getCatgoryInitialData","placeOrder","getCategoryAdmin","getOrdersHistoryAdmin","getOrderHistoryByUserEmail","addCategory","deleteCategory","del","editCategory","getProducts","deleteProduct","addProducts","editProducts","Payment","getRazorpayOrderId","updatePaymentStatus","Finance","fillItr","getAdminItr","uploadForm16","getAdminForm16","downloadForm16","fileName","getToken","_token"],"mappings":"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","file":"static/js/main.2d023a11.chunk.js","sourcesContent":["import superagentPromise from 'superagent-promise';\r\nimport _superagent from 'superagent';\r\nimport axios from \"./interceptor-middleware\";\r\nexport const superagent = superagentPromise(_superagent, global.Promise);\r\nexport const HOST = window.location.hostname==\"localhost\"?\"http://localhost:3001/\": '/';\r\nexport const API_ROOT = `${HOST}api`\r\n\r\n\r\nconst encode = encodeURIComponent;\r\nconst responseBody = res => res;\r\nconst errorBody = err =>{\r\n  return err.response\r\n} ;\r\nlet token = null;\r\nconst tokenPlugin = req => {\r\n  if (token) {\r\n    req.set('Token', token);\r\n  }\r\n}\r\nexport const requests = {\r\n    del: url =>\r\n      axios.delete(`${API_ROOT}${url}`).then(responseBody,errorBody),\r\n    get: url =>\r\n      axios.get(`${API_ROOT}${url}`).then(responseBody,errorBody),\r\n    // put: (url, body) =>\r\n    //   superagent.put(`${API_ROOT}${url}`, body).use(tokenPlugin).then(responseBody),\r\n    post: (url, body) =>\r\n      axios.post(`${API_ROOT}${url}`, body).then(responseBody,errorBody)\r\n  };","import axios from 'axios';\r\n//import { useHistory } from 'react-router-dom';\r\n\r\naxios.interceptors.request.use(\r\n    function(successfulReq) {\r\n      let jwt = \"\";\r\n      jwt = sessionStorage.getItem(\"jwt\");\r\n      successfulReq.headers = {'x-access-token' : jwt};\r\n        return successfulReq;\r\n    }, \r\n    function(error) {\r\n      return Promise.reject(error);\r\n    }\r\n  );\r\n\r\n  axios.interceptors.response.use( \r\n    function(successRes) {\r\n        let formatedResponse = successRes;\r\n        formatedResponse[\"statusCode\"] = successRes[\"status\"];\r\n        formatedResponse[\"body\"] = successRes[\"data\"];\r\n        delete formatedResponse[\"data\"];\r\n        return formatedResponse;\r\n    }, \r\n    function(error) {\r\n      //const history = useHistory();\r\n      // console.log(history);\r\n      console.log(error.toString());\r\n      if(error.toString()==\"Error: Request failed with status code 401\"){\r\n        window.location.href = \"/login\";\r\n      }\r\n      // history.push(\"/login\");\r\n      //window.location.href = \"/login\";\r\n        return Promise.reject(error);\r\n    }\r\n  );\r\n\r\nexport default axios;","\r\n  \r\nexport const APP_LOAD = 'APP_LOAD';\r\nexport const REDIRECT = 'REDIRECT';\r\nexport const ARTICLE_SUBMITTED = 'ARTICLE_SUBMITTED';\r\nexport const SETTINGS_SAVED = 'SETTINGS_SAVED';\r\nexport const DELETE_ARTICLE = 'DELETE_ARTICLE';\r\nexport const SETTINGS_PAGE_UNLOADED = 'SETTINGS_PAGE_UNLOADED';\r\nexport const HOME_PAGE_LOADED = 'HOME_PAGE_LOADED';\r\nexport const HOME_PAGE_UNLOADED = 'HOME_PAGE_UNLOADED';\r\nexport const ARTICLE_PAGE_LOADED = 'ARTICLE_PAGE_LOADED';\r\nexport const ARTICLE_PAGE_UNLOADED = 'ARTICLE_PAGE_UNLOADED';\r\nexport const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const DELETE_COMMENT = 'DELETE_COMMENT';\r\nexport const ARTICLE_FAVORITED = 'ARTICLE_FAVORITED';\r\nexport const ARTICLE_UNFAVORITED = 'ARTICLE_UNFAVORITED';\r\nexport const SET_PAGE = 'SET_PAGE';\r\nexport const APPLY_TAG_FILTER = 'APPLY_TAG_FILTER';\r\nexport const CHANGE_TAB = 'CHANGE_TAB';\r\nexport const PROFILE_PAGE_LOADED = 'PROFILE_PAGE_LOADED';\r\nexport const PROFILE_PAGE_UNLOADED = 'PROFILE_PAGE_UNLOADED';\r\nexport const LOGIN = 'LOGIN';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const REGISTER = 'REGISTER';\r\nexport const LOGIN_PAGE_UNLOADED = 'LOGIN_PAGE_UNLOADED';\r\nexport const REGISTER_PAGE_UNLOADED = 'REGISTER_PAGE_UNLOADED';\r\nexport const ASYNC_START = 'ASYNC_START';\r\nexport const ASYNC_END = 'ASYNC_END';\r\nexport const EDITOR_PAGE_LOADED = 'EDITOR_PAGE_LOADED';\r\nexport const EDITOR_PAGE_UNLOADED = 'EDITOR_PAGE_UNLOADED';\r\nexport const ADD_TAG = 'ADD_TAG';\r\nexport const REMOVE_TAG = 'REMOVE_TAG';\r\nexport const UPDATE_FIELD_AUTH = 'UPDATE_FIELD_AUTH';\r\nexport const UPDATE_FIELD_EDITOR = 'UPDATE_FIELD_EDITOR';\r\nexport const FOLLOW_USER = 'FOLLOW_USER';\r\nexport const UNFOLLOW_USER = 'UNFOLLOW_USER';\r\nexport const PROFILE_FAVORITES_PAGE_UNLOADED = 'PROFILE_FAVORITES_PAGE_UNLOADED';\r\nexport const PROFILE_FAVORITES_PAGE_LOADED = 'PROFILE_FAVORITES_PAGE_LOADED';\r\nexport const ADD_ITEM_INITIAL = 'ADD_ITEM_INITIAL';\r\nexport const INCREASE_QUANTITY = 'INCREASE_QUANTITY';\r\nexport const DECREASE_QUANTITY = 'DECREASE_QUANTITY';\r\nexport const RESET_ORDER = 'RESET_ORDER';\r\nexport const STORE_EDIT_PRODUCT = 'STORE_EDIT_PRODUCT';\r\nexport const GET_EDIT_PRODUCT = 'GET_EDIT_PRODUCT';\r\nexport const UPDATE_PRODUCT_FIELD = 'UPDATE_PRODUCT_FIELD';\r\nexport const CHANGE_PAGE = 'CHANGE_PAGE';\r\nexport const MESSAGE = 'MESSAGE'","import {\r\n    ADD_ITEM_INITIAL,\r\n    INCREASE_QUANTITY,\r\n    DECREASE_QUANTITY,\r\n    RESET_ORDER\r\n  } from '../constants/actionTypes';\r\n  const defaultState = {\r\n    addedItem: [],\r\n  };\r\n  \r\n  export default (state = defaultState, action) => {\r\n      switch (action.type) {\r\n        case ADD_ITEM_INITIAL:\r\n            const addedItem =[...state.addedItem,{\r\n                productId:action.item._id,\r\n                quantity:1,\r\n                perItemPrice:action.item.price,\r\n                item:action.item\r\n            }]\r\n            return {...state, addedItem};\r\n        case INCREASE_QUANTITY:\r\n             state.addedItem.map(record=>{\r\n                if(record.productId == action.productId){\r\n                    record.quantity +=1\r\n                }\r\n                return record;\r\n            });\r\n            return {...state,state}\r\n        case DECREASE_QUANTITY:\r\n            state.addedItem.map(record=>{\r\n                if(record.productId == action.productId && record.quantity !=0){\r\n                        record.quantity -=1\r\n                }\r\n                return record;\r\n            });\r\n            return {...state,state}\r\n        case RESET_ORDER:\r\n            state.addedItem = []\r\n            return {...state}\r\n        default:\r\n          return state;\r\n      }\r\n      return state;\r\n    };","import {\r\n    STORE_EDIT_PRODUCT,\r\n    GET_EDIT_PRODUCT,\r\n    UPDATE_PRODUCT_FIELD\r\n  } from '../constants/actionTypes';\r\n  const defaultState = {\r\n    product: {},\r\n  };\r\n  \r\n  export default (state = defaultState, action) => {\r\n      switch (action.type) {\r\n        case STORE_EDIT_PRODUCT:\r\n            return {...state,\r\n                product:action.data \r\n            };\r\n        case GET_EDIT_PRODUCT:\r\n            return {...state};\r\n        case UPDATE_PRODUCT_FIELD:\r\n            let prod = state.product;\r\n            prod[action.data.key]=action.data.value;\r\n           return {...state,product:prod}\r\n        default:\r\n          return state;\r\n      }\r\n      return state;\r\n    };","import auth from './reducers/auth';\r\nimport common from './reducers/common';\r\nimport order from './reducers/order';\r\nimport product from './reducers/product';\r\nimport { combineReducers } from 'redux';\r\n//import { routerReducer } from 'react-router-redux';\r\n\r\nconst appReducer = combineReducers({\r\n  auth,\r\n  common,\r\n  order,\r\n  product\r\n  /* your app’s top-level reducers */\r\n})\r\n\r\nconst rootReducer = (state, action) => {\r\n  if (action.type === 'LOGOUT') {\r\n    state = undefined\r\n  }\r\n\r\n  return appReducer(state, action)\r\n}\r\nexport default rootReducer\r\n// export default combineReducers({\r\n//   auth,\r\n//   common,\r\n//   order,\r\n//     //router: routerReducer\r\n//   });","import {\r\n    LOGIN,\r\n    REGISTER,\r\n    LOGIN_PAGE_UNLOADED,\r\n    REGISTER_PAGE_UNLOADED,\r\n    ASYNC_START,\r\n    UPDATE_FIELD_AUTH,\r\n    LOGOUT\r\n  } from '../constants/actionTypes';\r\n  \r\n  export default (state = {}, action) => {\r\n  //console.log(action);\r\n    switch (action.type) {\r\n      case LOGIN:\r\n        return {\r\n          ...state,\r\n          inProgress: false,\r\n          errors: action.payload.message,\r\n          role:action.payload.record?.role,\r\n          id:action.payload.record?.id,\r\n          statusCode:action.payload.jwtToken != \"\"?\"200\":\"\",\r\n          isLoginSuccess:action.payload.jwtToken != \"\"? true:false\r\n        }\r\n      case REGISTER:\r\n        return {\r\n          ...state,\r\n          inProgress: false,\r\n          errors: action.payload,\r\n          statusCode:action.payload.statusCode\r\n        };\r\n      case LOGIN_PAGE_UNLOADED:\r\n      return{\r\n        ...state,\r\n        //errors: action.payload,\r\n        //userDetails:\r\n      }\r\n      case REGISTER_PAGE_UNLOADED:\r\n        return {};\r\n      case ASYNC_START:\r\n        if (action.subtype === LOGIN || action.subtype === REGISTER) {\r\n          return { ...state, inProgress: true };\r\n        }\r\n        break;\r\n      case UPDATE_FIELD_AUTH:\r\n        return { ...state, [action.key]: action.value };\r\n      default:\r\n        return state;\r\n    }\r\n    return state;\r\n  };","import {\r\n    LOGOUT,\r\n    REDIRECT,\r\n    CHANGE_PAGE,\r\n    MESSAGE\r\n  } from '../constants/actionTypes';\r\n  const defaultState = {\r\n    appName: 'Conduit',\r\n    token: null,\r\n    viewChangeCounter: 0\r\n  };\r\n  \r\n  export default (state = {page:\"\"}, action) => {\r\n    //console.log(action);\r\n      switch (action.type) {\r\n        case REDIRECT:\r\n            return { ...state, redirectTo: null };\r\n        case CHANGE_PAGE:\r\n            return {  ...state, page: action.page };\r\n        case MESSAGE:\r\n          return {...state, message:action.message}\r\n        default:\r\n          return state;\r\n      }\r\n      return state;\r\n    };","import agent from './agent';\r\nimport {\r\n  ASYNC_START,\r\n  ASYNC_END,\r\n  LOGIN,\r\n  LOGOUT,\r\n  REGISTER\r\n} from './constants/actionTypes';\r\n\r\nconst promiseMiddleware = store => next => action => {\r\n  if (isPromise(action.payload)) {\r\n    store.dispatch({ type: ASYNC_START, subtype: action.type });\r\n\r\n    const currentView = store.getState().viewChangeCounter;\r\n    const skipTracking = action.skipTracking;\r\n\r\n    action.payload.then(\r\n      res => {\r\n        const currentState = store.getState()\r\n        if (!skipTracking && currentState.viewChangeCounter !== currentView) {\r\n          return\r\n        }\r\n        action.payload = res;\r\n        store.dispatch({ type: ASYNC_END, promise: action.payload });\r\n        store.dispatch(action);\r\n      },\r\n      error => {\r\n        const currentState = store.getState()\r\n        if (!skipTracking && currentState.viewChangeCounter !== currentView) {\r\n          return\r\n        }\r\n        action.error = true;\r\n        action.payload = error.response.body;\r\n        if (!action.skipTracking) {\r\n          store.dispatch({ type: ASYNC_END, promise: action.payload });\r\n        }\r\n        store.dispatch(action);\r\n      }\r\n    );\r\n\r\n    return;\r\n  }\r\n\r\n  next(action);\r\n};\r\n\r\nconst localStorageMiddleware = store => next => action => {\r\n  if (action.type === LOGIN && action.payload != undefined) {\r\n    if (action.payload.jwtToken!=\"\") {\r\n      window.sessionStorage.setItem('jwt', action.payload.jwtToken);\r\n      agent.setToken(action.payload.jwtToken);\r\n    }\r\n  } else if (action.type === LOGOUT) {\r\n    window.sessionStorage.setItem('jwt','');\r\n    agent.setToken(null);\r\n  }\r\n\r\n   next(action);\r\n};\r\n\r\nfunction isPromise(v) {\r\n  return v && typeof v.then === 'function';\r\n}\r\n\r\n\r\nexport { promiseMiddleware, localStorageMiddleware }","import { applyMiddleware, createStore } from 'redux';\r\nimport reducer from './reducer';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport { promiseMiddleware, localStorageMiddleware } from './middleware';\r\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\r\nimport storage from 'redux-persist/lib/storage/session';\r\nconst persistConfig = {\r\n  key: 'authType',\r\n  storage: storage,\r\n  whitelist: ['auth'] // which reducer want to store\r\n};\r\nconst pReducer = persistReducer(persistConfig, reducer);\r\nconst getMiddleware = () => {\r\n      return applyMiddleware( promiseMiddleware, localStorageMiddleware);\r\n  };\r\nconst store = createStore(pReducer,composeWithDevTools(getMiddleware()));\r\nconst persistor = persistStore(store);\r\nexport { persistor, store };","import React, { useState } from 'react'\r\nimport { Button, Form, Col, Row, Container, Modal,Alert } from 'react-bootstrap';\r\nimport agent from '../../agent'\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nfunction InqueryForm(props) {\r\n    const [state, setState] = useState(\r\n        {fullName:\"\",\r\n            email:\"\",\r\n            business:\"\",\r\n            dob:new Date(),\r\n            gender:\"\",\r\n            service:\"\",\r\n            Phone:\"\"\r\n        });\r\n    const [dobstate, setdobstate] = useState(new Date());\r\n    const [message, setmessage] = useState({type:\"\",message:\"\"})\r\n    const [loading, setloading] = useState(false)\r\n\r\n    const handleChange = (e)=>{\r\n        state[e.target.name] = e.target.value;\r\n        setState(state);\r\n        console.log(state);\r\n    }\r\n    const handleSubmit = (ev)=>{\r\n        ev.preventDefault();\r\n\r\n        state[\"dob\"] = dobstate;\r\n        state[\"service\"] = props.serviceType;\r\n        setState(state);\r\n        console.log(state);\r\n        setloading(true);\r\n        agent.Inquery.submitInquery(state).then((res=>{\r\n            if(res.statusCode == 200){\r\n                ev.target.reset();\r\n                message.type = \"success\";\r\n                message.message = \"Your Details has been submited. Our agent will contact you soon.\"\r\n            }else{\r\n                message.type = \"error\";\r\n                message.message = \"Something went wrong. Please try again.\"\r\n            }\r\n            setmessage(message);\r\n            setloading(false);\r\n\r\n        }))\r\n    }\r\n    return (\r\n        <>\r\n\r\n        <Modal show={props.isopen} onHide={props.hide} >\r\n\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Enquiry</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                {  message.type != \"\"? \r\n                message.type ==\"success\"?\r\n                <Alert key={message.type} variant={\"success\"} onClose={() => setmessage({type:\"\",message:\"\"})} dismissible>\r\n                    {message.message}\r\n                </Alert>:<Alert key={message.type} variant={\"danger\"} onClose={() => setmessage({type:\"\",message:\"\"})} dismissible>\r\n                    {message.message}\r\n                </Alert>:\"\"        \r\n                }\r\n\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridPassword\">\r\n                            <Form.Label>Full Name</Form.Label>\r\n                            <Form.Control onChange={handleChange} type=\"text\" name=\"fullName\"/>\r\n                        </Form.Group>\r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"formGridEmail\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type=\"email\" onChange={handleChange} name=\"email\" placeholder=\"Enter email\" />\r\n                        </Form.Group>\r\n\r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridAddress1\">\r\n                        <Form.Label>Business</Form.Label>\r\n                        <Form.Control type=\"text\" onChange={handleChange}  name=\"business\"/>\r\n                    </Form.Group>\r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridAddress1\">\r\n                        <Form.Label>Date of Birth</Form.Label>\r\n                        <DatePicker\r\n                         selected={dobstate} \r\n                         onChange={date=>setdobstate(date)}\r\n                         dateFormat=\"dd/MM/yyyy\"\r\n                         showYearDropdown\r\n                         dateFormatCalendar=\"MMMM\"\r\n                         yearDropdownItemNumber={50}\r\n                         scrollableYearDropdown\r\n                         maxDate={new Date()}\r\n                         />\r\n                    </Form.Group>\r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridState\">\r\n                    <Form.Label>Gender</Form.Label>\r\n                    <Form.Control name=\"gender\" as=\"select\" onChange={handleChange} defaultValue=\"Choose...\">\r\n                        <option>Choose...</option>\r\n                        <option value=\"male\">Male</option>\r\n                        <option value=\"female\">Female</option>\r\n                    </Form.Control>\r\n                    </Form.Group>                        \r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridState\">\r\n                    <Form.Label>Service</Form.Label>\r\n                        <Form.Control onChange={handleChange} type=\"text\" name=\"service\" value={props.serviceType} readOnly/>\r\n                    </Form.Group>                        \r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridAddress1\">\r\n                        <Form.Label>Phone</Form.Label>\r\n                        <Form.Control type=\"text\" onChange={handleChange}  name=\"phone\"/>\r\n                    </Form.Group>\r\n                    </Form.Row>\r\n\r\n                    <Button variant=\"primary\" type=\"submit\" disabled={loading}>\r\n                    {loading ? 'Loading…' : \"Submit\"}\r\n\r\n                    </Button>\r\n                </Form>\r\n            </Modal.Body>\r\n        </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default InqueryForm\r\n","import React, { Component} from 'react'\r\n//import ItrPopup from '../finance-Itr/ItrPopup'\r\nimport InqueryForm from '../home/InqueryForm'\r\nimport {Link} from 'react-router-dom';\r\n\r\n  class SectionMenu extends Component {\r\n    isopen = false;\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        isopen:false,\r\n        openEnqueryForm:false,\r\n        serviceType:\"\"\r\n      }\r\n    }\r\n    handleITRPopup = () =>{\r\n      this.setState({\r\n        isopen:this.state.isopen?false:true\r\n      })\r\n    }\r\n    handleEnqueryForm = (serviceType = \"\")=>{\r\n      console.log(serviceType);\r\n      this.setState({\r\n        openEnqueryForm:this.state.openEnqueryForm?false:true,\r\n        serviceType:serviceType\r\n      })\r\n\r\n    }\r\n    render() {\r\n        return (\r\n          <>\r\n            <section className=\"text-center \">\r\n            <div className=\"container\">\r\n              <div className=\"col-md-12 shadow-sm p-5 service \">\r\n                <div className=\"row roww\">\r\n                  <div className=\"col-md-2 col-sm-3 col-xs-3 p-2 service-box\" onClick={this.handleITRPopup}>\r\n                    <img src={process.env.PUBLIC_URL + '/assets/img/itr.png'} alt=\"\"/>\r\n                    <h5 className=\"my-4\">Fill ITR</h5>\r\n                  </div>\r\n                 \r\n                  <div className=\"col-md-2 col-sm-3 col-xs-3 p-2 service-box \">\r\n                  <Link to=\"/CategoryList\">\r\n                    <img  src={process.env.PUBLIC_URL + '/assets/img/food.png'} alt=\"\"/>\r\n                    <h5 className=\"my-4\">FOOD</h5></Link>\r\n                  </div>\r\n                  <div className=\"col-md-2 col-sm-3 col-xs-3 p-2 service-box\" onClick={()=>this.handleEnqueryForm(\"Catering\")}>\r\n\r\n                    <img src={process.env.PUBLIC_URL + '/assets/img/catering.png'} alt=\"\"/>\r\n                    <h5 className=\"my-4\">Catering</h5>\r\n                  </div>\r\n                  <div className=\"col-md-2 col-sm-3 col-xs-3 p-2 service-box\" onClick={()=>this.handleEnqueryForm(\"Balance Sheet\")}>\r\n\r\n                    <img src={process.env.PUBLIC_URL + '/assets/img/finance.png'} alt=\"\"/>\r\n                    <h5 className=\"my-4\">Financial Consultancy</h5>\r\n                  </div>\r\n                  <div className=\"col-md-2 col-sm-3 col-xs-3 p-2 service-box\" onClick={()=>this.handleEnqueryForm(\"Investment Planning\")}>\r\n\r\n                    <img src={process.env.PUBLIC_URL + '/assets/img/investment.png'} alt=\"\"/>\r\n                    <h5 className=\"my-4\">Investment Planning</h5>\r\n                  </div>\r\n                  <div className=\"col-md-2 col-sm-3 col-xs-3 p-2 service-box\" onClick={()=>this.handleEnqueryForm(\"GST filing\")}>\r\n                    <img src={process.env.PUBLIC_URL + '/assets/img/gst.png'} alt=\"\"/>\r\n                    <h5 className=\"my-4\">GST Filing </h5>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n          {/* <ItrPopup isopen={this.state.isopen} hide={this.handleITRPopup}/> */}\r\n          <InqueryForm isopen={this.state.openEnqueryForm} serviceType={this.state.serviceType} hide={this.handleEnqueryForm}/>         \r\n        </>\r\n        )\r\n    }\r\n}\r\nexport default SectionMenu\r\n","import React, { Component } from 'react'\r\n\r\nexport default class SectionOffers extends Component {\r\n    render() {\r\n        return (\r\n            <section className=\"text-center\">\r\n                <div className=\"container\">\r\n                    <h4 className=\"h4-responsive font-weight-bold my-3 text-primary\">Best Offers</h4>\r\n                    <div className=\"row my-5\">\r\n                        <div className=\"col-md-3\">\r\n                            <img src={process.env.PUBLIC_URL + '/assets/img/s-1.jpeg'} className=\"img-fluid radius\" alt=\"\" />\r\n                            <h5 className=\"font-weight-bold my-4 text-primary\">Offer 1</h5>\r\n                            <p className=\"grey-text mb-md-0 mb-5 text-primary\">Up to 50% Off\r\n                            </p>\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                            <img src={process.env.PUBLIC_URL + '/assets/img/s-2.jpg'} className=\"img-fluid radius\" alt=\"\" />\r\n                            <h5 className=\"font-weight-bold my-4 text-primary\">offer 2</h5>\r\n                            <p className=\"grey-text mb-md-0 mb-5 text-primary\">Up to 60% off\r\n                  </p>\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                            <img src={process.env.PUBLIC_URL + '/assets/img/s-4.jpeg'} className=\"img-fluid radius\" alt=\"\" />\r\n                            <h5 className=\"font-weight-bold my-4 text-primary\">offer 3</h5>\r\n                            <p className=\"grey-text mb-0 text-primary\">Up to 50% off\r\n                  </p>\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                            <img src={process.env.PUBLIC_URL + '/assets/img/s-3.jpeg'} className=\"img-fluid radius\" alt=\"\" />\r\n                            <h5 className=\"font-weight-bold my-4 text-primary\">Offer 4</h5>\r\n                            <p className=\"grey-text mb-0 text-primary\">Standard EMI Options Available\r\n                  </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { Route,NavLink } from 'react-router-dom'\r\n\r\nfunction LogedInView(props) {\r\n    if(!props.currentUser.errors || props.currentUser.errors.statusCode ==500){\r\n        return (\r\n\r\n        <li className=\"nav-item\">\r\n        <NavLink aactiveClassName=\"active\" className=\"nav-link\" to=\"/login\">Login</NavLink>\r\n        </li>\r\n        )\r\n    }\r\n    return null;\r\n\r\n}\r\n\r\nexport default LogedInView\r\n","import React from 'react'\r\nimport { Route, NavLink } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux'\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nimport {\r\n    LOGOUT\r\n  } from '../../constants/actionTypes';\r\nfunction LogedOutView(props) {\r\n    const dispatch = useDispatch();\r\n    let history = useHistory();\r\n\r\n    const logout = ()=>{\r\n         dispatch({ type: LOGOUT })\r\n           console.log(\"hollo\");\r\n           history.push(\"/\");\r\n       }\r\n         if (props.currentUser.errors && props.currentUser.errors.statusCode == 200) {\r\n        let name = props.currentUser.email.split(\"@\");\r\n\r\n        return (<>\r\n            \r\n            {props.currentUser.errors.body.record.isAdmin?<li className=\"nav-item\">\r\n            <li className=\"nav-item\">\r\n            <NavLink aactiveClassName=\"active\" to=\"/adminHome\" className=\"nav-link\">Admin</NavLink>\r\n            </li>\r\n                \r\n            </li>:\"\"}            \r\n            <li className=\"nav-item\">\r\n                <NavLink aactiveClassName=\"active\" to=\"/userAction\" className=\"nav-link\">\r\n                    {name[0]}\r\n\r\n                    {props.currentUser.errors.body.record.isPrimeMember?<label className=\"clr-cyan\">(Prime member)</label>:\"\"}  \r\n\r\n                    \r\n                    </NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <a className=\"nav-link\" onClick={logout} >Logout</a>\r\n                {/* <NavLink className=\"nav-link\">{props.email}</NavLink> */}\r\n            </li>\r\n        </>\r\n        )\r\n    }\r\n    return null;\r\n}\r\n\r\nexport default LogedOutView\r\n","import React, { Component } from 'react'\r\nimport { Route,NavLink, Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport LoggedInView from './LogedInView';\r\nimport LoggedOutView from './LogedOutView';\r\n// import ItrPopup from '../finance-Itr/ItrPopup'\r\n\r\nclass Header extends Component {\r\n    isopen = false;\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        isopen:false\r\n      }\r\n    }\r\n    handleITRPopup = () =>{\r\n        this.setState({\r\n          isopen:this.state.isopen?false:true\r\n        })\r\n      }\r\n  \r\n    render(){\r\n\r\n    return (\r\n        <header>\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark fixed-top scrolling-navbar\">\r\n                <div className=\"container\">\r\n                    <NavLink className=\"navbar-brand\" to=\"/\"> <h2>AA2 Mutualhelp</h2></NavLink>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent-7\"\r\n                        aria-controls=\"navbarSupportedContent-7\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent-7\">\r\n                        <ul className=\"navbar-nav ml-auto\">\r\n                            <li className=\"nav-item\">\r\n                            {/* <NavLink aactiveClassName=\"active\" className=\"nav-link\" to=\"/\">Home</NavLink> */}\r\n\r\n                            </li>\r\n                            {/* <li className=\"nav-item\" onClick={this.handleITRPopup}>\r\n                                <a className=\"nav-link\" onClick={this.handleITRPopup}>File ITR</a>\r\n                            </li> */}\r\n                            {/* <li className=\"nav-item\">\r\n                                <NavLink activeClassName=\"active\" to=\"/CategoryList\" className=\"nav-link\">Order Food</NavLink>\r\n                                \r\n                            </li> */}\r\n                            <LoggedOutView currentUser={this.props}/>\r\n                            <LoggedInView currentUser={this.props}/>\r\n\r\n                        </ul>\r\n\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n            <div className=\"view\">\r\n                <div className=\"mask rgba-gradient d-flex justify-content-center align-items-center\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12 white-text text-center mx-auto  mb-5 wow fadeInLeft\" data-wow-delay=\"0.3s\">\r\n                                <h1 className=\"my-3 text-center mx-auto font-weight-bold wow fadeInLeft\">Services, on demand.</h1>\r\n\r\n                                <div className=\"ml-auto mr-auto main-search \">\r\n\r\n                                    <form action=\"\" className=\"search-service\">\r\n                                        <input className=\"search-form form-control form-control-lg\" type=\"text\" placeholder=\"Search Services\" />\r\n                                    </form>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* <ItrPopup isopen={this.state.isopen} hide={this.handleITRPopup}/> */}\r\n        </header>\r\n    )}\r\n}\r\n\r\nconst mapStateToProps = state => ({ ...state.auth});\r\nconst mapDispatchToProps = dispatch => ({\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header)\r\n","import React from 'react'\r\nimport SectionMenu from '../layout/SectionMenu'\r\nimport SectionOffers from '../layout/SectionOffers'\r\nimport Header from '../layout/Header'\r\nimport Footer from '../layout/Footer'\r\nfunction Home() {\r\n    return (\r\n        <>\r\n            <Header />\r\n            <SectionMenu />\r\n            {/* <SectionOffers /> */}\r\n            <Footer />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React, { Component } from 'react'\r\nimport { Button, Form, Col, Alert } from 'react-bootstrap';\r\n\r\nexport default class ListErrors extends Component {\r\n    render() {\r\n        const errors = this.props.errors;\r\n        const statusCode = this.props.statusCode;\r\n        if (errors) {\r\n            return (\r\n                <Alert  variant={statusCode==200?\"success\":\"danger\"}>\r\n                    {errors}\r\n              </Alert>\r\n            );\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { Button, Form, Col, Alert } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom'\r\nimport agent from '../../agent'\r\nimport ListErrors from '../layout/ListErrors';\r\n\r\n\r\nclass Registration extends React.Component {    \r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            userDetails: {},\r\n            errors:\"\",\r\n            statusCode:\"\",\r\n            isLoading:false\r\n        }\r\n    }\r\n    handleChange = (e) => {\r\n        const state = this.state.userDetails\r\n        state[e.target.name] = e.target.value;\r\n        this.setState({ userDetails: state });\r\n        \r\n    }\r\n    submitForm=() => ev =>{\r\n        ev.preventDefault();\r\n        this.setState({ isLoading: true });\r\n        agent.Auth.register(this.state.userDetails).then((res=>{\r\n            this.setState({ errors: res, statusCode:res.statusCode, isLoading:false});\r\n            if(res.statusCode == 200){\r\n                ev.target.reset();\r\n                //this.props.history.push('/login')\r\n            }\r\n        }));\r\n    }\r\n    render() {\r\n\r\n    return (\r\n        <div className=\"login-div\">\r\n            <ListErrors errors={this.state.errors} statusCode={this.state.statusCode} />\r\n            <Form className=\"login-form\" onSubmit={this.submitForm()}>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formBasicEmail\" >\r\n                        <Form.Label>Email address</Form.Label>\r\n                        <Form.Control type=\"email\" name=\"email\" placeholder=\"Enter email\"  onChange={this.handleChange} required/>\r\n                        <Form.Text className=\"text-muted\">\r\n                            We'll never share your email with anyone else.\r\n                    </Form.Text>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formBasicEmail\">\r\n                        <Form.Label>Phone</Form.Label>\r\n                        <Form.Control type=\"phone\" name=\"phone\"  onChange={this.handleChange} required/>\r\n                        <Form.Text className=\"text-muted\">\r\n                            We'll never share your phone no with anyone else.\r\n                    </Form.Text>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n\r\n                <Form.Row>\r\n                    <Form.Group as={Col}  controlId=\"formBasicPassword\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control type=\"password\" name=\"password\" placeholder=\"Password\"  onChange={this.handleChange} required/>\r\n                    </Form.Group>\r\n\r\n                </Form.Row>\r\n                <Form.Row>\r\n                    <Button variant=\"primary\" type=\"submit\" disabled={this.state.isLoading}>\r\n                        \r\n                        {this.state.isLoading ? 'Loading…' : \"Register\"}\r\n                    </Button>\r\n                </Form.Row>\r\n\r\n            </Form>\r\n        </div>\r\n\r\n    )}\r\n}\r\n\r\nexport default Registration\r\n","import {API_ROOT } from \"./BaseUrl\"\r\nimport axios from \"./interceptor-middleware\";\r\n\r\nconst Auth = {\r\n    login(username, password){\r\n      return axios.post(`${API_ROOT}/user/login`,  { username, password } )\r\n    },\r\n    createUser(payload){\r\n      return axios.post(`${API_ROOT}/user/registration`, payload )\r\n    },\r\n    listUser(){\r\n      return axios.get(`${API_ROOT}/user/userList/all`)\r\n    },\r\n    editUser(payload){\r\n      return axios.put(`${API_ROOT}/user/updateUser`, payload )\r\n    },\r\n    getUserById(id){\r\n      return axios.get(`${API_ROOT}/user/userList/`+id)\r\n    },\r\n    deleteUser(id){\r\n      return axios.delete(`${API_ROOT}/user/deleteUser/`+id)\r\n    }\r\n  };\r\n  \r\n  export default {Auth};\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\nfunction Loader(props) {\r\n    if(props.show){\r\n        return (\r\n            <Spinner animation=\"border\" role=\"status\" className={props?.relative?\"loader-relative\":\"loader\"}>\r\n            </Spinner>\r\n        )\r\n    }else{\r\n        return null\r\n    }\r\n}\r\n\r\nexport default Loader\r\n","import React, { Component}  from 'react'\r\nimport { Button, Form, Col, Alert } from 'react-bootstrap';\r\nimport { Route, NavLink, Link,useHistory } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport agent from '../../agent'\r\nimport ListErrors from '../layout/ListErrors';\r\nimport user from \"../../models/user\";\r\nimport Loader from '../layout/Loader';\r\nimport {\r\n    UPDATE_FIELD_AUTH,\r\n    LOGIN,\r\n    LOGIN_PAGE_UNLOADED,\r\n    LOGOUT\r\n} from '../../constants/actionTypes';\r\nimport \"./login.css\";\r\nclass Login extends Component {\r\n   // let history = useHistory();\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state ={isShowLoader:false};\r\n        this.changeEmail = ev => {this.props.onChangeEmail(ev.target.value)};\r\n        this.changePassword = ev => {this.props.onChangePassword(ev.target.value)};\r\n    }\r\n    componentDidMount(){\r\n        var body = document.body;\r\n        body.classList.add(\"login-body\");\r\n\r\n        // var dd = document.html;\r\n        // dd.classList.add(\"login-body\");\r\n        this.props.onlogout()\r\n        this.props.onChangeEmail(\"\")\r\n        this.props.onChangePassword(\"\")\r\n    }\r\n    submitForm=ev=> {\r\n        ev.preventDefault();\r\n        this.setState({isShowLoader:true});\r\n        user.Auth.login(this.props.username, this.props.password).then(res=>{\r\n            this.setState({isShowLoader:false});\r\n            console.log(res);\r\n            this.props.onSubmit(res.body);\r\n        }).catch(err=>{\r\n            console.log(err);\r\n        })\r\n    };\r\n\r\n    componentDidUpdate(){\r\n        if(this.props.isLoginSuccess){\r\n            this.props.history.push('/')\r\n        }\r\n        \r\n    }\r\n    \r\n    componentWillUnmount() {\r\n        var body = document.body;\r\n        body.classList.remove(\"login-body\");\r\n\r\n        this.props.onUnload();\r\n      }\r\n    render() {\r\n        const username = this.props.username;\r\n        const password = this.props.password;\r\n        return (\r\n            <div id=\"login\">\r\n           \r\n            <Loader show={this.state.isShowLoader} />\r\n        {/* <Alert key={this.state.errormsg} variant=\"danger\">{this.state.errormsg}</Alert> */}\r\n            <ListErrors errors={this.props.errors} statusCode={this.props.statusCode}/>\r\n            <div className=\"container\">\r\n        <div className=\"card card-container\">\r\n             {/* <img className=\"profile-img-card\" src=\"//lh3.googleusercontent.com/-6V8xOA6M7BA/AAAAAAAAAAI/AAAAAAAAAAA/rzlHcD0KYwo/photo.jpg?sz=120\" alt=\"\" /> */}\r\n            <img id=\"profile-img\" className=\"profile-img-card\" src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\" />\r\n            <p id=\"profile-name\" className=\"profile-name-card\"></p>\r\n            <Form  className=\"form-signin\" onSubmit={this.submitForm}>\r\n                <span id=\"reauth-email\" className=\"reauth-email\"></span>\r\n                <input type=\"text\" autoFocus id=\"inputEmail\" value={username} onChange={this.changeEmail} className=\"form-control\" placeholder=\"Username\" required/>\r\n                <input type=\"password\" id=\"inputPassword\" value={password}  onChange={this.changePassword} className=\"form-control\" placeholder=\"Password\" required/>\r\n                <div id=\"remember\" className=\"checkbox\">\r\n                    <label>\r\n                        <input type=\"checkbox\" value=\"remember-me\"/> Remember me\r\n                    </label>\r\n                </div>\r\n                <Button variant=\"primary btn-signin\" disabled={this.state.isShowLoader} type=\"submit\">{this.state.isShowLoader ? 'Loading…' : \"Sign in\"}</Button>\r\n            </Form>\r\n            <a href=\"#\" className=\"forgot-password\">\r\n                Forgot the password?\r\n            </a>\r\n        </div>\r\n    </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => ({ ...state.auth });\r\nconst mapDispatchToProps = dispatch => ({\r\n    onChangeEmail: value =>\r\n        dispatch({ type: UPDATE_FIELD_AUTH, key: 'username', value }),\r\n    onChangePassword: value =>\r\n        dispatch({ type: UPDATE_FIELD_AUTH, key: 'password', value }),\r\n    onSubmit: (data) =>\r\n        dispatch({ type: LOGIN, payload: data }),\r\n    onUnload: () =>\r\n        dispatch({ type: LOGIN_PAGE_UNLOADED }),\r\n    onlogout:()=>\r\n        dispatch({ type: LOGOUT })\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","import React, { Component } from 'react'\r\nimport { Route,NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport LoggedInView from './LogedInView';\r\nimport LoggedOutView from './LogedOutView';\r\n// import ItrPopup from '../finance-Itr/ItrPopup'\r\n\r\nclass InnerHeader extends Component {\r\n    isopen = false;\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        isopen:false\r\n      }\r\n    }\r\n    handleITRPopup = () =>{\r\n        this.setState({\r\n          isopen:this.state.isopen?false:true\r\n        })\r\n      }\r\n    render(){\r\n    return (\r\n        <header>\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark top-nav-collapse\">\r\n                <div className=\"container\">\r\n                <NavLink className=\"navbar-brand\" to=\"/\"> <h2>AA2 Mutualhelp</h2></NavLink>\r\n\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent-7\"\r\n                        aria-controls=\"navbarSupportedContent-7\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent-7\">\r\n                        <ul className=\"navbar-nav ml-auto\">\r\n                            {/* <li className=\"nav-item\">\r\n                            <NavLink aactiveClassName=\"active\" className=\"nav-link\" to=\"/\">Home</NavLink> */}\r\n\r\n                                {/* <a className=\"nav-link\" href=\"#\">Home\r\n                    <span className=\"sr-only\">(current)</span>\r\n                                </a> */}\r\n                            {/* </li> */}\r\n                            {/* <li className=\"nav-item\" onClick={this.handleITRPopup}>\r\n                                <a className=\"nav-link\" onClick={this.handleITRPopup}>File ITR</a>\r\n                            </li> */}\r\n                            {/* <li className=\"nav-item\"> */}\r\n                                {/* <a className=\"nav-link\" href=\"#\">Order Food</a> */}\r\n                                {/* <NavLink aactiveClassName=\"active\" to=\"/CategoryList\" className=\"nav-link\">Order Food</NavLink>\r\n                            </li> */}\r\n                            {/* <li className=\"nav-item\">\r\n                            <NavLink className=\"nav-link\" to=\"/login\">Login</NavLink>\r\n\r\n                            </li> */}\r\n                            <LoggedOutView currentUser={this.props}/>\r\n                            <LoggedInView currentUser={this.props}/>\r\n\r\n                        </ul>\r\n\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n            {/* <ItrPopup isopen={this.state.isopen} hide={this.handleITRPopup}/> */}\r\n        </header>\r\n    )}\r\n\r\n}\r\nconst mapStateToProps = state => ({ ...state.auth});\r\nconst mapDispatchToProps = dispatch => ({\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InnerHeader)\r\n","import React,{useEffect} from 'react'\r\nimport { useSelector } from \"react-redux\";\r\nimport { Col, Nav} from 'react-bootstrap';\r\nimport { LinkContainer} from 'react-router-bootstrap';\r\nimport { useLocation } from 'react-router-dom'\r\nexport default function Leftbar() {\r\n    const auth = useSelector(state => state.auth);\r\n    const location = useLocation();\r\n    \r\n    return (\r\n        <div className=\"sidebar\" data-color=\"white\" data-active-color=\"danger\">\r\n          <div className=\"logo\">\r\n            <a href=\"#\" className=\"simple-text logo-mini\">\r\n              <div className=\"logo-image-small\">\r\n                <img src={process.env.PUBLIC_URL+\"/assets/img/logo-small.png\"} />\r\n              </div>\r\n            </a>\r\n            <a href=\"#\" className=\"simple-text logo-normal\">\r\n              {auth.username}\r\n            </a>\r\n          </div>\r\n          <div className=\"sidebar-wrapper\">\r\n            <ul className=\"nav\">\r\n              <li className={location.pathname == \"/\"?\"active\":\"\"}>\r\n                {/* <a href=\"./dashboard.html\"> */}\r\n                <LinkContainer to=\"/\">\r\n                <Nav.Link>\r\n                  <i className=\"nc-icon nc-bank\"></i>\r\n                  <p>Dashboard</p>\r\n                  </Nav.Link>\r\n                  </LinkContainer>\r\n                {/* </a> */}\r\n              </li>\r\n             {(auth.role==\"admin\")&& <li className={location.pathname == \"/listUser\"?\"active\":\"\"}>\r\n              <LinkContainer to=\"/listUser\">\r\n                      <Nav.Link href=\"#\"><i className=\"nc-icon nc-paper\"></i>Application Users</Nav.Link>\r\n                </LinkContainer>\r\n              </li>}\r\n\r\n              <li className={location.pathname == \"/memberGroup\" || location.pathname == \"/member\" || location.pathname == \"/member\" || location.pathname == \"/addMember\"?\"active\":\"\"}>\r\n                <a data-toggle=\"collapse\" aria-expanded=\"false\" href=\"#homeSubmenu\" className=\"dropdown-toggle\">\r\n                <i className=\"nc-icon nc-badge\"></i>\r\n                  Master Record\r\n                </a>\r\n                <ul className=\"list-unstyled collapse\" id=\"homeSubmenu\" >\r\n                  <li className={location.pathname == \"/memberGroup\" || location.pathname == \"/addMemberGroup\"?\"active\":\"\"}>\r\n                  <LinkContainer to=\"/memberGroup\">\r\n                    <Nav.Link>\r\n                    Member Group\r\n                    </Nav.Link>\r\n                  </LinkContainer>\r\n\r\n                    \r\n                  </li>\r\n                  <li className={location.pathname == \"/member\" || location.pathname == \"/addMember\"?\"active\":\"\"}>\r\n                  <LinkContainer to=\"/member\">\r\n                    <Nav.Link>\r\n                    Members\r\n                    </Nav.Link>\r\n                  </LinkContainer>\r\n\r\n                  </li>\r\n                </ul>\r\n              </li>\r\n              <li \r\n              className={location.pathname == \"/emiCalculator\" \r\n              || location.pathname == \"/scheme\" \r\n              || location.pathname == \"/loanApplication\" \r\n              || location.pathname == \"/loanApproval\"\r\n              || location.pathname == \"/addScheme\"\r\n              || location.pathname == \"/allApplications\"\r\n              || location.pathname == \"/disburseLoan\"\r\n\r\n              ?\"active\":\"\"}>\r\n                <a data-toggle=\"collapse\" aria-expanded=\"false\" href=\"#groupLoan\" className=\"dropdown-toggle\">\r\n                <i className=\"nc-icon nc-umbrella-13\"></i>\r\n                  Group Loan\r\n                </a>\r\n                <ul className=\"list-unstyled collapse\" id=\"groupLoan\" >\r\n                <li className={location.pathname == \"/emiCalculator\"?\"active\":\"\"}>\r\n                    <LinkContainer to=\"/emiCalculator\">\r\n                      <Nav.Link href=\"#\">Calculator</Nav.Link>\r\n                    </LinkContainer>\r\n                  </li>\r\n                  <li className={location.pathname == \"/scheme\" || location.pathname == \"/addScheme\"?\"active\":\"\"}>\r\n                  <LinkContainer to=\"/scheme\">\r\n                    <Nav.Link eventKey=\"link-1\">Scheme</Nav.Link>\r\n                  </LinkContainer>\r\n                  </li>\r\n                  <li className={location.pathname == \"/loanApplication\"?\"active\":\"\"}>\r\n                    <LinkContainer to=\"/loanApplication\">\r\n                      <Nav.Link eventKey=\"link-2\">Application</Nav.Link>\r\n                    </LinkContainer>\r\n                  </li>\r\n                  {(auth.role==\"checker\"||auth.role==\"admin\")? <li className={location.pathname == \"/loanApproval\"?\"active\":\"\"}>\r\n\r\n                    <LinkContainer to=\"/loanApproval\">\r\n                      <Nav.Link eventKey=\"link-2\">Approve Application</Nav.Link>\r\n                    </LinkContainer>\r\n                  </li>:\"\"}\r\n                  {(auth.role==\"checker\"||auth.role==\"admin\")?<li className={location.pathname == \"/disburseLoan\"?\"active\":\"\"}>\r\n                    <LinkContainer to=\"/disburseLoan\">\r\n                      <Nav.Link eventKey=\"link-2\">Disbure Application</Nav.Link>\r\n                      </LinkContainer>\r\n                    </li>:\"\"}\r\n                    <li className={location.pathname == \"/allApplications\"?\"active\":\"\"}>\r\n                      <LinkContainer to=\"/allApplications\">\r\n                        <Nav.Link eventKey=\"link-2\">Loan Applications</Nav.Link>\r\n                        </LinkContainer>\r\n\r\n                    </li>\r\n                </ul>\r\n              </li>              \r\n               <li className={location.pathname == \"/processingFee\"?\"active\":\"\"}>\r\n              <LinkContainer to=\"/processingFee\">\r\n                      <Nav.Link href=\"#\"><i className=\"nc-icon nc-paper\"></i>Raised Fund</Nav.Link>\r\n                </LinkContainer>\r\n              </li>\r\n              <li className={location.pathname == \"/expense\"?\"active\":\"\"}>\r\n              <LinkContainer to=\"/expense\">\r\n                      <Nav.Link href=\"#\"><i className=\"nc-icon nc-paper\"></i>Expenses</Nav.Link>\r\n                </LinkContainer>\r\n              </li>              \r\n\r\n               {/*<li>\r\n             <LinkContainer to=\"/\">\r\n                      <Nav.Link href=\"#\"><i className=\"nc-icon nc-credit-card\"></i>Expenses</Nav.Link>\r\n                </LinkContainer>\r\n\r\n              </li>     */}          \r\n              <li className={location.pathname == \"/dueEmis\"?\"active\":\"\"}>\r\n              <LinkContainer to=\"/dueEmis\">\r\n                      <Nav.Link href=\"#\"><i className=\"nc-icon nc-money-coins\"></i> Payment to collect</Nav.Link>\r\n                </LinkContainer>\r\n\r\n              </li>   \r\n              <li className={location.pathname == \"/profit\"?\"active\":\"\"}>\r\n              <LinkContainer to=\"/profit\">\r\n                      <Nav.Link href=\"#\"><i className=\"nc-icon nc-money-coins\"></i> Profit Report</Nav.Link>\r\n                </LinkContainer>\r\n\r\n              </li>            \r\n            </ul>\r\n          </div>\r\n        </div>        \r\n        // // <Col md={2} id=\"sidebar-col\" className=\"pr-0\">\r\n        //     <nav id=\"sidebar\">\r\n        //         {/* <div className=\"sidebar-header\">\r\n        //             <h5>AA2 MutualHelp</h5>\r\n        //         </div> */}\r\n        //         <Nav className=\"list-unstyled components flex-column\" as=\"ul\" >\r\n        //         <Nav.Item as=\"li\" className=\"active\">\r\n        //         <LinkContainer to=\"/\">\r\n        //         <Nav.Link>\r\n        //              Dashboard\r\n        //     </Nav.Link>\r\n        //     </LinkContainer>\r\n        //         </Nav.Item>\r\n        //             <Nav.Item as=\"li\" >\r\n                   \r\n        //                 <Nav.Link href=\"#homeSubmenu\" className=\"dropdown-toggle\" data-toggle=\"collapse\" aria-expanded=\"false\">Master Record</Nav.Link>\r\n                        \r\n        //                 {/* <ul class=\"collapse list-unstyled\" id=\"homeSubmenu\"> */}\r\n        //                 <Nav class=\"collapse list-unstyled\" id=\"homeSubmenu\" as=\"ul\">\r\n        //                     <Nav.Item as=\"li\">\r\n        //                     <LinkContainer to=\"/memberGroup\">\r\n        //                         <Nav.Link href=\"/home\">Member Group</Nav.Link>\r\n        //                         </LinkContainer>\r\n        //                         {/* <NavLink to=\"/memberGroup\">Member Group</NavLink> */}\r\n        //                     </Nav.Item>\r\n        //                     <Nav.Item as=\"li\">\r\n        //                     <LinkContainer to=\"/member\">\r\n        //                         <Nav.Link eventKey=\"link-1\">Members</Nav.Link>\r\n        //                     </LinkContainer>\r\n        //                     </Nav.Item>\r\n        //                 </Nav>\r\n        //             </Nav.Item>\r\n        //             <Nav.Item as=\"li\" >\r\n        //                 <Nav.Link href=\"#groupLoan\" data-toggle=\"collapse\" aria-expanded=\"false\" className=\"dropdown-toggle\">Group Loan</Nav.Link>\r\n        //                 {/* <ul class=\"collapse list-unstyled\" id=\"homeSubmenu\"> */}\r\n        //                 <Nav class=\"collapse list-unstyled\" id=\"groupLoan\" as=\"ul\">\r\n        //                     <Nav.Item as=\"li\">\r\n        //                     <LinkContainer to=\"/emiCalculator\">\r\n        //                         <Nav.Link href=\"#\">Calculator</Nav.Link>\r\n        //                         </LinkContainer>\r\n        //                     </Nav.Item>\r\n        //                     <Nav.Item as=\"li\">\r\n        //                     <LinkContainer to=\"/scheme\">\r\n        //                         <Nav.Link eventKey=\"link-1\">Scheme</Nav.Link>\r\n        //                         </LinkContainer>\r\n        //                     </Nav.Item>\r\n        //                     <Nav.Item as=\"li\">\r\n        //                     <LinkContainer to=\"/loanApplication\">\r\n        //                         <Nav.Link eventKey=\"link-2\">Application</Nav.Link>\r\n        //                         </LinkContainer>\r\n        //                     </Nav.Item>\r\n        //                     {(auth.role==\"checker\"||auth.role==\"admin\")?<Nav.Item as=\"li\">\r\n        //                     <LinkContainer to=\"/loanApproval\">\r\n        //                         <Nav.Link eventKey=\"link-2\">Approve Application</Nav.Link>\r\n        //                         </LinkContainer>\r\n        //                     </Nav.Item>:\"\"}\r\n        //                     {(auth.role==\"checker\"||auth.role==\"admin\")?<Nav.Item as=\"li\">\r\n        //                     <LinkContainer to=\"/disburseLoan\">\r\n        //                         <Nav.Link eventKey=\"link-2\">Disbure Application</Nav.Link>\r\n        //                         </LinkContainer>\r\n        //                     </Nav.Item>:\"\"}\r\n        //                     <Nav.Item as=\"li\">\r\n        //                     <LinkContainer to=\"/allApplications\">\r\n        //                         <Nav.Link eventKey=\"link-2\">Loan Applications</Nav.Link>\r\n        //                         </LinkContainer>\r\n        //                     </Nav.Item>\r\n\r\n        //                 </Nav>\r\n        //             </Nav.Item>\r\n\r\n        //             <Nav.Item as=\"li\" >\r\n        //                 <Nav.Link href=\"#processingFee\" data-toggle=\"collapse\" aria-expanded=\"false\" className=\"dropdown-toggle\">Processing Fee</Nav.Link>\r\n        //                 {/* <ul class=\"collapse list-unstyled\" id=\"homeSubmenu\"> */}\r\n        //                 <Nav class=\"collapse list-unstyled\" id=\"processingFee\" as=\"ul\">\r\n        //                     <Nav.Item as=\"li\">\r\n        //                         <Nav.Link href=\"#\">List Processing Fee</Nav.Link>\r\n        //                     </Nav.Item>\r\n\r\n        //                 </Nav>\r\n        //             </Nav.Item>\r\n\r\n        //             <Nav.Item as=\"li\" >\r\n        //                 <Nav.Link href=\"#expense\" data-toggle=\"collapse\" aria-expanded=\"false\" className=\"dropdown-toggle\">Expense</Nav.Link>\r\n        //                 {/* <ul class=\"collapse list-unstyled\" id=\"homeSubmenu\"> */}\r\n        //                 <Nav class=\"collapse list-unstyled\" id=\"expense\" as=\"ul\">\r\n        //                     <Nav.Item as=\"li\">\r\n        //                         <Nav.Link href=\"#\">List Expense</Nav.Link>\r\n        //                     </Nav.Item>\r\n\r\n        //                 </Nav>\r\n        //             </Nav.Item>\r\n\r\n        //             <Nav.Item as=\"li\" >\r\n        //                 <Nav.Link href=\"#payments\" data-toggle=\"collapse\" aria-expanded=\"false\" className=\"dropdown-toggle\">Payment to collect</Nav.Link>\r\n        //                 {/* <ul class=\"collapse list-unstyled\" id=\"homeSubmenu\"> */}\r\n        //                 <Nav class=\"collapse list-unstyled\" id=\"payments\" as=\"ul\">\r\n        //                     <Nav.Item as=\"li\">\r\n        //                         <LinkContainer to=\"/dueEmis\">\r\n        //                             <Nav.Link href=\"#\">Payment to collect(Loan)</Nav.Link>\r\n        //                         </LinkContainer>\r\n        //                     </Nav.Item>\r\n\r\n        //                 </Nav>\r\n        //             </Nav.Item>\r\n        //         </Nav>\r\n        //     </nav>\r\n        // </Col>\r\n    )\r\n}\r\n","import React,{useState} from 'react'\r\nimport {  Navbar, Nav } from 'react-bootstrap';\r\nimport { useSelector,useDispatch } from \"react-redux\";\r\nimport { useHistory } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport {LOGOUT} from '../../constants/actionTypes';\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nexport default function TopNav(props) {\r\n  // const listRouteName = {\r\n  //                         \"/\":\"Dashboard\",\r\n  //                         \"/memberGroup\":\"Member Group\",\r\n  //                         \"/addMemberGroup\":\"Member Group\",\r\n  //                         \"/member\":\"Member\",\r\n  //                         \"/addMember\":\"Member\",\r\n  //                         \"/emiCalculator\":\"Calculate EMI\"\r\n  //                       }\r\n  const location = useLocation();\r\n  const auth = useSelector(state => state.auth);\r\n  const common = useSelector(state => state.common);\r\n  const dispatch = useDispatch();\r\n  let history = useHistory();\r\nconst [navClick,setNevClick] = useState(false);\r\n    return (\r\n        <nav className={navClick?\"navbar navbar-expand-lg navbar-absolute fixed-top bg-white\":\"navbar navbar-expand-lg navbar-absolute fixed-top navbar-transparent\"} >\r\n        <div className=\"container-fluid\">\r\n          <div className=\"navbar-wrapper\">\r\n            <div className=\"navbar-toggle\">\r\n              <button type=\"button\" className=\"navbar-toggler\">\r\n                <span className=\"navbar-toggler-bar bar1\"></span>\r\n                <span className=\"navbar-toggler-bar bar2\"></span>\r\n                <span className=\"navbar-toggler-bar bar3\"></span>\r\n              </button>\r\n            </div>\r\n            <a className=\"navbar-brand\" href=\"#\">{common.page}</a>\r\n          </div>\r\n          <button onClick={()=>setNevClick(!navClick)} className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navigation\" aria-controls=\"navigation-index\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-bar navbar-kebab\"></span>\r\n            <span className=\"navbar-toggler-bar navbar-kebab\"></span>\r\n            <span className=\"navbar-toggler-bar navbar-kebab\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse justify-content-end\" id=\"navigation\">\r\n            <form>\r\n              <div className=\"input-group no-border\">\r\n                <input type=\"text\" value=\"\" className=\"form-control\" placeholder=\"Search...\"/>\r\n                <div className=\"input-group-append\">\r\n                  <div className=\"input-group-text\">\r\n                    <i className=\"nc-icon nc-zoom-split\"></i>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </form>\r\n            <ul className=\"navbar-nav\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link btn-magnify\" href=\"#\">\r\n                  <i className=\"nc-icon nc-layout-11\"></i>\r\n                  <p>\r\n                    <span className=\"d-lg-none d-md-block\">Stats</span>\r\n                  </p>\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item btn-rotate dropdown\">\r\n                <a className=\"nav-link dropdown-toggle\" href=\"http://example.com\" id=\"navbarDropdownMenuLink\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                  <i className=\"nc-icon nc-bell-55\"></i>\r\n                  <p>\r\n                    <span className=\"d-lg-none d-md-block\"></span>\r\n                  </p>\r\n                </a>\r\n                <div className=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"navbarDropdownMenuLink\">\r\n                  <Link className=\"dropdown-item\" to={\"/login\"} >Logout</Link>\r\n                  {/* <a className=\"dropdown-item\" href=\"#\">Another action</a>\r\n                  <a className=\"dropdown-item\" href=\"#\">Something else here</a> */}\r\n                </div>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link btn-rotate\" href=\"#\">\r\n                  <i className=\"nc-icon nc-settings-gear-65\"></i>\r\n                  <p>\r\n                    <span className=\"d-lg-none d-md-block\">Account</span>\r\n                  </p>\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n\r\n        // <Navbar collapseOnSelect expand=\"lg\" bg=\"info\" variant=\"dark\">\r\n               \r\n        //         <h4 id=\"logo-web\" className=\"mr-4\">AA2 MutualHelp</h4>\r\n        //     <button type=\"button\" onClick={props.toggleSidebar} class=\"btn btn-dark\">\r\n        //         <i class=\"fas fa-align-left\"></i>\r\n        //     </button>\r\n        //     <h4 id=\"logo-mobile\" className=\"\">AA2 MutualHelp</h4>\r\n        //     <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n        //     <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n        //         <Nav className=\"ml-auto\">\r\n        //             <Nav.Link href=\"#\">{auth.username}</Nav.Link>\r\n        //             <Nav.Link eventKey={2} onClick={logout}>\r\n        //                 Logout\r\n        //             </Nav.Link>\r\n        //         </Nav>\r\n        //     </Navbar.Collapse>\r\n        // </Navbar>\r\n    )\r\n}\r\n","import React, { Component } from 'react';\r\nimport ListErrors from './ListErrors';\r\nclass ErrorBoundary extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { hasError: false };\r\n    }\r\n\r\n    static getDerivedStateFromError(error) {\r\n        // Update state so the next render will show the fallback UI.\r\n        return { hasError: true };\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        // You can also log the error to an error reporting service\r\n        //logErrorToMyService(error, errorInfo);\r\n        console.log(error,errorInfo);\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            // You can render any custom fallback UI\r\n            return <ListErrors errors=\"Something went wrong. Please discuss with developer!\" statusCode=\"401\"/>\r\n            \r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","import React, { useState, useEffect } from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport { useSelector,useDispatch } from \"react-redux\";\r\nimport InnerHeader from './InnerHeader';\r\nimport Footer from './Footer';\r\nimport Leftbar from './Leftbar';\r\nimport TopNav from './TopNav';\r\nimport { useHistory } from 'react-router';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport ErrorBoundary from './ErrorBoundary';\r\nconst InnerLayout = ({ component: Component, ...rest }) => {\r\n    const auth = useSelector(state => state.auth);\r\n    const history = useHistory();\r\n    const [showSidebar, setshowSidebar] = useState(true)\r\n    useEffect(() => {\r\n        setshowSidebar(window.innerWidth <= 768 ? false : true);\r\n        checkLogin();\r\n    }, [Component]);\r\n    const toggleSidebar = () => {\r\n\r\n        console.log(window);\r\n        setshowSidebar(showSidebar ? false : true)\r\n        // this.setState({\r\n        //   isopen:this.state.isopen?false:true\r\n        // })\r\n    }\r\n    const checkLogin = () =>{\r\n        let jwt = \"\";\r\n         jwt = sessionStorage.getItem(\"jwt\");\r\n         console.log(jwt);\r\n         if(jwt==\"\" || !auth.hasOwnProperty(\"username\")){\r\n             history.push(\"/login\");\r\n         }\r\n    }\r\n    return (\r\n        <Route {...rest} render={props => (\r\n            <>\r\n        <div className=\"wrapper \">\r\n        <Leftbar/>\r\n        <div className=\"main-panel\">\r\n            <TopNav toggleSidebar={toggleSidebar} />\r\n            <ErrorBoundary>\r\n          <Component {...props} />\r\n          </ErrorBoundary>\r\n        </div>\r\n      </div>\r\n            \r\n            </>\r\n        )} />)\r\n}\r\n\r\nexport default InnerLayout\r\n","import React,{useEffect,useState} from 'react'\r\nimport agent from '../../agent'\r\nimport {useHistory} from 'react-router-dom';\r\nimport { Table, Nav, Pagination,Button,Modal } from 'react-bootstrap';\r\n\r\nfunction UserOrderHistory(props) {\r\n    useEffect(() => {\r\n        getOrders()\r\n  },[])\r\n  const [orderHistory, setorderHistory] = useState([])\r\n  const [selectedorder,setselectedorder] = useState([]);\r\n  const [isopenpopup, setisopenpopup] = useState(false)\r\n  const handleClose = () => setisopenpopup(false);\r\n\r\n  const viewOrderPopUp = (record)=>{\r\n      setselectedorder(record);\r\n      setisopenpopup(true);\r\n  }\r\n  let history = useHistory();\r\n  const getOrders =()=>{\r\n      props.showLoader(true);\r\n      agent.Order.getOrderHistoryByUserEmail().then((res=>{\r\n          props.showLoader(false);\r\n          console.log(res.body.record)\r\n\r\n          setorderHistory(res.body.record);\r\n      }),(err)=>{\r\n          console.log(err.response.body.message);\r\n          if(err.response.body.message ==\"jwt must be provided\"){\r\n              console.log(\"login required\");\r\n            history.push(\"/login\");\r\n          }\r\n          props.showLoader(false);\r\n\r\n      });\r\n  }\r\n\r\n    return (\r\n        <>\r\n        <Table responsive>\r\n        <thead>\r\n            <tr>\r\n                <th>#</th>\r\n                <th>Customer</th>\r\n                <th>Date</th>\r\n                <th>Details</th>\r\n                <th>Number</th>\r\n                <th>Action</th>\r\n\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            {orderHistory.map((record,index)=>\r\n            <tr>\r\n                <td>{index+1}</td>\r\n                <td>{record.shipping.name}</td>\r\n                <td>{record.datePlaced}</td>\r\n                <td>{record.items.map(itm=><span>{itm.item.title} Quantity:{itm.quantity}<br></br></span>)}</td>\r\n                <td>{record.shipping.phone}</td>\r\n\r\n                <td>\r\n                    <Button type=\"button\" onClick={()=>viewOrderPopUp(record)}>View</Button>\r\n                </td>\r\n            </tr>\r\n\r\n            )}\r\n        </tbody>\r\n    </Table>\r\n    <Modal show={isopenpopup} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Order Details</Modal.Title>\r\n        </Modal.Header>\r\n            <Modal.Body>\r\n                <Table striped bordered hover responsive>\r\n                    <thead><tr><td colSpan=\"4\"><h4>Shipping Details</h4></td></tr></thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td><b>Name:</b> {selectedorder?.shipping?.name}</td>\r\n                            <td><b>Address:</b> {selectedorder?.shipping?.address}</td>\r\n                            <td><b>Phone:</b> {selectedorder?.shipping?.phone}</td>\r\n                            <td><b>City:</b> {selectedorder?.shipping?.city}</td>\r\n\r\n                        </tr>\r\n                    </tbody>\r\n                </Table>\r\n                <Table striped bordered hover responsive>\r\n                    <thead><tr><td colSpan=\"4\"><h4>Products</h4></td></tr></thead>\r\n                    <tbody>{selectedorder?.items?.map(itm=><tr>\r\n                    <td><b>Title:</b> {itm.item.title}</td>\r\n                    <td><b>Description:</b> {itm.item.description}</td>\r\n                    <td><b>Quantity:</b> {itm.quantity}</td>\r\n                    <td><b>Total Price:</b> {parseInt(itm.quantity)*itm.perItemPrice}</td>\r\n                    </tr>)}\r\n                    </tbody>\r\n                </Table>\r\n\r\n                <Table striped bordered hover responsive>\r\n                <thead><tr><td colSpan=\"4\"><h4>Bill Details</h4></td></tr></thead>\r\n                    <tbody>\r\n                        {selectedorder.isDiscountApplied?<tr>\r\n                            <td>\r\n                                <b>\r\n                                Prime Member Discount:\r\n                                </b>\r\n                            </td>\r\n                            <td>10%</td>\r\n                        </tr>:\"\"}\r\n                        <tr>\r\n                            <td>\r\n                                <b>Total Bill Amount</b>\r\n                            </td>\r\n                            <td>{selectedorder.totalBillAmount}</td>\r\n                        </tr>\r\n                    </tbody>\r\n\r\n                </Table>\r\n\r\n            </Modal.Body>\r\n      </Modal>\r\n\r\n    </>\r\n)\r\n}\r\n\r\nexport default UserOrderHistory\r\n","import React,{useState} from 'react'\r\nimport { ListGroup, Container, Row, Col, Card, Button, CardColumns,Toast,Alert } from 'react-bootstrap';\r\n// import CategoryManagement from '../Admin/CategoryManagement';\r\nimport Loader from '../../layout/Loader';\r\nimport UserOrderHistory from '../UserOrderHistory';\r\nfunction UserAction(props) {\r\n\r\nconst [isShowLoader, setisShowLoader] = useState(false)\r\nconst showLoader =(value)=>{\r\n    setisShowLoader(value);\r\n}\r\nreturn (\r\n    <>\r\n    <Container fluid>\r\n        <Row>\r\n            <Col md={3} className=\"p-4\">\r\n                <ListGroup>\r\n                    {/* <ListGroup.Item  active action>Category Management</ListGroup.Item>\r\n                    <ListGroup.Item  action>Product Management</ListGroup.Item> */}\r\n                    <ListGroup.Item  action active>Order History</ListGroup.Item>\r\n                    {/* <ListGroup.Item  action>Finance</ListGroup.Item> */}\r\n                </ListGroup>\r\n            </Col>\r\n            <Col md={9} className=\"p-4 production-col\" >\r\n                <Loader show={isShowLoader}/>\r\n                {/* <CategoryManagement showLoader={showLoader}/> */}\r\n                <UserOrderHistory showLoader={showLoader}/>\r\n            </Col>\r\n        </Row>\r\n    </Container>\r\n</>\r\n)\r\n\r\n}\r\nexport default UserAction\r\n","import {API_ROOT} from \"./BaseUrl\"\r\nimport axios from \"./interceptor-middleware\";\r\n//const url = '/memberGroups/';\r\n\r\nconst MemberGroupModel = {\r\n  getMemberGroups(){\r\n    return axios.get(`${API_ROOT}/memberGroups/entry`)\r\n  },\r\n  saveMemberGroups(data){\r\n    return axios.post(`${API_ROOT}/memberGroups/entry`,data)\r\n  },\r\n  saveImage(file){\r\n    return axios.post(`${API_ROOT}/member/image-upload`,file)\r\n  }\r\n  }\r\n    export default {MemberGroupModel};","import React, { useEffect, useState } from 'react';\r\nimport { Table, Button,ProgressBar } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport masterRecord from '../../../models/masterRecord';\r\nimport moment from 'moment';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { CHANGE_PAGE } from '../../../constants/actionTypes'\r\nfunction MemberGroup(props) {\r\n    const dispatch = useDispatch();\r\n    const [isShowLoader, setisShowLoader] = useState(0)\r\n    const [memberGroupRecords, setMemberGroupsRecords] = useState([]);\r\n    useEffect(() => {\r\n        setisShowLoader(10);\r\n        getMemberGroup();\r\n        dispatch({ type: CHANGE_PAGE, page: \"All Members Groups\" });\r\n    }, [])\r\n\r\n    const getMemberGroup = () => {\r\n        setisShowLoader(30);\r\n        masterRecord.MemberGroupModel.getMemberGroups().then(res => {\r\n            setisShowLoader(90);\r\n            if (res.statusCode == 200) {\r\n                setMemberGroupsRecords(res.body.message);\r\n            } else {\r\n                setMemberGroupsRecords([]);\r\n            }\r\n            setisShowLoader(100);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div class=\"content\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-12\">\r\n                        <Link to=\"/addMemberGroup\">\r\n                            <Button variant=\"info\" active>\r\n                                <i className=\"nc-icon nc-simple-add mr-2\"></i>\r\n                                Member Group\r\n                            </Button>\r\n                        </Link>\r\n\r\n                        <div class=\"card\">\r\n                            <div class=\"card-body\">\r\n                                <div class=\"table-responsive\">\r\n                                    <Table className=\" table\">\r\n                                        \r\n                                        <thead className=\"bg-primary\">\r\n                                            <tr>\r\n                                                <th>Maker/Checker</th>\r\n                                                <th>Group Code</th>\r\n                                                <th>Name</th>\r\n                                                <th>Remark</th>\r\n                                                <th>Created At</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {memberGroupRecords.map((group, id) => (<tr>\r\n                                                <td>{group?.user?.id} - {group?.user?.name}</td>\r\n                                                <td>{group.group_code}</td>\r\n                                                <td>{group.group_name}</td>\r\n                                                <td>{group.remark}</td>\r\n                                                <td>{moment(group.created_at).format(\"DD-MM-YYYY HH:SS\")}</td>\r\n                                            </tr>))}\r\n                                        </tbody>\r\n                                    </Table>\r\n                                    {isShowLoader<100?<div style={{ top: '50%',position:\"relative\" }}><ProgressBar style={{\"position\":\"relative\",\"width\":\"30%\",\"left\":\"40%\"}} striped variant=\"success\" now={isShowLoader} label={`${isShowLoader}%`} /></div>:\"\"}\r\n                                    \r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default MemberGroup;","import React, { useState, useEffect } from 'react';\r\nimport { Button, Form, Container, Row, Col, Toast, Alert } from 'react-bootstrap';\r\nimport { useFormik } from 'formik';\r\nimport masterRecord from '../../../models/masterRecord';\r\nimport Loader from '../../layout/Loader';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { CHANGE_PAGE } from '../../../constants/actionTypes'\r\n\r\nfunction AddMemberGroup(props) {\r\n  const auth = useSelector(state => state.auth);\r\n  const dispatch = useDispatch();\r\n  const [values, setValues] = useState({});\r\n  const [isShowLoader, setisShowLoader] = useState(false)\r\n  const [showToast, setShowToast] = useState({ isShow: false, type: \"\", message: \"\" })\r\n  useEffect(() => {\r\n    dispatch({ type: CHANGE_PAGE, page: \"Add Member Group\" });\r\n  }, [])\r\n  const handleAlertShow = (obj) => {\r\n    setShowToast(obj);\r\n    setTimeout(() => {\r\n      setShowToast({ isShow: false, type: \"\", message: \"\" })\r\n    }, 2000);\r\n  }\r\n  const validate = values => {\r\n    const errors = {};\r\n    if (!values.group_code) {\r\n      errors.group_code = 'Group Code is Required';\r\n    }\r\n    return errors;\r\n  };\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      group_code: '',\r\n      group_name: '',\r\n      remark: '',\r\n      user_id: auth.id\r\n    },\r\n    validate,\r\n    onSubmit: async (values) => {\r\n      setisShowLoader(true);\r\n      try {\r\n        let response = await masterRecord.MemberGroupModel.saveMemberGroups(values);\r\n        setisShowLoader(false);\r\n        if (response.statusCode == 200) {\r\n          handleAlertShow({ isShow: true, type: \"bg-success\", message: \"Member Group Created Successfully!\" })\r\n          formik.resetForm();\r\n        } else {\r\n          handleAlertShow({ isShow: true, type: \"bg-danger\", message: \"Something went wrong\" })\r\n\r\n        }\r\n\r\n      } catch (error) {\r\n        setisShowLoader(false);\r\n        handleAlertShow({ isShow: true, type: \"bg-danger\", message: error.response.body.message })\r\n      }\r\n    },\r\n    handleChange: () => {\r\n      setValues(prevValues => ({\r\n        ...prevValues,\r\n        // we use the name to tell Formik which key of `values` to update\r\n        [values.target.name]: values.target.value\r\n      }))\r\n    },\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div class=\"content\">\r\n        {/* <Toast key={1} autohide delay={3000} show={showToast.isShow} onClose={() => setShowToast({ isShow: false, type: \"\", message: \"\" })} className={\"loader \" + (showToast.type)} >\r\n          <Toast.Header>\r\n            <strong className=\"me-auto\">{showToast.type == \"bg-danger\" ? \"Error\" : \"Success\"} Message</strong>\r\n          </Toast.Header>\r\n          <Toast.Body className=\"Dark\">\r\n            {showToast.message}\r\n          </Toast.Body>\r\n        </Toast> */}\r\n        <Alert dismissible delay={3000} show={showToast.isShow} onClose={() => setShowToast({ isShow: false, type: \"\", message: \"\" })} key={showToast.type == \"bg-danger\" ? \"danger\" : \"success\"} variant={showToast.type == \"bg-danger\" ? \"danger\" : \"success\"}>\r\n          {showToast.message}\r\n        </Alert>\r\n        <Loader show={isShowLoader} />\r\n        <div class=\"row\">\r\n          <div class=\"col-md-8\">\r\n            <div class=\"card card-user\">\r\n              {/* <div class=\"card-header\">\r\n                <h5 class=\"card-title\">Add Member Group</h5>\r\n              </div> */}\r\n              <div class=\"card-body\">\r\n                <Form onSubmit={formik.handleSubmit}>\r\n                  <Form.Group className=\"mb-3 form-group required\" controlId=\"formBasicEmail\">\r\n                    <Form.Label>Group Code</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      name=\"group_code\"\r\n                      placeholder=\"Enter group code\"\r\n                      onChange={formik.handleChange}\r\n                      value={formik.values.group_code}\r\n\r\n                    />\r\n                    {formik.touched.group_code && formik.errors.group_code ? (\r\n                      <div class=\"text-danger\">{formik.errors.group_code}</div>\r\n                    ) : null}\r\n\r\n                  </Form.Group>\r\n\r\n                  <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                    <Form.Label>Group Name</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      name=\"group_name\"\r\n                      placeholder=\"Enter group name\"\r\n                      onChange={formik.handleChange}\r\n                      value={formik.values.group_name}\r\n                    />\r\n                  </Form.Group>\r\n\r\n                  <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control as=\"textarea\" rows={3} name=\"remark\"\r\n                      onChange={formik.handleChange}\r\n                      value={formik.values.remark} />\r\n                  </Form.Group>\r\n                  <Button variant=\"primary\" type=\"submit\">\r\n                    Save\r\n                  </Button>\r\n\r\n                </Form>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </>\r\n\r\n  );\r\n}\r\n\r\nexport default AddMemberGroup;","import {requests, superagent, API_ROOT} from \"./BaseUrl\"\r\nimport axios from \"./interceptor-middleware\";\r\n//const url = '/memberGroups/';\r\n\r\nconst MemberDetailModel = {\r\n  getMemberDetailsData(member_id=\"all\"){\r\n    return axios.get(`${API_ROOT}/member/entry/${member_id}`)\r\n  },\r\n  saveMemberDetails(data){\r\n    return axios.post(`${API_ROOT}/member/entry`,data)\r\n\r\n  },\r\n  deleteMember(id){\r\n    return axios.delete(`${API_ROOT}/member/entry/${id}`)\r\n  },  \r\n  editMember(data,id){\r\n    return axios.put(`${API_ROOT}/member/entry/${id}`,data)\r\n  }  \r\n    \r\n  }\r\n    export default {MemberDetailModel};","import React, { useState, useEffect } from 'react';\r\nimport { Button, Form, Row, Col, Alert } from 'react-bootstrap';\r\nimport DatePicker from \"react-datepicker\";\r\nimport { useFormik } from 'formik';\r\nimport memberDetails from \"../../../models/memberDetails\"\r\nimport masterRecord from '../../../models/masterRecord';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { CHANGE_PAGE } from '../../../constants/actionTypes'\r\nimport Loader from '../../layout/Loader';\r\nimport {API_ROOT} from \"../../../models/BaseUrl\"\r\n//import \"react-datepicker/dist/react-datepicker.css\";\r\nfunction AddMember(props) {\r\n    const auth = useSelector(state => state.auth);\r\n    let history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const [enrollmentDate, setEnrollmentDate] = useState(new Date());\r\n    const [dob, setDob] = useState();\r\n    const [values, setValues] = useState({});\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [groups, setGroups] = useState([])\r\n    const [showToast, setShowToast] = useState({ isShow: false, type: \"\", message: \"\" })\r\n    const [image, setImage] = useState(\"\")\r\n    let baseURL = API_ROOT.replace('/api','/')\r\n    useEffect(() => {\r\n        console.log(props);\r\n        dispatch({ type: CHANGE_PAGE, page: \"Add Member\" });\r\n        if (props.location.state)\r\n            getMemberDetails(props.location.state);\r\n        getMemberGroups();\r\n    }, [])\r\n    const getMemberGroups = async () => {\r\n        try {\r\n            setisShowLoader(true);\r\n            let response = await masterRecord.MemberGroupModel.getMemberGroups();\r\n            setisShowLoader(false);\r\n            setGroups(response.body.message)\r\n        } catch (error) {\r\n            setisShowLoader(false);\r\n            setShowToast({ isShow: true, type: \"bg-danger\", message: error.response.body.message })\r\n        }\r\n    }\r\n    const getMemberDetails = async (member_id) => {\r\n        try {\r\n            setisShowLoader(true);\r\n            let response = await memberDetails.MemberDetailModel.getMemberDetailsData(member_id);\r\n            console.log(response);\r\n            formik.values.aadhar_card = response.body.message[0].aadhar_card\r\n            formik.values.member_name = response.body.message[0].member_name\r\n            formik.values.gender = response.body.message[0].gender\r\n            formik.values.age = response.body.message[0].age\r\n            formik.values.marital_status = response.body.message[0].marital_status\r\n            formik.values.mobile_number = response.body.message[0].mobile_number\r\n            formik.values.email_id = response.body.message[0].email_id\r\n            formik.values.member_group_id = response.body.message[0].member_group_id\r\n            formik.values.pan_card_number = response.body.message[0].pan_card_number\r\n            formik.values.driving_license_number = response.body.message[0].driving_license_number\r\n            formik.values.voter_id_number = response.body.message[0].voter_id_number\r\n            formik.values.ration_card_number = response.body.message[0].ration_card_number\r\n            formik.values.bank_account = response.body.message[0].bank_account\r\n            formik.values.bank_ifsc_code = response.body.message[0].bank_ifsc_code\r\n            formik.values.bank_account_holder = response.body.message[0].bank_account_holder\r\n            formik.values.enrollment_date = response.body.message[0].enrollment_date\r\n            setEnrollmentDate(new Date(response.body.message[0].enrollment_date));\r\n            formik.values.date_of_birth = response.body.message[0].date_of_birth\r\n            formik.values.qualification = response.body.message[0].qualification\r\n            formik.values.spouse = response.body.message[0].spouse\r\n            if(response.body.message[0].image){\r\n                setImage(response.body.message[0].image);\r\n            }\r\n            setDob(new Date(response.body.message[0].date_of_birth));\r\n\r\n            setisShowLoader(false);\r\n            //setGroups(response.body.message)\r\n        } catch (error) {\r\n            setisShowLoader(false);\r\n            setShowToast({ isShow: true, type: \"bg-danger\", message: error.response.body.message })\r\n        }\r\n\r\n    }\r\n    const validate = values => {\r\n        window.scrollTo(0, 0);\r\n        const errors = {};\r\n        if (!values.member_name) {\r\n            errors.member_name = 'Please provide member name';\r\n        }\r\n        return errors;\r\n    };\r\n    const getImage= async(e)=>{\r\n        try {\r\n            if(e.target.files.length==0)\r\n                return false;\r\n            setisShowLoader(true);\r\n            setShowToast({ isShow: false, type: \"\", message: \"\" })\r\n            const file = e.target.files[0];\r\n            let fileExtArr = file.name.split(\".\");\r\n            let fileExt = fileExtArr[1];\r\n            if(fileExt!=\"png\" && fileExt!=\"jpg\"){\r\n                setisShowLoader(false);\r\n                setShowToast({ isShow: true, type: \"bg-danger\", message: \"Please upload Image type PNG or JPG\" })\r\n            }\r\n            let formData = new FormData();\r\n            formData.append('image', file);\r\n            let response = await masterRecord.MemberGroupModel.saveImage(formData);\r\n            if(response.status==200){\r\n                setImage(response.body.message.image.path)\r\n            }\r\n            console.log(response);\r\n            setisShowLoader(false);\r\n        } catch (error) {\r\n            setisShowLoader(false);\r\n            setShowToast({ isShow: true, type: \"bg-danger\", message: error.toString() })\r\n\r\n        }\r\n    }\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            enrollment_date: enrollmentDate,\r\n            date_of_birth: dob,\r\n            member_name: '',\r\n            gender: \"\",\r\n            age: \"\",\r\n            marital_status: \"\",\r\n            mobile_number: \"\",\r\n            email_id: \"\",\r\n            member_group_id: \"\",\r\n            aadhar_card: \"\",\r\n            pan_card_number: \"\",\r\n            driving_license_number: \"\",\r\n            voter_id_number: \"\",\r\n            ration_card_number: \"\",\r\n            bank_account: \"\",\r\n            bank_ifsc_code: \"\",\r\n            bank_account_holder: \"\",\r\n            user_id: auth.id,\r\n            qualification:'',\r\n            spouse:''\r\n        },\r\n        validate,\r\n        onSubmit: async (values) => {\r\n            setisShowLoader(true);\r\n            window.scrollTo(0, 0);\r\n            try {\r\n                values.enrollment_date = enrollmentDate;\r\n                values.date_of_birth = dob;\r\n                values.image = image;\r\n                let response = [];\r\n                if (props.location.state) {\r\n                    response = await memberDetails.MemberDetailModel.editMember(values, props.location.state);\r\n                } else {\r\n                    response = await memberDetails.MemberDetailModel.saveMemberDetails(values);\r\n                }\r\n                setisShowLoader(false);\r\n                if (response.statusCode == 200) {\r\n                    formik.resetForm();\r\n                    if (props.location.state)\r\n                        history.push(\"/member\")\r\n                    setShowToast({ isShow: true, type: \"bg-success\", message: \"Member Created Successfully!\" })\r\n                } else {\r\n                    setShowToast({ isShow: true, type: \"bg-danger\", message: \"Something went wrong!\" })\r\n                }\r\n\r\n            } catch (error) {\r\n                console.log(error.response.body.message);\r\n                setisShowLoader(false);\r\n                setShowToast({ isShow: true, type: \"bg-danger\", message: error.response.body.message })\r\n            }\r\n        }\r\n    });\r\n    return (\r\n        <>\r\n\r\n            <div class=\"content\">\r\n                <Alert dismissible delay={3000} show={showToast.isShow} onClose={() => setShowToast({ isShow: false, type: \"\", message: \"\" })} key={showToast.type == \"bg-danger\" ? \"danger\" : \"success\"} variant={showToast.type == \"bg-danger\" ? \"danger\" : \"success\"}>\r\n                    {showToast.message}\r\n                </Alert>\r\n\r\n                <Loader show={isShowLoader} />\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-8\">\r\n                        <div class=\"card card-user\">\r\n                            {/* <div class=\"card-header\">\r\n                                <h5 class=\"card-title\">Add Member</h5>\r\n                            </div> */}\r\n                            <div class=\"card-body\">\r\n\r\n                                <Form onSubmit={formik.handleSubmit}>\r\n                                    <Row className=\"mb-3\" >\r\n                                        <Form.Group as={Col} className=\"form-group required\" controlId=\"formGridEnroll\">\r\n                                            <Form.Label >Enrollment Date</Form.Label>\r\n                                            <DatePicker className=\"form-control\"\r\n                                                selected={enrollmentDate}\r\n                                                onChange={(date) => setEnrollmentDate(date)}\r\n                                                name=\"enrollment_date\"\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Col} className=\"form-group required\" controlId=\"formGridName\">\r\n                                            <Form.Label >Member Name</Form.Label>\r\n                                            <Form.Control type=\"text\"\r\n                                                placeholder=\"member name\"\r\n                                                name=\"member_name\"\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.member_name}\r\n\r\n                                            />\r\n                                            {formik.touched.member_name && formik.errors.member_name ? (\r\n                                                <div class=\"text-danger\">{formik.errors.member_name}</div>\r\n                                            ) : null}\r\n                                        </Form.Group>\r\n                                    </Row>\r\n                                    <Row className=\"mb-3\" >\r\n                                        <Form.Group as={Col} controlId=\"formGriddob\">\r\n                                            <Form.Label>Date of Birth</Form.Label>\r\n                                            <DatePicker\r\n                                                className=\"form-control\"\r\n                                                selected={dob}\r\n                                                onChange={(date) => setDob(date)}\r\n                                                name=\"date_of_birth\"\r\n                                            />\r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} className=\"mb-3\" controlId=\"formGridAddress1\">\r\n                                            <Form.Label>Gender</Form.Label>\r\n                                            <select\r\n                                                className=\"form-control\"\r\n                                                name=\"gender\"\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.gender}\r\n                                            >\r\n                                                <option key=\"\" value=\"\">Select Gender</option>\r\n\r\n                                                <option key=\"male\" value=\"male\">Male</option>\r\n                                                <option key=\"female\" value=\"female\">Female</option>\r\n\r\n                                            </select>\r\n                                        </Form.Group>\r\n\r\n                                    </Row>\r\n                                    <Row className=\"mb-3\" >\r\n                                        <Form.Group as={Col} controlId=\"formGridAge\">\r\n                                            <Form.Label>Age</Form.Label>\r\n                                            <Form.Control\r\n                                                name=\"age\"\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.age}\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Col} controlId=\"formGridState\">\r\n                                            <Form.Label>Marital Status</Form.Label>\r\n                                            <Form.Control\r\n                                                name=\"marital_status\"\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.marital_status}\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                    </Row>\r\n\r\n                                    <Row className=\"mb-3\" >\r\n                                        <Form.Group as={Col} controlId=\"formGridAge\">\r\n                                            <Form.Label>Phone number</Form.Label>\r\n                                            <Form.Control\r\n                                                name=\"mobile_number\"\r\n                                                type=\"number\"\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.mobile_number}\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Col} controlId=\"formGridState\">\r\n                                            <Form.Label>Email</Form.Label>\r\n                                            <Form.Control\r\n                                                name=\"email_id\"\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.email_id}\r\n                                                type=\"text\"\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                    </Row>\r\n                                    <Row className=\"mb-3\" >\r\n                                        <Form.Group as={Col} controlId=\"formGridAge\">\r\n                                            <Form.Label>Qualification</Form.Label>\r\n                                            <Form.Control\r\n                                                name=\"qualification\"\r\n                                                type=\"text\"\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.qualification}\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Col} controlId=\"formGridState\">\r\n                                            <Form.Label>Spouse name</Form.Label>\r\n                                            <Form.Control\r\n                                                name=\"spouse\"\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.spouse}\r\n                                                type=\"text\"\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                    </Row>\r\n                                    <Row className=\"mb-3\">\r\n                                        <Form.Group as={Col} md={6} className=\"mb-3\" controlId=\"formGridAddress1\">\r\n                                            <Form.Label>Member Group</Form.Label>\r\n                                            <select className=\"form-control\" name=\"member_group_id\" onChange={formik.handleChange}\r\n                                                value={formik.values.member_group_id}\r\n                                            >\r\n                                                <option key=\"\" value=\"\">Select Member Group</option>\r\n                                                {groups.map((group, id) => (\r\n                                                    <option key={group.group_code} value={group.group_code}>{group.group_code}</option>\r\n                                                ))}\r\n                                            </select>\r\n                                        </Form.Group>\r\n\r\n                                    </Row>\r\n                                    <Row className=\"mb-3\">\r\n                                        <Col>\r\n                                            <h3 className=\"text-info\">KYC Information</h3>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row className=\"mb-3\" >\r\n                                        <Form.Group as={Col} controlId=\"formGridAge\">\r\n                                            <Form.Label>Aadhar no.</Form.Label>\r\n                                            <Form.Control\r\n                                                name=\"aadhar_card\"\r\n                                                type=\"number\"\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.aadhar_card}\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Col} controlId=\"formGridState\">\r\n                                            <Form.Label>PAN</Form.Label>\r\n                                            <Form.Control\r\n                                                name=\"pan_card_number\"\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.pan_card_number}\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                    </Row>\r\n                                    <Row className=\"mb-3\" >\r\n                                        <Form.Group as={Col} controlId=\"formGridAge\">\r\n                                            <Form.Label>Driving Licence No.</Form.Label>\r\n                                            <Form.Control\r\n                                                name=\"driving_license_number\"\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.driving_license_number}\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Col} controlId=\"formGridState\">\r\n                                            <Form.Label>Voter Id No.</Form.Label>\r\n                                            <Form.Control\r\n                                                name=\"voter_id_number\"\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.voter_id_number}\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                    </Row>\r\n                                    <Row className=\"mb-3\" >\r\n                                        <Form.Group as={Col} md={6} controlId=\"formGridAge\">\r\n                                            <Form.Label>Ration Card No.</Form.Label>\r\n                                            <Form.Control\r\n                                                name=\"ration_card_number\"\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.ration_card_number}\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                    </Row>\r\n\r\n                                    <Row className=\"mb-3\">\r\n                                        <Col>\r\n                                            <h3 className=\"text-info\">Bank Details</h3>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row className=\"mb-3\" >\r\n                                        <Form.Group as={Col} controlId=\"formGridAge\">\r\n                                            <Form.Label>Bank Account No.</Form.Label>\r\n                                            <Form.Control\r\n                                                name=\"bank_account\"\r\n                                                type=\"number\"\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.bank_account}\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Col} controlId=\"formGridState\">\r\n                                            <Form.Label>IFSC code</Form.Label>\r\n                                            <Form.Control\r\n                                                name=\"bank_ifsc_code\"\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.bank_ifsc_code}\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                    </Row>\r\n                                    <Row className=\"mb-3\" >\r\n                                        <Form.Group as={Col} md={6} controlId=\"formGridAge\">\r\n                                            <Form.Label>Account holder name</Form.Label>\r\n                                            <Form.Control\r\n                                                name=\"bank_account_holder\"\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.bank_account_holder}\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n\r\n                                    </Row>\r\n\r\n                                    <Button variant=\"primary\" type=\"submit\">\r\n                                        Save\r\n                                    </Button>\r\n                                </Form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-4\">\r\n                        <div class=\"card card-user\">\r\n                            <div class=\"card-body\">\r\n                                <div class=\"image\">\r\n                                    <img src=\"../assets/img/damir-bosnjak.jpg\" alt=\"...\" />\r\n                                </div>\r\n\r\n                                <div class=\"author\">\r\n                                    <a href=\"#\">                                      \r\n                                        <img class=\"avatar border-gray\" src={image==\"\"?\"../assets/img/blank_image.jpg\":baseURL+image} alt=\"...\" />\r\n                                        <input type=\"file\" name=\"profile_image\" onChange={(e)=>getImage(e)}/>\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AddMember;","import React, { useEffect, useState, useMemo } from 'react';\r\nimport { Table,Button,Modal,Pagination,ProgressBar } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport memberRecord from '../../../models/memberDetails';\r\nimport moment from 'moment';\r\nimport {useTable,useSortBy,usePagination,useFilters } from 'react-table'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { CHANGE_PAGE } from '../../../constants/actionTypes'\r\n\r\nfunction Members(props) {\r\n    let history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const [isShowLoader, setisShowLoader] = useState(0)\r\n    const [showDeleteModel, setShowDeleteModel] = useState(false)\r\n    const [deleteID, setDeleteID] = useState(0)\r\n    const [memberRecords,setMemberRecords]=useState([]);\r\n    useEffect(() => {\r\n        setisShowLoader(10);\r\n        getMemberGroup();\r\n        dispatch({ type: CHANGE_PAGE, page: \"All Members\" });\r\n    },[])\r\n    \r\n    const data = useMemo(\r\n        () => \r\n        memberRecords.map((record,index)=>\r\n                { \r\n             return {\r\n                col1:moment(record.enrollment_date).format('DD-MM-yyy hh:ss A'),\r\n                col2:record.member_name,\r\n                col3:record.member_group_id,\r\n                col4:record.mobile_number,\r\n                col5:record,\r\n                col6:`${record?.user.id} - ${record?.user.name}`\r\n                }\r\n            }\r\n        )\r\n        ,\r\n        [memberRecords]\r\n      )   \r\n\r\n    const columns = useMemo(\r\n        () => [\r\n          {\r\n            Header: 'Maker/Checker',\r\n            accessor: 'col6', // accessor is the \"key\" in the data\r\n            allowFilter:true\r\n          },\r\n          {\r\n            Header: 'Enrollment Date',\r\n            accessor: 'col1', // accessor is the \"key\" in the data\r\n            allowFilter:true\r\n          },\r\n          {\r\n            Header: 'Member Name',\r\n            accessor: 'col2',\r\n            allowFilter:true\r\n          },\r\n          {\r\n            Header: 'Member Group Code',\r\n            accessor: 'col3',\r\n            allowFilter:true\r\n            },\r\n          {\r\n            Header: 'Mobile Number',\r\n            accessor: 'col4',\r\n            allowFilter:true\r\n          },\r\n          {\r\n            Header: 'Action',\r\n            accessor: 'col5',\r\n            allowFilter:false\r\n          }\r\n\r\n        ],\r\n        []\r\n      )    \r\n\r\n    const getMemberGroup = () =>{\r\n        setisShowLoader(30);\r\n        memberRecord.MemberDetailModel.getMemberDetailsData().then(res=>{\r\n            setisShowLoader(90);\r\n            if(res.statusCode == 200){\r\n                setMemberRecords(res.body.message);\r\n            }else{\r\n                setMemberRecords([]);\r\n            }\r\n            setisShowLoader(100);\r\n        })\r\n       \r\n    }\r\n    const deleteHandle=(id)=>{\r\n        setDeleteID(id);        \r\n        setShowDeleteModel(true);\r\n    }\r\n    const deleteMember=async()=>{\r\n        setShowDeleteModel(false);\r\n        let initialData = [...memberRecords];\r\n        setMemberRecords([]);\r\n        try{\r\n            setisShowLoader(30);\r\n            let response = await memberRecord.MemberDetailModel.deleteMember(deleteID);\r\n            setisShowLoader(90);\r\n            if(response.statusCode == 200){\r\n                let UpdatedList = initialData.filter((member,idx)=>member.member_id!=deleteID);\r\n                setMemberRecords(UpdatedList);\r\n             }\r\n             setisShowLoader(100);\r\n        }catch (error) {\r\n                console.log(error.response.body.message);\r\n                setisShowLoader(100);\r\n            }\r\n              \r\n    }\r\n  \r\n    function DefaultColumnFilter({\r\n        column: { filterValue, preFilteredRows, setFilter },\r\n    }) {\r\n        const count = preFilteredRows.length\r\n    \r\n        return (\r\n            <input\r\n                className=\"form-control\"\r\n                value={filterValue || ''}\r\n                onChange={e => {\r\n                    setFilter(e.target.value || undefined)\r\n                }}\r\n                placeholder={`Search ${count} records...`}\r\n            />\r\n        )\r\n    }    \r\n    const defaultColumn = React.useMemo(\r\n        () => ({\r\n            // Default Filter UI\r\n            Filter: DefaultColumnFilter,\r\n        }),\r\n        []\r\n    ) \r\n    const paginate = (totalPage)=>{\r\n      let pageNumberArray = [];\r\n      for(let i=1;i<=totalPage;i++){\r\n        pageNumberArray.push(i);\r\n      }\r\n      return(      \r\n      <Pagination>\r\n        <Pagination.First  onClick={() => gotoPage(0)}/>\r\n        <Pagination.Prev onClick={() => previousPage()} disabled={!canPreviousPage}/>\r\n        {pageNumberArray.map(num=><Pagination.Item key={num} active={num === (pageIndex+1)} onClick={() => gotoPage(num-1)}>{num}</Pagination.Item>)}\r\n        <Pagination.Next onClick={() => nextPage()} disabled={!canNextPage}/>\r\n        <Pagination.Last onClick={() => gotoPage(totalPage-1)}/>\r\n        </Pagination>\r\n      );\r\n    \r\n    }\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n        pageOptions,\r\n        page,\r\n        pageCount,\r\n        state: { pageIndex, pageSize },\r\n        gotoPage,\r\n        previousPage,\r\n        nextPage,\r\n        setPageSize,\r\n        canPreviousPage,\r\n        canNextPage,  \r\n      } = useTable({ columns, data, defaultColumn, initialState: { pageIndex: 0 }},useFilters,useSortBy,usePagination)\r\n    return (\r\n        <>\r\n      <Modal show={showDeleteModel} onHide={()=>setShowDeleteModel(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Delete Member</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>Are you sure?</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={()=>setShowDeleteModel(false)}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={()=>deleteMember()}>\r\n            Delete\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>        \r\n        {/* <Loader show={isShowLoader}/> */}\r\n        <div class=\"content\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-12\">\r\n                <Link to=\"/addMember\">\r\n                <Button variant=\"info\" active>\r\n                <i className=\"nc-icon nc-simple-add mr-2\"></i>\r\n                    Add Member\r\n                </Button>\r\n                </Link>\r\n                {/* </Col>\r\n            </Row>\r\n            <Row>\r\n            <Col> */}\r\n            <div className=\"text-right\">\r\n              {paginate(pageCount)}\r\n            </div>   \r\n            <div class=\"card\">\r\n                <div class=\"card-body\">\r\n                    <div class=\"table-responsive\">\r\n\r\n            <Table {...getTableProps()} className=\"table small\" >\r\n            <thead className=\"bg-primary\">\r\n                    {headerGroups.map(headerGroup => (\r\n                    <tr {...headerGroup.getHeaderGroupProps()}>\r\n                        {headerGroup.headers.map(column => (\r\n                        <th\r\n                            {...column.getHeaderProps(column.getSortByToggleProps())}\r\n                        >\r\n                            {column.render('Header')}\r\n                            <span>\r\n                            {column.isSorted ? (column.isSortedDesc ? ' 🔽' : ' 🔼') : ''}\r\n                            </span>\r\n                            <div>{column.allowFilter? column.render('Filter') : null}</div>\r\n                        </th>\r\n                        ))}\r\n                    </tr>\r\n                    ))}\r\n            </thead>\r\n            <tbody {...getTableBodyProps()}>\r\n\r\n                    {page.map(row => {\r\n                        prepareRow(row)\r\n                        return (\r\n                            <tr {...row.getRowProps()}>\r\n                            {row.cells.map(cell => {\r\n                                console.log(cell);\r\n                                if(cell.column.id !=\"col5\"){                                \r\n                                    return (\r\n                                        <td {...cell.getCellProps()}>\r\n                                            {cell.render('Cell')}\r\n                                        </td>\r\n                                        )\r\n                                    }else{\r\n                                        return (\r\n                                            <td>\r\n                                                <Button size={\"sm\"} variant=\"primary\"  onClick={()=>{history.push(\"/viewMemberDetail\",cell.value.member_id)}}>View</Button>\r\n                                                {' '}\r\n                                                <Button size={\"sm\"} variant=\"success\" onClick={()=>{history.push(\"/addMember\",cell.value.member_id)}} >Edit</Button>\r\n                                                {' '}\r\n                                                <Button size={\"sm\"} variant=\"danger\" onClick={()=>deleteHandle(cell.value.member_id)} >Delete</Button>\r\n                                            </td>\r\n                                        )\r\n                                    }\r\n                            })}\r\n                            </tr>\r\n                        )\r\n                        })}\r\n            </tbody>\r\n        </Table>\r\n        {isShowLoader<100?<div style={{ top: '50%',position:\"relative\" }}><ProgressBar style={{\"position\":\"relative\",\"width\":\"30%\",\"left\":\"40%\"}} striped variant=\"success\" now={isShowLoader} label={`${isShowLoader}%`} /></div>:\"\"}\r\n        </div></div></div>\r\n        <div className=\"text-right\">\r\n          {paginate(pageCount)}\r\n        </div>   \r\n        </div>\r\n        </div>\r\n        </div>\r\n        </>\r\n        );\r\n}\r\n\r\nexport default Members;","import React, { useEffect, useState } from 'react';\r\nimport { Table, Button, Container, Row, Col } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport memberRecord from '../../../models/memberDetails';\r\nimport Loader from '../../layout/Loader';\r\nimport moment from 'moment';\r\nimport {API_ROOT} from \"../../../models/BaseUrl\"\r\nfunction Members(props) {\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [memberRecords, setMemberRecords] = useState([]);\r\n    let baseURL = API_ROOT.replace('/api','/')\r\n    useEffect(() => {\r\n        console.log(props);\r\n        getMemberGroup();\r\n    }, [])\r\n\r\n    const getMemberGroup = () => {\r\n        setisShowLoader(true);\r\n        memberRecord.MemberDetailModel.getMemberDetailsData(props.location.state).then(res => {\r\n            setisShowLoader(false);\r\n            if (res.statusCode == 200) {\r\n                setMemberRecords(res.body.message[0]);\r\n            } else {\r\n                setMemberRecords([]);\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div class=\"content\">\r\n                <Loader show={isShowLoader} />\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-12\">\r\n                        <div class=\"card card-user\">\r\n                            {/* <div class=\"card-header\">\r\n                            <h5 class=\"card-title\">Member Detail - {memberRecords.member_name}</h5> */}\r\n                        <div class=\"image\">\r\n                            <img src=\"../assets/img/damir-bosnjak.jpg\" alt=\"...\"/>\r\n                        </div>\r\n                            <div class=\"card-body\">\r\n                                <div class=\"author\">\r\n                                    \r\n                                        <img class=\"avatar border-gray\" src={memberRecords.image?baseURL+memberRecords.image:\"../assets/img/damir-bosnjak.jpg\"} alt=\"...\" />\r\n                                        <h5 class=\"title\">{memberRecords.member_name}</h5>\r\n                                    \r\n                                    <p class=\"description\">\r\n                                        @{memberRecords.member_name}\r\n                                    </p>\r\n                                </div>\r\n                                <Table className=\"table\" >\r\n                                    <tbody>\r\n                                        <tr><th>Enrollment Date</th><td>{moment(memberRecords.enrollment_date).format(\"DD-MM-YYYY hh:ss A\")}</td> </tr>\r\n                                        {/* <tr><th>Member Name</th>  <td>{memberRecords.member_name}</td></tr> */}\r\n                                        <tr><th>Member Id</th>  <td>{memberRecords.member_id}</td></tr>\r\n                                        <tr> <th>Gender</th>  <td>{memberRecords.gender}</td></tr>\r\n                                        <tr><th>DOB</th>   <td>{memberRecords.date_of_birth?moment(memberRecords.date_of_birth).format(\"DD-MM-YYYY\"):\"\"} </td></tr>\r\n                                        <tr><th>Age</th> <td>{memberRecords.age}</td></tr>\r\n                                        <tr><th>Marital Status</th>  <td>{memberRecords.marital_status}</td></tr>\r\n                                        <tr><th>Mobile Number</th> <td>{memberRecords.mobile_number}</td></tr>\r\n                                        <tr><th>Email Id</th> <td>{memberRecords.email_id}</td></tr>\r\n                                        <tr><th>Qualification</th> <td>{memberRecords.qualification}</td></tr>\r\n                                        <tr><th>Spouse Name</th> <td>{memberRecords.spouse}</td></tr>\r\n                                        <tr> <th>Member Group Id</th>  <td>{memberRecords.member_group_id}</td></tr>\r\n                                        <tr> <th>Aadhar Number</th> <td>{memberRecords.aadhar_card}</td></tr>\r\n                                        <tr> <th>Driving License Number</th>  <td>{memberRecords.driving_license_number}</td></tr>\r\n                                        <tr> <th>Voter Id Number </th>  <td>{memberRecords.voter_id_number}</td></tr>\r\n                                        <tr>  <th>Ration Card Number</th> <td>{memberRecords.ration_card_number}</td></tr>\r\n                                        <tr> <th>PAN Number</th> <td>{memberRecords.pan_card_number}</td></tr>\r\n                                        <tr> <th>Bank Account no.</th> <td>{memberRecords.bank_account}</td></tr>\r\n                                        <tr> <th>IFSC Code</th> <td>{memberRecords.bank_ifsc_code}</td></tr>\r\n                                        <tr> <th>Bank Account Holder</th> <td>{memberRecords.bank_account_holder}</td></tr>\r\n\r\n                                    </tbody>\r\n                                </Table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* </div> */}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Members;","import moment from \"moment\"\r\nimport { requests, superagent, API_ROOT } from \"./BaseUrl\"\r\nimport axios from \"./interceptor-middleware\";\r\n//const url = '/memberGroups/';\r\n\r\nconst SchemeModel = {\r\n  getScheme() {\r\n    return axios.get(`${API_ROOT}/scheme/entry`)\r\n  },\r\n  saveScheme(data) {\r\n    return axios.post(`${API_ROOT}/scheme/entry`, data)\r\n  },\r\n  deleteScheme(id){\r\n    return axios.delete(`${API_ROOT}/scheme/entry/${id}`)\r\n  },  \r\n  getLoanAppInitialData(){\r\n      return [axios.get(`${API_ROOT}/scheme/entry`),axios.get(`${API_ROOT}/member/entry/all`)]\r\n  }\r\n\r\n}\r\nconst GroupLoanModel = {\r\n  applyForloan(data){\r\n    return axios.post(`${API_ROOT}/groupLoan/applyGroupLoan`, data)\r\n  },\r\n  getApprovalList(){\r\n    return axios.get(`${API_ROOT}/groupLoan/entry/pendingApproval`);\r\n  },\r\n  getDisburseList(){\r\n    return axios.get(`${API_ROOT}/groupLoan/entry/pendingDisburse`);\r\n  },\r\n  getLoanDetailbyId(id){\r\n    return axios.get(`${API_ROOT}/groupLoan/entry/${id}`);\r\n  },\r\n  approveRejectLoan(data){\r\n    return axios.post(`${API_ROOT}/groupLoan/approveLoan`, data)\r\n  },\r\n  getAllLoanApplications(){\r\n    return axios.get(`${API_ROOT}/groupLoan/entry/all`);\r\n  },\r\n  disburseRejectLoan(data){\r\n    return axios.post(`${API_ROOT}/groupLoan/disburseLoan`, data)\r\n  },\r\n  getSattlementAmount(loan_account_no){\r\n    return axios.get(`${API_ROOT}/closeAccount/calculateSattleAmount/${loan_account_no}`)\r\n  },\r\n  closeAccount(data){\r\n    return axios.post(`${API_ROOT}/closeAccount/closeLoanAccout`, data)\r\n  }\r\n}\r\nconst EmiModel = {\r\n  calculateEMI(data){\r\n    return axios.post(`${API_ROOT}/emis/calculateEMI`, data);\r\n  },\r\n  getDueEmis(today = moment().format(\"yyyy-MM-DD\")){\r\n    return axios.get(`${API_ROOT}/emis/dueEMIs/${today}`);\r\n  },\r\n  paidEmi(id){\r\n    return axios.put(`${API_ROOT}/emis/entry`,{\"id\":id});\r\n  },\r\n  getPaidEmis(loanAccountNo){\r\n    return axios.get(`${API_ROOT}/emis/entry/${loanAccountNo}`);\r\n  },\r\n  getAllEmis(today = moment().format(\"yyyy-MM-DD\")){\r\n    return axios.get(`${API_ROOT}/emis/allEmis/${today}`);\r\n  },\r\n\r\n}\r\nexport default { SchemeModel,GroupLoanModel,EmiModel };","import React, { useEffect, useState } from 'react';\r\nimport { Table, Button, Container, Row, Col, Modal } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport groupLoan from '../../models/groupLoan';\r\nimport Loader from '../layout/Loader';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { CHANGE_PAGE } from '../../constants/actionTypes'\r\nfunction Scheme(props) {\r\n    const dispatch = useDispatch();\r\n    const [showDeleteModel, setShowDeleteModel] = useState(false)\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [schemes, setSchemes] = useState([]);\r\n    const [deleteID, setDeleteID] = useState(0)\r\n    useEffect(() => {\r\n        getSchemes();\r\n        dispatch({ type: CHANGE_PAGE, page: \"All Schemes\" });\r\n    }, [])\r\n\r\n    const getSchemes = () => {\r\n        setisShowLoader(true);\r\n        groupLoan.SchemeModel.getScheme().then(res => {\r\n            setisShowLoader(false);\r\n            if (res.statusCode == 200) {\r\n                setSchemes(res.body.message);\r\n            } else {\r\n                setSchemes([]);\r\n            }\r\n        })\r\n    }\r\n    const deleteHandle = (id) => {\r\n        setDeleteID(id);\r\n        setShowDeleteModel(true);\r\n    }\r\n\r\n    const deleteScheme = async () => {\r\n        setShowDeleteModel(false);\r\n        try {\r\n            setisShowLoader(true);\r\n            let response = await groupLoan.SchemeModel.deleteScheme(deleteID);\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n                let UpdatedList = schemes.filter((scheme, idx) => scheme.id != deleteID);\r\n                setSchemes(UpdatedList);\r\n            }\r\n        } catch (error) {\r\n            console.log(error.response.body.message);\r\n            setisShowLoader(false);\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"content\">\r\n                <Modal show={showDeleteModel} onHide={() => setShowDeleteModel(false)}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Delete Scheme</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>Are you sure?</Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={() => setShowDeleteModel(false)}>\r\n                            Cancel\r\n                        </Button>\r\n                        <Button variant=\"primary\" onClick={() => deleteScheme()}>\r\n                            Delete\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n\r\n                <Loader show={isShowLoader} />\r\n                <Row className=\"mb-5 mt-3\">\r\n                    <Col>\r\n                        <Link to=\"/addScheme\">\r\n                            <Button variant=\"info\" size=\"md\" active>\r\n                                Add Scheme\r\n                            </Button>\r\n                        </Link>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <Table className=\"shadow-lg p-3 mb-5 bg-white rounded\" striped bordered hover responsive>\r\n                            <thead className=\"bg-primary\">\r\n                                <tr>\r\n                                    <th>Maker/Checker</th>\r\n                                    <th>Scheme code</th>\r\n                                    <th>Scheme name</th>\r\n                                    <th>Max amount</th>\r\n                                    <th>Interest rate (%)</th>\r\n                                    <th>EMI type</th>\r\n                                    <th>Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {schemes.map((scheme, id) => (<tr key={scheme.id}>\r\n                                    <td>{scheme.user.id} - {scheme.user.name}</td>\r\n                                    <td>{scheme.scheme_code}</td>\r\n                                    <td>{scheme.scheme_name}</td>\r\n                                    <td>{scheme.max_amount}</td>\r\n                                    <td>{scheme.interest_rate}%</td>\r\n                                    <td>{scheme.EMI_type}</td>\r\n                                    <td>\r\n                                        <Button variant=\"danger\" size={\"sm\"} onClick={() => deleteHandle(scheme.id)} className=\"ml-2\">Delete</Button>\r\n\r\n                                    </td>\r\n                                </tr>))}\r\n                            </tbody>\r\n                        </Table>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default Scheme;","import React, { useState,useEffect } from 'react';\r\nimport { Button, Form, Container, Row, Col, Toast } from 'react-bootstrap';\r\nimport { useFormik } from 'formik';\r\nimport groupLoan from '../../models/groupLoan';\r\nimport Loader from '../layout/Loader';\r\nimport { useSelector,useDispatch } from \"react-redux\";\r\nimport {CHANGE_PAGE} from '../../constants/actionTypes'\r\nfunction AddScheme(props) {\r\n  const auth = useSelector(state => state.auth);\r\n  const dispatch = useDispatch();\r\n  const [values, setValues] = useState({});\r\n  const [isShowLoader, setisShowLoader] = useState(false)\r\n  const [showToast, setShowToast] = useState({ isShow: false, type: \"\", message: \"\" })\r\n  useEffect(()=>{\r\n    dispatch({type:CHANGE_PAGE,page:\"Add Scheme\"});\r\n  },[]);\r\n  const validate = values => {\r\n    const errors = {};\r\n    if (!values.scheme_code) {\r\n      errors.scheme_code = 'Scheme code is Required!';\r\n    }\r\n    if (!values.scheme_name) {\r\n      errors.scheme_name = 'Scheme name is Required!';\r\n    }\r\n    if (!values.max_amount) {\r\n      errors.max_amount = 'Max amount is Required!';\r\n    }\r\n    if (!values.interest_rate) {\r\n      errors.interest_rate = 'Interest rate is Required!';\r\n    }\r\n    if (!values.EMI_type) {\r\n      errors.EMI_type = 'EMI type is Required!';\r\n    }\r\n    return errors;\r\n  };\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      scheme_code: '',\r\n      scheme_name: '',\r\n      max_amount: '',\r\n      interest_rate: '',\r\n      EMI_type: '',\r\n      user_id: auth.id\r\n    },\r\n    validate,\r\n    onSubmit: async (values) => {\r\n      setisShowLoader(true);\r\n      try {\r\n        let response = await groupLoan.SchemeModel.saveScheme(values);\r\n        setisShowLoader(false);\r\n        if (response.statusCode == 200) {\r\n          formik.resetForm();\r\n          setShowToast({ isShow: true, type: \"bg-success\", message: \"Scheme Created Successfully!\" })\r\n        } else {\r\n          setShowToast({ isShow: true, type: \"bg-danger\", message: \"Something Went Wrong!\" })\r\n        }\r\n\r\n      } catch (error) {\r\n        setisShowLoader(false);\r\n        setShowToast({ isShow: true, type: \"bg-danger\", message: error.response.body.message })\r\n      }\r\n    },\r\n    handleChange: () => {\r\n      setValues(prevValues => ({\r\n        ...prevValues,\r\n        // we use the name to tell Formik which key of `values` to update\r\n        [values.target.name]: values.target.value\r\n      }))\r\n    },\r\n  });\r\n  return (\r\n    <>\r\n      <Toast key={1} autohide delay={3000} show={showToast.isShow} onClose={() => setShowToast({ isShow: false, type: \"\", message: \"\" })} className={\"loader \" + (showToast.type)} >\r\n        <Toast.Header>\r\n          <strong className=\"me-auto\">{showToast.type == \"bg-danger\" ? \"Error\" : \"Success\"} Message</strong>\r\n        </Toast.Header>\r\n        <Toast.Body className=\"Dark\">\r\n          {showToast.message}\r\n        </Toast.Body>\r\n      </Toast>\r\n      <div className=\"content\">\r\n        <Loader show={isShowLoader} />\r\n        {/* <h2 className=\"text-info text-center\">Add Scheme</h2> */}\r\n        {/* <Container fluid className=\"bg-white mt-5 shadow-lg p-3 mb-5 bg-white rounded\"> */}\r\n        <div className=\"row\">\r\n          <div className=\"col-md-8\">\r\n            <div className=\"card card-user\">\r\n              <div className=\"card-header\">\r\n                <h5 className=\"card-title\">Add Scheme</h5>\r\n              </div>\r\n              <div className=\"card-body\">\r\n\r\n                <Form onSubmit={formik.handleSubmit}>\r\n                  <Row className=\"mb-3\" >\r\n                    <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                      <Form.Label>Scheme Code</Form.Label>\r\n                      <Form.Control\r\n                        name=\"scheme_code\"\r\n                        onChange={formik.handleChange}\r\n                        value={formik.values.scheme_code}\r\n                      />\r\n                      {formik.touched.scheme_code && formik.errors.scheme_code ? (\r\n                        <div class=\"text-danger\">{formik.errors.scheme_code}</div>\r\n                      ) : null}\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group\">\r\n                      <Form.Label>Scheme Name</Form.Label>\r\n                      <Form.Control\r\n                        name=\"scheme_name\"\r\n                        onChange={formik.handleChange}\r\n                        value={formik.values.scheme_name}\r\n                      />\r\n                      {formik.touched.scheme_name && formik.errors.scheme_name ? (\r\n                        <div class=\"text-danger\">{formik.errors.scheme_name}</div>\r\n                      ) : null}\r\n\r\n                    </Form.Group>\r\n\r\n                  </Row>\r\n                  <Row className=\"mb-3\" >\r\n                    <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                      <Form.Label>Max amount</Form.Label>\r\n                      <Form.Control\r\n                        name=\"max_amount\"\r\n                        type=\"number\"\r\n                        min=\"1\"\r\n                        onChange={formik.handleChange}\r\n                        value={formik.values.max_amount}\r\n                      />\r\n                      {formik.touched.max_amount && formik.errors.max_amount ? (\r\n                        <div class=\"text-danger\">{formik.errors.max_amount}</div>\r\n                      ) : null}\r\n\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                      <Form.Label>Interest Rate (in %)</Form.Label>\r\n                      <Form.Control\r\n                        name=\"interest_rate\"\r\n                        type=\"number\"\r\n                        min=\"0\"\r\n                        onChange={formik.handleChange}\r\n                        value={formik.values.interest_rate}\r\n                      />\r\n                      {formik.touched.interest_rate && formik.errors.interest_rate ? (\r\n                        <div class=\"text-danger\">{formik.errors.interest_rate}</div>\r\n                      ) : null}\r\n\r\n                    </Form.Group>\r\n\r\n                  </Row>\r\n                  <Row className=\"mb-3\" md={6}>\r\n                    <Form.Group as={Col} className=\"mb-3\" controlId=\"formGridAddress1\">\r\n                      <Form.Label>EMI type</Form.Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"EMI_type\"\r\n                        onChange={formik.handleChange}\r\n                        value={formik.values.EMI_type}\r\n                      >\r\n                        <option key=\"\" value=\"\">Select EMI type</option>\r\n                        <option key=\"flat\" value=\"flat\">Flat rate</option>\r\n                        {/* <option key=\"reduceing\" value=\"reduceing\">Reduceing rate</option> */}\r\n                      </select>\r\n                      {formik.touched.EMI_type && formik.errors.EMI_type ? (\r\n                        <div class=\"text-danger\">{formik.errors.EMI_type}</div>\r\n                      ) : null}\r\n\r\n                    </Form.Group>\r\n\r\n                  </Row>\r\n                  <Button variant=\"primary\" type=\"submit\">\r\n                    Save\r\n                  </Button>\r\n\r\n                </Form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* </Container> */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AddScheme;","import {API_ROOT} from \"./BaseUrl\"\r\nimport axios from \"./interceptor-middleware\";\r\n//const url = '/memberGroups/';\r\n\r\nconst DashboardModel = {\r\n  receivedAmount(){\r\n    return axios.get(`${API_ROOT}/dashboard/totalReceivedAmount`)\r\n  },\r\n  paidAmount(){\r\n    return axios.get(`${API_ROOT}/dashboard/totalPaidAmount`)\r\n  },\r\n  countActiveInactive(){\r\n    return axios.get(`${API_ROOT}/dashboard/countActiveInactive`)\r\n  }\r\n}\r\n    export default DashboardModel;","import {requests, superagent, API_ROOT} from \"./BaseUrl\"\r\nimport axios from \"./interceptor-middleware\";\r\n\r\n//const url = '/memberGroups/';\r\n\r\nconst ProcessingFeeModel = {\r\n    getProcessingFee(filter){\r\n        return axios.get(`${API_ROOT}/processingFee/entry/${filter}`)\r\n    },\r\n    saveProcessingFee(data){\r\n        return axios.post(`${API_ROOT}/processingFee/entry`,data)\r\n    },\r\n    deleteProcessingFee(id){\r\n        return axios.delete(`${API_ROOT}/processingFee/entry/${id}`)\r\n    },\r\n    editProcessingFee(data,id){\r\n        return axios.put(`${API_ROOT}/processingFee/entry/${id}`,data)\r\n\r\n    }\r\n    \r\n  }\r\n    export default {ProcessingFeeModel};","import {requests, superagent, API_ROOT} from \"./BaseUrl\"\r\nimport axios from \"./interceptor-middleware\";\r\n\r\n//const url = '/memberGroups/';\r\n\r\nconst ExpenseModel = {\r\n    getExpense(filter){\r\n        return axios.get(`${API_ROOT}/expense/entry/${filter}`)\r\n    },\r\n    saveExpense(data){\r\n        return axios.post(`${API_ROOT}/expense/entry`,data)\r\n    },\r\n    deleteExpense(id){\r\n        return axios.delete(`${API_ROOT}/expense/entry/${id}`)\r\n    },\r\n    editExpense(data,id){\r\n        return axios.put(`${API_ROOT}/expense/entry/${id}`,data)\r\n\r\n    }\r\n    \r\n  }\r\n    export default {ExpenseModel};","import React, { useEffect, useState } from 'react'\r\nimport agent from '../../agent'\r\nimport Loader from '../layout/Loader';\r\nimport { useDispatch } from 'react-redux';\r\nimport { CHANGE_PAGE } from '../../constants/actionTypes'\r\nimport DashboardModel from '../../models/dashboard'\r\nimport processingFee from '../../models/processingFee';\r\nimport expenseRecord from '../../models/expenseRecord';\r\nimport groupLoan from '../../models/groupLoan';\r\n\r\nimport { Pie } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\r\nimport { Link } from 'react-router-dom';\r\nimport moment from 'moment';\r\nChartJS.register(ArcElement, Tooltip, Legend);\r\n//var demo;\r\nexport default function Dashboard() {\r\n  const dispatch = useDispatch();\r\n  const [paidAmount, setPaidAmount] = useState({});\r\n  const [receivedAmount, setReceivedAmount] = useState({});\r\n  const [processingFeeReport, setProcessingFeeReport] = useState({});\r\n  const [countActiveInactive, setCountActiveInactive] = useState({});\r\n  const [expenseReport, setExpenseReport] = useState({});\r\n  const [totalMainBal, setTotalMainBal] = useState(0);\r\n  const [allEmis, setAllEmis] = useState({});\r\n  const [isShowLoader, setisShowLoader] = useState(false);\r\n  console.log(\"hello\");\r\n  useEffect(() => {\r\n    dispatch({ type: CHANGE_PAGE, page: \"Dashboard\" });\r\n    getReport();\r\n  }, [])\r\n  useEffect(()=>{\r\n    setTotalMainBal((receivedAmount?.total+processingFeeReport?.total)-(paidAmount?.total+expenseReport?.total))\r\n  },[receivedAmount,processingFeeReport,paidAmount,expenseReport])\r\n  const getReport = async () => {\r\n    try {\r\n      setisShowLoader(true);\r\n      let data = await Promise.allSettled([\r\n        DashboardModel.paidAmount(),\r\n        DashboardModel.receivedAmount(),\r\n        DashboardModel.countActiveInactive(),\r\n        processingFee.ProcessingFeeModel.getProcessingFee('all'),\r\n        expenseRecord.ExpenseModel.getExpense('all'),\r\n        groupLoan.EmiModel.getAllEmis()]);\r\n      let totalProcessing = 0;\r\n      data[3].value?.body?.message?.forEach(\r\n        val=>totalProcessing += val.amount\r\n        );\r\n\r\n      let totalExpense = 0;\r\n      data[4].value?.body?.message?.forEach(\r\n        val=>totalExpense += val.amount\r\n        );\r\n          setisShowLoader(false);\r\n          setPaidAmount(data[0].value?.body?.message)\r\n          setReceivedAmount(data[1].value?.body?.message)\r\n          setCountActiveInactive(data[2].value?.body?.message)\r\n          setAllEmis(data[5].value?.body)\r\n          setProcessingFeeReport({total:totalProcessing,fee:data[3].value?.body?.message})\r\n          setExpenseReport({total:totalExpense,expense:data[4].value?.body?.message})\r\n    } catch (error) {\r\n      setisShowLoader(false);\r\n      console.log(error);\r\n    }\r\n  }\r\n  const data = {\r\n    labels: [`Paid - ${allEmis?.paidCount}`,`Unpaid - ${allEmis?.notPaidCount}`],\r\n    datasets: [\r\n      {\r\n        label: '# of Votes',\r\n        data: [allEmis?.paidCount, allEmis?.notPaidCount],\r\n        backgroundColor: [\r\n          'rgba(75, 192, 192, 0.2)',\r\n          'rgba(255, 99, 132, 0.2)'\r\n        ],\r\n        borderColor: [\r\n          'rgba(75, 192, 192, 1)',\r\n          'rgba(255, 99, 132, 1)'\r\n        ],\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n  \r\n  return (\r\n    <>\r\n      <Loader show={isShowLoader} />\r\n      <div className=\"content\">\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-4 col-md-6 col-sm-6\">\r\n            <div className=\"card card-stats\">\r\n              <div className=\"card-body \">\r\n                <div className=\"row\">\r\n                  <div className=\"col-5 col-md-4\">\r\n                    <div className=\"icon-big text-center icon-warning\">\r\n                      <i className=\"nc-icon nc-globe text-warning\"></i>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-7 col-md-8\">\r\n                    <div className=\"numbers\">\r\n                      <p className=\"card-category\">Paid</p>\r\n                      <p className=\"card-title\">{paidAmount?.total}</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"card-footer \">\r\n                <hr />\r\n                <div className=\"stats\">\r\n                  <Link to=\"/paidDetailView\">\r\n                    <i className=\"nc-icon nc-bullet-list-67\"></i>\r\n                    Detail View\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-lg-4 col-md-6 col-sm-6\">\r\n            <div className=\"card card-stats\">\r\n              <div className=\"card-body \">\r\n                <div className=\"row\">\r\n                  <div className=\"col-5 col-md-4\">\r\n                    <div className=\"icon-big text-center icon-warning\">\r\n                      <i className=\"nc-icon nc-money-coins text-success\"></i>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-7 col-md-8\">\r\n                    <div className=\"numbers\">\r\n                      <p className=\"card-category\">Received</p>\r\n                      <p className=\"card-title\">{receivedAmount?.total?.toFixed(0)}</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"card-footer \">\r\n                <hr />\r\n                <div className=\"stats\">\r\n                  <Link to=\"/recieveDetailView\">\r\n                    <i className=\"nc-icon nc-bullet-list-67\"></i>\r\n                    Detail View\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-lg-4 col-md-6 col-sm-6\">\r\n            <div className=\"card card-stats\">\r\n              <div className=\"card-body \">\r\n                <div className=\"row\">\r\n                  <div className=\"col-5 col-md-4\">\r\n                    <div className=\"icon-big text-center icon-warning\">\r\n                      <i className=\"nc-icon nc-money-coins text-success\"></i>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-7 col-md-8\">\r\n                    <div className=\"numbers\">\r\n                      <p className=\"card-category\">Main Ledger</p>\r\n                      <p className=\"card-title\">{totalMainBal.toFixed(2)}</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"card-footer \">\r\n                <hr />\r\n                <div className=\"stats\">\r\n                  <Link to=\"/outstandingDetailView\">\r\n                    <i className=\"nc-icon nc-bullet-list-67\"></i>\r\n                    Detail View\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n        <div className='row justify-content-center'>\r\n          <div className=\"col-lg-3 col-md-6 col-sm-6\">\r\n            <div className=\"card card-stats\">\r\n              <div className=\"card-body \">\r\n                <div className=\"row\">\r\n                  <div className=\"col-5 col-md-4\">\r\n                    <div className=\"icon-big text-center icon-warning\">\r\n                      <i className=\"nc-icon nc-vector text-danger\"></i>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-7 col-md-8\">\r\n                    <div className=\"numbers\">\r\n                      <p className=\"card-category\">Active Borrowers</p>\r\n                      <p className=\"card-title\">{countActiveInactive?.active_accounts}</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {/* <div className=\"card-footer \">\r\n              <hr/>\r\n              <div className=\"stats\">\r\n                <i className=\"fa fa-clock-o\"></i>\r\n                In the last hour\r\n              </div>\r\n            </div> */}\r\n            </div>\r\n          </div>\r\n          <div className=\"col-lg-3 col-md-6 col-sm-6\">\r\n            <div className=\"card card-stats\">\r\n              <div className=\"card-body \">\r\n                <div className=\"row\">\r\n                  <div className=\"col-5 col-md-4\">\r\n                    <div className=\"icon-big text-center icon-warning\">\r\n                      <i className=\"nc-icon nc-favourite-28 text-primary\"></i>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-7 col-md-8\">\r\n                    <div className=\"numbers\">\r\n                      <p className=\"card-category\">Inactive Borrowers</p>\r\n                      <p className=\"card-title\">{countActiveInactive?.inactive_accounts}</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {/* <div className=\"card-footer \">\r\n              <hr/>\r\n              <div className=\"stats\">\r\n                <i className=\"fa fa-refresh\"></i>\r\n                Update now\r\n              </div>\r\n            </div> */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <div className=\"card \">\r\n            <div className=\"card-header \">\r\n              <h5 className=\"card-title\">Paid/Unpaid EMIs</h5>\r\n              <p className=\"card-category\">\r\n                <span><b>Total Paid:</b> {allEmis?.paidAmount?.toFixed(2)}</span><br/>\r\n                <span><b>Total Unpaid:</b> {allEmis?.unPaidAmount?.toFixed(2)}</span>\r\n                </p>\r\n            </div>\r\n            <div className=\"card-body \">\r\n              {/* <canvas id=\"chartHours\" width=\"400\" height=\"100\"></canvas> */}\r\n              <Pie\r\n              width={null}\r\n              height={null}\r\n                data={data}\r\n                options={{\r\n                  maintainAspectRatio: false// this would be a 1:1 aspect ratio\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"card-footer \">\r\n              <hr/>\r\n              <div className=\"stats\">\r\n                \r\n                {/* <i className=\"fa fa-history\"></i> Updated 3 minutes ago */}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n        {/* <div className=\"row\">\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card \">\r\n            <div className=\"card-header \">\r\n              <h5 className=\"card-title\">Email Statistics</h5>\r\n              <p className=\"card-category\">Last Campaign Performance</p>\r\n            </div>\r\n            <div className=\"card-body \">\r\n              <canvas id=\"chartEmail\"></canvas>\r\n            </div>\r\n            <div className=\"card-footer \">\r\n              <div className=\"legend\">\r\n                <i className=\"fa fa-circle text-primary\"></i> Opened\r\n                <i className=\"fa fa-circle text-warning\"></i> Read\r\n                <i className=\"fa fa-circle text-danger\"></i> Deleted\r\n                <i className=\"fa fa-circle text-gray\"></i> Unopened\r\n              </div>\r\n              <hr/>\r\n              <div className=\"stats\">\r\n                <i className=\"fa fa-calendar\"></i> Number of emails sent\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-8\">\r\n          <div className=\"card card-chart\">\r\n            <div className=\"card-header\">\r\n              <h5 className=\"card-title\">NASDAQ: AAPL</h5>\r\n              <p className=\"card-category\">Line Chart with Points</p>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <canvas id=\"speedChart\" width=\"400\" height=\"100\"></canvas>\r\n            </div>\r\n            <div className=\"card-footer\">\r\n              <div className=\"chart-legend\">\r\n                <i className=\"fa fa-circle text-info\"></i> Tesla Model S\r\n                <i className=\"fa fa-circle text-warning\"></i> BMW 5 Series\r\n              </div>\r\n              <hr />\r\n              <div className=\"card-stats\">\r\n                <i className=\"fa fa-check\"></i> Data information certified\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> */}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport { Button, Form, Container, Row, Col, Toast, Card, useAccordionButton, AccordionContext, Accordion } from 'react-bootstrap';\r\nimport { useFormik } from 'formik';\r\nimport DatePicker from \"react-datepicker\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport groupLoan from '../../models/groupLoan';\r\nimport Loader from '../layout/Loader';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { CHANGE_PAGE } from '../../constants/actionTypes'\r\nimport {API_ROOT} from \"../../models/BaseUrl\"\r\nfunction ContextAwareToggle({ children, eventKey, callback }) {\r\n    const { activeEventKey } = useContext(AccordionContext);\r\n\r\n    const decoratedOnClick = useAccordionButton(\r\n        eventKey,\r\n        () => callback && callback(eventKey),\r\n    );\r\n\r\n    const isCurrentEventKey = activeEventKey === eventKey;\r\n\r\n    return (\r\n        <Button variant=\"info\" onClick={decoratedOnClick}>\r\n            {/* <i className=\"nc-icon nc-simple-add mr-2\"></i> */}\r\n            {children}\r\n        </Button>\r\n\r\n    );\r\n}\r\nfunction LoanApplication(props) {\r\n    const auth = useSelector(state => state.auth);\r\n    const [enrollmentDate, setEnrollmentDate] = useState(new Date());\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [showToast, setShowToast] = useState({ isShow: false, type: \"\", message: \"\" })\r\n    const [memberRecords, setMemberRecords] = useState([]);\r\n    const [schemeRecords, setSchemeRecords] = useState([]);\r\n    const [selectedScheme, setSelectedScheme] = useState({});\r\n    const [image,setImage] = useState(\"\");\r\n    let baseURL = API_ROOT.replace('/api','/')\r\n    const tanure = { \"weekly\": \"Weeks\", \"monthly\": \"Months\", \"daily\": \"Days\", \"fortnight\": \"Fortnight\" };\r\n    let history = useHistory();\r\n    const dispatch = useDispatch();\r\n    //const selectedSm = {\"interest_rate\":0,\"EMI_type\":\"\",\"max_amount\":0};\r\n    useEffect(() => {\r\n        getSchemesAndMembers();\r\n        dispatch({ type: CHANGE_PAGE, page: \"Loan Application\" });\r\n    }, [])\r\n    const getSchemesAndMembers = async () => {\r\n        try {\r\n            setisShowLoader(true);\r\n            const response = await Promise.all(groupLoan.SchemeModel.getLoanAppInitialData())\r\n            setisShowLoader(false);\r\n            setSchemeRecords(response[0].body.message);\r\n            setMemberRecords(response[1].body.message);\r\n            console.log(response);\r\n        } catch (error) {\r\n            setisShowLoader(false);\r\n            setShowToast({ isShow: true, type: \"bg-danger\", message: error.response.body.message })\r\n        }\r\n    }\r\n    const validate = values => {\r\n        const errors = {};\r\n        if (!values.scheme_id) {\r\n            errors.scheme_id = 'Scheme code is Required!';\r\n        }\r\n        if (!values.member_id) {\r\n            errors.member_id = 'Member name is Required!';\r\n        }\r\n        if (!values.interest_rate) {\r\n            errors.interest_rate = 'Interest rate is Required!';\r\n        }\r\n        if (selectedScheme?.interest_rate > 0 && values.interest_rate > selectedScheme?.interest_rate) {\r\n            errors.interest_rate = `As per the Selected Scheme. Interest rate should not greater than ${selectedScheme.interest_rate}.`;\r\n        }\r\n        if (!values.loan_amount) {\r\n            errors.loan_amount = 'Loan amount is Required!';\r\n        }\r\n        if (selectedScheme?.max_amount > 0 && values.loan_amount > selectedScheme.max_amount) {\r\n            errors.loan_amount = `As per the Selected Scheme. Loan amount should not greater than ${selectedScheme.max_amount}.`;\r\n        }\r\n        if (!values.EMI_payout) {\r\n            errors.EMI_payout = 'EMI payout is Required!';\r\n        }\r\n        if (!values.tenure) {\r\n            errors.tenure = 'Tenure is Required!';\r\n        }\r\n        return errors;\r\n    };\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            scheme_id: '',\r\n            application_date: '',\r\n            member_id: '',\r\n            address: '',\r\n            interest_rate: \"\",\r\n            loan_amount: '',\r\n            // EMI_amount: '',\r\n            EMI_payout: \"\",\r\n            EMI_type: \"\",\r\n            tenure: \"\",\r\n            user_id: auth.id,\r\n            co_borrower_name: \"\",\r\n            co_borrower_aadhar_card: \"\",\r\n            co_borrower_pan_card: \"\",\r\n            co_borrower_ele_bill: \"\",\r\n            co_borrower_relationship:\"\",\r\n            purpose:\"\"\r\n        },\r\n        validate,\r\n        onSubmit: async (values) => {\r\n            console.log(values);\r\n            setisShowLoader(true);\r\n            try {\r\n                //delete values.EMI_type;\r\n                values.application_date = enrollmentDate;\r\n                let response = await groupLoan.GroupLoanModel.applyForloan(values);\r\n                setisShowLoader(false);\r\n                if (response.statusCode == 200) {\r\n                    formik.resetForm();\r\n                    setShowToast({ isShow: true, type: \"bg-success\", message: \"Record created successfully. Loan goes for approval.\" })\r\n                } else {\r\n                    setShowToast({ isShow: true, type: \"bg-danger\", message: \"Something went wrong!\" })\r\n                }\r\n\r\n            } catch (error) {\r\n                setisShowLoader(false);\r\n                setShowToast({ isShow: true, type: \"bg-danger\", message: error.response.body.message })\r\n            }\r\n        }\r\n    });\r\n    const handleScheme = (e) => {\r\n        console.log(e.target.value);\r\n        let selectedScheme = schemeRecords.filter(scheme => scheme.scheme_code == e.target.value);\r\n        setSelectedScheme(selectedScheme[0]);\r\n        formik.values.EMI_type = selectedScheme[0].EMI_type;\r\n        formik.values.interest_rate = selectedScheme[0].interest_rate;\r\n        formik.handleChange(e);\r\n    }\r\n    const handleMemberSelection = (e)=>{\r\n        if(e.target.value!=\"\"){\r\n            let selectMember = memberRecords.filter(val=>val.member_id.toString()==e.target.value);\r\n            setImage(selectMember[0].image);\r\n        }\r\n        formik.handleChange(e);\r\n    }\r\n    return (\r\n\r\n        <>\r\n\r\n            <div className=\"content\">\r\n                <Toast key={1} autohide delay={3000} show={showToast.isShow} onClose={() => setShowToast({ isShow: false, type: \"\", message: \"\" })} className={\"loader \" + (showToast.type)} >\r\n                    <Toast.Header>\r\n                        <strong className=\"me-auto\">{showToast.type == \"bg-danger\" ? \"Error\" : \"Success\"} Message</strong>\r\n                    </Toast.Header>\r\n                    <Toast.Body className=\"Dark\">\r\n                        {showToast.message}\r\n                    </Toast.Body>\r\n                </Toast>\r\n                <Loader show={isShowLoader} />\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-8\">\r\n                        <Form onSubmit={formik.handleSubmit}>\r\n                            <Accordion defaultActiveKey=\"0\" >\r\n                                <Card className=\"card card-user\">\r\n                                    <Card.Header>\r\n                                        <ContextAwareToggle eventKey=\"0\">Borrower Details</ContextAwareToggle>\r\n                                    </Card.Header>\r\n\r\n                                    <Accordion.Collapse eventKey=\"0\">\r\n                                        <Card.Body className=\"card-body\">\r\n\r\n                                            <Row className=\"mb-3\" >\r\n                                                <Form.Group as={Col} className=\"form-group required\" controlId=\"formGridEnroll\">\r\n                                                    <Form.Label >Application Date</Form.Label>\r\n                                                    <DatePicker className=\"form-control\"\r\n                                                        selected={enrollmentDate}\r\n                                                        onChange={(date) => setEnrollmentDate(date)}\r\n                                                        name=\"application_date\"\r\n                                                        dateFormat=\"dd/MM/yyyy\"\r\n                                                    />\r\n                                                </Form.Group>\r\n                                                <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                                                    <Form.Label>Member name</Form.Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"member_id\"\r\n                                                        onChange={(e)=>handleMemberSelection(e)}\r\n                                                        value={formik.values.member_id}\r\n                                                    >\r\n                                                        <option key=\"\" value=\"\">Select Member</option>\r\n                                                        {memberRecords.map((member, id) => (\r\n                                                            <option key={member.member_id} value={member.member_id}>{`name= ${member.member_name} - member_id= ${member.member_id} `}</option>\r\n                                                        ))}\r\n\r\n                                                    </select>\r\n                                                    {formik.touched.member_id && formik.errors.member_id ? (\r\n                                                        <div className=\"text-danger\">{formik.errors.member_id}</div>\r\n                                                    ) : null}\r\n                                                </Form.Group>\r\n\r\n                                            </Row>\r\n                                            <Row className=\"mb-3\" >\r\n                                                <Form.Group as={Col} controlId=\"formGriddob\">\r\n                                                    <Form.Label>Member Address</Form.Label>\r\n                                                    <Form.Control\r\n                                                        name=\"address\"\r\n                                                        as=\"textarea\"\r\n                                                        onChange={formik.handleChange}\r\n                                                        value={formik.values.address}\r\n\r\n                                                    />\r\n                                                </Form.Group>\r\n                                                <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                                                    <Form.Label>Scheme</Form.Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"scheme_id\"\r\n                                                        onChange={handleScheme}\r\n                                                        value={formik.values.scheme_id}\r\n                                                    >\r\n                                                        <option key=\"\" value=\"\">Select Scheme</option>\r\n                                                        {schemeRecords.map((schems, id) => (\r\n                                                            <option key={schems.id} value={schems.id}>{schems.scheme_code}</option>\r\n                                                        ))}\r\n\r\n                                                    </select>\r\n                                                    {formik.touched.scheme_id && formik.errors.scheme_id ? (\r\n                                                        <div className=\"text-danger\">{formik.errors.scheme_id}</div>\r\n                                                    ) : null}\r\n\r\n                                                </Form.Group>\r\n\r\n                                            </Row>\r\n                                            <Row className=\"mb-3\" >\r\n                                                <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                                                    <Form.Label>Interest Rate (in %)</Form.Label>\r\n                                                    <Form.Control\r\n                                                        name=\"interest_rate\"\r\n                                                        type=\"number\"\r\n                                                        min=\"0\"\r\n                                                        onChange={formik.handleChange}\r\n                                                        value={formik.values.interest_rate}\r\n                                                    />\r\n                                                    <Form.Text className=\"text-muted\">\r\n                                                        It will change as per scheme.\r\n                                                    </Form.Text>\r\n                                                    {formik.touched.interest_rate && formik.errors.interest_rate ? (\r\n                                                        <div className=\"text-danger\">{formik.errors.interest_rate}</div>\r\n                                                    ) : null}\r\n\r\n                                                </Form.Group>\r\n                                                <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                                                    <Form.Label>Loan Amount</Form.Label>\r\n                                                    <Form.Control\r\n                                                        name=\"loan_amount\"\r\n                                                        type=\"number\"\r\n                                                        min=\"0\"\r\n                                                        onChange={formik.handleChange}\r\n                                                        value={formik.values.loan_amount}\r\n                                                    />\r\n                                                    <Form.Text className=\"text-muted\">\r\n                                                        Default will be Max amount of selected scheme.\r\n                                                    </Form.Text>\r\n\r\n                                                    {formik.touched.loan_amount && formik.errors.loan_amount ? (\r\n                                                        <div className=\"text-danger\">{formik.errors.loan_amount}</div>\r\n                                                    ) : null}\r\n\r\n                                                </Form.Group>\r\n\r\n                                            </Row>\r\n                                            <Row className=\"mb-3\" >\r\n                                                <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                                                    <Form.Label>EMI Payout</Form.Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"EMI_payout\"\r\n                                                        onChange={formik.handleChange}\r\n                                                        value={formik.values.EMI_payout}\r\n                                                    >\r\n                                                        <option key=\"\" value=\"\">Select Payout</option>\r\n                                                        {/* <option key=\"weekly\" value=\"weekly\">Weekly</option>\r\n                                                <option key=\"monthly\" value=\"fortnight\">Fortnight</option> */}\r\n                                                        <option key=\"monthly\" value=\"monthly\">Monthly</option>\r\n                                                    </select>\r\n                                                    {formik.touched.EMI_payout && formik.errors.EMI_payout ? (\r\n                                                        <div className=\"text-danger\">{formik.errors.EMI_payout}</div>\r\n                                                    ) : null}\r\n\r\n                                                </Form.Group>\r\n                                                <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                                                    <Form.Label>Tenure(in {formik.values.EMI_payout != \"\" ? tanure[formik.values.EMI_payout] : \"Months\"})</Form.Label>\r\n                                                    <Form.Control\r\n                                                        name=\"tenure\"\r\n                                                        type=\"number\"\r\n                                                        min=\"1\"\r\n                                                        onChange={formik.handleChange}\r\n                                                        value={formik.values.tenure}\r\n                                                    />\r\n                                                    {formik.touched.tenure && formik.errors.tenure ? (\r\n                                                        <div className=\"text-danger\">{formik.errors.tenure}</div>\r\n                                                    ) : null}\r\n\r\n                                                </Form.Group>\r\n                                            </Row>\r\n                                            <Row className=\"mb-3\">\r\n                                            <Form.Group as={Col} md={6} controlId=\"formGriddob\" className=\"form-group required\">\r\n                                                    <Form.Label>Purpose of Loan</Form.Label>\r\n                                                    <Form.Control\r\n                                                        name=\"purpose\"\r\n                                                        type=\"text\"\r\n                                                        onChange={formik.handleChange}\r\n                                                        value={formik.values.purpose}\r\n                                                    />\r\n                                                </Form.Group>\r\n\r\n                                                <Form.Group as={Col} md={6} controlId=\"formGriddob\" className=\"form-group required\">\r\n                                                    <Form.Label>EMI Type</Form.Label>\r\n                                                    <Form.Control\r\n                                                        name=\"EMI_type\"\r\n                                                        type=\"text\"\r\n                                                        onChange={formik.handleChange}\r\n                                                        value={formik.values.EMI_type}\r\n                                                        disabled=\"disabled\"\r\n                                                    />\r\n                                                    <Form.Text className=\"text-muted\">\r\n                                                        It will change as per selected scheme.\r\n                                                    </Form.Text>\r\n                                                </Form.Group>\r\n                                            </Row>\r\n                                            {/* <Button variant=\"primary\" type=\"button\" onClick={()=>setActiveCard(\"1\")}>\r\n                                                Save\r\n                                            </Button> */}\r\n                                            <ContextAwareToggle eventKey=\"1\">Next</ContextAwareToggle>\r\n                                            <Button variant=\"danger\" onClick={() => { history.push(\"/\") }} type=\"button\" className=\"ml-2\">\r\n                                                Cancel\r\n                                            </Button>\r\n                                            {/* </Form> */}\r\n                                        </Card.Body>\r\n                                    </Accordion.Collapse>\r\n                                </Card>\r\n                                <Card className=\"card card-user\">\r\n                                    <Card.Header>\r\n                                        <ContextAwareToggle eventKey=\"1\">Co-Borrower Details</ContextAwareToggle>\r\n                                    </Card.Header>\r\n\r\n                                    <Accordion.Collapse eventKey=\"1\">\r\n                                        <Card.Body className=\"card-body\">\r\n                                            {/* <Form onSubmit={formik.handleSubmit}> */}\r\n                                            <Row className=\"mb-3\" >\r\n                                                <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                                                    <Form.Label>Co-Borrower name</Form.Label>\r\n                                                    <Form.Control\r\n                                                        name=\"co_borrower_name\"\r\n                                                        type=\"input\"\r\n                                                        min=\"0\"\r\n                                                        onChange={formik.handleChange}\r\n                                                        value={formik.values.co_borrower_name}\r\n                                                    />\r\n                                                </Form.Group>\r\n                                                <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                                                    <Form.Label>Relation ship</Form.Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"co_borrower_relationship\"\r\n                                                        onChange={formik.handleChange}\r\n                                                        value={formik.values.co_borrower_relationship}\r\n                                                    >\r\n                                                        <option key=\"\" value=\"\">Select</option>\r\n                                                        <option key=\"husband\" value=\"husband\">Husband</option>\r\n                                                        <option key=\"father\" value=\"father\">Father</option>\r\n                                                        <option key=\"other\" value=\"other\">Other</option>\r\n                                                    </select>\r\n                                                </Form.Group>\r\n                                            </Row>\r\n                                            <Row className=\"mb-3\" >\r\n                                                <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                                                    <Form.Label>Aadhar Card</Form.Label>\r\n                                                    <Form.Control\r\n                                                        name=\"co_borrower_aadhar_card\"\r\n                                                        type=\"number\"\r\n                                                        min=\"0\"\r\n                                                        onChange={formik.handleChange}\r\n                                                        value={formik.values.co_borrower_aadhar_card}\r\n                                                    />\r\n                                                </Form.Group>\r\n                                                <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                                                    <Form.Label>PAN Card</Form.Label>\r\n                                                    <Form.Control\r\n                                                        name=\"co_borrower_pan_card\"\r\n                                                        type=\"input\"\r\n                                                        min=\"0\"\r\n                                                        onChange={formik.handleChange}\r\n                                                        value={formik.values.co_borrower_pan_card}\r\n                                                    />\r\n                                                </Form.Group>\r\n                                            </Row>\r\n                                            <Row className=\"mb-3\">\r\n                                                <Form.Group as={Col} md={6} controlId=\"formGriddob\" className=\"form-group required\">\r\n                                                    <Form.Label>Ele Bill no</Form.Label>\r\n                                                    <Form.Control\r\n                                                        name=\"co_borrower_ele_bill\"\r\n                                                        type=\"text\"\r\n                                                        onChange={formik.handleChange}\r\n                                                        value={formik.values.co_borrower_ele_bill}\r\n                                                    />\r\n                                                </Form.Group>\r\n                                            </Row>\r\n\r\n                                            <Button variant=\"primary\" type=\"submit\">\r\n                                                Save\r\n                                            </Button>\r\n                                            <Button variant=\"danger\" onClick={() => { history.push(\"/\") }} type=\"button\" className=\"ml-2\">\r\n                                                Cancel\r\n                                            </Button>\r\n                                        </Card.Body>\r\n                                    </Accordion.Collapse>\r\n                                </Card>\r\n                            </Accordion>\r\n                        </Form>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        <div className=\"card card-user\">\r\n                            <div className=\"card-body\">\r\n                                <div className=\"image\">\r\n                                    <img src=\"../assets/img/damir-bosnjak.jpg\" alt=\"...\" />\r\n                                </div>\r\n\r\n                                <div className=\"author\">\r\n                                    <a href=\"#\">\r\n\r\n                                        <img className=\"avatar border-gray\" src={image==\"\"?\"../assets/img/blank_image.jpg\":baseURL+image} alt=\"...\" />\r\n                                        {/* <input type=\"file\" name=\"profile_image\"/> */}\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LoanApplication;","import React, { useEffect, useState } from 'react';\r\nimport { Table, Button, Container, Row, Col } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport groupLoan from '../../models/groupLoan';\r\nimport Loader from '../layout/Loader';\r\nimport { useHistory } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { CHANGE_PAGE } from '../../constants/actionTypes'\r\n\r\nfunction LoanApproval(props) {\r\n    let history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [loanlist, setLoanlist] = useState([]);\r\n    useEffect(() => {\r\n        getLoanList();\r\n        dispatch({ type: CHANGE_PAGE, page: \"Applications for Approval\" });\r\n    }, [])\r\n\r\n    const getLoanList = async () => {\r\n        try {\r\n            setisShowLoader(true);\r\n            let response = await groupLoan.GroupLoanModel.getApprovalList();\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n                setLoanlist(response.body.message);\r\n            }\r\n\r\n        } catch (error) {\r\n            setisShowLoader(false);\r\n            console.log(error);\r\n        }\r\n    }\r\n    const redirectApproval = (loan_id) => {\r\n        history.push(\"/loanApprovalDetails?actionType=approve\", loan_id);\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"content\">\r\n                <Loader show={isShowLoader} />\r\n                {/* <Container fluid> */}\r\n                <Row>\r\n                    <Col>\r\n                        <Table className=\" shadow-lg p-3 mb-5 bg-white rounded\" striped bordered hover responsive>\r\n                            <thead className=\"bg-primary\">\r\n                                <tr>\r\n                                    <th>Maker/Checker</th>\r\n                                    <th>Application Date</th>\r\n                                    <th>Member name</th>\r\n                                    <th>Scheme ID</th>\r\n                                    <th>Loan Amount</th>\r\n                                    <th>Interest rate</th>\r\n                                    <th>Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {loanlist.length!=0?loanlist.map((loan, id) => (<tr key={loan.id}>\r\n                                    <td>{loan.user.id} - {loan.user.name}</td>\r\n                                    <td>{moment(loan.application_date).format(\"DD-MM-YYYY hh:ss A\")}</td>\r\n                                    <td>{loan.member?.member_name}</td>\r\n                                    <td>{loan.scheme_id}</td>\r\n                                    <td>{loan.loan_amount}</td>\r\n                                    <td>{loan.interest_rate}</td>\r\n                                    <td><Button variant=\"success\" size={\"sm\"} onClick={() => redirectApproval(loan.id)}>Approve</Button></td>\r\n                                </tr>)):<tr><td colSpan={\"7\"} className=\"text-center\">No Application for Approval!</td></tr>}\r\n                            </tbody>\r\n                        </Table>\r\n                    </Col>\r\n                </Row>\r\n                {/* </Container>             */}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LoanApproval;","import React, { useEffect, useState } from 'react';\r\nimport { Table, Button, Container, Row, Col } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport groupLoan from '../../models/groupLoan';\r\nimport Loader from '../layout/Loader';\r\nimport { useHistory } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { CHANGE_PAGE } from '../../constants/actionTypes'\r\n\r\nfunction DisburseLoan(props) {\r\n    let history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [loanlist, setLoanlist] = useState([]);\r\n    useEffect(() => {\r\n        getLoanList();\r\n        dispatch({ type: CHANGE_PAGE, page: \"Applications for Disburse\" });\r\n    }, [])\r\n\r\n    const getLoanList = async () => {\r\n        try {\r\n            setisShowLoader(true);\r\n            let response = await groupLoan.GroupLoanModel.getDisburseList();\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n                setLoanlist(response.body.message);\r\n            }\r\n\r\n        } catch (error) {\r\n            setisShowLoader(false);\r\n            console.log(error);\r\n        }\r\n    }\r\n    const redirectDisburse = (loan_id) => {\r\n        history.push(\"/loanApprovalDetails?actionType=disburse\", loan_id);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"content\">\r\n                <Loader show={isShowLoader} />\r\n                {/* <Container fluid> */}\r\n                {/* <h2 className=\"text-info text-center\">Applications For Disburse</h2> */}\r\n                <Row >\r\n                    <Col>\r\n                        <Table className=\" shadow-lg p-3 mb-5 bg-white rounded\" striped bordered hover responsive>\r\n                            <thead className=\"bg-primary\">\r\n                                <tr>\r\n                                    <th>Maker/Checker</th>\r\n                                    <th>Application Date</th>\r\n                                    <th>Member name</th>\r\n                                    <th>Scheme ID</th>\r\n                                    <th>Loan Amount</th>\r\n                                    <th>Interest rate</th>\r\n                                    <th>Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {loanlist.length!=0?loanlist.map((loan, id) => (<tr key={loan.id}>\r\n                                    <td>{loan.user.id} - {loan.user.name}</td>\r\n                                    <td>{moment(loan.application_date).format(\"DD-MM-YYYY hh:ss A\")}</td>\r\n                                    <td>{loan.member?.member_name}</td>\r\n                                    <td>{loan.scheme_id}</td>\r\n                                    <td>{loan.loan_amount}</td>\r\n                                    <td>{loan.interest_rate}</td>\r\n                                    <td><Button variant=\"success\" size={\"sm\"} onClick={() => redirectDisburse(loan.id)}>Disburse</Button></td>\r\n                                </tr>)):<tr><td colSpan={\"7\"} className=\"text-center\">No Application for Disbursement!</td></tr>}\r\n                            </tbody>\r\n                        </Table>\r\n                    </Col>\r\n                </Row>\r\n                {/* </Container>             */}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default DisburseLoan;","import React from 'react';\r\nimport { Table, Card} from 'react-bootstrap';\r\n\r\nfunction EmiCard(props) {\r\n    console.log(\"emi card\");\r\n    return (\r\n        <Card border=\"primary\" header\r\n        key={0}\r\n        text={'dark'}\r\n        className=\"m-2\"\r\n    >\r\n        <Card.Header className=\"bg-primary text-center\"><b>Loan Card</b>\r\n            <svg onClick={props.handlePrintEMI} xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" className=\"bi bi-printer float-right cursar\" viewBox=\"0 0 16 16\">\r\n            <path d=\"M2.5 8a.5.5 0 1 0 0-1 .5.5 0 0 0 0 1z\"/>\r\n            <path d=\"M5 1a2 2 0 0 0-2 2v2H2a2 2 0 0 0-2 2v3a2 2 0 0 0 2 2h1v1a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-1h1a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-1V3a2 2 0 0 0-2-2H5zM4 3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v2H4V3zm1 5a2 2 0 0 0-2 2v1H2a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1h-1v-1a2 2 0 0 0-2-2H5zm7 2v3a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1z\"/>\r\n            </svg>\r\n        </Card.Header>\r\n        <Card.Body>\r\n        {/* <Loader show={isShowEMILoader} relative={true}/> */}\r\n        <Table size={\"sm\"} className=\"bg-white rounded small\" bordered responsive>\r\n            <thead>\r\n              <tr className=\"bg-success\">\r\n                  <th>EMI date</th>\r\n                  <th>EMI Amount</th>\r\n                  <th>Principal</th>\r\n                  <th>Interest</th>\r\n                  <th>Outstanding</th>\r\n                  {props.showDisburseButton?<th>EMI Paid</th>:\"\"}\r\n                  \r\n              </tr>\r\n          </thead>\r\n                <tbody>\r\n                {props.emiData.map((value,id)=>(<tr className={props.paidEmiRecord[value.date]?\"bg-warning\":\"\"}>\r\n                    <td>{value.date}</td>\r\n                    <td>{value.EMI?.toFixed(2)}</td>\r\n                    <td>{value.principal?.toFixed(2)}</td>\r\n                    <td>{value.int_amount?.toFixed(2)}</td>\r\n                    <td>{value.outstanding?.toFixed(2) }</td>\r\n                    {props.showDisburseButton?\r\n                    <td>{props.paidEmiRecord[value.date]?\r\n                    \r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-check-circle\" viewBox=\"0 0 16 16\">\r\n                        <path d=\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\r\n                        <path d=\"M10.97 4.97a.235.235 0 0 0-.02.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-1.071-1.05z\"/>\r\n                        </svg>:\"\"}</td>:\"\"}\r\n                </tr>))}\r\n                </tbody>\r\n        </Table>\r\n        </Card.Body>\r\n    </Card>\r\n);\r\n}\r\n\r\nexport default  React.memo(EmiCard);","import React from 'react';\r\nimport { Table, Card } from 'react-bootstrap';\r\nimport moment from 'moment';\r\nimport './EmiCardPrint.css'\r\nimport {\r\n    CIN,\r\n    licenceNo,\r\n    companyName\r\n} from \"../../constants/constants\"\r\nimport { HOST } from '../../models/BaseUrl'\r\nfunction MemberPrint(props) {\r\n    const loanDetails = props.loanDetails;\r\n    return (<><p><br />\r\n        <span className='sub-title'>Borrower Details</span></p>\r\n        <Table className='print' >\r\n            <tbody>\r\n                <tr><th width=\"25%\">Member Name</th><td width=\"50%\">{loanDetails?.member?.member_name}</td>\r\n                    <td rowspan=\"6\" className='image-td'>\r\n                        {console.log(`${HOST}${loanDetails?.member?.image}`)}\r\n                        <img src={`${HOST}${loanDetails?.member?.image}`} className='image' /></td></tr>\r\n                <tr><th width=\"25%\">Member Group</th>  <td width=\"50%\">{loanDetails?.member?.member_group_id} - {loanDetails?.member?.member_group?.group_name}</td></tr>\r\n                <tr> <th width=\"25%\">Member Address</th>  <td width=\"50%\">{loanDetails?.address}</td></tr>\r\n                <tr><th width=\"25%\">DOB</th>   <td width=\"50%\">{loanDetails?.member?.date_of_birth ? moment(loanDetails.member?.date_of_birth).format(\"DD-MM-YYYY\") : \"\"}</td></tr>\r\n                <tr><th width=\"25%\">Phone</th> <td width=\"50%\">{loanDetails?.member?.mobile_number}</td></tr>\r\n                <tr><th width=\"25%\">Gender</th>  <td width=\"50%\">{loanDetails?.member?.gender}</td></tr>\r\n            </tbody>\r\n        </Table></>)\r\n}\r\nexport default MemberPrint","import {\r\n    CIN,\r\n    licenceNo,\r\n    companyName,\r\n    companyPhone,\r\n    companyAddress\r\n} from \"../../constants/constants\"\r\n\r\nfunction CompanyDetailsPrint(){\r\n    return(<><table className='company-table'>\r\n    <tbody>\r\n        <tr className=\"logo-space\">\r\n            <td style={{ width: '90px', height: '90px' }}><img class=\"img\" src=\"\" style={{ maxWidth: '180px', maxHeight: '120px' }} /></td>\r\n            <td className='text-center'><span className='company-name'>{companyName.toUpperCase()}</span><br />\r\n                <span className='gov-line'>भारत सरकार द्वारा पंजीकृत उपक्रम</span><br />\r\n                <span className='company-span'>{companyAddress}</span><br />\r\n                <span className='company-span'>{companyPhone}</span><br />\r\n                <span className='company-span'> CIN: {CIN} LICENCE No.:{licenceNo}</span>\r\n            </td>\r\n            <td style={{ width: '180px', height: '90px' }}>&nbsp;</td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n</>)\r\n}\r\nexport default CompanyDetailsPrint;","export const CIN = 'U85300UP2021NPL148302';\r\nexport const licenceNo = '126877';\r\nexport const companyName= 'AA2 Mutualhelp Foundation';\r\nexport const companyPhone= '+916395898622, +917017230369';\r\nexport const companyAddress= 'GREATER OM VIHAR NEAR CBS CONVENT SCHOOL HASANPUR CHUNGI SAHARANPUR Saharanpur UP 247001 IN';","import React from 'react';\r\nimport { Table, Card } from 'react-bootstrap';\r\nimport moment from 'moment';\r\n\r\nfunction MemberKYCPrint(props) {\r\n    const loanDetails = props.loanDetails;\r\n    return (<>                    \r\n    <Table className=\"print\" >\r\n        <tbody>\r\n        <tr><th width=\"25%\">Qualification</th>  <td width=\"25%\">{loanDetails?.member?.qualification}</td><th width=\"25%\">Spouse Name</th>  <td width=\"25%\">{loanDetails?.member?.spouse}</td></tr>\r\n            <tr><th width=\"25%\">Aadhar No.</th> <td width=\"25%\">{loanDetails.member?.aadhar_card}</td><th width=\"25%\">PAN</th> <td width=\"25%\">{loanDetails.member?.pan_card_number}</td></tr>\r\n            <tr><th width=\"25%\">Driving License</th> <td width=\"25%\">{loanDetails.member?.driving_license_number}</td><th width=\"25%\">Ration Card No.</th> <td width=\"25%\">{loanDetails.member?.ration_card_number}</td></tr>\r\n            <tr><th width=\"25%\">Voter ID No.</th> <td width=\"25%\">{loanDetails.member?.voter_id_number}</td><th width=\"25%\">Bank Account No.</th> <td width=\"25%\">{loanDetails.member?.bank_account}</td></tr>\r\n            <tr><th width=\"25%\">Bank IFSC code</th> <td width=\"25%\">{loanDetails.member?.bank_ifsc_code}</td><th width=\"25%\">Bank Account Holder</th> <td width=\"25%\">{loanDetails.member?.bank_account_holder}</td></tr>\r\n            <tr></tr>\r\n        </tbody>\r\n    </Table>\r\n    </>)\r\n}\r\nexport default MemberKYCPrint;","import React from 'react';\r\nimport { Table, Card } from 'react-bootstrap';\r\nimport './EmiCardPrint.css'\r\nimport {\r\n    CIN,\r\n    licenceNo,\r\n    companyName\r\n} from \"../../constants/constants\"\r\nimport MemberPrint from './MemberPrint';\r\nimport CompanyDetailsPrint from './CompanyDetailsPrint';\r\nimport MemberKYCPrint from './MemberKYCPrint';\r\n\r\nclass EmiCardPrint extends React.PureComponent {\r\n    render() {\r\n        //console.log(this.props.emiData());\r\n        return (\r\n            <div className='print' style={{ margin: \"20px\" }}>\r\n                <CompanyDetailsPrint />\r\n                {this.props?.isMemberRequired &&<>\r\n                <MemberPrint loanDetails={this.props.loanDetails}/>\r\n                <MemberKYCPrint loanDetails={this.props.loanDetails}/></>\r\n                }\r\n                <p><br/>\r\n                    <span className='sub-title'>{this.props.heading}</span></p>\r\n                        <Table className='print'>\r\n                            <thead>\r\n                                <tr>{this.props.column.map((val, id) => (\r\n                                    <th width=\"30%\" key={id} >{val}</th>\r\n                                ))}\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {this.props.emiData()}\r\n                            </tbody>\r\n                        </Table>\r\n                        {this.props?.isDeclaration ? <div style={{ marginTop: \"50px\" }}>\r\n                            <p>“I ____________________ , declare that all the information submitted by me in the application form is correct, true and valid. I will present the supporting documents as and when required.” Please note that there should be no change in this text.</p>\r\n                        </div> : null}\r\n                        {this.props?.isSign ?\r\n                            <div style={{ bottom: 0, textAlign: 'right', marginTop: \"100px\" }}>\r\n                                <span>\r\n                                    <div><label><strong>Borrower Signature:_____________________</strong></label></div>\r\n                                    <div><label><strong>Co-Borrower Signature:_____________________</strong></label></div>\r\n                                </span>\r\n                            </div> : null}\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default EmiCardPrint;","import React from 'react';\r\nimport { Table, Card } from 'react-bootstrap';\r\nimport moment from 'moment';\r\nimport './EmiCardPrint.css'\r\nimport MemberPrint from './MemberPrint'\r\nimport {\r\n    CIN,\r\n    licenceNo,\r\n    companyName\r\n} from \"../../constants/constants\"\r\nimport CompanyDetailsPrint from './CompanyDetailsPrint';\r\nimport MemberKYCPrint from './MemberKYCPrint';\r\nclass BorrowerPrint extends React.PureComponent {\r\n    render() {\r\n        const { loanDetails } = this.props;\r\n        return (\r\n            <>\r\n                <div style={{ margin: \"20px\" }}>\r\n                    <CompanyDetailsPrint />\r\n\r\n                    <table style={{ width: '100%' }}>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td className='page-title'>Membership Form</td>\r\n                            </tr>\r\n\r\n                        </tbody>\r\n                    </table>\r\n                    <MemberPrint loanDetails={loanDetails}/>\r\n                    <MemberKYCPrint loanDetails={loanDetails} />\r\n                    {/* <Table className=\"print\" >\r\n                        <tbody>\r\n                            <tr><th width=\"25%\">Aadhar No.</th> <td width=\"25%\">{loanDetails.member?.aadhar_card}</td><th width=\"25%\">PAN</th> <td width=\"25%\">{loanDetails.member?.pan_card_number}</td></tr>\r\n                            <tr><th width=\"25%\">Driving License</th> <td width=\"25%\">{loanDetails.member?.driving_license_number}</td><th width=\"25%\">Ration Card No.</th> <td width=\"25%\">{loanDetails.member?.ration_card_number}</td></tr>\r\n                            <tr><th width=\"25%\">Voter ID No.</th> <td width=\"25%\">{loanDetails.member?.voter_id_number}</td><th width=\"25%\">Bank Account No.</th> <td width=\"25%\">{loanDetails.member?.bank_account}</td></tr>\r\n                            <tr><th width=\"25%\">Bank IFSC code</th> <td width=\"25%\">{loanDetails.member?.bank_ifsc_code}</td><th width=\"25%\">Bank Account Holder</th> <td width=\"25%\">{loanDetails.member?.bank_account_holder}</td></tr>\r\n                            <tr></tr>\r\n                        </tbody>\r\n                    </Table> */}\r\n                    <p><br/>\r\n                    <span className='sub-title'>Co-Borrower Details</span></p>\r\n                    <Table className=\"print\" >\r\n                        <tbody>\r\n                            <tr><th width=\"25%\">Name</th><td width=\"75%\" colSpan={4}>{loanDetails.co_borrower_name}</td> </tr>\r\n                            <tr><th width=\"25%\">Relationship</th>  <td width=\"25%\">{loanDetails.co_borrower_relationship}</td><th width=\"25%\">Aadhar Card</th>  <td width=\"25%\">{loanDetails.co_borrower_aadhar_card}</td></tr>\r\n                            <tr><th width=\"25%\">PAN Card</th>   <td width=\"25%\">{loanDetails.co_borrower_pan_card}</td><th width=\"25%\">Ele Card</th> <td width=\"25%\">{loanDetails.co_borrower_ele_bill}</td></tr>\r\n                        </tbody>\r\n                    </Table>\r\n                    <div style={{ marginTop: \"30px\" }}>\r\n                        <p>“I ____________________ , declare that all the information submitted by me in the application form is correct, true and valid. I will present the supporting documents as and when required.” Please note that there should be no change in this text.</p>\r\n                    </div>\r\n                    <div style={{ bottom: 0, textAlign: 'right', marginTop: \"50px\" }}>\r\n                        <span>\r\n                            <div><label>Borrower Signature:_____________________</label></div>\r\n                            <div><label>Co-Borrower Signature:_____________________</label></div>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\nexport default BorrowerPrint;","import React, { useEffect, useState } from \"react\";\r\nimport groupLoan from \"../../models/groupLoan\";\r\nimport { Table,Button } from 'react-bootstrap';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { MESSAGE } from \"../../constants/actionTypes\";\r\n\r\nfunction CloseAccount(props){\r\n    const [sattlementDetails, setSattlementDetails] = useState({});\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    useEffect(()=>{\r\n        console.log(props);\r\n        getDetails();\r\n    },[]);\r\n    const getDetails=async()=>{\r\n        try {\r\n            let response = await groupLoan.GroupLoanModel.getSattlementAmount(props.loan_account_no);\r\n            console.log(response);\r\n            setSattlementDetails(response.body.message);\r\n        } catch (error) {\r\n            console.log(error)\r\n        }      \r\n    }\r\n    const closeAccount=async()=>{\r\n        try {\r\n            let payload = {...sattlementDetails};\r\n            delete payload.records;\r\n            payload.loan_account_no = props.loan_account_no\r\n            let response = await groupLoan.GroupLoanModel.closeAccount(payload);\r\n            if (response.statusCode == 200) {\r\n                dispatch({ type: MESSAGE, message: response.body.message });\r\n                history.push('/allApplications');\r\n\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }      \r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className=\"text-center\">\r\n            <Button variant=\"primary\" type=\"button\" onClick={closeAccount}>Close</Button>\r\n        </div>\r\n        <Table size=\"sm\" className=\"bg-white rounded\" striped bordered hover responsive>\r\n            <thead>\r\n                <tr>\r\n                    <th className=\"text-center\">Sattlement Amount<span style={{fontSize:'10px', display:'block'}}>(Total principal + Earned Interest)</span></th>\r\n                    <th className=\"text-center\">Earned Interest <span style={{fontSize:'10px', display:'block'}}>(Paid EMI Interest + next 3 EMI interest)</span></th>\r\n                    <th className=\"text-center\">No. of Paid EMIs</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr>\r\n                    <td className=\"text-center\">\r\n                        {sattlementDetails.settled_amount}\r\n                    </td>\r\n                    <td className=\"text-center\">\r\n                        {sattlementDetails.earned_interest}\r\n                    </td>\r\n                    <td className=\"text-center\">\r\n                        {sattlementDetails.paid_emi_count}\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </Table>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default React.memo(CloseAccount);","import moment from 'moment';\r\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\r\nimport { Table, Button, Container, Row, Col, Card, ListGroup, Modal, Toast, Form } from 'react-bootstrap';\r\nimport { Link,useHistory, useLocation } from 'react-router-dom';\r\nimport groupLoan from '../../models/groupLoan';\r\nimport Loader from '../layout/Loader';\r\nimport { useSelector } from \"react-redux\";\r\nimport { useReactToPrint } from 'react-to-print';\r\nimport { useRef } from 'react';\r\nimport EmiCard from './EmiCard';\r\nimport EmiCardPrint from '../print/EmiCardPrint';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { CHANGE_PAGE, MESSAGE } from '../../constants/actionTypes'\r\nimport BorrowerPrint from '../print/BorrowerPrint';\r\nimport DatePicker from \"react-datepicker\";\r\nimport CloseAccount from './CloseAccount';\r\nfunction LoanApprovalDetails(props) {\r\n    const history = useHistory();\r\n    const memberDetailsRef = useRef();\r\n    const dispatch = useDispatch();\r\n    const handlePrintMemberDetail = useReactToPrint({\r\n        content: () => memberDetailsRef.current,\r\n        documentTitle: \"AA2-Member\",\r\n    });\r\n\r\n    const applicationRef = useRef();\r\n    const handlePrintApplication = useReactToPrint({\r\n        content: () => applicationRef.current,\r\n        documentTitle: \"AA2-application\",\r\n    });\r\n\r\n    const emiRef = useRef();\r\n    const handlePrintEMI = useReactToPrint({\r\n        content: () => emiRef.current,\r\n        documentTitle: \"AA2-EMI-details\",\r\n    });\r\n    const handlePrintEMICallbak = useCallback(handlePrintEMI, [])\r\n\r\n    const coBorrowerRef = useRef();\r\n    const handleCoBorrowerPrint = useReactToPrint({\r\n        content: () => coBorrowerRef.current,\r\n        documentTitle: \"AA2-CoBorrower\",\r\n    });\r\n\r\n    const borrowerRef = useRef();\r\n    const handlePrintBorrower = useReactToPrint({\r\n        content: () => borrowerRef.current,\r\n        documentTitle: \"AA2-Borrower\",\r\n    });\r\n\r\n    const auth = useSelector(state => state.auth);\r\n    const [paidEmiRecord, setPaidEmiRecord] = useState([])\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [isShowEMILoader, setisShowEMILoader] = useState(false)\r\n    const [emiData, setEmiData] = useState([])\r\n    const [loanDetails, setLoanDetails] = useState({});\r\n    const [showToast, setShowToast] = useState({ isShow: false, type: \"\", message: \"\" })\r\n    //const [showApprovalButton, setShowApprovalButton] = useState(false);\r\n    //const [showDisburseButton, setShowDisburseButton] = useState(false);\r\n    const [show, setShow] = useState(false);\r\n    const [disburseDate, setDisburseDate] = useState(new Date());\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    const { search } = useLocation();\r\n    //const {actionType:actionTypeParam} = props.match.params;\r\n    const params = useMemo(() => new URLSearchParams(search), [search]);\r\n    const actionTypeParam = params.get('actionType')\r\n    //const [disburseActionButton,setDisburseActionButton]\r\n    useEffect(() => {\r\n        getLoanDetails();\r\n        dispatch({ type: CHANGE_PAGE, page: `${actionTypeParam} Application` });\r\n    }, [])\r\n    const getLoanDetails = async () => {\r\n        try {\r\n            setisShowLoader(true);\r\n            setisShowEMILoader(true);\r\n\r\n            let response = await groupLoan.GroupLoanModel.getLoanDetailbyId(props.location.state);\r\n            let calculateEmi = {\r\n                \"loanStartDate\": response.body.message[0].disburse_date,\r\n                \"interest_rate\": response.body.message[0].interest_rate,\r\n                \"tenure\": response.body.message[0].tenure,\r\n                \"EMI_payout\": response.body.message[0].EMI_payout,\r\n                \"loan_amount\": response.body.message[0].loan_amount,\r\n                \"EMI_type\": response.body.message[0].EMI_type\r\n            }\r\n            setisShowEMILoader(true);\r\n            let EmiData = await groupLoan.EmiModel.calculateEMI(calculateEmi);\r\n            let paidData = [];\r\n            let result = {};\r\n            paidData = await groupLoan.EmiModel.getPaidEmis(response.body.message[0].loan_account_no);\r\n            for (let i = 0; i < paidData.body.message.length; i++) {\r\n                let emiDate = moment(paidData.body.message[i].EMI_date).format(\"DD-MM-yyyy\");\r\n                result[emiDate] = true;\r\n            }\r\n            setPaidEmiRecord(result);\r\n            setEmiData(EmiData.body.message);\r\n            setisShowEMILoader(false);\r\n\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n                //setShowApprovalButton(response.body.message[0].is_approved != 0 ? false : true);\r\n                //setShowDisburseButton(response.body.message[0].is_approved == 1 && response.body.message[0].is_disbursed == 0 ? true : false);\r\n                setLoanDetails(response.body.message[0]);\r\n            }\r\n\r\n        } catch (error) {\r\n            setisShowEMILoader(false);\r\n            setisShowLoader(false);\r\n            console.log(error);\r\n        }\r\n    }\r\n    const actionOnLoan = async (actionType) => {\r\n        try {\r\n            setisShowLoader(true);\r\n            const data = { \"id\": props.location.state, \"actionType\": actionType }\r\n            let response = await groupLoan.GroupLoanModel.approveRejectLoan(data);\r\n            console.log(response);\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n                //setShowApprovalButton(false);\r\n                //setShowDisburseButton(false);\r\n                dispatch({ type: MESSAGE, message: response.body.message });\r\n                setShowToast({ isShow: true, type: \"bg-success\", message: response.body.message })\r\n                history.push('/allApplications');\r\n            }\r\n        } catch (error) {\r\n            setisShowLoader(false);\r\n            setShowToast({ isShow: true, type: \"bg-danger\", message: error.response.body.message })\r\n            console.log(error);\r\n        }\r\n    }\r\n    const actionDisburseLoan = async (actionType) => {\r\n        try {\r\n            handleClose();\r\n            setisShowLoader(true);\r\n            const data = { \"id\": props.location.state, \"actionType\": actionType, disburseDate: disburseDate }\r\n            let response = await groupLoan.GroupLoanModel.disburseRejectLoan(data);\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n               // setShowDisburseButton(false);\r\n                dispatch({ type: MESSAGE, message: response.body.message });\r\n                setShowToast({ isShow: true, type: \"bg-success\", message: response.body.message })\r\n                history.push('/allApplications');\r\n            }\r\n        } catch (error) {\r\n            setisShowLoader(false);\r\n            setShowToast({ isShow: true, type: \"bg-danger\", message: error.response.body.message })\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n    const emiCol = useMemo(() => {\r\n        return [\"EMI date\", \"EMI Amount\", \"Principal\", \"Interest\", \"Outstanding\",\"Status\", \"Signature\"];\r\n    }, [])\r\n    const emiRecords = useCallback(() => {\r\n        return (emiData.map((value, id) => (\r\n            <tr>\r\n                <td>{value.date}</td>\r\n                <td>{value.EMI?.toFixed(2)}</td>\r\n                <td>{value.principal?.toFixed(2)}</td>\r\n                <td>{value.int_amount?.toFixed(2)}</td>\r\n                <td>{value.outstanding?.toFixed(2)}</td>\r\n                <td>{paidEmiRecord[value.date]?\"Paid\":\"Unpaid\"}</td>\r\n                <td></td>\r\n            </tr>\r\n        )))\r\n    }, [emiData]);\r\n    const applicationRecords = useCallback(() => {\r\n        return (\r\n            <>\r\n                <tr><th width='25%'>Maker/Checker</th>  <td width='75%'>{loanDetails?.user?.name}</td></tr>\r\n                <tr><th width='25%'>Account No</th>  <td width='75%'>{loanDetails.loan_account_no}</td></tr>\r\n                <tr><th width='25%'>Application Date</th><td width='75%'>{moment(loanDetails.application_date).format(\"DD-MM-YYYY HH:SS\")}</td> </tr>\r\n                <tr><th width='25%'>Scheme Id</th>  <td width='75%'>{loanDetails.scheme_id}</td></tr>\r\n                <tr> <th width='25%'>Member Address</th>  <td width='75%'>{loanDetails.address}</td></tr>\r\n                <tr><th width='25%'>Loan Amount</th>   <td width='75%'>{loanDetails.loan_amount}</td></tr>\r\n                <tr><th width='25%'>Interest rate</th> <td width='75%'>{loanDetails.interest_rate}</td></tr>\r\n                <tr><th width='25%'>EMI payout</th>  <td width='75%'>{loanDetails.EMI_payout}</td></tr>\r\n                <tr><th width='25%'>EMI type</th>  <td width='75%'>{loanDetails.EMI_type}</td></tr>\r\n                <tr><th width='25%'>Tenure</th> <td width='75%'>{loanDetails.tenure}</td></tr>\r\n                <tr><th width='25%'>Purpose of Loan</th> <td width='75%'>{loanDetails.purpose}</td></tr>\r\n            </>)\r\n    }, [loanDetails]);\r\n\r\n    const coBorrowRecords = useCallback(() => {\r\n        return (\r\n            <>\r\n                <tr><th>Name</th>  <td>{loanDetails.co_borrower_name}</td></tr>\r\n                <tr><th>Relationship</th><td>{loanDetails.co_borrower_relationship}</td> </tr>\r\n                <tr><th>Aadhar Card</th><td>{loanDetails.co_borrower_aadhar_card}</td> </tr>\r\n                <tr><th>PAN Card</th><td>{loanDetails.co_borrower_pan_card}</td> </tr>\r\n                <tr><th>Ele Card</th><td>{loanDetails.co_borrower_ele_bill}</td> </tr>\r\n            </>)\r\n    }, [loanDetails]);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"content\">\r\n                {loanDetails.status? <center className=\"account_close_label\">ACCOUNT CLOSED</center>:null}\r\n                <Modal show={show} onHide={handleClose}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Loan Disbursement</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Form>\r\n                            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\r\n                                <Form.Label>Disbursement Date:</Form.Label>\r\n                                <DatePicker className=\"form-control\"\r\n                                selected={disburseDate}\r\n                                onChange={(date) => setDisburseDate(date)}\r\n                                name=\"disburseDate\"\r\n                                dateFormat=\"dd/MM/yyyy\"\r\n                            />\r\n                           </Form.Group>\r\n                        </Form>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={handleClose}>\r\n                            Close\r\n                        </Button>\r\n                        <Button variant=\"primary\" onClick={()=>actionDisburseLoan(1)}>\r\n                            Disburse\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n                <Toast key={1} autohide delay={3000} show={showToast.isShow} onClose={() => setShowToast({ isShow: false, type: \"\", message: \"\" })} className={\"loader \" + (showToast.type)} >\r\n                    <Toast.Header>\r\n                        <strong className=\"me-auto\">{showToast.type == \"bg-danger\" ? \"Error\" : \"Success\"} Message</strong>\r\n                    </Toast.Header>\r\n                    <Toast.Body className=\"Dark\">\r\n                        {showToast.message}\r\n                    </Toast.Body>\r\n                </Toast>\r\n                <Loader show={isShowLoader} />\r\n                {actionTypeParam==\"approve\" && <Row className=\"m-5\">\r\n                    <Col className=\"text-center\">\r\n                        <Button variant=\"primary\" type=\"button\" onClick={() => actionOnLoan(1)}>\r\n                            Approve\r\n                        </Button>{'  '}\r\n                        <Button variant=\"danger\" type=\"button\" onClick={() => actionOnLoan(-1)}>\r\n                            Reject\r\n                        </Button>\r\n                    </Col>\r\n                </Row> }\r\n\r\n                {actionTypeParam==\"disburse\" && <Row className=\"m-5\">\r\n                    <Col className=\"text-center\">\r\n                        <Button variant=\"primary\" type=\"button\" onClick={() => handleShow()}>\r\n                            Disburse\r\n                        </Button>{'  '}\r\n                        <Button variant=\"danger\" type=\"button\" onClick={() => actionDisburseLoan(-1)}>\r\n                            Reject\r\n                        </Button>\r\n                    </Col>\r\n                </Row>}\r\n                {actionTypeParam==\"close\" && loanDetails?.loan_account_no && <CloseAccount loan_account_no={loanDetails?.loan_account_no}/>}\r\n                <Row xs={1} md={2} className=\"g-1\">\r\n                    <Col>\r\n                        <Card border=\"success\" header\r\n                            key={0}\r\n                            text={'dark'}\r\n                            className=\"m-2\"\r\n                            ref={memberDetailsRef}\r\n                        >\r\n                            <Card.Header className=\"bg-success text-center\"><b>Borrower Details</b>\r\n                                <svg onClick={handlePrintBorrower} xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" className=\"bi bi-printer float-right cursar\" viewBox=\"0 0 16 16\">\r\n                                    <path d=\"M2.5 8a.5.5 0 1 0 0-1 .5.5 0 0 0 0 1z\" />\r\n                                    <path d=\"M5 1a2 2 0 0 0-2 2v2H2a2 2 0 0 0-2 2v3a2 2 0 0 0 2 2h1v1a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-1h1a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-1V3a2 2 0 0 0-2-2H5zM4 3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v2H4V3zm1 5a2 2 0 0 0-2 2v1H2a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1h-1v-1a2 2 0 0 0-2-2H5zm7 2v3a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1z\" />\r\n                                </svg>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <Table size=\"sm\" className=\"bg-white rounded\" striped bordered hover responsive>\r\n                                    <tbody>\r\n                                        <tr><th>Member Name</th><td>{loanDetails.member?.member_name}</td> </tr>\r\n                                        <tr><th>Member Group</th>  <td>{loanDetails?.member?.member_group_id} - {loanDetails?.member?.member_group?.group_name}</td></tr>\r\n                                        <tr> <th>Member Address</th>  <td>{loanDetails.address}</td></tr>\r\n\r\n                                        <tr><th>DOB</th>   <td>{loanDetails.member?.date_of_birth ? moment(loanDetails.member?.date_of_birth).format(\"DD-MM-YYYY\") : \"\"}</td></tr>\r\n                                        <tr><th>Phone</th> <td>{loanDetails.member?.mobile_number}</td></tr>\r\n                                        <tr><th>Gender</th>  <td>{loanDetails.member?.gender}</td></tr>\r\n                                        <tr><th>Qualification</th>  <td>{loanDetails.member?.qualification}</td></tr>\r\n                                        <tr><th>Spouse Name</th>  <td>{loanDetails.member?.spouse}</td></tr>\r\n                                        <tr><th>Aadhar No.</th> <td>{loanDetails.member?.aadhar_card}</td></tr>\r\n                                        <tr><th>PAN</th> <td>{loanDetails.member?.pan_card_number}</td></tr>\r\n                                        <tr><th>Driving License</th> <td>{loanDetails.member?.driving_license_number}</td></tr>\r\n                                        <tr><th>Ration Card No.</th> <td>{loanDetails.member?.ration_card_number}</td></tr>\r\n                                        <tr><th>Voter ID No.</th> <td>{loanDetails.member?.voter_id_number}</td></tr>\r\n                                        <tr><th>Bank Account No.</th> <td>{loanDetails.member?.bank_account}</td></tr>\r\n                                        <tr><th>Bank IFSC code</th> <td>{loanDetails.member?.bank_ifsc_code}</td></tr>\r\n                                        <tr><th>Bank Account Holder</th> <td>{loanDetails.member?.bank_account_holder}</td></tr>\r\n                                    </tbody>\r\n                                </Table>\r\n\r\n                            </Card.Body>\r\n                        </Card>\r\n                        <div style={{ display: \"none\" }}><BorrowerPrint ref={borrowerRef} loanDetails={loanDetails} /></div>\r\n\r\n                    </Col>\r\n                    <Col>\r\n                        <Card border=\"info\" header\r\n                            key={0}\r\n                            text={'dark'}\r\n                            // style={{ width: '18rem' }}\r\n                            className=\"m-2\"\r\n\r\n                        >\r\n                            <Card.Header className=\"bg-info text-center\"><b>Application Details</b><svg onClick={handlePrintApplication} xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" className=\"bi bi-printer float-right cursar\" viewBox=\"0 0 16 16\">\r\n                                <path d=\"M2.5 8a.5.5 0 1 0 0-1 .5.5 0 0 0 0 1z\" />\r\n                                <path d=\"M5 1a2 2 0 0 0-2 2v2H2a2 2 0 0 0-2 2v3a2 2 0 0 0 2 2h1v1a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-1h1a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-1V3a2 2 0 0 0-2-2H5zM4 3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v2H4V3zm1 5a2 2 0 0 0-2 2v1H2a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1h-1v-1a2 2 0 0 0-2-2H5zm7 2v3a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1z\" />\r\n                            </svg></Card.Header>\r\n                            <Card.Body>\r\n\r\n                                <Table size=\"sm\" className=\"bg-white rounded\" striped bordered hover responsive>\r\n                                    <tbody>\r\n                                        <tr><th>Maker/Checker</th>  <td>{loanDetails?.user?.id} - {loanDetails?.user?.name}</td></tr>\r\n                                        <tr><th>Account No</th>  <td>{loanDetails.loan_account_no}</td></tr>\r\n                                        <tr><th>Application Date</th><td>{moment(loanDetails.application_date).format(\"DD-MM-YYYY HH:SS\")}</td> </tr>\r\n                                        <tr><th>Scheme Id</th>  <td>{loanDetails.scheme_id}</td></tr>\r\n                                        <tr> <th>Member Address</th>  <td>{loanDetails.address}</td></tr>\r\n                                        <tr><th>Loan Amount</th>   <td>{loanDetails.loan_amount}</td></tr>\r\n                                        <tr><th>Interest rate</th> <td>{loanDetails.interest_rate}</td></tr>\r\n                                        <tr><th>EMI payout</th>  <td>{loanDetails.EMI_payout}</td></tr>\r\n                                        <tr><th>EMI type</th>  <td>{loanDetails.EMI_type}</td></tr>\r\n                                        {/* <tr><th>EMI amount</th> <td>{loanDetails.EMI_amount}</td></tr> */}\r\n                                        <tr><th>Tenure</th> <td>{loanDetails.tenure}</td></tr>\r\n                                        <tr><th>Purpose of Loan</th> <td>{loanDetails.purpose}</td></tr>\r\n                                    </tbody>\r\n                                </Table>\r\n\r\n                            </Card.Body>\r\n                        </Card>\r\n                        <div style={{ display: \"none\" }}><EmiCardPrint ref={applicationRef} emiData={applicationRecords} column={[]} heading=\"Application Details\" isDeclaration={true} isSign={true}/></div>\r\n                    </Col>\r\n                    <Col >\r\n                        <Loader show={isShowEMILoader} relative={true} />\r\n                        <EmiCard showDisburseButton={loanDetails.is_approved == 1 && loanDetails.is_disbursed == 1} emiData={emiData} paidEmiRecord={paidEmiRecord} handlePrintEMI={handlePrintEMICallbak} />\r\n                        <div style={{ display: \"none\" }}><EmiCardPrint ref={emiRef} emiData={emiRecords} column={emiCol} heading=\"Loan Card\" isDeclaration={true} isSign={true} isMemberRequired={true} loanDetails={loanDetails}/></div>\r\n                    </Col>\r\n                    <Col>\r\n                        <Card border=\"info\" header\r\n                            key={0}\r\n                            text={'dark'}\r\n                            // style={{ width: '18rem' }}\r\n                            className=\"m-2\"\r\n                        // ref={applicationRef}\r\n                        >\r\n                            <Card.Header className=\"bg-info text-center\"><b>Co-Borrower Details</b>\r\n                                <svg onClick={handleCoBorrowerPrint} xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" className=\"bi bi-printer float-right cursar\" viewBox=\"0 0 16 16\">\r\n                                    <path d=\"M2.5 8a.5.5 0 1 0 0-1 .5.5 0 0 0 0 1z\" />\r\n                                    <path d=\"M5 1a2 2 0 0 0-2 2v2H2a2 2 0 0 0-2 2v3a2 2 0 0 0 2 2h1v1a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-1h1a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-1V3a2 2 0 0 0-2-2H5zM4 3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v2H4V3zm1 5a2 2 0 0 0-2 2v1H2a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1h-1v-1a2 2 0 0 0-2-2H5zm7 2v3a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1z\" />\r\n                                </svg>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n\r\n                                <Table size=\"sm\" className=\"bg-white rounded\" striped bordered hover responsive>\r\n                                    <tbody>\r\n                                        <tr><th>Name</th>  <td>{loanDetails.co_borrower_name}</td></tr>\r\n                                        <tr><th>Relationship</th><td>{loanDetails.co_borrower_relationship}</td> </tr>\r\n                                        <tr><th>Aadhar Card</th><td>{loanDetails.co_borrower_aadhar_card}</td> </tr>\r\n                                        <tr><th>PAN Card</th><td>{loanDetails.co_borrower_pan_card}</td> </tr>\r\n                                        <tr><th>Ele Card</th><td>{loanDetails.co_borrower_ele_bill}</td> </tr>\r\n                                    </tbody>\r\n                                </Table>\r\n\r\n                            </Card.Body>\r\n                        </Card>\r\n                        <div style={{ display: \"none\" }}><EmiCardPrint ref={coBorrowerRef} emiData={coBorrowRecords} column={[]} heading=\"Co-Borrower Details\" isDeclaration={true} isSign={true}/></div>\r\n                    </Col>\r\n\r\n                </Row>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LoanApprovalDetails;","import React, { useEffect, useState, useMemo } from 'react';\r\nimport { Table, Badge, Container, Row, Col, Button, Pagination,Toast } from 'react-bootstrap';\r\nimport groupLoan from '../../models/groupLoan';\r\nimport Loader from '../layout/Loader';\r\nimport { useHistory } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport { useTable, useSortBy, usePagination, useFilters } from 'react-table'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { CHANGE_PAGE, MESSAGE } from '../../constants/actionTypes'\r\nfunction AllApplications(props) {\r\n    let history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const {message} = useSelector(state=>state.common);\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [loanlist, setLoanlist] = useState([]);\r\n    const auth = useSelector(state => state.auth);\r\n    //const [showToast, setShowToast] = useState({ isShow: true, type: \"bg-success\", message: \"Data Saved successfully\" })\r\n    useEffect(() => {\r\n        console.log(message);\r\n        if(message){\r\n            setTimeout(()=>{\r\n                dispatch({ type: MESSAGE, message: undefined });\r\n            },3000);\r\n        }\r\n        getLoanList();\r\n        dispatch({ type: CHANGE_PAGE, page: \"All Loan Applications\" });\r\n    }, [])\r\n    const data = useMemo(\r\n        () =>\r\n\r\n            loanlist.map((record, index) => {\r\n                return {\r\n                    col1: record.loan_account_no ? record.loan_account_no : \"N/A\",\r\n                    col2: moment(record.application_date).format('DD-MM-yyy hh:ss A'),\r\n                    col3: record.member?.member_name,\r\n                    col4: record.scheme_id,\r\n                    col5: record.loan_amount,\r\n                    col6: record.interest_rate,\r\n                    col7: record.actionStatus,\r\n                    col8: record,\r\n                    col9: `${record.user.id} - ${record.user.name}`\r\n                }\r\n            }\r\n            )\r\n        ,\r\n        [loanlist]\r\n    )\r\n\r\n    const columns = useMemo(\r\n        () => [\r\n            {\r\n                Header: 'Maker/Checker',\r\n                accessor: 'col9', // accessor is the \"key\" in the data\r\n                allowFilter: true\r\n            },\r\n            {\r\n                Header: 'Account no.',\r\n                accessor: 'col1', // accessor is the \"key\" in the data\r\n                allowFilter: true\r\n            },\r\n            {\r\n                Header: 'Application date',\r\n                accessor: 'col2', // accessor is the \"key\" in the data\r\n                allowFilter: true\r\n            },\r\n            {\r\n                Header: 'Member name',\r\n                accessor: 'col3',\r\n                allowFilter: true\r\n            },\r\n            {\r\n                Header: 'Scheme ID',\r\n                accessor: 'col4',\r\n                allowFilter: true\r\n            },\r\n            {\r\n                Header: 'Loan amount',\r\n                accessor: 'col5',\r\n                allowFilter: true\r\n            },\r\n            {\r\n                Header: 'Interest rate',\r\n                accessor: 'col6',\r\n                allowFilter: true\r\n            },\r\n            {\r\n                Header: 'Status',\r\n                accessor: 'col7',\r\n                allowFilter: false\r\n            },\r\n            {\r\n                Header: 'Action',\r\n                accessor: 'col8',\r\n                allowFilter: false\r\n            }\r\n\r\n        ],\r\n        []\r\n    )\r\n    function DefaultColumnFilter({\r\n        column: { filterValue, preFilteredRows, setFilter },\r\n    }) {\r\n        const count = preFilteredRows.length\r\n\r\n        return (\r\n            <input\r\n                className=\"form-control\"\r\n                value={filterValue || ''}\r\n                onChange={e => {\r\n                    setFilter(e.target.value || undefined)\r\n                }}\r\n                placeholder={`Search ${count} records...`}\r\n            />\r\n        )\r\n    }\r\n    const defaultColumn = React.useMemo(\r\n        () => ({\r\n            // Default Filter UI\r\n            Filter: DefaultColumnFilter,\r\n        }),\r\n        []\r\n    )\r\n    const paginate = (totalPage) => {\r\n        let pageNumberArray = [];\r\n        for (let i = 1; i <= totalPage; i++) {\r\n            pageNumberArray.push(i);\r\n        }\r\n        return (\r\n            <Pagination>\r\n                <Pagination.First onClick={() => gotoPage(0)} />\r\n                <Pagination.Prev onClick={() => previousPage()} disabled={!canPreviousPage} />\r\n                {pageNumberArray.map(num => <Pagination.Item key={num} active={num === (pageIndex + 1)} onClick={() => gotoPage(num - 1)}>{num}</Pagination.Item>)}\r\n                <Pagination.Next onClick={() => nextPage()} disabled={!canNextPage} />\r\n                <Pagination.Last onClick={() => gotoPage(totalPage - 1)} />\r\n            </Pagination>\r\n        );\r\n\r\n    }\r\n\r\n    const getLoanList = async () => {\r\n        try {\r\n            setisShowLoader(true);\r\n            let response = await groupLoan.GroupLoanModel.getAllLoanApplications();\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n                let formatedData = response.body.message.map((loan, id) => {\r\n                    if(loan.status==1){\r\n                        loan[\"actionStatus\"] = \"Closed\";\r\n                    }else if (loan.is_approved == 1 && loan.is_disbursed == 1) {\r\n                        loan[\"actionStatus\"] = \"Disbursed\";\r\n                    } else if (loan.is_approved == 1 && loan.is_disbursed == 0) {\r\n                        loan[\"actionStatus\"] = \"Approved\";\r\n                    } else if (loan.is_disbursed == -1) {\r\n                        loan[\"actionStatus\"] = \"Disburse Rejected\";\r\n                    } else if (loan.is_approved == -1) {\r\n                        loan[\"actionStatus\"] = \"Approval Rejected\";\r\n                    } else {\r\n                        loan[\"actionStatus\"] = \"Pending\";\r\n                    }\r\n\r\n                    return loan;\r\n                });\r\n                setLoanlist(formatedData);\r\n            }\r\n\r\n        } catch (error) {\r\n            setisShowLoader(false);\r\n            console.log(error);\r\n        }\r\n    }\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n        pageOptions,\r\n        page,\r\n        pageCount,\r\n        state: { pageIndex, pageSize },\r\n        gotoPage,\r\n        previousPage,\r\n        nextPage,\r\n        setPageSize,\r\n        canPreviousPage,\r\n        canNextPage,\r\n    } = useTable({ columns, data, defaultColumn, initialState: { pageIndex: 0 } }, useFilters, useSortBy, usePagination)\r\n    return (\r\n        <>\r\n            {message && <Toast key={1} autohide delay={3000}  className={\"loader bg-success\"} >\r\n                    <Toast.Header>\r\n                        <strong className=\"me-auto\">Success Message</strong>\r\n                    </Toast.Header>\r\n                    <Toast.Body className=\"Dark\">\r\n                        {message}\r\n                    </Toast.Body>\r\n            </Toast>}\r\n\r\n            <div className=\"content\">\r\n                <Loader show={isShowLoader} />\r\n                {/* <Container fluid> */}\r\n                <Row>\r\n                    <Col>\r\n                        <div className=\"text-right\">\r\n                            {paginate(pageCount)}\r\n                        </div>\r\n\r\n                        <Table  {...getTableProps()} className=\"shadow-lg p-3 mb-5 bg-white rounded small\" striped bordered hover responsive>\r\n                            <thead className=\"bg-primary\">\r\n                                {headerGroups.map(headerGroup => (\r\n                                    <tr {...headerGroup.getHeaderGroupProps()}>\r\n                                        {headerGroup.headers.map(column => (\r\n                                            <th\r\n                                                {...column.getHeaderProps(column.getSortByToggleProps())}\r\n                                            >\r\n                                                {column.render('Header')}\r\n                                                <span>\r\n                                                    {column.isSorted ? (column.isSortedDesc ? ' 🔽' : ' 🔼') : ''}\r\n                                                </span>\r\n                                                <div>{column.allowFilter ? column.render('Filter') : null}</div>\r\n                                            </th>\r\n                                        ))}\r\n                                    </tr>\r\n                                ))}\r\n                            </thead>\r\n                            <tbody{...getTableBodyProps()}>\r\n\r\n                                {page.map(row => {\r\n                                    prepareRow(row)\r\n                                    return (\r\n                                        <tr {...row.getRowProps()}>\r\n                                            {row.cells.map(cell => {\r\n                                                console.log(cell);\r\n                                                if (cell.column.id != \"col8\" && cell.column.id != \"col7\") {\r\n                                                    return (\r\n                                                        <td {...cell.getCellProps()}>\r\n                                                            {cell.render('Cell')}\r\n                                                        </td>\r\n                                                    )\r\n                                                } else if (cell.column.id == \"col8\") {\r\n                                                    return (\r\n                                                        <td>\r\n                                                            <Button size={\"sm\"} variant=\"info\" onClick={() => { history.push(\"/loanApprovalDetails?actionType=view\", cell.value.id) }} type=\"button\" className='m-1'>\r\n                                                                View\r\n                                                            </Button>{(auth.role==\"checker\"||auth.role==\"admin\") &&\r\n                                                                cell.value.is_disbursed==1 && cell.value.status==0 &&\r\n                                                            \r\n                                                            <Button size={\"sm\"} variant=\"danger\" onClick={() => { history.push(\"/loanApprovalDetails?actionType=close\", cell.value.id) }} type=\"button\" >\r\n                                                                Close A/C\r\n                                                            </Button>}\r\n\r\n                                                        </td>\r\n                                                    )\r\n                                                } else if (cell.column.id == \"col7\") {\r\n                                                    return (\r\n                                                        <td>\r\n                                                            <Badge className={cell.value == \"Approved\" || cell.value == \"Disbursed\" ? \"bg-success\" : \"bg-danger\"}>\r\n                                                                {cell.value}\r\n                                                            </Badge>\r\n                                                        </td>)\r\n\r\n                                                }\r\n                                            })}\r\n                                        </tr>\r\n                                    )\r\n                                })}\r\n\r\n                            </tbody>\r\n                        </Table>\r\n                        <div className=\"text-right\">\r\n                            {paginate(pageCount)}\r\n                        </div>\r\n\r\n                    </Col>\r\n                </Row>\r\n\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AllApplications;","import React,{useState,useRef,useEffect } from 'react';\r\nimport { Table,Button, Container, Row, Col, Card, Form } from 'react-bootstrap';\r\nimport Loader from '../layout/Loader';\r\nimport { useFormik } from 'formik';\r\nimport DatePicker from \"react-datepicker\";\r\nimport groupLoan from \"../../models/groupLoan\";\r\nimport { useReactToPrint } from 'react-to-print';\r\nfunction EmiCalculator(props) {\r\n    const [enrollmentDate, setEnrollmentDate] = useState(new Date());\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [calculatedData,setCalculatedData] = useState([]);\r\n    const componentRef = useRef();\r\n    const handlePrint = useReactToPrint({\r\n      content: () => componentRef.current,\r\n      documentTitle:\"EMI-details\",\r\n    });\r\n    const validate = values => {\r\n        const errors = {};\r\n        if (!values.interest_rate) {\r\n          errors.interest_rate = 'Interest rate is Required';\r\n        }\r\n        if (!values.loan_amount) {\r\n            errors.loan_amount = 'Loan amount is Required';\r\n          }\r\n          if (!values.tenure) {\r\n            errors.tenure = 'Tenure is Required';\r\n          }\r\n          if (!values.EMI_payout) {\r\n            errors.EMI_payout = 'EMI payout is Required';\r\n          }\r\n          return errors;\r\n      };\r\n      const formik = useFormik({\r\n        initialValues: {\r\n        loanStartDate: '',\r\n        interest_rate: '',\r\n        tenure: '',\r\n        EMI_payout:'',\r\n        loan_amount:'',\r\n        EMI_type:\"flat\"\r\n        },\r\n        validate,\r\n        onSubmit: async (values) => {\r\n          setisShowLoader(true);\r\n          try {\r\n             values.loanStartDate = enrollmentDate;\r\n             console.log(values);\r\n            let response = await groupLoan.EmiModel.calculateEMI(values);\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n              //formik.resetForm();\r\n              setCalculatedData(response.body.message);\r\n            } else {\r\n              //setShowToast({ isShow: true,type:\"bg-danger\", message: response.body.message })\r\n            }\r\n    \r\n          } catch (error) {\r\n            setisShowLoader(false);\r\n            //setShowToast({ isShow: true,type:\"bg-danger\", message: error.response.body.message })\r\n          }\r\n        },\r\n      });\r\n    \r\n    return (\r\n        <>\r\n        <Loader show={isShowLoader}/>\r\n        <div className=\"content\">\r\n        <div className=\"row\">\r\n        <div className=\"col-md-4\">\r\n            <Container className=\"bg-white mt-2 shadow-lg p-3 mb-5 bg-white rounded\">\r\n            <Form onSubmit={formik.handleSubmit}>\r\n            <Form.Group as={Col} className=\"form-group required pl-0 pr-0\" controlId=\"formGridEnroll\">\r\n                            <Form.Label >Application Date</Form.Label>\r\n                            <DatePicker className=\"form-control\"\r\n                                selected={enrollmentDate}\r\n                                onChange={(date) => setEnrollmentDate(date)}\r\n                                name=\"loanStartDate\"\r\n                                dateFormat=\"dd/MM/yyyy\"\r\n                            />\r\n                {formik.touched.loanStartDate && formik.errors.loanStartDate ? (\r\n                  <div className=\"text-danger\">{formik.errors.loanStartDate}</div>\r\n                ) : null}\r\n\r\n            </Form.Group>\r\n\r\n              <Form.Group className=\"mb-3 form-group required\" controlId=\"formBasicEmail\">\r\n                <Form.Label>Loan amount</Form.Label>\r\n                <Form.Control\r\n                \r\n                  type=\"number\"\r\n                  name=\"loan_amount\"\r\n                  placeholder=\"Enter loan amount\"\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.loan_amount}\r\n                />\r\n                {formik.touched.loan_amount && formik.errors.loan_amount ? (\r\n                  <div className=\"text-danger\">{formik.errors.loan_amount}</div>\r\n                ) : null}\r\n\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-3 form-group required\" controlId=\"formBasicEmail\">\r\n                <Form.Label>Interest rate</Form.Label>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  name=\"interest_rate\"\r\n                  placeholder=\"Enter interest rate\"\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.interest_rate}\r\n\r\n                />\r\n                {formik.touched.interest_rate && formik.errors.interest_rate ? (\r\n                  <div className=\"text-danger\">{formik.errors.interest_rate}</div>\r\n                ) : null}\r\n\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-3 form-group required\" controlId=\"formBasicEmail\">\r\n                <Form.Label>Tenure</Form.Label>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  name=\"tenure\"\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.tenure}\r\n\r\n                />\r\n                {formik.touched.tenure && formik.errors.tenure ? (\r\n                  <div className=\"text-danger\">{formik.errors.tenure}</div>\r\n                ) : null}\r\n\r\n              </Form.Group>\r\n              <Form.Group as={Col} className=\"mb-3 pl-0 pr-0\" controlId=\"formGridAddress1\">\r\n                <Form.Label>EMI payout</Form.Label>\r\n                <select\r\n                    className=\"form-control\"\r\n                    name=\"EMI_payout\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.EMI_payout}\r\n                >\r\n                    <option key=\"\" value=\"\">Select payout</option>\r\n\r\n                    <option key=\"daily\" value=\"daily\">Daily</option>\r\n                    {/* <option key=\"weekly\" value=\"weekly\">Weekly</option>\r\n                    <option key=\"monthly\" value=\"fortnight\">Fortnight</option> */}\r\n                    <option key=\"monthly\" value=\"monthly\">Monthly</option>\r\n                </select>\r\n                {formik.touched.EMI_payout && formik.errors.EMI_payout ? (\r\n                  <div className=\"text-danger\">{formik.errors.EMI_payout}</div>\r\n                ) : null}\r\n\r\n            </Form.Group>\r\n\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                Calculate\r\n              </Button>\r\n\r\n            </Form>\r\n            </Container>\r\n            </div>\r\n            <div className=\"col-md-8\">\r\n            <Card border=\"primary\" header\r\n                        key={0}\r\n                        text={'dark'}\r\n                        // style={{ width: '18rem' }}\r\n                        className=\"m-2\"\r\n                        ref={componentRef}\r\n                    >\r\n                      {/* {isclickPrint?<h2 className=\"text-center mb-3\">AA2 MicroFinance Foundation</h2>:\"\"} */}\r\n                        <Card.Header className=\"bg-primary text-center\"><b>Micro Finance EMI Details</b><svg onClick={handlePrint} xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" className=\"bi bi-printer float-right cursar\" viewBox=\"0 0 16 16\">\r\n  <path d=\"M2.5 8a.5.5 0 1 0 0-1 .5.5 0 0 0 0 1z\"/>\r\n  <path d=\"M5 1a2 2 0 0 0-2 2v2H2a2 2 0 0 0-2 2v3a2 2 0 0 0 2 2h1v1a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-1h1a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-1V3a2 2 0 0 0-2-2H5zM4 3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v2H4V3zm1 5a2 2 0 0 0-2 2v1H2a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1h-1v-1a2 2 0 0 0-2-2H5zm7 2v3a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1z\"/>\r\n</svg></Card.Header>\r\n                        <Card.Body >\r\n                            <Table  size={\"sm\"} className=\"bg-white rounded\" striped bordered hover responsive>\r\n                            <thead>\r\n                              <tr>\r\n                                  <th>EMI date</th>\r\n                                  <th>EMI Amount</th>\r\n                                  <th>Principal</th>\r\n                                  <th>Interest</th>\r\n                                  <th>Outstanding</th>\r\n                              </tr>\r\n                          </thead>\r\n                                <tbody>\r\n                                {calculatedData.map((value,id)=>(<tr key={id}>\r\n                                    <td>{value.date}</td>\r\n                                    <td>{value.EMI?.toFixed(2)}</td>\r\n                                    <td>{value.principal?.toFixed(2)}</td>\r\n                                    <td>{value.int_amount?.toFixed(2)}</td>\r\n                                    <td>{value.outstanding?.toFixed(2) }</td>\r\n                                </tr>))}\r\n                                </tbody>\r\n                            </Table>\r\n\r\n                        </Card.Body>\r\n                    </Card>\r\n            </div>\r\n\r\n    </div>\r\n    </div>            \r\n        </>\r\n    );\r\n}\r\n\r\nexport default EmiCalculator;","import React, { useEffect, useState, useRef, useCallback, useMemo} from 'react';\r\nimport { Table, Button, Container, Row, Col, Modal, InputGroup, FormLabel } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport groupLoan from '../../models/groupLoan';\r\nimport Loader from '../layout/Loader';\r\nimport DatePicker from \"react-datepicker\";\r\nimport moment from \"moment\"\r\nimport { useDispatch } from \"react-redux\";\r\nimport { CHANGE_PAGE } from '../../constants/actionTypes'\r\nimport EmiCardPrint from '../print/EmiCardPrint'\r\nimport {useReactToPrint} from 'react-to-print';\r\n\r\nfunction DueEmis(props) {\r\n    const dispatch = useDispatch();\r\n    const [showDeleteModel, setShowDeleteModel] = useState(false)\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [dueEmis, setDueEmis] = useState([]);\r\n    const [paidID, setPaidID] = useState(0);\r\n    const [totalEmi, setTotalEmi] = useState(0);\r\n    const [enrollmentDate, setEnrollmentDate] = useState(new Date());\r\n    useEffect(() => {\r\n        getDueEmisRecord();\r\n        dispatch({ type: CHANGE_PAGE, page: \"EMI Dues\" });\r\n    }, [])\r\n    let total = 0;\r\n    const emiRef = useRef();\r\n    const handlePrintEMI = useReactToPrint({\r\n        content: () => emiRef.current,\r\n        documentTitle: \"AA2-EMI-details\",\r\n    });\r\n    const emiRecords = useCallback(() => {\r\n        return (\r\n        <>{\r\n            dueEmis.map((value, id) => (\r\n            <tr>\r\n                <td>{value.loan_account_no}</td>\r\n                <td>{value?.group_loan?.member?.member_group?.group_name}</td>\r\n                <td>{value?.group_loan?.member?.member_id}</td>\r\n                <td>{value.group_loan?.member?.member_name}</td>\r\n                <td>{value.group_loan?.member?.mobile_number}</td>\r\n                <td>{value.remain_EMI}</td>\r\n                <td>{value.EMI_amount.toFixed(2)}</td>\r\n                <td>{value.outstanding}</td>\r\n                <td></td>\r\n            </tr>\r\n        ))\r\n        }\r\n        <tr>\r\n            <td>Total</td>\r\n            <td colSpan={6} style={{textAlign:'right'}}>{totalEmi}</td></tr></>)\r\n    }, [dueEmis]);\r\n    const emiCol = useMemo(() => {\r\n        return [\"Account No.\", \"Group Name\", \"Member ID\", \"Name\", \"Phone\", \"No. of EMI\", \"EMI Amount\", \"Outstanding\", \"Signature\"];\r\n    }, [])\r\n\r\n    const getDueEmisRecord = (today = moment().format(\"yyyy-MM-DD\")) => {\r\n        setisShowLoader(true);\r\n        groupLoan.EmiModel.getDueEmis(today).then(res => {\r\n            setisShowLoader(false);\r\n            if (res.statusCode == 200) {\r\n                let emiData = [];\r\n                let count = 0;\r\n                emiData = res.body.message.map(emi=>{ \r\n                   // return emi\r\n                   emi[\"loan_table_id\"]=emi.loan_account_no.substring(11)\r\n                   count = count+parseFloat(emi.EMI_amount.toFixed(2))\r\n                   return emi;\r\n                });\r\n                setTotalEmi(count);\r\n                setDueEmis(emiData);\r\n            } else {\r\n                setDueEmis([]);\r\n            }\r\n        })\r\n    }\r\n    const paidEMI = async()=>{\r\n        setShowDeleteModel(false);\r\n        try{\r\n            setisShowLoader(true);\r\n            let response = await groupLoan.EmiModel.paidEmi(paidID);\r\n            setisShowLoader(false);\r\n            if(response.statusCode == 200){\r\n                let UpdatedList = dueEmis.filter((emidata,idx)=>emidata.id!=paidID);\r\n                setDueEmis(UpdatedList);\r\n            }\r\n        }catch (error) {\r\n            console.log(error.response.body.message);\r\n            setisShowLoader(false);\r\n        }\r\n    }\r\n    const paidHandle=(id)=>{\r\n        setPaidID(id);        \r\n        setShowDeleteModel(true);\r\n    }\r\n    const changeEmiDate = (selectedDate)=>{\r\n        setEnrollmentDate(selectedDate)\r\n        getDueEmisRecord(moment(selectedDate).format(\"yyyy-MM-DD\"));\r\n    }\r\n    return (\r\n        <>\r\n      <Modal show={showDeleteModel} onHide={()=>setShowDeleteModel(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Paid EMI </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>Are you sure?</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={()=>setShowDeleteModel(false)}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={()=>paidEMI()}>\r\n            Paid\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>        \r\n\r\n            <Loader show={isShowLoader} />\r\n            <div className=\"content\">\r\n                {/* <h2 className=\"text-info text-center\">Due EMIs</h2> */}\r\n                <Row>\r\n              <Col>\r\n                    <InputGroup className=\"mb-3\">\r\n                    <FormLabel className=\"mr-3\">EMI Date:</FormLabel>\r\n                    <DatePicker className=\"form-control\"\r\n                                selected={enrollmentDate}\r\n                                onChange={(date) => changeEmiDate(date)}\r\n                                name=\"enrollment_date\"\r\n                                dateFormat=\"dd/MM/yyyy\"\r\n                            />\r\n\r\n                    </InputGroup>\r\n                    <svg onClick={handlePrintEMI} xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" className=\"bi bi-printer float-right cursar\" viewBox=\"0 0 16 16\">\r\n                                    <path d=\"M2.5 8a.5.5 0 1 0 0-1 .5.5 0 0 0 0 1z\" />\r\n                                    <path d=\"M5 1a2 2 0 0 0-2 2v2H2a2 2 0 0 0-2 2v3a2 2 0 0 0 2 2h1v1a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-1h1a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-1V3a2 2 0 0 0-2-2H5zM4 3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v2H4V3zm1 5a2 2 0 0 0-2 2v1H2a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1h-1v-1a2 2 0 0 0-2-2H5zm7 2v3a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1z\" />\r\n                                </svg>\r\n                        <Table className=\" shadow-lg p-3 mb-5 bg-white rounded small\" striped bordered hover responsive>\r\n                            <thead className=\"bg-primary\">\r\n                                <tr>\r\n                                    <th>Maker/Checker</th>\r\n                                    <th>Account No.</th>\r\n                                    <th>Group Name</th>\r\n                                    <th>Member ID</th>\r\n                                    <th>Name</th>\r\n                                    <th>Phone Number</th>\r\n                                    <th>No. of Emi</th>\r\n                                    <th>EMI Amount</th>\r\n                                    <th>Outstanding</th>\r\n                                    <th>Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            \r\n                                {dueEmis.length!=0?<>{dueEmis.map((emi, id) => (<tr key={emi.id}>\r\n                                    <td>{emi?.user?.id}- {emi?.user?.name}</td>\r\n                                    <td><Link to={{\r\n                                        pathname: '/loanApprovalDetails?actionType=view',\r\n                                        state: emi.loan_table_id\r\n                                        }}>{emi.loan_account_no}</Link></td>\r\n                                    <td><Link to=\"/memberGroup\">{emi.group_loan?.member?.member_group?.group_name}</Link></td>\r\n                                    <td><Link to={{\r\n                                        pathname: '/viewMemberDetail',\r\n                                        state: emi.group_loan?.member?.member_id\r\n                                        }}>{emi.group_loan?.member?.member_id}</Link></td>\r\n                                    <td><Link to={{\r\n                                        pathname: '/viewMemberDetail',\r\n                                        state: emi.group_loan?.member?.member_id\r\n                                        }}>{emi.group_loan?.member?.member_name}</Link></td>\r\n                                        <td>{emi.group_loan?.member?.mobile_number}</td>\r\n                                    <td>{emi.remain_EMI}</td>\r\n                                    <td>{emi.EMI_amount.toFixed(2)}</td>\r\n                                    <td>{emi.outstanding.toFixed(2)}</td>\r\n                                    <td><Button size={\"sm\"} variant=\"success\" onClick={() => paidHandle(emi.id) }>Pay</Button></td>\r\n                                </tr>))}<tr>\r\n            <th>Total</th>\r\n            <td colSpan={7} style={{textAlign:'right'}}>{totalEmi}</td></tr></>:<tr><td colSpan={\"9\"} className=\"text-center\">No Dues for selected date!</td></tr>}\r\n                            </tbody>\r\n                        </Table>\r\n                        <div style={{ display: \"none\" }}><EmiCardPrint ref={emiRef} emiData={emiRecords} column={emiCol} heading=\"Today Collection\" isDeclaration={false} isSign={false}/></div>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default DueEmis;","import React,  { useEffect, useState } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { CHANGE_PAGE } from '../../constants/actionTypes'\r\nimport DashboardModel from '../../models/dashboard';\r\nimport Loader from '../layout/Loader';\r\nimport { Table, Button, Container, Row, Col, Modal, InputGroup, FormLabel } from 'react-bootstrap';\r\nimport moment from 'moment';\r\nfunction PaidDetailView() {\r\n    const dispatch = useDispatch();\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [loanData, setLoanData] = useState([]);\r\n    const [totalAmount, setTotalAmount] = useState(0);\r\n\r\n    useEffect(() => {\r\n        getDetailData();\r\n        dispatch({ type: CHANGE_PAGE, page: \"Paid Ladger\" });\r\n    }, [])\r\n    const getDetailData = () => {\r\n        setisShowLoader(true);\r\n        DashboardModel.paidAmount().then(res => {\r\n            setisShowLoader(false);\r\n            if(res.status == 200){\r\n                console.log(res.body.message);\r\n                setLoanData(res.body.message.loan.sort((a,b) => (a.id < b.id) ? 1 : ((b.id < a.id) ? -1 : 0)));\r\n                setTotalAmount(res.body.message.total);\r\n            }\r\n            // console.log({loanData});\r\n        });\r\n        \r\n    }\r\n  return (\r\n    <>\r\n         <Loader show={isShowLoader} />\r\n         <div className=\"content\">\r\n         <Row>\r\n            <Col>\r\n         <Table className=\" shadow-lg p-3 mb-5 bg-white rounded small\" striped bordered hover responsive>\r\n            <thead className=\"bg-primary\">\r\n                <tr>\r\n                    <th>Sr No.</th>\r\n                    <th>Date</th>\r\n                    <th>Particular</th>\r\n                    <th>Amount</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {loanData.length!=0?loanData.map((emi, id) => (<tr key={emi.id}>\r\n                    <td>{id+1}</td>\r\n                    <td>{moment(emi.disburse_date).format(\"DD-MM-yyyy\")}</td>\r\n                    <td>Loan disbursed to {emi.member.member_name} - Loan account {emi.loan_account_no}</td>\r\n                    <td>{emi.loan_amount}</td>\r\n                    {/* <td><Button size={\"sm\"} variant=\"success\" onClick={() => paidHandle(emi.id) }>Pay</Button></td> */}\r\n                </tr>\r\n                ))\r\n                :<tr><td colSpan={\"8\"} className=\"text-center\">No Record Found</td></tr>}\r\n            </tbody>\r\n            <tfoot>\r\n            {loanData.length!=0?\r\n                <tr style={{fontWeight:'bold'}}>\r\n                <td colSpan={\"3\"}>Total</td>\r\n                <td>{totalAmount}</td>\r\n                </tr>:''}\r\n            </tfoot>\r\n        </Table>\r\n        </Col>\r\n        </Row>\r\n        </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PaidDetailView;\r\n","import React,  { useEffect, useState } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { CHANGE_PAGE } from '../../constants/actionTypes'\r\nimport DashboardModel from '../../models/dashboard';\r\nimport Loader from '../layout/Loader';\r\nimport { Table, Button, Container, Row, Col, Modal, InputGroup, FormLabel } from 'react-bootstrap';\r\nimport moment from 'moment';\r\nfunction RecievedDetailView() {\r\n    const dispatch = useDispatch();\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [loanData, setLoanData] = useState([]);\r\n    const [totalAmount, setTotalAmount] = useState(0);\r\n\r\n    useEffect(() => {\r\n        getDetailData();\r\n        dispatch({ type: CHANGE_PAGE, page: \"Received Ladger\" });\r\n    }, [])\r\n    const getDetailData = () => {\r\n        setisShowLoader(true);\r\n        DashboardModel.receivedAmount().then(res => {\r\n             console.log({res});\r\n            setisShowLoader(false);\r\n            if(res.status == 200){\r\n                console.log(res.body.message);\r\n                setLoanData(res.body.message.emis.sort((a,b) => (a.id < b.id) ? 1 : ((b.id < a.id) ? -1 : 0)));\r\n                setTotalAmount(res.body.message.total?.toFixed(0));\r\n            }\r\n        });\r\n        \r\n    }\r\n  return (\r\n    <>\r\n         <Loader show={isShowLoader} />\r\n         <div className=\"content\">\r\n         <Row>\r\n            <Col>\r\n         <Table className=\" shadow-lg p-3 mb-5 bg-white rounded small\" striped bordered hover responsive>\r\n            <thead className=\"bg-primary\">\r\n                <tr>\r\n                    <th>Sr No.</th>\r\n                    <th>Date</th>\r\n                    <th>Particular</th>\r\n                    <th>Amount</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {loanData.length!=0?loanData.map((emi, id) => (<tr key={emi.id}>\r\n                    <td>{id+1}</td>\r\n                    <td>{moment(emi.EMI_date).format(\"DD-MM-yyyy\")}</td>\r\n                    <td>EMI received Loan Account - {emi.loan_account_no}</td>\r\n                    <td>{emi.EMI_amount?.toFixed(2)}</td>\r\n                    {/* <td><Button size={\"sm\"} variant=\"success\" onClick={() => paidHandle(emi.id) }>Pay</Button></td> */}\r\n                </tr>\r\n                ))\r\n                :<tr><td colSpan={\"8\"} className=\"text-center\">No Record Found</td></tr>}\r\n            </tbody>\r\n            <tfoot>\r\n            {loanData.length!=0?\r\n                <tr style={{fontWeight:'bold'}}>\r\n                <td colSpan={\"3\"}>Total</td>\r\n                <td>{totalAmount}</td>\r\n                </tr>:''}\r\n            </tfoot>\r\n        </Table>\r\n        </Col>\r\n        </Row>\r\n        </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default RecievedDetailView;\r\n","import moment from \"moment\"\r\nimport { API_ROOT } from \"./BaseUrl\"\r\nimport axios from \"./interceptor-middleware\";\r\n//const url = '/memberGroups/';\r\n\r\nconst profitDetails = {\r\n  // calculateEMI(data){\r\n  //   return axios.post(`${API_ROOT}/emis/calculateEMI`, data);\r\n  // },\r\n  getData(today) {\r\n    const myDate = today.split(\" \");\r\n\r\n    // if (myDate[0].charAt(0) === '0')\r\n    //   myDate[0] = myDate[0].replace(\"0\", \"\");\r\n    return axios.get(`${API_ROOT}/emis/paidEmi/${parseInt(myDate[0])}/${myDate[1]}`);\r\n  },\r\n  // paidEmi(id){\r\n  //   return axios.put(`${API_ROOT}/emis/entry`,{\"id\":id});\r\n  // },\r\n  // getPaidEmis(loanAccountNo){\r\n  //   return axios.get(`${API_ROOT}/emis/entry/${loanAccountNo}`);\r\n  // }\r\n}\r\nexport default { profitDetails };","import React, { useEffect, useState }from 'react'\r\nimport { useDispatch } from \"react-redux\";\r\nimport { CHANGE_PAGE } from '../../constants/actionTypes'\r\nimport { Table, Button, Container, Row, Col, Modal, InputGroup, FormLabel } from 'react-bootstrap';\r\nimport profit from '../../models/profit';\r\nimport Loader from '../layout/Loader';\r\nimport moment from \"moment\"\r\nimport DatePicker from \"react-datepicker\";\r\nfunction Profit() {\r\n  const dispatch = useDispatch();\r\n  const [enrollmentDate, setEnrollmentDate] = useState(new Date());\r\n  const [isShowLoader, setisShowLoader] = useState(false);\r\n  const [dueEmis, setDueEmis] = useState([]);\r\n  const [totalInterestEarned, setTotalInterestEarned] = useState(0);\r\n  const [totalPrincipalEarned, setTotalPrincipalEarned] = useState(0);\r\n\r\n  useEffect(() => {\r\n      getProfitData();\r\n      dispatch({ type: CHANGE_PAGE, page: \"Profit\" });\r\n  }, [])\r\n\r\n  const changeEmiDate = (selectedDate)=>{\r\n    setEnrollmentDate(selectedDate)\r\n    getProfitData(moment(selectedDate).format(\"MM yyyy\"));\r\n  }\r\n  \r\n  const getProfitData = (today = moment().format(\"MM yyyy\")) => {\r\n    \r\n    setisShowLoader(true);\r\n    profit.profitDetails.getData(today).then(res => {\r\n      // console.log(res.body);\r\n        setisShowLoader(false);\r\n        if (res.statusCode == 200) {\r\n          setTotalInterestEarned(res.body.total_interest_earned);\r\n          setTotalPrincipalEarned(res.body.total_principal_earned);\r\n            setDueEmis(res.body.records);\r\n        } else {\r\n            setDueEmis([]);\r\n        }\r\n    })\r\n  }\r\n  return (\r\n    \r\n    <div className=\"content\">\r\n       <Loader show={isShowLoader} />\r\n       <Col>\r\n                    <InputGroup className=\"mb-3\">\r\n                    <FormLabel className=\"mr-3\">Date:</FormLabel>\r\n                            <DatePicker className=\"form-control\"\r\n                               selected={enrollmentDate}\r\n                               onChange={(date) => changeEmiDate(date)}\r\n                               name=\"enrollment_date\"\r\n                               dateFormat=\"MMMM yyyy\"\r\n                               showMonthYearPicker\r\n                            />\r\n\r\n                    </InputGroup>\r\n                   <div><label><strong>Earned Interest </strong>: {totalInterestEarned} </label></div> \r\n                   <div><label><strong>Earned Principal </strong>: {totalPrincipalEarned} </label></div> \r\n                    <Table className=\" shadow-lg p-3 mb-5 bg-white rounded small\" striped bordered hover responsive>\r\n                            <thead className=\"bg-primary\">\r\n                                <tr>\r\n                                    <th>Loan Account No.</th>\r\n                                    <th>Earned Interest</th>\r\n                                    <th>Principal</th>\r\n                                    <th>Total Loan Amount</th>\r\n                                    <th>EMI Date</th>\r\n                                    <th>Disburse Date</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            {dueEmis.length!=0?dueEmis.map((val,id) => (<tr key={val.id}><td>{val.group_loan.loan_account_no}</td>\r\n                            <td>{val.int_amount}</td>\r\n                            <td>{val.principal}</td>\r\n                            <td>{val?.group_loan?.loan_amount}</td>\r\n                            <td>{moment(val.EMI_date).format(\"DD-MM-YYYY\")}</td>\r\n                            <td>{moment(val?.group_loan?.disburse_date).format(\"DD-MM-YYYY\") }</td>\r\n                            </tr>)) : <tr><td colSpan={\"8\"} className=\"text-center\">No data for Selected Month</td></tr>}\r\n                            </tbody>\r\n                        </Table>    \r\n        </Col>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profit;","import React, { useEffect, useState } from 'react';\r\nimport { Table,Button, Container, Row, Col,Modal } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport processingFee from '../../models/processingFee';\r\nimport Loader from '../layout/Loader';\r\nimport moment from 'moment';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { CHANGE_PAGE } from '../../constants/actionTypes';\r\nfunction ProcessingFee(props) {\r\n    let history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const [showDeleteModel, setShowDeleteModel] = useState(false)\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [processingFees,setProcessingFees]=useState([]);\r\n    const [deleteID, setDeleteID] = useState(0);\r\n\r\n    useEffect(() => {\r\n        dispatch({ type: CHANGE_PAGE, page: \"Raised Fund\" });\r\n        getProcessingFees();\r\n    },[])\r\n\r\n    const getProcessingFees = () =>{\r\n        setisShowLoader(true);\r\n        processingFee.ProcessingFeeModel.getProcessingFee('all').then(res=>{\r\n            setisShowLoader(false);\r\n            if(res.statusCode == 200){\r\n                setProcessingFees(res.body.message);\r\n            }else{\r\n                setProcessingFees([]);\r\n            }\r\n        })\r\n    }\r\n    const  deleteHandle=(id)=>{\r\n        setDeleteID(id); \r\n        setShowDeleteModel(true);\r\n    }\r\n\r\n    const deleteProcessingFee=async()=>{\r\n        setShowDeleteModel(false);\r\n        try{\r\n            setisShowLoader(true);\r\n            let response = await processingFee.ProcessingFeeModel.deleteProcessingFee(deleteID);\r\n            setisShowLoader(false);\r\n            if(response.statusCode == 200){\r\n                let UpdatedList = processingFees.filter((scheme,idx)=>scheme.id!=deleteID);\r\n                setProcessingFees(UpdatedList);\r\n             }\r\n        }catch (error) {\r\n                console.log(error.response.body.message);\r\n                setisShowLoader(false);\r\n            }\r\n    }    \r\n    return (\r\n        <>\r\n        <div className=\"content\">\r\n      <Modal show={showDeleteModel} onHide={()=>setShowDeleteModel(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Delete Processing Fee</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>Are you sure?</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={()=>setShowDeleteModel(false)}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={()=>deleteProcessingFee()}>\r\n            Delete\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>        \r\n        \r\n        <Loader show={isShowLoader}/>\r\n        {/* <Container fluid> */}\r\n        {/* <h2 className=\"text-info text-center\">Processing Fee</h2> */}\r\n            <Row className=\"mb-5 mt-3\">\r\n                <Col>\r\n                <Link to=\"/addProcessingFee\">\r\n                <Button variant=\"info\"  active>\r\n                    Add Fund\r\n                </Button>\r\n                </Link>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n            <Col>\r\n            <Table className=\"shadow-lg p-3 mb-5 bg-white rounded\" striped bordered hover responsive>\r\n            <thead>\r\n                <tr>\r\n                    <th>Id</th>\r\n                    <th>Particular</th>\r\n                    <th>Amount</th>\r\n                    <th>Date</th>\r\n                    <th>Created At</th>\r\n                    <th>Action</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {processingFees.map((data,id)=>(<tr key={data.id}>\r\n                    <td>{data.id}</td>\r\n                    <td>{data.particular}</td>\r\n                    <td>{data.amount}</td>\r\n                    <td>{data.date_of_processing?moment(data.date_of_processing).format(\"DD-MM-yyyy\"):\"\"}</td>\r\n                    <td>{moment(data.created_at).format(\"DD-MM-yyyy hh:ss A\") }</td>\r\n                    <td>\r\n                        \r\n                    <Button variant=\"success\" size={\"sm\"} onClick={()=>{history.push(\"/addProcessingFee\",data.id)}} >Edit</Button>\r\n                    {' '}\r\n                    <Button variant=\"danger\" size={\"sm\"} onClick={()=>deleteHandle(data.id)} >Delete</Button>\r\n                    </td>\r\n                </tr>))}\r\n            </tbody>\r\n        </Table>\r\n    </Col>\r\n            </Row>\r\n        {/* </Container> */}\r\n        </div>\r\n        </>\r\n        );\r\n}\r\n\r\nexport default ProcessingFee;","import React, { useState,useEffect } from 'react';\r\nimport { Button, Form, Container, Row, Col, Toast } from 'react-bootstrap';\r\nimport { useFormik } from 'formik';\r\nimport processingFee from  '../../models/processingFee';\r\nimport Loader from '../layout/Loader';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport { CHANGE_PAGE } from '../../constants/actionTypes';\r\nfunction AddProcessingFee(props) {\r\n    let history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const auth = useSelector(state => state.auth);\r\n    const [enrollmentDate, setEnrollmentDate] = useState(new Date());\r\n\r\n    const [values, setValues] = useState({});\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [showToast, setShowToast] = useState({ isShow: false, type: \"\", message: \"\" })\r\n    useEffect(() => {\r\n      console.log(props);\r\n      dispatch({ type: CHANGE_PAGE, page: \"Add/Edit Fund\" });\r\n      if(props.location.state)\r\n          getExpenseDetails(props.location.state);\r\n  }, [])    \r\n    const getExpenseDetails = async(id)=>{\r\n      try {\r\n        setisShowLoader(true);\r\n        let response = await processingFee.ProcessingFeeModel.getProcessingFee(props.location.state);\r\n        formik.values.particular = response.body.message[0].particular  \r\n        formik.values.amount = response.body.message[0].amount \r\n        setEnrollmentDate(new Date(response.body.message[0].date_of_processing));\r\n\r\n        setisShowLoader(false);\r\n    } catch (error) {\r\n        setisShowLoader(false);\r\n        setShowToast({ isShow: true, type: \"bg-danger\", message: error.response.body.message })\r\n    }\r\n    }\r\n    const validate = values => {\r\n      const errors = {};\r\n      if (!values.particular) {\r\n        errors.particular = 'Particular type is Required!';\r\n      }\r\n      if (!values.amount) {\r\n        errors.amount = 'Amount is Required!';\r\n      }\r\n      return errors;\r\n    };\r\n    const formik = useFormik({\r\n      initialValues: {\r\n        particular: '',\r\n        amount: '',\r\n        date_of_processing: '',\r\n        user_id:auth.id\r\n      },\r\n      validate,\r\n      onSubmit: async (values) => {\r\n        setisShowLoader(true);\r\n          try {\r\n            values.date_of_processing = enrollmentDate;\r\n            let response = [];\r\n            if(props.location.state){\r\n              response = await processingFee.ProcessingFeeModel.editProcessingFee(values,props.location.state);\r\n\r\n         }else{\r\n\r\n             response = await processingFee.ProcessingFeeModel.saveProcessingFee(values);\r\n         }\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n              formik.resetForm();\r\n              if(props.location.state)\r\n              history.push(\"/processingFee\")              \r\n              setShowToast({ isShow: true,type:\"bg-success\", message: \"Data added Successfully!\" })\r\n            } else {\r\n              setShowToast({ isShow: true,type:\"bg-danger\", message: response.body.message.toString() })\r\n            }\r\n  \r\n          } catch (error) {\r\n            setisShowLoader(false);\r\n            setShowToast({ isShow: true,type:\"bg-danger\", message: error.response.body.message })\r\n          }\r\n      },\r\n      handleChange: () => {\r\n        setValues(prevValues => ({\r\n          ...prevValues,\r\n          // we use the name to tell Formik which key of `values` to update\r\n          [values.target.name]: values.target.value\r\n        }))\r\n      },\r\n    });\r\n    return (\r\n      <>\r\n      <div className=\"content\">\r\n        <Toast key={1} autohide delay={3000} show={showToast.isShow} onClose={() => setShowToast({ isShow: false,type:\"\", message: \"\" })} className={\"loader \"+ (showToast.type) } >\r\n          <Toast.Header>\r\n            <strong className=\"me-auto\">{showToast.type==\"bg-danger\"?\"Error\":\"Success\"} Message</strong>\r\n          </Toast.Header>\r\n          <Toast.Body className=\"Dark\">\r\n          {showToast.message}\r\n          </Toast.Body>\r\n        </Toast>\r\n        <Loader show={isShowLoader} />\r\n        {/* <h2 className=\"text-info text-center\">{props.location.state?\"Edit\":\"Add\"} Processing Fee</h2> */}\r\n        <div className=\"row\">\r\n          <div className=\"col-md-8\">\r\n            <div className=\"card card-user\">\r\n              <div className=\"card-body\">\r\n          {/* <Container fluid className=\"bg-white mt-5 shadow-lg p-3 mb-5 bg-white rounded\"> */}\r\n          <Form onSubmit={formik.handleSubmit}>\r\n            {/* <Row className=\"mb-3\" md={6}> */}\r\n              <Form.Group  controlId=\"formGriddob\" className=\"form-group required\">\r\n                <Form.Label>Particular:</Form.Label>\r\n                <Form.Control\r\n                  name=\"particular\"\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.particular}\r\n                />\r\n                  {formik.touched.particular && formik.errors.particular ? (\r\n                    <div class=\"text-danger\">{formik.errors.particular}</div>\r\n                  ) : null}              \r\n              </Form.Group>\r\n              {/* </Row> */}\r\n              {/* <Row className=\"mb-3\" md={6}> */}\r\n\r\n              <Form.Group  controlId=\"formGriddob\" className=\"form-group required\">\r\n                <Form.Label>Amount</Form.Label>\r\n                <Form.Control\r\n                  name=\"amount\"\r\n                  type=\"number\"\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.amount}\r\n                />\r\n                  {formik.touched.amount && formik.errors.amount ? (\r\n                    <div class=\"text-danger\">{formik.errors.amount}</div>\r\n                  ) : null}              \r\n  \r\n              </Form.Group>\r\n  \r\n            {/* </Row> */}\r\n            {/* <Row className=\"mb-3\" md={6}> */}\r\n            <Form.Group  className=\"form-group required\" controlId=\"formGridEnroll\">\r\n                            <Form.Label >Date of Fund</Form.Label>\r\n                            <DatePicker className=\"form-control\"\r\n                                selected={enrollmentDate}\r\n                                onChange={(date) => setEnrollmentDate(date)}\r\n                                name=\"date_of_processing\"\r\n                                dateFormat=\"dd/MM/yyyy\"\r\n                            />\r\n                        </Form.Group>\r\n\r\n            {/* </Row> */}\r\n            <Button variant=\"primary\" type=\"submit\">\r\n              Save\r\n            </Button>\r\n  \r\n          </Form>\r\n        {/* </Container> */}\r\n        </div>\r\n        </div>\r\n        </div>\r\n        </div>\r\n        </div>\r\n      </>\r\n    );\r\n}\r\n\r\nexport default AddProcessingFee;","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { CHANGE_PAGE } from '../../constants/actionTypes'\r\nimport DashboardModel from '../../models/dashboard';\r\nimport Loader from '../layout/Loader';\r\nimport { Table, Button, Container, Row, Col, Modal, InputGroup, FormLabel } from 'react-bootstrap';\r\nimport moment from 'moment';\r\nimport processingFee from '../../models/processingFee';\r\nimport expenseRecord from '../../models/expenseRecord';\r\nfunction RecievedDetailView() {\r\n    const dispatch = useDispatch();\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [ledger, setLedger] = useState([]);\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch({ type: CHANGE_PAGE, page: \"Main Ladger\" });\r\n        getReport();\r\n    }, [])\r\n    const getReport = async () => {\r\n        let record = [];\r\n        try {\r\n            setisShowLoader(true);\r\n            let data = await Promise.allSettled([\r\n                DashboardModel.paidAmount(),\r\n                DashboardModel.receivedAmount(),\r\n                processingFee.ProcessingFeeModel.getProcessingFee('all'),\r\n                expenseRecord.ExpenseModel.getExpense('all')]);\r\n            setisShowLoader(false);\r\n            record = record.concat(formatPaidAmount(data[0].value?.body?.message?.loan));\r\n            record = record.concat(formatReceivedAmount(data[1].value?.body?.message?.emis));\r\n            record = record.concat(formatProcessingAmount(data[2].value?.body?.message));\r\n            record = record.concat(formatExpenseAmount(data[3].value?.body?.message));\r\n            record.sort((a, b) => (\r\n                moment(a.date,\"DD-MM-yyyy\").isBefore(moment(b.date,\"DD-MM-yyyy\"))\r\n                ) ? 1 : (\r\n                    (moment(b.date,\"DD-MM-yyyy\").isBefore(moment(a.date,\"DD-MM-yyyy\"))) ? -1 : 0)\r\n                    )\r\n            record = calculateBalance(record);\r\n            setLedger(record);\r\n\r\n        } catch (error) {\r\n            setisShowLoader(false);\r\n            console.log(error);\r\n        }\r\n    }\r\n    const formatPaidAmount = (data) => {\r\n        let payload = [];\r\n        for (let obj of data) {\r\n            payload.push({\r\n                date: moment(obj.disburse_date).format('DD-MM-yyyy'),\r\n                text: `Loan disburse to ${obj.loan_account_no}`,\r\n                amount: obj.loan_amount,\r\n                credit: false,\r\n                debit: true\r\n            })\r\n        }\r\n        return payload;\r\n    }\r\n    const formatReceivedAmount = (data) => {\r\n        let payload = [];\r\n        for (let obj of data) {\r\n            payload.push({\r\n                date: moment(obj.EMI_date).format('DD-MM-yyyy'),\r\n                text: `EMI received ${obj.loan_account_no}`,\r\n                amount: obj.EMI_amount,\r\n                credit: true,\r\n                debit: false\r\n            })\r\n        }\r\n        return payload;\r\n    }\r\n    const formatProcessingAmount = (data) => {\r\n        let payload = [];\r\n        for (let obj of data) {\r\n            payload.push({\r\n                date: moment(obj.created_at).format('DD-MM-yyyy'),\r\n                text: `Received - ${obj.particular}`,\r\n                amount: obj.amount,\r\n                credit: true,\r\n                debit: false\r\n            })\r\n        }\r\n        return payload;\r\n    }\r\n    const formatExpenseAmount = (data) => {\r\n        let payload = [];\r\n        for (let obj of data) {\r\n            payload.push({\r\n                date: moment(obj.created_at).format('DD-MM-yyyy'),\r\n                text: `Expense - ${obj.expense_type}`,\r\n                amount: obj.amount,\r\n                credit: false,\r\n                debit: true\r\n            })\r\n        }\r\n        return payload;\r\n    }\r\n\r\n    const calculateBalance = (record) => {\r\n        let outstanding = 0;\r\n        let result=[];\r\n        for (var i=record.length-1;i>=0;i--) {\r\n            var obj = record[i];\r\n            outstanding =obj.credit?outstanding+obj.amount:outstanding-obj.amount;\r\n            obj[\"balance\"] = outstanding;\r\n            result[i] = obj;\r\n        }\r\n        return result;\r\n    }\r\n    return (\r\n        <>\r\n            <Loader show={isShowLoader} />\r\n            <div className=\"content\">\r\n                <Row>\r\n                    <Col>\r\n                        <Table className=\" shadow-lg p-3 mb-5 bg-white rounded small\" striped bordered hover responsive>\r\n                            <thead className=\"bg-primary\">\r\n                                <tr>\r\n                                    <th>Sr No.</th>\r\n                                    <th>Date</th>\r\n                                    <th>Particular</th>\r\n                                    <th>Debit</th>\r\n                                    <th>Credit</th>\r\n                                    <th>Balance</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {ledger.length != 0 ? ledger.map((emi, id) => (<tr key={emi.id}>\r\n                                    <td>{id + 1}</td>\r\n                                    <td>{emi.date}</td>\r\n                                    <td>{emi.text}</td>\r\n                                    <td>{emi.debit ? emi.amount : \"\"}</td>\r\n                                    <td>{emi.credit ? emi.amount : \"\"}</td>\r\n                                    <td>{emi.balance}</td>\r\n                                </tr>\r\n                                ))\r\n                                    : <tr><td colSpan={\"8\"} className=\"text-center\">No Record Found</td></tr>}\r\n                            </tbody>\r\n                            {/* <tfoot>\r\n            {loanData.length!=0?\r\n                <tr style={{fontWeight:'bold'}}>\r\n                <td colSpan={\"3\"}>Total</td>\r\n                <td>{totalAmount}</td>\r\n                </tr>:''}\r\n            </tfoot> */}\r\n                        </Table>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RecievedDetailView;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Table,Button, Container, Row, Col,Modal } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport expenseRecord from '../../models/expenseRecord';\r\nimport Loader from '../layout/Loader';\r\nimport moment from 'moment';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { CHANGE_PAGE } from '../../constants/actionTypes';\r\n\r\nfunction Expense(props) {\r\n    let history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const [showDeleteModel, setShowDeleteModel] = useState(false)\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [expense,setExpense]=useState([]);\r\n    const [deleteID, setDeleteID] = useState(0);\r\n\r\n    useEffect(() => {\r\n        dispatch({ type: CHANGE_PAGE, page: \"Expenses\" });\r\n        getExpenses();\r\n    },[])\r\n\r\n    const getExpenses = () =>{\r\n        setisShowLoader(true);\r\n        expenseRecord.ExpenseModel.getExpense('all').then(res=>{\r\n            setisShowLoader(false);\r\n            if(res.statusCode == 200){\r\n                setExpense(res.body.message);\r\n            }else{\r\n                setExpense([]);\r\n            }\r\n        })\r\n    }\r\n    const  deleteHandle=(id)=>{\r\n        setDeleteID(id); \r\n        setShowDeleteModel(true);\r\n    }\r\n\r\n    const deleteScheme=async()=>{\r\n        setShowDeleteModel(false);\r\n        try{\r\n            setisShowLoader(true);\r\n            let response = await expenseRecord.ExpenseModel.deleteExpense(deleteID);\r\n            setisShowLoader(false);\r\n            if(response.statusCode == 200){\r\n                let UpdatedList = expense.filter((scheme,idx)=>scheme.id!=deleteID);\r\n                setExpense(UpdatedList);\r\n             }\r\n        }catch (error) {\r\n                console.log(error.response.body.message);\r\n                setisShowLoader(false);\r\n            }\r\n    }    \r\n    return (\r\n        <>\r\n        <div className=\"content\">\r\n      <Modal show={showDeleteModel} onHide={()=>setShowDeleteModel(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Delete Expense</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>Are you sure?</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={()=>setShowDeleteModel(false)}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={()=>deleteScheme()}>\r\n            Delete\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>        \r\n        \r\n        <Loader show={isShowLoader}/>\r\n        {/* <Container fluid>\r\n        <h2 className=\"text-info text-center\">Expenses</h2> */}\r\n            <Row className=\"mb-5 mt-3\">\r\n                <Col>\r\n                <Link to=\"/addExpense\">\r\n                <Button variant=\"info\" active>\r\n                    Add Expense\r\n                </Button>\r\n                </Link>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n            <Col>\r\n            <Table className=\"shadow-lg p-3 mb-5 bg-white rounded\" striped bordered hover responsive>\r\n            <thead>\r\n                <tr>\r\n                    <th>Id</th>\r\n                    <th>Expense Type</th>\r\n                    <th>Amount</th>\r\n                    <th>Date Expense</th>\r\n                    <th>Created At</th>\r\n                    <th>Action</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {expense.map((data,id)=>(<tr>\r\n                    <td>{data.id}</td>\r\n                    <td>{data.expense_type}</td>\r\n                    <td>{data.amount}</td>\r\n                    <td>{data.date_of_expense?moment(data.date_of_expense).format(\"DD-MM-yyyy\"):\"\"}</td>\r\n                    <td>{moment(data.created_at).format(\"DD-MM-yyyy hh:ss A\") }</td>\r\n                    <td>\r\n                        \r\n                    <Button variant=\"success\" size={\"sm\"} onClick={()=>{history.push(\"/addExpense\",data.id)}} >Edit</Button>\r\n                    {' '}\r\n                    <Button variant=\"danger\" size={\"sm\"} onClick={()=>deleteHandle(data.id)} >Delete</Button>\r\n                    </td>\r\n                </tr>))}\r\n            </tbody>\r\n        </Table>\r\n    </Col>\r\n            </Row>\r\n        {/* </Container> */}\r\n        </div>\r\n        </>\r\n        );\r\n}\r\n\r\nexport default Expense;","import React, { useState, useEffect } from 'react';\r\nimport { Button, Form, Container, Row, Col, Toast } from 'react-bootstrap';\r\nimport { useFormik } from 'formik';\r\nimport expenseRecord from '../../models/expenseRecord';\r\nimport Loader from '../layout/Loader';\r\nimport { useSelector } from \"react-redux\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction AddExpense(props) {\r\n  let history = useHistory();\r\n  const auth = useSelector(state => state.auth);\r\n  const [enrollmentDate, setEnrollmentDate] = useState(new Date());\r\n\r\n  const [values, setValues] = useState({});\r\n  const [isShowLoader, setisShowLoader] = useState(false)\r\n  const [showToast, setShowToast] = useState({ isShow: false, type: \"\", message: \"\" })\r\n  useEffect(() => {\r\n    console.log(props);\r\n    if (props.location.state)\r\n      getExpenseDetails(props.location.state);\r\n  }, [])\r\n  const getExpenseDetails = async (id) => {\r\n    try {\r\n      setisShowLoader(true);\r\n      let response = await expenseRecord.ExpenseModel.getExpense(props.location.state);\r\n      formik.values.expense_type = response.body.message[0].expense_type\r\n      formik.values.amount = response.body.message[0].amount\r\n      setEnrollmentDate(new Date(response.body.message[0].date_of_expense));\r\n\r\n      setisShowLoader(false);\r\n    } catch (error) {\r\n      setisShowLoader(false);\r\n      setShowToast({ isShow: true, type: \"bg-danger\", message: error.response.body.message })\r\n    }\r\n  }\r\n  const validate = values => {\r\n    const errors = {};\r\n    if (!values.expense_type) {\r\n      errors.expense_type = 'Expense type is Required!';\r\n    }\r\n    if (!values.amount) {\r\n      errors.amount = 'Amount is Required!';\r\n    }\r\n    return errors;\r\n  };\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      expense_type: '',\r\n      amount: '',\r\n      date_of_expense: '',\r\n      user_id: auth.id\r\n    },\r\n    validate,\r\n    onSubmit: async (values) => {\r\n      setisShowLoader(true);\r\n      try {\r\n        values.date_of_expense = enrollmentDate;\r\n        let response = [];\r\n        if (props.location.state) {\r\n          response = await expenseRecord.ExpenseModel.editExpense(values, props.location.state);\r\n\r\n        } else {\r\n\r\n          response = await expenseRecord.ExpenseModel.saveExpense(values);\r\n        }\r\n        setisShowLoader(false);\r\n        if (response.statusCode == 200) {\r\n          formik.resetForm();\r\n          if(props.location.state)\r\n          history.push(\"/expense\")              \r\n          setShowToast({ isShow: true,type:\"bg-success\", message: \"Data added Successfully!\" })\r\n        } else {\r\n          setShowToast({ isShow: true,type:\"bg-danger\", message: response.body.message.toString() })\r\n        }\r\n\r\n\r\n      } catch (error) {\r\n        setisShowLoader(false);\r\n        setShowToast({ isShow: true, type: \"bg-danger\", message: error.response.body.message })\r\n      }\r\n    },\r\n    handleChange: () => {\r\n      setValues(prevValues => ({\r\n        ...prevValues,\r\n        // we use the name to tell Formik which key of `values` to update\r\n        [values.target.name]: values.target.value\r\n      }))\r\n    },\r\n  });\r\n  return (\r\n    <>\r\n      <div className=\"content\">\r\n        <Toast key={1} autohide delay={3000} show={showToast.isShow} onClose={() => setShowToast({ isShow: false, type: \"\", message: \"\" })} className={\"loader \" + (showToast.type)} >\r\n          <Toast.Header>\r\n            <strong className=\"me-auto\">{showToast.type == \"bg-danger\" ? \"Error\" : \"Success\"} Message</strong>\r\n          </Toast.Header>\r\n          <Toast.Body className=\"Dark\">\r\n            {showToast.message}\r\n          </Toast.Body>\r\n        </Toast>\r\n        <Loader show={isShowLoader} />\r\n        {/* <h2 className=\"text-info text-center\">Add Expense</h2> */}\r\n        {/* <Row>\r\n        <Col md={6}> */}\r\n        <div className=\"row\">\r\n          <div className=\"col-md-8\">\r\n            <div className=\"card card-user\">\r\n              <div className=\"card-body\">\r\n                {/* <Container fluid className=\"bg-white mt-5 shadow-lg p-3 mb-5 bg-white rounded\"> */}\r\n                <Form onSubmit={formik.handleSubmit}>\r\n                  {/* <Row className=\"mb-3\" md={6}> */}\r\n                  <Form.Group controlId=\"formGriddob\" className=\"form-group required\">\r\n                    <Form.Label>Expense Type:</Form.Label>\r\n                    <Form.Control\r\n                      name=\"expense_type\"\r\n                      onChange={formik.handleChange}\r\n                      value={formik.values.expense_type}\r\n                    />\r\n                    {formik.touched.expense_type && formik.errors.expense_type ? (\r\n                      <div class=\"text-danger\">{formik.errors.expense_type}</div>\r\n                    ) : null}\r\n                  </Form.Group>\r\n                  {/* </Row> */}\r\n                  {/* <Row className=\"mb-3\" md={6}> */}\r\n\r\n                  <Form.Group controlId=\"formGriddob\" className=\"form-group required\">\r\n                    <Form.Label>Amount</Form.Label>\r\n                    <Form.Control\r\n                      name=\"amount\"\r\n                      type=\"number\"\r\n                      onChange={formik.handleChange}\r\n                      value={formik.values.amount}\r\n                    />\r\n                    {formik.touched.amount && formik.errors.amount ? (\r\n                      <div class=\"text-danger\">{formik.errors.amount}</div>\r\n                    ) : null}\r\n\r\n                  </Form.Group>\r\n\r\n                  {/* </Row> */}\r\n                  {/* <Row className=\"mb-3\" md={6}> */}\r\n                  <Form.Group className=\"form-group required\" controlId=\"formGridEnroll\">\r\n                    <Form.Label >Enrollment Date</Form.Label>\r\n                    <DatePicker className=\"form-control\"\r\n                      selected={enrollmentDate}\r\n                      onChange={(date) => setEnrollmentDate(date)}\r\n                      name=\"enrollment_date\"\r\n                      dateFormat=\"dd/MM/yyyy\"\r\n                    />\r\n                  </Form.Group>\r\n\r\n                  {/* </Row> */}\r\n                  <Button variant=\"primary\" type=\"submit\">\r\n                    Save\r\n                  </Button>\r\n\r\n                </Form>\r\n                {/* </Container> */}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AddExpense;","import React, { useEffect, useState } from 'react';\r\nimport { Table,Button, Container, Row, Col,Modal } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport user from '../../models/user';\r\nimport Loader from '../layout/Loader';\r\nimport moment from 'moment';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { CHANGE_PAGE } from '../../constants/actionTypes';\r\n\r\nfunction ListUser(props) {\r\n    let history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const [showDeleteModel, setShowDeleteModel] = useState(false)\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [users,setUsers]=useState([]);\r\n    const [deleteID, setDeleteID] = useState(0);\r\n\r\n    useEffect(() => {\r\n        dispatch({ type: CHANGE_PAGE, page: \"Application Users\" });\r\n        getUsers();\r\n    },[])\r\n\r\n    const getUsers = () =>{\r\n        setisShowLoader(true);\r\n        user.Auth.listUser().then(res=>{\r\n            setisShowLoader(false);\r\n            if(res.statusCode == 200){\r\n                setUsers(res.body.message);\r\n            }else{\r\n                setUsers([]);\r\n            }\r\n        })\r\n    }\r\n    const  deleteHandle=(id)=>{\r\n        setDeleteID(id); \r\n        setShowDeleteModel(true);\r\n    }\r\n\r\n    const deleteScheme=async()=>{\r\n        setShowDeleteModel(false);\r\n        try{\r\n            setisShowLoader(true);\r\n            let response = await user.Auth.deleteUser(deleteID);\r\n            setisShowLoader(false);\r\n            if(response.statusCode == 200){\r\n                let UpdatedList = users.filter((scheme,idx)=>scheme.id!=deleteID);\r\n                setUsers(UpdatedList);\r\n             }\r\n        }catch (error) {\r\n                console.log(error.response.body.message);\r\n                setisShowLoader(false);\r\n            }\r\n    }    \r\n    return (\r\n        <>\r\n        <div className=\"content\">\r\n      <Modal show={showDeleteModel} onHide={()=>setShowDeleteModel(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Delete Expense</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>Are you sure?</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={()=>setShowDeleteModel(false)}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={()=>deleteScheme()}>\r\n            Delete\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>        \r\n        \r\n        <Loader show={isShowLoader}/>\r\n        {/* <Container fluid>\r\n        <h2 className=\"text-info text-center\">Expenses</h2> */}\r\n            <Row className=\"mb-5 mt-3\">\r\n                <Col>\r\n                <Link to=\"/addUser\">\r\n                <Button variant=\"info\" active>\r\n                    Add New User\r\n                </Button>\r\n                </Link>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n            <Col>\r\n            <Table className=\"shadow-lg p-3 mb-5 bg-white rounded\" striped bordered hover responsive>\r\n            <thead>\r\n                <tr>\r\n                    <th>Id</th>\r\n                    <th>Name</th>\r\n                    <th>Username</th>\r\n                    <th>Password</th>\r\n                    <th>Role</th>\r\n                    <th>Phone</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {users.map((data,id)=>(<tr>\r\n                    <td>{data.id}</td>\r\n                    <td>{data.name}</td>\r\n                    <td>{data.username}</td>\r\n                    <td>{data.password}</td>\r\n                    <td>{data.role}</td>\r\n                    <td>{data.phone}</td>\r\n                    <td>\r\n                        \r\n                     <Button variant=\"success\" size={\"sm\"} onClick={()=>{history.push(\"/addUser\",data.id)}} >Edit</Button>\r\n                    {' '}\r\n                    <Button variant=\"danger\" size={\"sm\"} onClick={()=>deleteHandle(data.id)} >Delete</Button>\r\n                    </td>\r\n                </tr>))}\r\n            </tbody>\r\n        </Table>\r\n    </Col>\r\n            </Row>\r\n        {/* </Container> */}\r\n        </div>\r\n        </>\r\n        );\r\n}\r\n\r\nexport default ListUser;","import React, { useState, useEffect } from 'react';\r\nimport { Button, Form, Container, Row, Col, Toast } from 'react-bootstrap';\r\nimport { useFormik } from 'formik';\r\nimport user from '../../models/user';\r\nimport Loader from '../layout/Loader';\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction AddUser(props) {\r\n  let history = useHistory();\r\n  const auth = useSelector(state => state.auth);\r\n\r\n  const [values, setValues] = useState({});\r\n  const [isShowLoader, setisShowLoader] = useState(false)\r\n  const [showToast, setShowToast] = useState({ isShow: false, type: \"\", message: \"\" })\r\n  useEffect(() => {\r\n    console.log(props);\r\n    if (props.location.state)\r\n      getExpenseDetails(props.location.state);\r\n  }, [])\r\n  const getExpenseDetails = async (id) => {\r\n    try {\r\n      setisShowLoader(true);\r\n      let response = await user.Auth.getUserById(props.location.state);\r\n      formik.values.name = response.body.message[0].name;\r\n      formik.values.username = response.body.message[0].username;\r\n      formik.values.password = response.body.message[0].password;\r\n      formik.values.role = response.body.message[0].role;\r\n      formik.values.phone = response.body.message[0].phone;\r\n      console.log(formik.values);\r\n      //formik.values.amount = response.body.message[0].amount\r\n      setisShowLoader(false);\r\n    } catch (error) {\r\n      setisShowLoader(false);\r\n      setShowToast({ isShow: true, type: \"bg-danger\", message: error.response.body.message })\r\n    }\r\n  }\r\n  const validate = values => {\r\n    const errors = {};\r\n    if (!values.name) {\r\n      errors.name = 'Name is Required!';\r\n    }\r\n    if (!values.username) {\r\n        errors.username = 'Username is Required!';\r\n      }\r\n      if (!values.password) {\r\n        errors.password = 'Password is Required!';\r\n      }\r\n      if (!values.role) {\r\n        errors.role = 'Role is Required!';\r\n      }\r\n      if (!values.phone) {\r\n        errors.phone = 'Phone is Required!';\r\n      }\r\n    return errors;\r\n  };\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: '',\r\n      username: '',\r\n      password: '',\r\n      role: \"checker\",\r\n      phone:\"\"\r\n    },\r\n    validate,\r\n    onSubmit: async (values) => {\r\n      setisShowLoader(true);\r\n      try {\r\n        let response = [];\r\n        if (props.location.state) {\r\n            values[\"id\"]=props.location.state;\r\n          response = await user.Auth.editUser(values);\r\n          history.push(\"/listUser\") \r\n        } else {\r\n\r\n          response = await user.Auth.createUser(values);\r\n        }\r\n        setisShowLoader(false);\r\n        if (response.statusCode == 200) {\r\n          formik.resetForm();\r\n          if(props.location.state)\r\n          history.push(\"/listUser\")              \r\n          setShowToast({ isShow: true,type:\"bg-success\", message: \"Data added Successfully!\" })\r\n        } else {\r\n          setShowToast({ isShow: true,type:\"bg-danger\", message: response.body.message.toString() })\r\n        }\r\n\r\n\r\n      } catch (error) {\r\n        setisShowLoader(false);\r\n        setShowToast({ isShow: true, type: \"bg-danger\", message: error.response.body.message.toString() })\r\n      }\r\n    },\r\n    handleChange: () => {\r\n      setValues(prevValues => ({\r\n        ...prevValues,\r\n        // we use the name to tell Formik which key of `values` to update\r\n        [values.target.name]: values.target.value\r\n      }))\r\n    },\r\n  });\r\n  return (\r\n    <>\r\n      <div className=\"content\">\r\n        <Toast key={1} autohide delay={3000} show={showToast.isShow} onClose={() => setShowToast({ isShow: false, type: \"\", message: \"\" })} className={\"loader \" + (showToast.type)} >\r\n          <Toast.Header>\r\n            <strong className=\"me-auto\">{showToast.type == \"bg-danger\" ? \"Error\" : \"Success\"} Message</strong>\r\n          </Toast.Header>\r\n          <Toast.Body className=\"Dark\">\r\n            {showToast.message}\r\n          </Toast.Body>\r\n        </Toast>\r\n        <Loader show={isShowLoader} />\r\n        {/* <h2 className=\"text-info text-center\">Add Expense</h2> */}\r\n        {/* <Row>\r\n        <Col md={6}> */}\r\n        <div className=\"row\">\r\n          <div className=\"col-md-8\">\r\n            <div className=\"card card-user\">\r\n              <div className=\"card-body\">\r\n                {/* <Container fluid className=\"bg-white mt-5 shadow-lg p-3 mb-5 bg-white rounded\"> */}\r\n                <Form onSubmit={formik.handleSubmit}>\r\n                  {/* <Row className=\"mb-3\" md={6}> */}\r\n                  <Form.Group controlId=\"formGriddob\" className=\"form-group required\">\r\n                    <Form.Label>Name:</Form.Label>\r\n                    <Form.Control\r\n                      name=\"name\"\r\n                      onChange={formik.handleChange}\r\n                      value={formik.values.name}\r\n                    />\r\n                    {formik.touched.name && formik.errors.name ? (\r\n                      <div class=\"text-danger\">{formik.errors.name}</div>\r\n                    ) : null}\r\n                  </Form.Group>\r\n                  {/* </Row> */}\r\n                  {/* <Row className=\"mb-3\" md={6}> */}\r\n\r\n                  <Form.Group controlId=\"formGriddob\" className=\"form-group required\">\r\n                    <Form.Label>Username</Form.Label>\r\n                    <Form.Control\r\n                      name=\"username\"\r\n                      type=\"text\"\r\n                      onChange={formik.handleChange}\r\n                      value={formik.values.username}\r\n                    />\r\n                    {formik.touched.username && formik.errors.username ? (\r\n                      <div class=\"text-danger\">{formik.errors.username}</div>\r\n                    ) : null}\r\n\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"formGriddob\" className=\"form-group required\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                      name=\"password\"\r\n                      type=\"password\"\r\n                      onChange={formik.handleChange}\r\n                      value={formik.values.password}\r\n                    />\r\n                    {formik.touched.password && formik.errors.password ? (\r\n                      <div class=\"text-danger\">{formik.errors.password}</div>\r\n                    ) : null}\r\n\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"formGriddob\" className=\"form-group required\">\r\n                    <Form.Label>Role</Form.Label>\r\n                    <select\r\n                        className=\"form-control\"\r\n                        name=\"role\"\r\n                        onChange={formik.handleChange}\r\n                        value={formik.values.role}\r\n                    >\r\n                        <option key=\"\" value=\"\">Select Role</option>\r\n                        <option key=\"checker\" value=\"checker\">Checker</option>\r\n                        <option key=\"maker\" value=\"maker\">Maker</option>\r\n                    </select>\r\n                    {formik.touched.role && formik.errors.role ? (\r\n                      <div class=\"text-danger\">{formik.errors.role}</div>\r\n                    ) : null}\r\n\r\n                </Form.Group>\r\n\r\n                  <Form.Group controlId=\"formGriddob\" className=\"form-group required\">\r\n                    <Form.Label>Phone</Form.Label>\r\n                    <Form.Control\r\n                      name=\"phone\"\r\n                      type=\"text\"\r\n                      onChange={formik.handleChange}\r\n                      value={formik.values.phone}\r\n                    />\r\n                    {formik.touched.phone && formik.errors.phone ? (\r\n                      <div class=\"text-danger\">{formik.errors.phone}</div>\r\n                    ) : null}\r\n                  </Form.Group>\r\n\r\n                  {/* </Row> */}\r\n                  <Button variant=\"primary\" type=\"submit\">\r\n                    Save\r\n                  </Button>\r\n\r\n                </Form>\r\n                {/* </Container> */}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AddUser;","import React from 'react'\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport Home from './components/home/Home'\r\nimport Registration from './components/users/Registration'\r\nimport Login from './components/users/Login'\r\n// import FillItr from './components/finance-Itr/FillItr'\r\nimport InnerLayout from './components/layout/InnerLayout'\r\n//import CategoryList from './components/food-order/CategoryList'\r\n// import MyCart from './components/food-order/MyCart'\r\n// import PlaceOrder from './components/food-order/PlaceOrder'\r\n// import OrderSuccess from './components/food-order/OrderSuccess'\r\n//import AdminHome from './components/Admin/Home';\r\n//import CategoryManagement from './components/Admin/CategoryManagement';\r\n//import AddCategory from './components/Admin/AddCategory';\r\n//import OrderHistory from './components/Admin/orders/OrderHistory';\r\nimport UserOrderHistory from './components/users/UserOrderHistory';\r\nimport UserAction from './components/users/user-actions/UserAction';\r\n//import ProductManagement from './components/Admin/products/ProductManagement';\r\n//import AddProduct from './components/Admin/products/AddProduct';\r\n//import EditProduct from './components/Admin/products/EditProduct';\r\n// import OrderFailed from './components/food-order/OrderFailed';\r\n//import FinanceRequests from './components/Admin/finance/FinanceRequests';\r\n//import Form16Requests from './components/Admin/finance/Form16Requests';\r\n//import InqueryForm from './components/home/InqueryForm';\r\nimport MemberGroup from  './components/masterRecord/memberGroup/MemberGroup';\r\nimport AddMemberGroup from  './components/masterRecord/memberGroup/AddMemberGroup';\r\nimport AddMember from  './components/masterRecord/member/AddMember';\r\nimport Member from  './components/masterRecord/member/Member';\r\nimport MemberViewDetails from  './components/masterRecord/member/MemberViewDetails';\r\nimport Scheme from  './components/groupLoan/Scheme';\r\nimport AddScheme from  './components/groupLoan/AddScheme';\r\nimport Dashboard from './components/dashboard/Dashboard';\r\nimport LoanApplication from  './components/groupLoan/LoanApplication';\r\nimport LoanApproval from  './components/groupLoan/LoanApproval';\r\nimport DisburseLoan from  './components/groupLoan/DisburseLoan';\r\nimport LoanApprovalDetails from  './components/groupLoan/LoanApprovalDetails';\r\nimport AllApplications from  './components/groupLoan/AllApplications';\r\nimport EmiCalculator from  './components/groupLoan/EmiCalculator';\r\nimport DueEmis from './components/emis/DueEmis';\r\nimport PaidDetailView from './components/dashboard/PaidDetailView';\r\nimport RecievedDetailView from './components/dashboard/RecievedDetailView';\r\nimport Profit from './components/profit/Profit';\r\nimport ProcessingFee from './components/processing-fee/ProcessingFee';\r\nimport AddProcessingFee from './components/processing-fee/AddProcessingFee';\r\nimport CloseAccount from './components/groupLoan/CloseAccount';\r\nimport OutstandingDetailView from './components/dashboard/OutstandingDetailView';\r\nimport Expense from './components/expenses/Expense';\r\nimport AddExpense from './components/expenses/AddExpense';\r\nimport EmiCardPrint from './components/print/EmiCardPrint';\r\nimport ListUser from './components/users/ListUser';\r\nimport AddUser from './components/users/AddUser';\r\nfunction Routes() {\r\n    const checkLogin=()=>{\r\n        console.log(\"check login\")\r\n    }\r\n    return (\r\n        <BrowserRouter>\r\n            <Switch>\r\n            <InnerLayout exact path=\"/\" component={Dashboard}/>\r\n            <InnerLayout exact path=\"/memberGroup\" component={MemberGroup} />\r\n            <InnerLayout exact path=\"/addMemberGroup\" component={AddMemberGroup} />\r\n            <InnerLayout exact path=\"/addMember\" component={AddMember} />\r\n            <InnerLayout exact path=\"/addMember\" component={AddMember} />\r\n            <InnerLayout exact path=\"/scheme\" component={Scheme} />\r\n            <InnerLayout exact path=\"/viewMemberDetail\" component={MemberViewDetails} />\r\n            <InnerLayout exact path=\"/addScheme\" component={AddScheme} />\r\n            <InnerLayout exact path=\"/loanApplication\" component={LoanApplication} />\r\n            <InnerLayout exact path=\"/loanApproval\" component={LoanApproval} />\r\n            <InnerLayout exact path=\"/disburseLoan\" component={DisburseLoan} />\r\n            <InnerLayout exact path=\"/loanApprovalDetails\" component={LoanApprovalDetails} />\r\n            <InnerLayout exact path=\"/allApplications\" component={AllApplications} />\r\n            <InnerLayout exact path=\"/emiCalculator\" component={EmiCalculator} />\r\n            <InnerLayout exact path=\"/dueEmis\" component={DueEmis} />\r\n            <InnerLayout exact path=\"/paidDetailView\" component={PaidDetailView} />\r\n            <InnerLayout exact path=\"/recieveDetailView\" component={RecievedDetailView} />\r\n            <InnerLayout exact path=\"/processingFee\" component={ProcessingFee} />\r\n            <InnerLayout exact path=\"/profit\" component={Profit} />\r\n            <InnerLayout exact path=\"/addProcessingFee\" component={AddProcessingFee} />\r\n            <InnerLayout exact path=\"/closeAccount\" component={CloseAccount} />\r\n            <InnerLayout exact path=\"/outstandingDetailView\" component={OutstandingDetailView} />\r\n            <InnerLayout exact path=\"/expense\" component={Expense} />\r\n            <InnerLayout exact path=\"/addExpense\" component={AddExpense} />\r\n            <InnerLayout exact path=\"/listUser\" component={ListUser} />\r\n            <InnerLayout exact path=\"/addUser\" component={AddUser} />\r\n                <Route path=\"/login\" component={Login} />\r\n                <InnerLayout path=\"/registration\" component={Registration} />\r\n                <InnerLayout path=\"/member\" component={Member} />\r\n\r\n            </Switch>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default Routes\r\n","import './App.css';\r\nimport { Provider } from 'react-redux';\r\nimport { store, persistor} from './store';\r\nimport Routes from './Routes';\r\nimport { PersistGate } from 'redux-persist/integration/react'\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <div className=\"App\">\r\n          <Routes/>\r\n        </div>\r\n      </PersistGate>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","import superagentPromise from 'superagent-promise';\r\nimport _superagent from 'superagent';\r\n\r\nconst superagent = superagentPromise(_superagent, global.Promise);\r\n\r\nconst API_ROOT = '/api';\r\n\r\nconst encode = encodeURIComponent;\r\nconst responseBody = res => res;\r\nconst errorBody = err =>{\r\n  return err.response\r\n} ;\r\nlet token = null;\r\nconst tokenPlugin = req => {\r\n  if (token) {\r\n    req.set('Token', token);\r\n  }\r\n}\r\n\r\nconst requests = {\r\n  // del: url =>\r\n  //   superagent.del(`${API_ROOT}${url}`).use(tokenPlugin).then(responseBody),\r\n  get: url =>\r\n    superagent.get(`${API_ROOT}${url}`).use(tokenPlugin).then(responseBody,errorBody),\r\n  // put: (url, body) =>\r\n  //   superagent.put(`${API_ROOT}${url}`, body).use(tokenPlugin).then(responseBody),\r\n  post: (url, body) =>\r\n    superagent.post(`${API_ROOT}${url}`, body).use(tokenPlugin).then(responseBody,errorBody)\r\n};\r\n\r\nconst Auth = {\r\n  login: (email, password) =>\r\n    requests.post('/user/login',  { email, password } ),\r\n  register: (userDetails) =>\r\n    requests.post('/user/registration',  userDetails ),\r\n};\r\n\r\nconst Order = {\r\n  getProductsByCat:(catname)=>\r\n  requests.get(`/products?category=${catname}`),\r\n  getCatgoryInitialData:()=>{\r\n    return [superagent.get(`${API_ROOT}/category`),superagent.get(`${API_ROOT}/products`)]\r\n  },\r\n  placeOrder:(data)=>{\r\n    //requests.post(\"/orders/place-order\",data)\r\n    return superagent.post(`${API_ROOT}/orders/place-order`, data).use(tokenPlugin)\r\n  },\r\n  getCategoryAdmin(){\r\n    return superagent.get(`${API_ROOT}/category`).use(tokenPlugin)\r\n  },\r\n  getOrdersHistoryAdmin(page){\r\n    return superagent.get(`${API_ROOT}/orders/admin-order-list?page=${page}`).use(tokenPlugin)\r\n  },\r\n  getOrderHistoryByUserEmail(){\r\n    return superagent.get(`${API_ROOT}/orders/get-order`).use(tokenPlugin)\r\n  },\r\n  addCategory(data){\r\n    return superagent.post(`${API_ROOT}/category`,data).use(tokenPlugin)\r\n  },\r\n  deleteCategory(data){\r\n    return superagent.del(`${API_ROOT}/category?name=${data}`,data).use(tokenPlugin)\r\n  },\r\n  editCategory(data){\r\n    return superagent.put(`${API_ROOT}/category`,data).use(tokenPlugin)\r\n  },\r\n  getProducts(){\r\n    return superagent.get(`${API_ROOT}/products`).use(tokenPlugin)\r\n  },\r\n  deleteProduct(data){\r\n    return superagent.del(`${API_ROOT}/products?title=${data}`,data).use(tokenPlugin)\r\n  },\r\n  addProducts(data){\r\n    return superagent.post(`${API_ROOT}/products`,data).use(tokenPlugin)\r\n  },\r\n  editProducts(data){\r\n    return superagent.put(`${API_ROOT}/products`,data).use(tokenPlugin)\r\n  }\r\n};\r\nconst Payment = {\r\n  getRazorpayOrderId(data){\r\n    return superagent.post(`${API_ROOT}/payment/food-create-order-no`,data).use(tokenPlugin)\r\n  },\r\n  updatePaymentStatus(data){\r\n    return superagent.post(`${API_ROOT}/payment/updatePaymentStatus`,data).use(tokenPlugin)\r\n  }\r\n};\r\nconst Finance = {\r\n  fillItr(data){\r\n    return superagent.post(`${API_ROOT}/finance/fill-itr`,data).use(tokenPlugin)\r\n  },\r\n  getAdminItr(){\r\n    return superagent.get(`${API_ROOT}/finance/fill-itr`).use(tokenPlugin)\r\n  },\r\n  uploadForm16(data){\r\n    return superagent.post(`${API_ROOT}/finance/form16Upload`,data).use(tokenPlugin)\r\n  },\r\n  getAdminForm16(){\r\n    return superagent.get(`${API_ROOT}/finance/form16Upload`).use(tokenPlugin)\r\n  },\r\n  downloadForm16(data){\r\n    return superagent.get(`${API_ROOT}/download?fileName=${data.fileName}`).use(tokenPlugin)\r\n  }\r\n \r\n}\r\nconst Inquery = {\r\n  submitInquery(data){\r\n    return superagent.post(`${API_ROOT}/user/submitInquery`,data).use(tokenPlugin)\r\n  }\r\n}\r\nexport default {\r\n  Auth,\r\n  Order,\r\n  Payment,\r\n  Finance,\r\n  Inquery,\r\n  getToken:()=>{return token},\r\n  setToken: _token => { token = _token; }\r\n};"],"sourceRoot":""}