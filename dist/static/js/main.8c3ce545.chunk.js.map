{"version":3,"sources":["models/BaseUrl.js","constants/actionTypes.js","reducers/order.js","reducers/product.js","reducer.js","reducers/auth.js","reducers/common.js","middleware.js","store.js","components/home/InqueryForm.js","components/layout/SectionMenu.js","components/layout/SectionOffers.js","components/layout/LogedInView.js","components/layout/LogedOutView.js","components/layout/Header.js","components/home/Home.js","components/layout/ListErrors.js","components/users/Registration.js","models/interceptor-middleware.js","models/user.js","components/layout/Loader.js","components/users/Login.js","components/layout/InnerHeader.js","components/layout/Leftbar.js","components/layout/TopNav.js","components/layout/InnerLayout.js","components/users/UserOrderHistory.js","components/users/user-actions/UserAction.js","models/masterRecord.js","components/masterRecord/memberGroup/MemberGroup.js","components/masterRecord/memberGroup/AddMemberGroup.js","models/memberDetails.js","components/masterRecord/member/AddMember.js","components/masterRecord/member/Member.js","components/masterRecord/member/MemberViewDetails.js","models/groupLoan.js","components/groupLoan/Scheme.js","components/groupLoan/AddScheme.js","components/dashboard/Dashboard.js","components/groupLoan/LoanApplication.js","components/groupLoan/LoanApproval.js","components/groupLoan/DisburseLoan.js","components/groupLoan/EmiCard.js","components/groupLoan/EmiCardPrint.js","components/groupLoan/BorrowerPrint.js","components/groupLoan/LoanApprovalDetails.js","components/groupLoan/AllApplications.js","components/groupLoan/EmiCalculator.js","components/emis/DueEmis.js","Routes.js","App.js","reportWebVitals.js","index.js","agent.js"],"names":["superagent","superagentPromise","_superagent","global","Promise","API_ROOT","window","location","hostname","encodeURIComponent","REDIRECT","LOGIN","LOGOUT","REGISTER","LOGIN_PAGE_UNLOADED","REGISTER_PAGE_UNLOADED","ASYNC_START","ASYNC_END","UPDATE_FIELD_AUTH","ADD_ITEM_INITIAL","INCREASE_QUANTITY","DECREASE_QUANTITY","RESET_ORDER","STORE_EDIT_PRODUCT","GET_EDIT_PRODUCT","UPDATE_PRODUCT_FIELD","CHANGE_PAGE","defaultState","addedItem","product","appReducer","combineReducers","auth","state","action","type","inProgress","errors","payload","message","role","record","id","statusCode","jwtToken","isLoginSuccess","subtype","key","value","common","page","redirectTo","order","productId","item","_id","quantity","perItemPrice","price","map","data","prod","rootReducer","undefined","promiseMiddleware","store","next","v","then","dispatch","currentView","getState","viewChangeCounter","skipTracking","res","currentState","promise","error","response","body","localStorageMiddleware","localStorage","setItem","agent","setToken","persistConfig","storage","whitelist","pReducer","persistReducer","reducer","createStore","composeWithDevTools","applyMiddleware","persistor","persistStore","InqueryForm","props","useState","fullName","email","business","dob","Date","gender","service","Phone","setState","dobstate","setdobstate","setmessage","loading","setloading","handleChange","e","target","name","console","log","Modal","show","isopen","onHide","hide","Header","closeButton","Title","Body","Alert","variant","onClose","dismissible","Form","onSubmit","ev","preventDefault","serviceType","Inquery","submitInquery","reset","Row","Group","as","Col","controlId","Label","Control","onChange","placeholder","selected","date","dateFormat","showYearDropdown","dateFormatCalendar","yearDropdownItemNumber","scrollableYearDropdown","maxDate","defaultValue","readOnly","Button","disabled","Component","LogedInView","currentUser","className","aactiveClassName","to","LogedOutView","useDispatch","history","useHistory","split","isAdmin","isPrimeMember","onClick","push","handleITRPopup","this","connect","Home","ListErrors","Registration","userDetails","submitForm","isLoading","Auth","register","required","Text","React","axios","interceptors","request","use","successfulReq","reject","successRes","formatedResponse","login","username","password","post","Loader","Spinner","animation","relative","Login","isShowLoader","user","catch","err","changeEmail","onChangeEmail","changePassword","onChangePassword","document","classList","add","onlogout","remove","onUnload","src","autoFocus","href","InnerHeader","Leftbar","useSelector","useLocation","process","pathname","Nav","Link","eventKey","TopNav","navClick","setNevClick","InnerLayout","component","rest","showSidebar","setshowSidebar","useEffect","innerWidth","checkLogin","toggleSidebar","jwt","getItem","hasOwnProperty","render","UserOrderHistory","UserAction","getMemberGroups","get","saveMemberGroups","saveImage","file","MemberGroup","setisShowLoader","memberGroupRecords","setMemberGroupsRecords","getMemberGroup","masterRecord","class","active","Table","group","group_code","group_name","remark","moment","created_at","format","style","top","position","ProgressBar","striped","now","label","AddMemberGroup","values","setValues","isShow","showToast","setShowToast","handleAlertShow","obj","setTimeout","formik","useFormik","initialValues","user_id","validate","resetForm","prevValues","delay","handleSubmit","touched","rows","MemberDetailModel","getMemberDetailsData","member_id","saveMemberDetails","deleteMember","del","editMember","put","AddMember","enrollmentDate","setEnrollmentDate","setDob","groups","setGroups","image","setImage","baseURL","replace","getMemberDetails","memberDetails","aadhar_number","member_name","age","marital_status","mobile_number","email_id","member_group_id","pan_card_number","driving_license_number","voter_id_number","ration_card_number","bank_account","bank_ifsc_code","bank_account_holder","enrollment_date","date_of_birth","getImage","files","length","fileExtArr","fileExt","formData","FormData","append","status","path","toString","scrollTo","md","alt","Members","showDeleteModel","setShowDeleteModel","deleteID","setDeleteID","memberRecords","setMemberRecords","useMemo","index","col1","col2","col3","col4","col5","columns","accessor","allowFilter","memberRecord","initialData","UpdatedList","filter","member","idx","DefaultColumnFilter","column","filterValue","preFilteredRows","setFilter","count","defaultColumn","Filter","paginate","totalPage","pageNumberArray","i","Pagination","First","gotoPage","Prev","previousPage","canPreviousPage","num","Item","pageIndex","Next","nextPage","canNextPage","Last","useTable","initialState","useFilters","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","pageOptions","pageCount","pageSize","setPageSize","Footer","headerGroup","getHeaderGroupProps","headers","getHeaderProps","getSortByToggleProps","isSorted","isSortedDesc","row","getRowProps","cells","cell","getCellProps","size","EmiModel","calculateEMI","getDueEmis","today","paidEmi","getPaidEmis","loanAccountNo","getScheme","saveScheme","deleteScheme","getLoanAppInitialData","applyForloan","getApprovalList","getDisburseList","getLoanDetailbyId","approveRejectLoan","getAllLoanApplications","disburseRejectLoan","Scheme","schemes","setSchemes","getSchemes","groupLoan","scheme","bordered","hover","responsive","scheme_code","scheme_name","max_amount","interest_rate","EMI_type","deleteHandle","AddScheme","Toast","autohide","min","Dashboard","ContextAwareToggle","children","callback","decoratedOnClick","useContext","AccordionContext","activeEventKey","useAccordionButton","LoanApplication","schemeRecords","setSchemeRecords","selectedScheme","setSelectedScheme","getSchemesAndMembers","all","scheme_id","application_date","address","loan_amount","EMI_payout","tenure","co_borrower_name","co_borrower_aadhar_card","co_borrower_pan_card","co_borrower_ele_bill","co_borrower_relationship","Accordion","defaultActiveKey","Card","Collapse","selectMember","val","handleMemberSelection","schems","LoanApproval","loanlist","setLoanlist","getLoanList","loan","loan_id","colSpan","DisburseLoan","EmiCard","border","header","text","handlePrintEMI","xmlns","width","height","fill","viewBox","d","showDisburseButton","emiData","paidEmiRecord","EMI","principal","int_amount","outstanding","memo","EmiCardPrint","heading","PureComponent","BorrowerPrint","loanDetails","margin","textAlign","marginBottom","paddingBottom","borderBlockColor","marginTop","bottom","LoanApprovalDetails","memberDetailsRef","useRef","applicationRef","useReactToPrint","content","current","documentTitle","handlePrintApplication","emiRef","handlePrintEMICallbak","useCallback","coBorrowerRef","handleCoBorrowerPrint","borrowerRef","handlePrintBorrower","setPaidEmiRecord","isShowEMILoader","setisShowEMILoader","setEmiData","setLoanDetails","showApprovalButton","setShowApprovalButton","setShowDisburseButton","setShow","disburseDate","setDisburseDate","handleClose","getLoanDetails","calculateEmi","disburse_date","Tenure","EmiData","paidData","result","loan_account_no","emiDate","EMI_date","is_approved","is_disbursed","actionOnLoan","actionType","actionDisburseLoan","emiCol","emiRecords","applicationRecords","coBorrowRecords","xs","ref","display","AllApplications","col6","col7","actionStatus","col8","formatedData","Badge","EmiCalculator","calculatedData","setCalculatedData","componentRef","handlePrint","loanStartDate","Container","DueEmis","dueEmis","setDueEmis","paidID","setPaidID","getDueEmisRecord","emi","substring","paidEMI","emidata","emi_id","InputGroup","FormLabel","selectedDate","loan_table_id","remain_EMI","EMI_amount","paidHandle","Routes","exact","MemberViewDetails","Member","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById","responseBody","errorBody","token","tokenPlugin","req","set","requests","url","Order","getProductsByCat","catname","getCatgoryInitialData","placeOrder","getCategoryAdmin","getOrdersHistoryAdmin","getOrderHistoryByUserEmail","addCategory","deleteCategory","editCategory","getProducts","deleteProduct","addProducts","editProducts","Payment","getRazorpayOrderId","updatePaymentStatus","Finance","fillItr","getAdminItr","uploadForm16","getAdminForm16","downloadForm16","fileName","getToken","_token"],"mappings":"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","file":"static/js/main.8c3ce545.chunk.js","sourcesContent":["import superagentPromise from 'superagent-promise';\r\nimport _superagent from 'superagent';\r\n\r\nexport const superagent = superagentPromise(_superagent, global.Promise);\r\nexport const API_ROOT = window.location.hostname==\"localhost\"?\"https://micro-service-dev.herokuapp.com/api\": '/api';\r\n\r\n\r\nconst encode = encodeURIComponent;\r\nconst responseBody = res => res;\r\nconst errorBody = err =>{\r\n  return err.response\r\n} ;\r\nlet token = null;\r\nconst tokenPlugin = req => {\r\n  if (token) {\r\n    req.set('Token', token);\r\n  }\r\n}\r\nexport const requests = {\r\n    del: url =>\r\n      superagent.del(`${API_ROOT}${url}`).then(responseBody,errorBody),\r\n    get: url =>\r\n      superagent.get(`${API_ROOT}${url}`).then(responseBody,errorBody),\r\n    // put: (url, body) =>\r\n    //   superagent.put(`${API_ROOT}${url}`, body).use(tokenPlugin).then(responseBody),\r\n    post: (url, body) =>\r\n      superagent.post(`${API_ROOT}${url}`, body).then(responseBody,errorBody)\r\n  };","\r\n  \r\nexport const APP_LOAD = 'APP_LOAD';\r\nexport const REDIRECT = 'REDIRECT';\r\nexport const ARTICLE_SUBMITTED = 'ARTICLE_SUBMITTED';\r\nexport const SETTINGS_SAVED = 'SETTINGS_SAVED';\r\nexport const DELETE_ARTICLE = 'DELETE_ARTICLE';\r\nexport const SETTINGS_PAGE_UNLOADED = 'SETTINGS_PAGE_UNLOADED';\r\nexport const HOME_PAGE_LOADED = 'HOME_PAGE_LOADED';\r\nexport const HOME_PAGE_UNLOADED = 'HOME_PAGE_UNLOADED';\r\nexport const ARTICLE_PAGE_LOADED = 'ARTICLE_PAGE_LOADED';\r\nexport const ARTICLE_PAGE_UNLOADED = 'ARTICLE_PAGE_UNLOADED';\r\nexport const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const DELETE_COMMENT = 'DELETE_COMMENT';\r\nexport const ARTICLE_FAVORITED = 'ARTICLE_FAVORITED';\r\nexport const ARTICLE_UNFAVORITED = 'ARTICLE_UNFAVORITED';\r\nexport const SET_PAGE = 'SET_PAGE';\r\nexport const APPLY_TAG_FILTER = 'APPLY_TAG_FILTER';\r\nexport const CHANGE_TAB = 'CHANGE_TAB';\r\nexport const PROFILE_PAGE_LOADED = 'PROFILE_PAGE_LOADED';\r\nexport const PROFILE_PAGE_UNLOADED = 'PROFILE_PAGE_UNLOADED';\r\nexport const LOGIN = 'LOGIN';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const REGISTER = 'REGISTER';\r\nexport const LOGIN_PAGE_UNLOADED = 'LOGIN_PAGE_UNLOADED';\r\nexport const REGISTER_PAGE_UNLOADED = 'REGISTER_PAGE_UNLOADED';\r\nexport const ASYNC_START = 'ASYNC_START';\r\nexport const ASYNC_END = 'ASYNC_END';\r\nexport const EDITOR_PAGE_LOADED = 'EDITOR_PAGE_LOADED';\r\nexport const EDITOR_PAGE_UNLOADED = 'EDITOR_PAGE_UNLOADED';\r\nexport const ADD_TAG = 'ADD_TAG';\r\nexport const REMOVE_TAG = 'REMOVE_TAG';\r\nexport const UPDATE_FIELD_AUTH = 'UPDATE_FIELD_AUTH';\r\nexport const UPDATE_FIELD_EDITOR = 'UPDATE_FIELD_EDITOR';\r\nexport const FOLLOW_USER = 'FOLLOW_USER';\r\nexport const UNFOLLOW_USER = 'UNFOLLOW_USER';\r\nexport const PROFILE_FAVORITES_PAGE_UNLOADED = 'PROFILE_FAVORITES_PAGE_UNLOADED';\r\nexport const PROFILE_FAVORITES_PAGE_LOADED = 'PROFILE_FAVORITES_PAGE_LOADED';\r\nexport const ADD_ITEM_INITIAL = 'ADD_ITEM_INITIAL';\r\nexport const INCREASE_QUANTITY = 'INCREASE_QUANTITY';\r\nexport const DECREASE_QUANTITY = 'DECREASE_QUANTITY';\r\nexport const RESET_ORDER = 'RESET_ORDER';\r\nexport const STORE_EDIT_PRODUCT = 'STORE_EDIT_PRODUCT';\r\nexport const GET_EDIT_PRODUCT = 'GET_EDIT_PRODUCT';\r\nexport const UPDATE_PRODUCT_FIELD = 'UPDATE_PRODUCT_FIELD';\r\nexport const CHANGE_PAGE = 'CHANGE_PAGE'","import {\r\n    ADD_ITEM_INITIAL,\r\n    INCREASE_QUANTITY,\r\n    DECREASE_QUANTITY,\r\n    RESET_ORDER\r\n  } from '../constants/actionTypes';\r\n  const defaultState = {\r\n    addedItem: [],\r\n  };\r\n  \r\n  export default (state = defaultState, action) => {\r\n      switch (action.type) {\r\n        case ADD_ITEM_INITIAL:\r\n            const addedItem =[...state.addedItem,{\r\n                productId:action.item._id,\r\n                quantity:1,\r\n                perItemPrice:action.item.price,\r\n                item:action.item\r\n            }]\r\n            return {...state, addedItem};\r\n        case INCREASE_QUANTITY:\r\n             state.addedItem.map(record=>{\r\n                if(record.productId == action.productId){\r\n                    record.quantity +=1\r\n                }\r\n                return record;\r\n            });\r\n            return {...state,state}\r\n        case DECREASE_QUANTITY:\r\n            state.addedItem.map(record=>{\r\n                if(record.productId == action.productId && record.quantity !=0){\r\n                        record.quantity -=1\r\n                }\r\n                return record;\r\n            });\r\n            return {...state,state}\r\n        case RESET_ORDER:\r\n            state.addedItem = []\r\n            return {...state}\r\n        default:\r\n          return state;\r\n      }\r\n      return state;\r\n    };","import {\r\n    STORE_EDIT_PRODUCT,\r\n    GET_EDIT_PRODUCT,\r\n    UPDATE_PRODUCT_FIELD\r\n  } from '../constants/actionTypes';\r\n  const defaultState = {\r\n    product: {},\r\n  };\r\n  \r\n  export default (state = defaultState, action) => {\r\n      switch (action.type) {\r\n        case STORE_EDIT_PRODUCT:\r\n            return {...state,\r\n                product:action.data \r\n            };\r\n        case GET_EDIT_PRODUCT:\r\n            return {...state};\r\n        case UPDATE_PRODUCT_FIELD:\r\n            let prod = state.product;\r\n            prod[action.data.key]=action.data.value;\r\n           return {...state,product:prod}\r\n        default:\r\n          return state;\r\n      }\r\n      return state;\r\n    };","import auth from './reducers/auth';\r\nimport common from './reducers/common';\r\nimport order from './reducers/order';\r\nimport product from './reducers/product';\r\nimport { combineReducers } from 'redux';\r\n//import { routerReducer } from 'react-router-redux';\r\n\r\nconst appReducer = combineReducers({\r\n  auth,\r\n  common,\r\n  order,\r\n  product\r\n  /* your app’s top-level reducers */\r\n})\r\n\r\nconst rootReducer = (state, action) => {\r\n  if (action.type === 'LOGOUT') {\r\n    state = undefined\r\n  }\r\n\r\n  return appReducer(state, action)\r\n}\r\nexport default rootReducer\r\n// export default combineReducers({\r\n//   auth,\r\n//   common,\r\n//   order,\r\n//     //router: routerReducer\r\n//   });","import {\r\n    LOGIN,\r\n    REGISTER,\r\n    LOGIN_PAGE_UNLOADED,\r\n    REGISTER_PAGE_UNLOADED,\r\n    ASYNC_START,\r\n    UPDATE_FIELD_AUTH,\r\n    LOGOUT\r\n  } from '../constants/actionTypes';\r\n  \r\n  export default (state = {}, action) => {\r\n  //console.log(action);\r\n    switch (action.type) {\r\n      case LOGIN:\r\n        return {\r\n          ...state,\r\n          inProgress: false,\r\n          errors: action.payload.message,\r\n          role:action.payload.record[0]?.role,\r\n          id:action.payload.record[0]?.id,\r\n          statusCode:action.payload.jwtToken != \"\"?\"200\":\"\",\r\n          isLoginSuccess:action.payload.jwtToken != \"\"? true:false\r\n        }\r\n      case REGISTER:\r\n        return {\r\n          ...state,\r\n          inProgress: false,\r\n          errors: action.payload,\r\n          statusCode:action.payload.statusCode\r\n        };\r\n      case LOGIN_PAGE_UNLOADED:\r\n      return{\r\n        ...state,\r\n        //errors: action.payload,\r\n        //userDetails:\r\n      }\r\n      case REGISTER_PAGE_UNLOADED:\r\n        return {};\r\n      case ASYNC_START:\r\n        if (action.subtype === LOGIN || action.subtype === REGISTER) {\r\n          return { ...state, inProgress: true };\r\n        }\r\n        break;\r\n      case UPDATE_FIELD_AUTH:\r\n        return { ...state, [action.key]: action.value };\r\n      default:\r\n        return state;\r\n    }\r\n    return state;\r\n  };","import {\r\n    LOGOUT,\r\n    REDIRECT,\r\n    CHANGE_PAGE\r\n  } from '../constants/actionTypes';\r\n  const defaultState = {\r\n    appName: 'Conduit',\r\n    token: null,\r\n    viewChangeCounter: 0\r\n  };\r\n  \r\n  export default (state = {page:\"\"}, action) => {\r\n    //console.log(action);\r\n      switch (action.type) {\r\n        case REDIRECT:\r\n            return { ...state, redirectTo: null };\r\n        case CHANGE_PAGE:\r\n            return {  ...state, page: action.page };\r\n        default:\r\n          return state;\r\n      }\r\n      return state;\r\n    };","import agent from './agent';\r\nimport {\r\n  ASYNC_START,\r\n  ASYNC_END,\r\n  LOGIN,\r\n  LOGOUT,\r\n  REGISTER\r\n} from './constants/actionTypes';\r\n\r\nconst promiseMiddleware = store => next => action => {\r\n  if (isPromise(action.payload)) {\r\n    store.dispatch({ type: ASYNC_START, subtype: action.type });\r\n\r\n    const currentView = store.getState().viewChangeCounter;\r\n    const skipTracking = action.skipTracking;\r\n\r\n    action.payload.then(\r\n      res => {\r\n        const currentState = store.getState()\r\n        if (!skipTracking && currentState.viewChangeCounter !== currentView) {\r\n          return\r\n        }\r\n        action.payload = res;\r\n        store.dispatch({ type: ASYNC_END, promise: action.payload });\r\n        store.dispatch(action);\r\n      },\r\n      error => {\r\n        const currentState = store.getState()\r\n        if (!skipTracking && currentState.viewChangeCounter !== currentView) {\r\n          return\r\n        }\r\n        action.error = true;\r\n        action.payload = error.response.body;\r\n        if (!action.skipTracking) {\r\n          store.dispatch({ type: ASYNC_END, promise: action.payload });\r\n        }\r\n        store.dispatch(action);\r\n      }\r\n    );\r\n\r\n    return;\r\n  }\r\n\r\n  next(action);\r\n};\r\n\r\nconst localStorageMiddleware = store => next => action => {\r\n  if (action.type === LOGIN && action.payload != undefined) {\r\n    if (action.payload.jwtToken!=\"\") {\r\n      window.localStorage.setItem('jwt', action.payload.jwtToken);\r\n      agent.setToken(action.payload.jwtToken);\r\n    }\r\n  } else if (action.type === LOGOUT) {\r\n    window.localStorage.setItem('jwt','');\r\n    agent.setToken(null);\r\n  }\r\n\r\n   next(action);\r\n};\r\n\r\nfunction isPromise(v) {\r\n  return v && typeof v.then === 'function';\r\n}\r\n\r\n\r\nexport { promiseMiddleware, localStorageMiddleware }","import { applyMiddleware, createStore } from 'redux';\r\nimport reducer from './reducer';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport { promiseMiddleware, localStorageMiddleware } from './middleware';\r\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\r\nimport storage from 'redux-persist/lib/storage';\r\nconst persistConfig = {\r\n  key: 'authType',\r\n  storage: storage,\r\n  whitelist: ['auth'] // which reducer want to store\r\n};\r\nconst pReducer = persistReducer(persistConfig, reducer);\r\nconst getMiddleware = () => {\r\n      return applyMiddleware( promiseMiddleware, localStorageMiddleware);\r\n  };\r\nconst store = createStore(pReducer,composeWithDevTools(getMiddleware()));\r\nconst persistor = persistStore(store);\r\nexport { persistor, store };","import React, { useState } from 'react'\r\nimport { Button, Form, Col, Row, Container, Modal,Alert } from 'react-bootstrap';\r\nimport agent from '../../agent'\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nfunction InqueryForm(props) {\r\n    const [state, setState] = useState(\r\n        {fullName:\"\",\r\n            email:\"\",\r\n            business:\"\",\r\n            dob:new Date(),\r\n            gender:\"\",\r\n            service:\"\",\r\n            Phone:\"\"\r\n        });\r\n    const [dobstate, setdobstate] = useState(new Date());\r\n    const [message, setmessage] = useState({type:\"\",message:\"\"})\r\n    const [loading, setloading] = useState(false)\r\n\r\n    const handleChange = (e)=>{\r\n        state[e.target.name] = e.target.value;\r\n        setState(state);\r\n        console.log(state);\r\n    }\r\n    const handleSubmit = (ev)=>{\r\n        ev.preventDefault();\r\n\r\n        state[\"dob\"] = dobstate;\r\n        state[\"service\"] = props.serviceType;\r\n        setState(state);\r\n        console.log(state);\r\n        setloading(true);\r\n        agent.Inquery.submitInquery(state).then((res=>{\r\n            if(res.statusCode == 200){\r\n                ev.target.reset();\r\n                message.type = \"success\";\r\n                message.message = \"Your Details has been submited. Our agent will contact you soon.\"\r\n            }else{\r\n                message.type = \"error\";\r\n                message.message = \"Something went wrong. Please try again.\"\r\n            }\r\n            setmessage(message);\r\n            setloading(false);\r\n\r\n        }))\r\n    }\r\n    return (\r\n        <>\r\n\r\n        <Modal show={props.isopen} onHide={props.hide} >\r\n\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Enquiry</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                {  message.type != \"\"? \r\n                message.type ==\"success\"?\r\n                <Alert key={message.type} variant={\"success\"} onClose={() => setmessage({type:\"\",message:\"\"})} dismissible>\r\n                    {message.message}\r\n                </Alert>:<Alert key={message.type} variant={\"danger\"} onClose={() => setmessage({type:\"\",message:\"\"})} dismissible>\r\n                    {message.message}\r\n                </Alert>:\"\"        \r\n                }\r\n\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridPassword\">\r\n                            <Form.Label>Full Name</Form.Label>\r\n                            <Form.Control onChange={handleChange} type=\"text\" name=\"fullName\"/>\r\n                        </Form.Group>\r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"formGridEmail\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type=\"email\" onChange={handleChange} name=\"email\" placeholder=\"Enter email\" />\r\n                        </Form.Group>\r\n\r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridAddress1\">\r\n                        <Form.Label>Business</Form.Label>\r\n                        <Form.Control type=\"text\" onChange={handleChange}  name=\"business\"/>\r\n                    </Form.Group>\r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridAddress1\">\r\n                        <Form.Label>Date of Birth</Form.Label>\r\n                        <DatePicker\r\n                         selected={dobstate} \r\n                         onChange={date=>setdobstate(date)}\r\n                         dateFormat=\"dd/MM/yyyy\"\r\n                         showYearDropdown\r\n                         dateFormatCalendar=\"MMMM\"\r\n                         yearDropdownItemNumber={50}\r\n                         scrollableYearDropdown\r\n                         maxDate={new Date()}\r\n                         />\r\n                    </Form.Group>\r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridState\">\r\n                    <Form.Label>Gender</Form.Label>\r\n                    <Form.Control name=\"gender\" as=\"select\" onChange={handleChange} defaultValue=\"Choose...\">\r\n                        <option>Choose...</option>\r\n                        <option value=\"male\">Male</option>\r\n                        <option value=\"female\">Female</option>\r\n                    </Form.Control>\r\n                    </Form.Group>                        \r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridState\">\r\n                    <Form.Label>Service</Form.Label>\r\n                        <Form.Control onChange={handleChange} type=\"text\" name=\"service\" value={props.serviceType} readOnly/>\r\n                    </Form.Group>                        \r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridAddress1\">\r\n                        <Form.Label>Phone</Form.Label>\r\n                        <Form.Control type=\"text\" onChange={handleChange}  name=\"phone\"/>\r\n                    </Form.Group>\r\n                    </Form.Row>\r\n\r\n                    <Button variant=\"primary\" type=\"submit\" disabled={loading}>\r\n                    {loading ? 'Loading…' : \"Submit\"}\r\n\r\n                    </Button>\r\n                </Form>\r\n            </Modal.Body>\r\n        </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default InqueryForm\r\n","import React, { Component} from 'react'\r\n//import ItrPopup from '../finance-Itr/ItrPopup'\r\nimport InqueryForm from '../home/InqueryForm'\r\nimport {Link} from 'react-router-dom';\r\n\r\n  class SectionMenu extends Component {\r\n    isopen = false;\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        isopen:false,\r\n        openEnqueryForm:false,\r\n        serviceType:\"\"\r\n      }\r\n    }\r\n    handleITRPopup = () =>{\r\n      this.setState({\r\n        isopen:this.state.isopen?false:true\r\n      })\r\n    }\r\n    handleEnqueryForm = (serviceType = \"\")=>{\r\n      console.log(serviceType);\r\n      this.setState({\r\n        openEnqueryForm:this.state.openEnqueryForm?false:true,\r\n        serviceType:serviceType\r\n      })\r\n\r\n    }\r\n    render() {\r\n        return (\r\n          <>\r\n            <section className=\"text-center \">\r\n            <div className=\"container\">\r\n              <div className=\"col-md-12 shadow-sm p-5 service \">\r\n                <div className=\"row roww\">\r\n                  <div className=\"col-md-2 col-sm-3 col-xs-3 p-2 service-box\" onClick={this.handleITRPopup}>\r\n                    <img src={process.env.PUBLIC_URL + '/assets/img/itr.png'} alt=\"\"/>\r\n                    <h5 className=\"my-4\">Fill ITR</h5>\r\n                  </div>\r\n                 \r\n                  <div className=\"col-md-2 col-sm-3 col-xs-3 p-2 service-box \">\r\n                  <Link to=\"/CategoryList\">\r\n                    <img  src={process.env.PUBLIC_URL + '/assets/img/food.png'} alt=\"\"/>\r\n                    <h5 className=\"my-4\">FOOD</h5></Link>\r\n                  </div>\r\n                  <div className=\"col-md-2 col-sm-3 col-xs-3 p-2 service-box\" onClick={()=>this.handleEnqueryForm(\"Catering\")}>\r\n\r\n                    <img src={process.env.PUBLIC_URL + '/assets/img/catering.png'} alt=\"\"/>\r\n                    <h5 className=\"my-4\">Catering</h5>\r\n                  </div>\r\n                  <div className=\"col-md-2 col-sm-3 col-xs-3 p-2 service-box\" onClick={()=>this.handleEnqueryForm(\"Balance Sheet\")}>\r\n\r\n                    <img src={process.env.PUBLIC_URL + '/assets/img/finance.png'} alt=\"\"/>\r\n                    <h5 className=\"my-4\">Financial Consultancy</h5>\r\n                  </div>\r\n                  <div className=\"col-md-2 col-sm-3 col-xs-3 p-2 service-box\" onClick={()=>this.handleEnqueryForm(\"Investment Planning\")}>\r\n\r\n                    <img src={process.env.PUBLIC_URL + '/assets/img/investment.png'} alt=\"\"/>\r\n                    <h5 className=\"my-4\">Investment Planning</h5>\r\n                  </div>\r\n                  <div className=\"col-md-2 col-sm-3 col-xs-3 p-2 service-box\" onClick={()=>this.handleEnqueryForm(\"GST filing\")}>\r\n                    <img src={process.env.PUBLIC_URL + '/assets/img/gst.png'} alt=\"\"/>\r\n                    <h5 className=\"my-4\">GST Filing </h5>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n          {/* <ItrPopup isopen={this.state.isopen} hide={this.handleITRPopup}/> */}\r\n          <InqueryForm isopen={this.state.openEnqueryForm} serviceType={this.state.serviceType} hide={this.handleEnqueryForm}/>         \r\n        </>\r\n        )\r\n    }\r\n}\r\nexport default SectionMenu\r\n","import React, { Component } from 'react'\r\n\r\nexport default class SectionOffers extends Component {\r\n    render() {\r\n        return (\r\n            <section className=\"text-center\">\r\n                <div className=\"container\">\r\n                    <h4 className=\"h4-responsive font-weight-bold my-3 text-primary\">Best Offers</h4>\r\n                    <div className=\"row my-5\">\r\n                        <div className=\"col-md-3\">\r\n                            <img src={process.env.PUBLIC_URL + '/assets/img/s-1.jpeg'} className=\"img-fluid radius\" alt=\"\" />\r\n                            <h5 className=\"font-weight-bold my-4 text-primary\">Offer 1</h5>\r\n                            <p className=\"grey-text mb-md-0 mb-5 text-primary\">Up to 50% Off\r\n                            </p>\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                            <img src={process.env.PUBLIC_URL + '/assets/img/s-2.jpg'} className=\"img-fluid radius\" alt=\"\" />\r\n                            <h5 className=\"font-weight-bold my-4 text-primary\">offer 2</h5>\r\n                            <p className=\"grey-text mb-md-0 mb-5 text-primary\">Up to 60% off\r\n                  </p>\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                            <img src={process.env.PUBLIC_URL + '/assets/img/s-4.jpeg'} className=\"img-fluid radius\" alt=\"\" />\r\n                            <h5 className=\"font-weight-bold my-4 text-primary\">offer 3</h5>\r\n                            <p className=\"grey-text mb-0 text-primary\">Up to 50% off\r\n                  </p>\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                            <img src={process.env.PUBLIC_URL + '/assets/img/s-3.jpeg'} className=\"img-fluid radius\" alt=\"\" />\r\n                            <h5 className=\"font-weight-bold my-4 text-primary\">Offer 4</h5>\r\n                            <p className=\"grey-text mb-0 text-primary\">Standard EMI Options Available\r\n                  </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { Route,NavLink } from 'react-router-dom'\r\n\r\nfunction LogedInView(props) {\r\n    if(!props.currentUser.errors || props.currentUser.errors.statusCode ==500){\r\n        return (\r\n\r\n        <li className=\"nav-item\">\r\n        <NavLink aactiveClassName=\"active\" className=\"nav-link\" to=\"/login\">Login</NavLink>\r\n        </li>\r\n        )\r\n    }\r\n    return null;\r\n\r\n}\r\n\r\nexport default LogedInView\r\n","import React from 'react'\r\nimport { Route, NavLink } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux'\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nimport {\r\n    LOGOUT\r\n  } from '../../constants/actionTypes';\r\nfunction LogedOutView(props) {\r\n    const dispatch = useDispatch();\r\n    let history = useHistory();\r\n\r\n    const logout = ()=>{\r\n         dispatch({ type: LOGOUT })\r\n           console.log(\"hollo\");\r\n           history.push(\"/\");\r\n       }\r\n         if (props.currentUser.errors && props.currentUser.errors.statusCode == 200) {\r\n        let name = props.currentUser.email.split(\"@\");\r\n\r\n        return (<>\r\n            \r\n            {props.currentUser.errors.body.record.isAdmin?<li className=\"nav-item\">\r\n            <li className=\"nav-item\">\r\n            <NavLink aactiveClassName=\"active\" to=\"/adminHome\" className=\"nav-link\">Admin</NavLink>\r\n            </li>\r\n                \r\n            </li>:\"\"}            \r\n            <li className=\"nav-item\">\r\n                <NavLink aactiveClassName=\"active\" to=\"/userAction\" className=\"nav-link\">\r\n                    {name[0]}\r\n\r\n                    {props.currentUser.errors.body.record.isPrimeMember?<label className=\"clr-cyan\">(Prime member)</label>:\"\"}  \r\n\r\n                    \r\n                    </NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <a className=\"nav-link\" onClick={logout} >Logout</a>\r\n                {/* <NavLink className=\"nav-link\">{props.email}</NavLink> */}\r\n            </li>\r\n        </>\r\n        )\r\n    }\r\n    return null;\r\n}\r\n\r\nexport default LogedOutView\r\n","import React, { Component } from 'react'\r\nimport { Route,NavLink, Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport LoggedInView from './LogedInView';\r\nimport LoggedOutView from './LogedOutView';\r\n// import ItrPopup from '../finance-Itr/ItrPopup'\r\n\r\nclass Header extends Component {\r\n    isopen = false;\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        isopen:false\r\n      }\r\n    }\r\n    handleITRPopup = () =>{\r\n        this.setState({\r\n          isopen:this.state.isopen?false:true\r\n        })\r\n      }\r\n  \r\n    render(){\r\n\r\n    return (\r\n        <header>\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark fixed-top scrolling-navbar\">\r\n                <div className=\"container\">\r\n                    <NavLink className=\"navbar-brand\" to=\"/\"> <h2>AA2 Mutualhelp</h2></NavLink>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent-7\"\r\n                        aria-controls=\"navbarSupportedContent-7\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent-7\">\r\n                        <ul className=\"navbar-nav ml-auto\">\r\n                            <li className=\"nav-item\">\r\n                            {/* <NavLink aactiveClassName=\"active\" className=\"nav-link\" to=\"/\">Home</NavLink> */}\r\n\r\n                            </li>\r\n                            {/* <li className=\"nav-item\" onClick={this.handleITRPopup}>\r\n                                <a className=\"nav-link\" onClick={this.handleITRPopup}>File ITR</a>\r\n                            </li> */}\r\n                            {/* <li className=\"nav-item\">\r\n                                <NavLink activeClassName=\"active\" to=\"/CategoryList\" className=\"nav-link\">Order Food</NavLink>\r\n                                \r\n                            </li> */}\r\n                            <LoggedOutView currentUser={this.props}/>\r\n                            <LoggedInView currentUser={this.props}/>\r\n\r\n                        </ul>\r\n\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n            <div className=\"view\">\r\n                <div className=\"mask rgba-gradient d-flex justify-content-center align-items-center\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12 white-text text-center mx-auto  mb-5 wow fadeInLeft\" data-wow-delay=\"0.3s\">\r\n                                <h1 className=\"my-3 text-center mx-auto font-weight-bold wow fadeInLeft\">Services, on demand.</h1>\r\n\r\n                                <div className=\"ml-auto mr-auto main-search \">\r\n\r\n                                    <form action=\"\" className=\"search-service\">\r\n                                        <input className=\"search-form form-control form-control-lg\" type=\"text\" placeholder=\"Search Services\" />\r\n                                    </form>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* <ItrPopup isopen={this.state.isopen} hide={this.handleITRPopup}/> */}\r\n        </header>\r\n    )}\r\n}\r\n\r\nconst mapStateToProps = state => ({ ...state.auth});\r\nconst mapDispatchToProps = dispatch => ({\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header)\r\n","import React from 'react'\r\nimport SectionMenu from '../layout/SectionMenu'\r\nimport SectionOffers from '../layout/SectionOffers'\r\nimport Header from '../layout/Header'\r\nimport Footer from '../layout/Footer'\r\nfunction Home() {\r\n    return (\r\n        <>\r\n            <Header />\r\n            <SectionMenu />\r\n            {/* <SectionOffers /> */}\r\n            <Footer />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React, { Component } from 'react'\r\nimport { Button, Form, Col, Alert } from 'react-bootstrap';\r\n\r\nexport default class ListErrors extends Component {\r\n    render() {\r\n        const errors = this.props.errors;\r\n        const statusCode = this.props.statusCode;\r\n        if (errors) {\r\n            return (\r\n                <Alert  variant={statusCode==200?\"success\":\"danger\"}>\r\n                    {errors}\r\n              </Alert>\r\n            );\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { Button, Form, Col, Alert } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom'\r\nimport agent from '../../agent'\r\nimport ListErrors from '../layout/ListErrors';\r\n\r\n\r\nclass Registration extends React.Component {    \r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            userDetails: {},\r\n            errors:\"\",\r\n            statusCode:\"\",\r\n            isLoading:false\r\n        }\r\n    }\r\n    handleChange = (e) => {\r\n        const state = this.state.userDetails\r\n        state[e.target.name] = e.target.value;\r\n        this.setState({ userDetails: state });\r\n        \r\n    }\r\n    submitForm=() => ev =>{\r\n        ev.preventDefault();\r\n        this.setState({ isLoading: true });\r\n        agent.Auth.register(this.state.userDetails).then((res=>{\r\n            this.setState({ errors: res, statusCode:res.statusCode, isLoading:false});\r\n            if(res.statusCode == 200){\r\n                ev.target.reset();\r\n                //this.props.history.push('/login')\r\n            }\r\n        }));\r\n    }\r\n    render() {\r\n\r\n    return (\r\n        <div className=\"login-div\">\r\n            <ListErrors errors={this.state.errors} statusCode={this.state.statusCode} />\r\n            <Form className=\"login-form\" onSubmit={this.submitForm()}>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formBasicEmail\" >\r\n                        <Form.Label>Email address</Form.Label>\r\n                        <Form.Control type=\"email\" name=\"email\" placeholder=\"Enter email\"  onChange={this.handleChange} required/>\r\n                        <Form.Text className=\"text-muted\">\r\n                            We'll never share your email with anyone else.\r\n                    </Form.Text>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formBasicEmail\">\r\n                        <Form.Label>Phone</Form.Label>\r\n                        <Form.Control type=\"phone\" name=\"phone\"  onChange={this.handleChange} required/>\r\n                        <Form.Text className=\"text-muted\">\r\n                            We'll never share your phone no with anyone else.\r\n                    </Form.Text>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n\r\n                <Form.Row>\r\n                    <Form.Group as={Col}  controlId=\"formBasicPassword\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control type=\"password\" name=\"password\" placeholder=\"Password\"  onChange={this.handleChange} required/>\r\n                    </Form.Group>\r\n\r\n                </Form.Row>\r\n                <Form.Row>\r\n                    <Button variant=\"primary\" type=\"submit\" disabled={this.state.isLoading}>\r\n                        \r\n                        {this.state.isLoading ? 'Loading…' : \"Register\"}\r\n                    </Button>\r\n                </Form.Row>\r\n\r\n            </Form>\r\n        </div>\r\n\r\n    )}\r\n}\r\n\r\nexport default Registration\r\n","import axios from 'axios';\r\n\r\naxios.interceptors.request.use(\r\n    function(successfulReq) {\r\n        return successfulReq;\r\n    }, \r\n    function(error) {\r\n      return Promise.reject(error);\r\n    }\r\n  );\r\n\r\n  axios.interceptors.response.use( \r\n    function(successRes) {\r\n        let formatedResponse = successRes;\r\n        formatedResponse[\"statusCode\"] = successRes[\"status\"];\r\n        formatedResponse[\"body\"] = successRes[\"data\"];\r\n        delete formatedResponse[\"data\"];\r\n        return formatedResponse;\r\n    }, \r\n    function(error) {\r\n        return Promise.reject(error);\r\n    }\r\n  );\r\n\r\nexport default axios;","import {API_ROOT } from \"./BaseUrl\"\r\nimport axios from \"./interceptor-middleware\";\r\n\r\nconst Auth = {\r\n    login: (username, password) =>\r\n    axios.post(`${API_ROOT}/user/login`,  { username, password } ),\r\n  };\r\n  \r\n  export default {Auth};\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\nfunction Loader(props) {\r\n    if(props.show){\r\n        return (\r\n            <Spinner animation=\"border\" role=\"status\" className={props?.relative?\"loader-relative\":\"loader\"}>\r\n            </Spinner>\r\n        )\r\n    }else{\r\n        return null\r\n    }\r\n}\r\n\r\nexport default Loader\r\n","import React, { Component}  from 'react'\r\nimport { Button, Form, Col, Alert } from 'react-bootstrap';\r\nimport { Route, NavLink, Link,useHistory } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport agent from '../../agent'\r\nimport ListErrors from '../layout/ListErrors';\r\nimport user from \"../../models/user\";\r\nimport Loader from '../layout/Loader';\r\nimport {\r\n    UPDATE_FIELD_AUTH,\r\n    LOGIN,\r\n    LOGIN_PAGE_UNLOADED,\r\n    LOGOUT\r\n} from '../../constants/actionTypes';\r\nimport \"./login.css\";\r\nclass Login extends Component {\r\n   // let history = useHistory();\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state ={isShowLoader:false};\r\n        this.changeEmail = ev => {this.props.onChangeEmail(ev.target.value)};\r\n        this.changePassword = ev => {this.props.onChangePassword(ev.target.value)};\r\n    }\r\n    componentDidMount(){\r\n        var body = document.body;\r\n        body.classList.add(\"login-body\");\r\n\r\n        // var dd = document.html;\r\n        // dd.classList.add(\"login-body\");\r\n        this.props.onlogout()\r\n        this.props.onChangeEmail(\"\")\r\n        this.props.onChangePassword(\"\")\r\n    }\r\n    submitForm=ev=> {\r\n        ev.preventDefault();\r\n        this.setState({isShowLoader:true});\r\n        user.Auth.login(this.props.username, this.props.password).then(res=>{\r\n            this.setState({isShowLoader:false});\r\n            console.log(res);\r\n            this.props.onSubmit(res.body);\r\n        }).catch(err=>{\r\n            console.log(err);\r\n        })\r\n    };\r\n\r\n    componentDidUpdate(){\r\n        if(this.props.isLoginSuccess){\r\n            this.props.history.push('/')\r\n        }\r\n        \r\n    }\r\n    \r\n    componentWillUnmount() {\r\n        var body = document.body;\r\n        body.classList.remove(\"login-body\");\r\n\r\n        this.props.onUnload();\r\n      }\r\n    render() {\r\n        const username = this.props.username;\r\n        const password = this.props.password;\r\n        return (\r\n            <div id=\"login\">\r\n           \r\n            <Loader show={this.state.isShowLoader} />\r\n        {/* <Alert key={this.state.errormsg} variant=\"danger\">{this.state.errormsg}</Alert> */}\r\n            <ListErrors errors={this.props.errors} statusCode={this.props.statusCode}/>\r\n            <div className=\"container\">\r\n        <div className=\"card card-container\">\r\n             {/* <img className=\"profile-img-card\" src=\"//lh3.googleusercontent.com/-6V8xOA6M7BA/AAAAAAAAAAI/AAAAAAAAAAA/rzlHcD0KYwo/photo.jpg?sz=120\" alt=\"\" /> */}\r\n            <img id=\"profile-img\" className=\"profile-img-card\" src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\" />\r\n            <p id=\"profile-name\" className=\"profile-name-card\"></p>\r\n            <Form  className=\"form-signin\" onSubmit={this.submitForm}>\r\n                <span id=\"reauth-email\" className=\"reauth-email\"></span>\r\n                <input type=\"text\" autoFocus id=\"inputEmail\" value={username} onChange={this.changeEmail} className=\"form-control\" placeholder=\"Username\" required/>\r\n                <input type=\"password\" id=\"inputPassword\" value={password}  onChange={this.changePassword} className=\"form-control\" placeholder=\"Password\" required/>\r\n                <div id=\"remember\" className=\"checkbox\">\r\n                    <label>\r\n                        <input type=\"checkbox\" value=\"remember-me\"/> Remember me\r\n                    </label>\r\n                </div>\r\n                <Button variant=\"primary btn-signin\" disabled={this.state.isShowLoader} type=\"submit\">{this.state.isShowLoader ? 'Loading…' : \"Sign in\"}</Button>\r\n            </Form>\r\n            <a href=\"#\" className=\"forgot-password\">\r\n                Forgot the password?\r\n            </a>\r\n        </div>\r\n    </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => ({ ...state.auth });\r\nconst mapDispatchToProps = dispatch => ({\r\n    onChangeEmail: value =>\r\n        dispatch({ type: UPDATE_FIELD_AUTH, key: 'username', value }),\r\n    onChangePassword: value =>\r\n        dispatch({ type: UPDATE_FIELD_AUTH, key: 'password', value }),\r\n    onSubmit: (data) =>\r\n        dispatch({ type: LOGIN, payload: data }),\r\n    onUnload: () =>\r\n        dispatch({ type: LOGIN_PAGE_UNLOADED }),\r\n    onlogout:()=>\r\n        dispatch({ type: LOGOUT })\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","import React, { Component } from 'react'\r\nimport { Route,NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport LoggedInView from './LogedInView';\r\nimport LoggedOutView from './LogedOutView';\r\n// import ItrPopup from '../finance-Itr/ItrPopup'\r\n\r\nclass InnerHeader extends Component {\r\n    isopen = false;\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        isopen:false\r\n      }\r\n    }\r\n    handleITRPopup = () =>{\r\n        this.setState({\r\n          isopen:this.state.isopen?false:true\r\n        })\r\n      }\r\n    render(){\r\n    return (\r\n        <header>\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark top-nav-collapse\">\r\n                <div className=\"container\">\r\n                <NavLink className=\"navbar-brand\" to=\"/\"> <h2>AA2 Mutualhelp</h2></NavLink>\r\n\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent-7\"\r\n                        aria-controls=\"navbarSupportedContent-7\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent-7\">\r\n                        <ul className=\"navbar-nav ml-auto\">\r\n                            {/* <li className=\"nav-item\">\r\n                            <NavLink aactiveClassName=\"active\" className=\"nav-link\" to=\"/\">Home</NavLink> */}\r\n\r\n                                {/* <a className=\"nav-link\" href=\"#\">Home\r\n                    <span className=\"sr-only\">(current)</span>\r\n                                </a> */}\r\n                            {/* </li> */}\r\n                            {/* <li className=\"nav-item\" onClick={this.handleITRPopup}>\r\n                                <a className=\"nav-link\" onClick={this.handleITRPopup}>File ITR</a>\r\n                            </li> */}\r\n                            {/* <li className=\"nav-item\"> */}\r\n                                {/* <a className=\"nav-link\" href=\"#\">Order Food</a> */}\r\n                                {/* <NavLink aactiveClassName=\"active\" to=\"/CategoryList\" className=\"nav-link\">Order Food</NavLink>\r\n                            </li> */}\r\n                            {/* <li className=\"nav-item\">\r\n                            <NavLink className=\"nav-link\" to=\"/login\">Login</NavLink>\r\n\r\n                            </li> */}\r\n                            <LoggedOutView currentUser={this.props}/>\r\n                            <LoggedInView currentUser={this.props}/>\r\n\r\n                        </ul>\r\n\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n            {/* <ItrPopup isopen={this.state.isopen} hide={this.handleITRPopup}/> */}\r\n        </header>\r\n    )}\r\n\r\n}\r\nconst mapStateToProps = state => ({ ...state.auth});\r\nconst mapDispatchToProps = dispatch => ({\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InnerHeader)\r\n","import React,{useEffect} from 'react'\r\nimport { useSelector } from \"react-redux\";\r\nimport { Col, Nav} from 'react-bootstrap';\r\nimport { LinkContainer} from 'react-router-bootstrap';\r\nimport { useLocation } from 'react-router-dom'\r\nexport default function Leftbar() {\r\n    const auth = useSelector(state => state.auth);\r\n    const location = useLocation();\r\n    \r\n    return (\r\n        <div className=\"sidebar\" data-color=\"white\" data-active-color=\"danger\">\r\n          <div className=\"logo\">\r\n            <a href=\"#\" className=\"simple-text logo-mini\">\r\n              <div className=\"logo-image-small\">\r\n                <img src={process.env.PUBLIC_URL+\"/assets/img/logo-small.png\"} />\r\n              </div>\r\n            </a>\r\n            <a href=\"#\" className=\"simple-text logo-normal\">\r\n              {auth.username}\r\n            </a>\r\n          </div>\r\n          <div className=\"sidebar-wrapper\">\r\n            <ul className=\"nav\">\r\n              <li className={location.pathname == \"/\"?\"active\":\"\"}>\r\n                {/* <a href=\"./dashboard.html\"> */}\r\n                <LinkContainer to=\"/\">\r\n                <Nav.Link>\r\n                  <i className=\"nc-icon nc-bank\"></i>\r\n                  <p>Dashboard</p>\r\n                  </Nav.Link>\r\n                  </LinkContainer>\r\n                {/* </a> */}\r\n              </li>\r\n              <li className={location.pathname == \"/memberGroup\" || location.pathname == \"/member\" || location.pathname == \"/member\" || location.pathname == \"/addMember\"?\"active\":\"\"}>\r\n                <a data-toggle=\"collapse\" aria-expanded=\"false\" href=\"#homeSubmenu\" className=\"dropdown-toggle\">\r\n                <i className=\"nc-icon nc-badge\"></i>\r\n                  Master Record\r\n                </a>\r\n                <ul className=\"list-unstyled collapse\" id=\"homeSubmenu\" >\r\n                  <li className={location.pathname == \"/memberGroup\" || location.pathname == \"/addMemberGroup\"?\"active\":\"\"}>\r\n                  <LinkContainer to=\"/memberGroup\">\r\n                    <Nav.Link>\r\n                    Member Group\r\n                    </Nav.Link>\r\n                  </LinkContainer>\r\n\r\n                    \r\n                  </li>\r\n                  <li className={location.pathname == \"/member\" || location.pathname == \"/addMember\"?\"active\":\"\"}>\r\n                  <LinkContainer to=\"/member\">\r\n                    <Nav.Link>\r\n                    Members\r\n                    </Nav.Link>\r\n                  </LinkContainer>\r\n\r\n                  </li>\r\n                </ul>\r\n              </li>\r\n              <li \r\n              className={location.pathname == \"/emiCalculator\" \r\n              || location.pathname == \"/scheme\" \r\n              || location.pathname == \"/loanApplication\" \r\n              || location.pathname == \"/loanApproval\"\r\n              || location.pathname == \"/addScheme\"\r\n              || location.pathname == \"/allApplications\"\r\n              || location.pathname == \"/disburseLoan\"\r\n\r\n              ?\"active\":\"\"}>\r\n                <a data-toggle=\"collapse\" aria-expanded=\"false\" href=\"#groupLoan\" className=\"dropdown-toggle\">\r\n                <i className=\"nc-icon nc-umbrella-13\"></i>\r\n                  Group Loan\r\n                </a>\r\n                <ul className=\"list-unstyled collapse\" id=\"groupLoan\" >\r\n                <li className={location.pathname == \"/emiCalculator\"?\"active\":\"\"}>\r\n                    <LinkContainer to=\"/emiCalculator\">\r\n                      <Nav.Link href=\"#\">Calculator</Nav.Link>\r\n                    </LinkContainer>\r\n                  </li>\r\n                  <li className={location.pathname == \"/scheme\" || location.pathname == \"/addScheme\"?\"active\":\"\"}>\r\n                  <LinkContainer to=\"/scheme\">\r\n                    <Nav.Link eventKey=\"link-1\">Scheme</Nav.Link>\r\n                  </LinkContainer>\r\n                  </li>\r\n                  <li className={location.pathname == \"/loanApplication\"?\"active\":\"\"}>\r\n                    <LinkContainer to=\"/loanApplication\">\r\n                      <Nav.Link eventKey=\"link-2\">Application</Nav.Link>\r\n                    </LinkContainer>\r\n                  </li>\r\n                  {(auth.role==\"checker\"||auth.role==\"admin\")? <li className={location.pathname == \"/loanApproval\"?\"active\":\"\"}>\r\n\r\n                    <LinkContainer to=\"/loanApproval\">\r\n                      <Nav.Link eventKey=\"link-2\">Approve Application</Nav.Link>\r\n                    </LinkContainer>\r\n                  </li>:\"\"}\r\n                  {(auth.role==\"checker\"||auth.role==\"admin\")?<li className={location.pathname == \"/disburseLoan\"?\"active\":\"\"}>\r\n                    <LinkContainer to=\"/disburseLoan\">\r\n                      <Nav.Link eventKey=\"link-2\">Disbure Application</Nav.Link>\r\n                      </LinkContainer>\r\n                    </li>:\"\"}\r\n                    <li className={location.pathname == \"/allApplications\"?\"active\":\"\"}>\r\n                      <LinkContainer to=\"/allApplications\">\r\n                        <Nav.Link eventKey=\"link-2\">Loan Applications</Nav.Link>\r\n                        </LinkContainer>\r\n\r\n                    </li>\r\n                </ul>\r\n              </li>              \r\n              {/* <li className={location.pathname == \"/processingFee\"?\"active\":\"\"}>\r\n              <LinkContainer to=\"/\">\r\n                      <Nav.Link href=\"#\"><i className=\"nc-icon nc-paper\"></i>Processing Fee</Nav.Link>\r\n                </LinkContainer>\r\n              </li>              \r\n              <li>\r\n              <LinkContainer to=\"/\">\r\n                      <Nav.Link href=\"#\"><i className=\"nc-icon nc-credit-card\"></i>Expenses</Nav.Link>\r\n                </LinkContainer>\r\n\r\n              </li>     */}          \r\n              <li className={location.pathname == \"/dueEmis\"?\"active\":\"\"}>\r\n              <LinkContainer to=\"/dueEmis\">\r\n                      <Nav.Link href=\"#\"><i className=\"nc-icon nc-money-coins\"></i> Payment to collect</Nav.Link>\r\n                </LinkContainer>\r\n\r\n              </li>              \r\n            </ul>\r\n          </div>\r\n        </div>        \r\n        // // <Col md={2} id=\"sidebar-col\" className=\"pr-0\">\r\n        //     <nav id=\"sidebar\">\r\n        //         {/* <div className=\"sidebar-header\">\r\n        //             <h5>AA2 MutualHelp</h5>\r\n        //         </div> */}\r\n        //         <Nav className=\"list-unstyled components flex-column\" as=\"ul\" >\r\n        //         <Nav.Item as=\"li\" className=\"active\">\r\n        //         <LinkContainer to=\"/\">\r\n        //         <Nav.Link>\r\n        //              Dashboard\r\n        //     </Nav.Link>\r\n        //     </LinkContainer>\r\n        //         </Nav.Item>\r\n        //             <Nav.Item as=\"li\" >\r\n                   \r\n        //                 <Nav.Link href=\"#homeSubmenu\" className=\"dropdown-toggle\" data-toggle=\"collapse\" aria-expanded=\"false\">Master Record</Nav.Link>\r\n                        \r\n        //                 {/* <ul class=\"collapse list-unstyled\" id=\"homeSubmenu\"> */}\r\n        //                 <Nav class=\"collapse list-unstyled\" id=\"homeSubmenu\" as=\"ul\">\r\n        //                     <Nav.Item as=\"li\">\r\n        //                     <LinkContainer to=\"/memberGroup\">\r\n        //                         <Nav.Link href=\"/home\">Member Group</Nav.Link>\r\n        //                         </LinkContainer>\r\n        //                         {/* <NavLink to=\"/memberGroup\">Member Group</NavLink> */}\r\n        //                     </Nav.Item>\r\n        //                     <Nav.Item as=\"li\">\r\n        //                     <LinkContainer to=\"/member\">\r\n        //                         <Nav.Link eventKey=\"link-1\">Members</Nav.Link>\r\n        //                     </LinkContainer>\r\n        //                     </Nav.Item>\r\n        //                 </Nav>\r\n        //             </Nav.Item>\r\n        //             <Nav.Item as=\"li\" >\r\n        //                 <Nav.Link href=\"#groupLoan\" data-toggle=\"collapse\" aria-expanded=\"false\" className=\"dropdown-toggle\">Group Loan</Nav.Link>\r\n        //                 {/* <ul class=\"collapse list-unstyled\" id=\"homeSubmenu\"> */}\r\n        //                 <Nav class=\"collapse list-unstyled\" id=\"groupLoan\" as=\"ul\">\r\n        //                     <Nav.Item as=\"li\">\r\n        //                     <LinkContainer to=\"/emiCalculator\">\r\n        //                         <Nav.Link href=\"#\">Calculator</Nav.Link>\r\n        //                         </LinkContainer>\r\n        //                     </Nav.Item>\r\n        //                     <Nav.Item as=\"li\">\r\n        //                     <LinkContainer to=\"/scheme\">\r\n        //                         <Nav.Link eventKey=\"link-1\">Scheme</Nav.Link>\r\n        //                         </LinkContainer>\r\n        //                     </Nav.Item>\r\n        //                     <Nav.Item as=\"li\">\r\n        //                     <LinkContainer to=\"/loanApplication\">\r\n        //                         <Nav.Link eventKey=\"link-2\">Application</Nav.Link>\r\n        //                         </LinkContainer>\r\n        //                     </Nav.Item>\r\n        //                     {(auth.role==\"checker\"||auth.role==\"admin\")?<Nav.Item as=\"li\">\r\n        //                     <LinkContainer to=\"/loanApproval\">\r\n        //                         <Nav.Link eventKey=\"link-2\">Approve Application</Nav.Link>\r\n        //                         </LinkContainer>\r\n        //                     </Nav.Item>:\"\"}\r\n        //                     {(auth.role==\"checker\"||auth.role==\"admin\")?<Nav.Item as=\"li\">\r\n        //                     <LinkContainer to=\"/disburseLoan\">\r\n        //                         <Nav.Link eventKey=\"link-2\">Disbure Application</Nav.Link>\r\n        //                         </LinkContainer>\r\n        //                     </Nav.Item>:\"\"}\r\n        //                     <Nav.Item as=\"li\">\r\n        //                     <LinkContainer to=\"/allApplications\">\r\n        //                         <Nav.Link eventKey=\"link-2\">Loan Applications</Nav.Link>\r\n        //                         </LinkContainer>\r\n        //                     </Nav.Item>\r\n\r\n        //                 </Nav>\r\n        //             </Nav.Item>\r\n\r\n        //             <Nav.Item as=\"li\" >\r\n        //                 <Nav.Link href=\"#processingFee\" data-toggle=\"collapse\" aria-expanded=\"false\" className=\"dropdown-toggle\">Processing Fee</Nav.Link>\r\n        //                 {/* <ul class=\"collapse list-unstyled\" id=\"homeSubmenu\"> */}\r\n        //                 <Nav class=\"collapse list-unstyled\" id=\"processingFee\" as=\"ul\">\r\n        //                     <Nav.Item as=\"li\">\r\n        //                         <Nav.Link href=\"#\">List Processing Fee</Nav.Link>\r\n        //                     </Nav.Item>\r\n\r\n        //                 </Nav>\r\n        //             </Nav.Item>\r\n\r\n        //             <Nav.Item as=\"li\" >\r\n        //                 <Nav.Link href=\"#expense\" data-toggle=\"collapse\" aria-expanded=\"false\" className=\"dropdown-toggle\">Expense</Nav.Link>\r\n        //                 {/* <ul class=\"collapse list-unstyled\" id=\"homeSubmenu\"> */}\r\n        //                 <Nav class=\"collapse list-unstyled\" id=\"expense\" as=\"ul\">\r\n        //                     <Nav.Item as=\"li\">\r\n        //                         <Nav.Link href=\"#\">List Expense</Nav.Link>\r\n        //                     </Nav.Item>\r\n\r\n        //                 </Nav>\r\n        //             </Nav.Item>\r\n\r\n        //             <Nav.Item as=\"li\" >\r\n        //                 <Nav.Link href=\"#payments\" data-toggle=\"collapse\" aria-expanded=\"false\" className=\"dropdown-toggle\">Payment to collect</Nav.Link>\r\n        //                 {/* <ul class=\"collapse list-unstyled\" id=\"homeSubmenu\"> */}\r\n        //                 <Nav class=\"collapse list-unstyled\" id=\"payments\" as=\"ul\">\r\n        //                     <Nav.Item as=\"li\">\r\n        //                         <LinkContainer to=\"/dueEmis\">\r\n        //                             <Nav.Link href=\"#\">Payment to collect(Loan)</Nav.Link>\r\n        //                         </LinkContainer>\r\n        //                     </Nav.Item>\r\n\r\n        //                 </Nav>\r\n        //             </Nav.Item>\r\n        //         </Nav>\r\n        //     </nav>\r\n        // </Col>\r\n    )\r\n}\r\n","import React,{useState} from 'react'\r\nimport {  Navbar, Nav } from 'react-bootstrap';\r\nimport { useSelector,useDispatch } from \"react-redux\";\r\nimport { useHistory } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport {LOGOUT} from '../../constants/actionTypes';\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nexport default function TopNav(props) {\r\n  // const listRouteName = {\r\n  //                         \"/\":\"Dashboard\",\r\n  //                         \"/memberGroup\":\"Member Group\",\r\n  //                         \"/addMemberGroup\":\"Member Group\",\r\n  //                         \"/member\":\"Member\",\r\n  //                         \"/addMember\":\"Member\",\r\n  //                         \"/emiCalculator\":\"Calculate EMI\"\r\n  //                       }\r\n  const location = useLocation();\r\n  const auth = useSelector(state => state.auth);\r\n  const common = useSelector(state => state.common);\r\n  const dispatch = useDispatch();\r\n  let history = useHistory();\r\nconst [navClick,setNevClick] = useState(false);\r\n    return (\r\n        <nav className={navClick?\"navbar navbar-expand-lg navbar-absolute fixed-top bg-white\":\"navbar navbar-expand-lg navbar-absolute fixed-top navbar-transparent\"} >\r\n        <div className=\"container-fluid\">\r\n          <div className=\"navbar-wrapper\">\r\n            <div className=\"navbar-toggle\">\r\n              <button type=\"button\" className=\"navbar-toggler\">\r\n                <span className=\"navbar-toggler-bar bar1\"></span>\r\n                <span className=\"navbar-toggler-bar bar2\"></span>\r\n                <span className=\"navbar-toggler-bar bar3\"></span>\r\n              </button>\r\n            </div>\r\n            <a className=\"navbar-brand\" href=\"#\">{common.page}</a>\r\n          </div>\r\n          <button onClick={()=>setNevClick(!navClick)} className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navigation\" aria-controls=\"navigation-index\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-bar navbar-kebab\"></span>\r\n            <span className=\"navbar-toggler-bar navbar-kebab\"></span>\r\n            <span className=\"navbar-toggler-bar navbar-kebab\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse justify-content-end\" id=\"navigation\">\r\n            <form>\r\n              <div className=\"input-group no-border\">\r\n                <input type=\"text\" value=\"\" className=\"form-control\" placeholder=\"Search...\"/>\r\n                <div className=\"input-group-append\">\r\n                  <div className=\"input-group-text\">\r\n                    <i className=\"nc-icon nc-zoom-split\"></i>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </form>\r\n            <ul className=\"navbar-nav\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link btn-magnify\" href=\"#\">\r\n                  <i className=\"nc-icon nc-layout-11\"></i>\r\n                  <p>\r\n                    <span className=\"d-lg-none d-md-block\">Stats</span>\r\n                  </p>\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item btn-rotate dropdown\">\r\n                <a className=\"nav-link dropdown-toggle\" href=\"http://example.com\" id=\"navbarDropdownMenuLink\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                  <i className=\"nc-icon nc-bell-55\"></i>\r\n                  <p>\r\n                    <span className=\"d-lg-none d-md-block\"></span>\r\n                  </p>\r\n                </a>\r\n                <div className=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"navbarDropdownMenuLink\">\r\n                  <Link className=\"dropdown-item\" to={\"/login\"} >Logout</Link>\r\n                  {/* <a className=\"dropdown-item\" href=\"#\">Another action</a>\r\n                  <a className=\"dropdown-item\" href=\"#\">Something else here</a> */}\r\n                </div>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link btn-rotate\" href=\"#\">\r\n                  <i className=\"nc-icon nc-settings-gear-65\"></i>\r\n                  <p>\r\n                    <span className=\"d-lg-none d-md-block\">Account</span>\r\n                  </p>\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n\r\n        // <Navbar collapseOnSelect expand=\"lg\" bg=\"info\" variant=\"dark\">\r\n               \r\n        //         <h4 id=\"logo-web\" className=\"mr-4\">AA2 MutualHelp</h4>\r\n        //     <button type=\"button\" onClick={props.toggleSidebar} class=\"btn btn-dark\">\r\n        //         <i class=\"fas fa-align-left\"></i>\r\n        //     </button>\r\n        //     <h4 id=\"logo-mobile\" className=\"\">AA2 MutualHelp</h4>\r\n        //     <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n        //     <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n        //         <Nav className=\"ml-auto\">\r\n        //             <Nav.Link href=\"#\">{auth.username}</Nav.Link>\r\n        //             <Nav.Link eventKey={2} onClick={logout}>\r\n        //                 Logout\r\n        //             </Nav.Link>\r\n        //         </Nav>\r\n        //     </Navbar.Collapse>\r\n        // </Navbar>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport { useSelector,useDispatch } from \"react-redux\";\r\nimport InnerHeader from './InnerHeader';\r\nimport Footer from './Footer';\r\nimport Leftbar from './Leftbar';\r\nimport TopNav from './TopNav';\r\nimport { useHistory } from 'react-router';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nconst InnerLayout = ({ component: Component, ...rest }) => {\r\n    const auth = useSelector(state => state.auth);\r\n    const history = useHistory();\r\n    const [showSidebar, setshowSidebar] = useState(true)\r\n    useEffect(() => {\r\n        setshowSidebar(window.innerWidth <= 768 ? false : true);\r\n        checkLogin();\r\n    }, [Component]);\r\n    const toggleSidebar = () => {\r\n\r\n        console.log(window);\r\n        setshowSidebar(showSidebar ? false : true)\r\n        // this.setState({\r\n        //   isopen:this.state.isopen?false:true\r\n        // })\r\n    }\r\n    const checkLogin = () =>{\r\n        let jwt = \"\";\r\n         jwt = localStorage.getItem(\"jwt\");\r\n         console.log(jwt);\r\n         if(jwt==\"\" || !auth.hasOwnProperty(\"username\")){\r\n             history.push(\"/login\");\r\n         }\r\n    }\r\n    return (\r\n        <Route {...rest} render={props => (\r\n            <>\r\n        <div className=\"wrapper \">\r\n        <Leftbar/>\r\n        <div className=\"main-panel\">\r\n            <TopNav toggleSidebar={toggleSidebar} />\r\n          {/* <nav className=\"navbar navbar-expand-lg navbar-absolute fixed-top navbar-transparent\">\r\n            <div className=\"container-fluid\">\r\n              <div className=\"navbar-wrapper\">\r\n                <div className=\"navbar-toggle\">\r\n                  <button type=\"button\" className=\"navbar-toggler\">\r\n                    <span className=\"navbar-toggler-bar bar1\"></span>\r\n                    <span className=\"navbar-toggler-bar bar2\"></span>\r\n                    <span className=\"navbar-toggler-bar bar3\"></span>\r\n                  </button>\r\n                </div>\r\n                <a className=\"navbar-brand\" href=\"javascript:;\">Paper Dashboard 2</a>\r\n              </div>\r\n              <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navigation\" aria-controls=\"navigation-index\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-bar navbar-kebab\"></span>\r\n                <span className=\"navbar-toggler-bar navbar-kebab\"></span>\r\n                <span className=\"navbar-toggler-bar navbar-kebab\"></span>\r\n              </button>\r\n              <div className=\"collapse navbar-collapse justify-content-end\" id=\"navigation\">\r\n                <form>\r\n                  <div className=\"input-group no-border\">\r\n                    <input type=\"text\" value=\"\" className=\"form-control\" placeholder=\"Search...\"/>\r\n                    <div className=\"input-group-append\">\r\n                      <div className=\"input-group-text\">\r\n                        <i className=\"nc-icon nc-zoom-split\"></i>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n                <ul className=\"navbar-nav\">\r\n                  <li className=\"nav-item\">\r\n                    <a className=\"nav-link btn-magnify\" href=\"javascript:;\">\r\n                      <i className=\"nc-icon nc-layout-11\"></i>\r\n                      <p>\r\n                        <span className=\"d-lg-none d-md-block\">Stats</span>\r\n                      </p>\r\n                    </a>\r\n                  </li>\r\n                  <li className=\"nav-item btn-rotate dropdown\">\r\n                    <a className=\"nav-link dropdown-toggle\" href=\"http://example.com\" id=\"navbarDropdownMenuLink\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                      <i className=\"nc-icon nc-bell-55\"></i>\r\n                      <p>\r\n                        <span className=\"d-lg-none d-md-block\">Some Actions</span>\r\n                      </p>\r\n                    </a>\r\n                    <div className=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"navbarDropdownMenuLink\">\r\n                      <a className=\"dropdown-item\" href=\"#\">Action</a>\r\n                      <a className=\"dropdown-item\" href=\"#\">Another action</a>\r\n                      <a className=\"dropdown-item\" href=\"#\">Something else here</a>\r\n                    </div>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <a className=\"nav-link btn-rotate\" href=\"javascript:;\">\r\n                      <i className=\"nc-icon nc-settings-gear-65\"></i>\r\n                      <p>\r\n                        <span className=\"d-lg-none d-md-block\">Account</span>\r\n                      </p>\r\n                    </a>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </nav> */}\r\n          <Component {...props} />\r\n          {/* <div className=\"content\">\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-3 col-md-6 col-sm-6\">\r\n                <div className=\"card card-stats\">\r\n                  <div className=\"card-body \">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-5 col-md-4\">\r\n                        <div className=\"icon-big text-center icon-warning\">\r\n                          <i className=\"nc-icon nc-globe text-warning\"></i>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-7 col-md-8\">\r\n                        <div className=\"numbers\">\r\n                          <p className=\"card-category\">Capacity</p>\r\n                          <p className=\"card-title\">150GB</p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"card-footer \">\r\n                    <hr/>\r\n                    <div className=\"stats\">\r\n                      <i className=\"fa fa-refresh\"></i>\r\n                      Update Now\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-lg-3 col-md-6 col-sm-6\">\r\n                <div className=\"card card-stats\">\r\n                  <div className=\"card-body \">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-5 col-md-4\">\r\n                        <div className=\"icon-big text-center icon-warning\">\r\n                          <i className=\"nc-icon nc-money-coins text-success\"></i>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-7 col-md-8\">\r\n                        <div className=\"numbers\">\r\n                          <p className=\"card-category\">Revenue</p>\r\n                          <p className=\"card-title\">$ 1,345</p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"card-footer \">\r\n                    <hr/>\r\n                    <div className=\"stats\">\r\n                      <i className=\"fa fa-calendar-o\"></i>\r\n                      Last day\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-lg-3 col-md-6 col-sm-6\">\r\n                <div className=\"card card-stats\">\r\n                  <div className=\"card-body \">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-5 col-md-4\">\r\n                        <div className=\"icon-big text-center icon-warning\">\r\n                          <i className=\"nc-icon nc-vector text-danger\"></i>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-7 col-md-8\">\r\n                        <div className=\"numbers\">\r\n                          <p className=\"card-category\">Errors</p>\r\n                          <p className=\"card-title\">23</p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"card-footer \">\r\n                    <hr/>\r\n                    <div className=\"stats\">\r\n                      <i className=\"fa fa-clock-o\"></i>\r\n                      In the last hour\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-lg-3 col-md-6 col-sm-6\">\r\n                <div className=\"card card-stats\">\r\n                  <div className=\"card-body \">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-5 col-md-4\">\r\n                        <div className=\"icon-big text-center icon-warning\">\r\n                          <i className=\"nc-icon nc-favourite-28 text-primary\"></i>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-7 col-md-8\">\r\n                        <div className=\"numbers\">\r\n                          <p className=\"card-category\">Followers</p>\r\n                          <p className=\"card-title\">+45K</p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"card-footer \">\r\n                    <hr/>\r\n                    <div className=\"stats\">\r\n                      <i className=\"fa fa-refresh\"></i>\r\n                      Update now\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12\">\r\n                <div className=\"card \">\r\n                  <div className=\"card-header \">\r\n                    <h5 className=\"card-title\">Users Behavior</h5>\r\n                    <p className=\"card-category\">24 Hours performance</p>\r\n                  </div>\r\n                  <div className=\"card-body \">\r\n                    <canvas id=\"chartHours\" width=\"400\" height=\"100\"></canvas>\r\n                  </div>\r\n                  <div className=\"card-footer \">\r\n                    <hr/>\r\n                    <div className=\"stats\">\r\n                      <i className=\"fa fa-history\"></i> Updated 3 minutes ago\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-4\">\r\n                <div className=\"card \">\r\n                  <div className=\"card-header \">\r\n                    <h5 className=\"card-title\">Email Statistics</h5>\r\n                    <p className=\"card-category\">Last Campaign Performance</p>\r\n                  </div>\r\n                  <div className=\"card-body \">\r\n                    <canvas id=\"chartEmail\"></canvas>\r\n                  </div>\r\n                  <div className=\"card-footer \">\r\n                    <div className=\"legend\">\r\n                      <i className=\"fa fa-circle text-primary\"></i> Opened\r\n                      <i className=\"fa fa-circle text-warning\"></i> Read\r\n                      <i className=\"fa fa-circle text-danger\"></i> Deleted\r\n                      <i className=\"fa fa-circle text-gray\"></i> Unopened\r\n                    </div>\r\n                    <hr/>\r\n                    <div className=\"stats\">\r\n                      <i className=\"fa fa-calendar\"></i> Number of emails sent\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-8\">\r\n                <div className=\"card card-chart\">\r\n                  <div className=\"card-header\">\r\n                    <h5 className=\"card-title\">NASDAQ: AAPL</h5>\r\n                    <p className=\"card-category\">Line Chart with Points</p>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <canvas id=\"speedChart\" width=\"400\" height=\"100\"></canvas>\r\n                  </div>\r\n                  <div className=\"card-footer\">\r\n                    <div className=\"chart-legend\">\r\n                      <i className=\"fa fa-circle text-info\"></i> Tesla Model S\r\n                      <i className=\"fa fa-circle text-warning\"></i> BMW 5 Series\r\n                    </div>\r\n                    <hr />\r\n                    <div className=\"card-stats\">\r\n                      <i className=\"fa fa-check\"></i> Data information certified\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div> */}\r\n        </div>\r\n      </div>\r\n            \r\n            {/* <Container fluid className=\"pl-0 pr-0\">\r\n            <Row>\r\n                <Col>\r\n                <TopNav toggleSidebar={toggleSidebar} />\r\n                </Col>\r\n            \r\n            </Row>\r\n                \r\n                <Row>\r\n                    \r\n                        {showSidebar ?<Col md={2} sm={2} id=\"sidebar-col\" className=\"bg-info\"><Leftbar/></Col> : \"\"}\r\n                        \r\n                   \r\n                    <Col sm={showSidebar ? 10 : 12} >\r\n                        <div id=\"content\">\r\n\r\n                            <Component {...props} />\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n\r\n                \r\n                </Container> */}\r\n            </>\r\n        )} />)\r\n}\r\n\r\nexport default InnerLayout\r\n","import React,{useEffect,useState} from 'react'\r\nimport agent from '../../agent'\r\nimport {useHistory} from 'react-router-dom';\r\nimport { Table, Nav, Pagination,Button,Modal } from 'react-bootstrap';\r\n\r\nfunction UserOrderHistory(props) {\r\n    useEffect(() => {\r\n        getOrders()\r\n  },[])\r\n  const [orderHistory, setorderHistory] = useState([])\r\n  const [selectedorder,setselectedorder] = useState([]);\r\n  const [isopenpopup, setisopenpopup] = useState(false)\r\n  const handleClose = () => setisopenpopup(false);\r\n\r\n  const viewOrderPopUp = (record)=>{\r\n      setselectedorder(record);\r\n      setisopenpopup(true);\r\n  }\r\n  let history = useHistory();\r\n  const getOrders =()=>{\r\n      props.showLoader(true);\r\n      agent.Order.getOrderHistoryByUserEmail().then((res=>{\r\n          props.showLoader(false);\r\n          console.log(res.body.record)\r\n\r\n          setorderHistory(res.body.record);\r\n      }),(err)=>{\r\n          console.log(err.response.body.message);\r\n          if(err.response.body.message ==\"jwt must be provided\"){\r\n              console.log(\"login required\");\r\n            history.push(\"/login\");\r\n          }\r\n          props.showLoader(false);\r\n\r\n      });\r\n  }\r\n\r\n    return (\r\n        <>\r\n        <Table responsive>\r\n        <thead>\r\n            <tr>\r\n                <th>#</th>\r\n                <th>Customer</th>\r\n                <th>Date</th>\r\n                <th>Details</th>\r\n                <th>Number</th>\r\n                <th>Action</th>\r\n\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            {orderHistory.map((record,index)=>\r\n            <tr>\r\n                <td>{index+1}</td>\r\n                <td>{record.shipping.name}</td>\r\n                <td>{record.datePlaced}</td>\r\n                <td>{record.items.map(itm=><span>{itm.item.title} Quantity:{itm.quantity}<br></br></span>)}</td>\r\n                <td>{record.shipping.phone}</td>\r\n\r\n                <td>\r\n                    <Button type=\"button\" onClick={()=>viewOrderPopUp(record)}>View</Button>\r\n                </td>\r\n            </tr>\r\n\r\n            )}\r\n        </tbody>\r\n    </Table>\r\n    <Modal show={isopenpopup} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Order Details</Modal.Title>\r\n        </Modal.Header>\r\n            <Modal.Body>\r\n                <Table striped bordered hover responsive>\r\n                    <thead><tr><td colSpan=\"4\"><h4>Shipping Details</h4></td></tr></thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td><b>Name:</b> {selectedorder?.shipping?.name}</td>\r\n                            <td><b>Address:</b> {selectedorder?.shipping?.address}</td>\r\n                            <td><b>Phone:</b> {selectedorder?.shipping?.phone}</td>\r\n                            <td><b>City:</b> {selectedorder?.shipping?.city}</td>\r\n\r\n                        </tr>\r\n                    </tbody>\r\n                </Table>\r\n                <Table striped bordered hover responsive>\r\n                    <thead><tr><td colSpan=\"4\"><h4>Products</h4></td></tr></thead>\r\n                    <tbody>{selectedorder?.items?.map(itm=><tr>\r\n                    <td><b>Title:</b> {itm.item.title}</td>\r\n                    <td><b>Description:</b> {itm.item.description}</td>\r\n                    <td><b>Quantity:</b> {itm.quantity}</td>\r\n                    <td><b>Total Price:</b> {parseInt(itm.quantity)*itm.perItemPrice}</td>\r\n                    </tr>)}\r\n                    </tbody>\r\n                </Table>\r\n\r\n                <Table striped bordered hover responsive>\r\n                <thead><tr><td colSpan=\"4\"><h4>Bill Details</h4></td></tr></thead>\r\n                    <tbody>\r\n                        {selectedorder.isDiscountApplied?<tr>\r\n                            <td>\r\n                                <b>\r\n                                Prime Member Discount:\r\n                                </b>\r\n                            </td>\r\n                            <td>10%</td>\r\n                        </tr>:\"\"}\r\n                        <tr>\r\n                            <td>\r\n                                <b>Total Bill Amount</b>\r\n                            </td>\r\n                            <td>{selectedorder.totalBillAmount}</td>\r\n                        </tr>\r\n                    </tbody>\r\n\r\n                </Table>\r\n\r\n            </Modal.Body>\r\n      </Modal>\r\n\r\n    </>\r\n)\r\n}\r\n\r\nexport default UserOrderHistory\r\n","import React,{useState} from 'react'\r\nimport { ListGroup, Container, Row, Col, Card, Button, CardColumns,Toast,Alert } from 'react-bootstrap';\r\n// import CategoryManagement from '../Admin/CategoryManagement';\r\nimport Loader from '../../layout/Loader';\r\nimport UserOrderHistory from '../UserOrderHistory';\r\nfunction UserAction(props) {\r\n\r\nconst [isShowLoader, setisShowLoader] = useState(false)\r\nconst showLoader =(value)=>{\r\n    setisShowLoader(value);\r\n}\r\nreturn (\r\n    <>\r\n    <Container fluid>\r\n        <Row>\r\n            <Col md={3} className=\"p-4\">\r\n                <ListGroup>\r\n                    {/* <ListGroup.Item  active action>Category Management</ListGroup.Item>\r\n                    <ListGroup.Item  action>Product Management</ListGroup.Item> */}\r\n                    <ListGroup.Item  action active>Order History</ListGroup.Item>\r\n                    {/* <ListGroup.Item  action>Finance</ListGroup.Item> */}\r\n                </ListGroup>\r\n            </Col>\r\n            <Col md={9} className=\"p-4 production-col\" >\r\n                <Loader show={isShowLoader}/>\r\n                {/* <CategoryManagement showLoader={showLoader}/> */}\r\n                <UserOrderHistory showLoader={showLoader}/>\r\n            </Col>\r\n        </Row>\r\n    </Container>\r\n</>\r\n)\r\n\r\n}\r\nexport default UserAction\r\n","import {API_ROOT} from \"./BaseUrl\"\r\nimport axios from \"./interceptor-middleware\";\r\n//const url = '/memberGroups/';\r\n\r\nconst MemberGroupModel = {\r\n  getMemberGroups(){\r\n    return axios.get(`${API_ROOT}/memberGroups/entry`)\r\n  },\r\n  saveMemberGroups(data){\r\n    return axios.post(`${API_ROOT}/memberGroups/entry`,data)\r\n  },\r\n  saveImage(file){\r\n    return axios.post(`${API_ROOT}/member/image-upload`,file)\r\n  }\r\n  }\r\n    export default {MemberGroupModel};","import React, { useEffect, useState } from 'react';\r\nimport { Table, Button,ProgressBar } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport masterRecord from '../../../models/masterRecord';\r\nimport moment from 'moment';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { CHANGE_PAGE } from '../../../constants/actionTypes'\r\nfunction MemberGroup(props) {\r\n    const dispatch = useDispatch();\r\n    const [isShowLoader, setisShowLoader] = useState(0)\r\n    const [memberGroupRecords, setMemberGroupsRecords] = useState([]);\r\n    useEffect(() => {\r\n        setisShowLoader(10);\r\n        getMemberGroup();\r\n        dispatch({ type: CHANGE_PAGE, page: \"All Members Groups\" });\r\n    }, [])\r\n\r\n    const getMemberGroup = () => {\r\n        setisShowLoader(30);\r\n        masterRecord.MemberGroupModel.getMemberGroups().then(res => {\r\n            setisShowLoader(90);\r\n            if (res.statusCode == 200) {\r\n                setMemberGroupsRecords(res.body.message);\r\n            } else {\r\n                setMemberGroupsRecords([]);\r\n            }\r\n            setisShowLoader(100);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div class=\"content\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-12\">\r\n                        <Link to=\"/addMemberGroup\">\r\n                            <Button variant=\"info\" active>\r\n                                <i className=\"nc-icon nc-simple-add mr-2\"></i>\r\n                                Member Group\r\n                            </Button>\r\n                        </Link>\r\n\r\n                        <div class=\"card\">\r\n                            <div class=\"card-body\">\r\n                                <div class=\"table-responsive\">\r\n                                    <Table className=\" table\">\r\n                                        \r\n                                        <thead className=\"bg-primary\">\r\n                                            <tr>\r\n                                                <th>Group Code</th>\r\n                                                <th>Name</th>\r\n                                                <th>Remark</th>\r\n                                                <th>Created At</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {memberGroupRecords.map((group, id) => (<tr>\r\n                                                <td>{group.group_code}</td>\r\n                                                <td>{group.group_name}</td>\r\n                                                <td>{group.remark}</td>\r\n                                                <td>{moment(group.created_at).format(\"DD-MM-YYYY HH:SS\")}</td>\r\n                                            </tr>))}\r\n                                        </tbody>\r\n                                    </Table>\r\n                                    {isShowLoader<100?<div style={{ top: '50%',position:\"relative\" }}><ProgressBar style={{\"position\":\"relative\",\"width\":\"30%\",\"left\":\"40%\"}} striped variant=\"success\" now={isShowLoader} label={`${isShowLoader}%`} /></div>:\"\"}\r\n                                    \r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default MemberGroup;","import React, { useState, useEffect } from 'react';\r\nimport { Button, Form, Container, Row, Col, Toast, Alert } from 'react-bootstrap';\r\nimport { useFormik } from 'formik';\r\nimport masterRecord from '../../../models/masterRecord';\r\nimport Loader from '../../layout/Loader';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { CHANGE_PAGE } from '../../../constants/actionTypes'\r\n\r\nfunction AddMemberGroup(props) {\r\n  const auth = useSelector(state => state.auth);\r\n  const dispatch = useDispatch();\r\n  const [values, setValues] = useState({});\r\n  const [isShowLoader, setisShowLoader] = useState(false)\r\n  const [showToast, setShowToast] = useState({ isShow: false, type: \"\", message: \"\" })\r\n  useEffect(() => {\r\n    dispatch({ type: CHANGE_PAGE, page: \"Add Member Group\" });\r\n  }, [])\r\n  const handleAlertShow = (obj) => {\r\n    setShowToast(obj);\r\n    setTimeout(() => {\r\n      setShowToast({ isShow: false, type: \"\", message: \"\" })\r\n    }, 2000);\r\n  }\r\n  const validate = values => {\r\n    const errors = {};\r\n    if (!values.group_code) {\r\n      errors.group_code = 'Group Code is Required';\r\n    }\r\n    return errors;\r\n  };\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      group_code: '',\r\n      group_name: '',\r\n      remark: '',\r\n      user_id: auth.id\r\n    },\r\n    validate,\r\n    onSubmit: async (values) => {\r\n      setisShowLoader(true);\r\n      try {\r\n        let response = await masterRecord.MemberGroupModel.saveMemberGroups(values);\r\n        setisShowLoader(false);\r\n        if (response.statusCode == 200) {\r\n          handleAlertShow({ isShow: true, type: \"bg-success\", message: response.body.message })\r\n          formik.resetForm();\r\n        } else {\r\n          handleAlertShow({ isShow: true, type: \"bg-danger\", message: response.body.message })\r\n\r\n        }\r\n\r\n      } catch (error) {\r\n        setisShowLoader(false);\r\n        handleAlertShow({ isShow: true, type: \"bg-danger\", message: error.response.body.message })\r\n      }\r\n    },\r\n    handleChange: () => {\r\n      setValues(prevValues => ({\r\n        ...prevValues,\r\n        // we use the name to tell Formik which key of `values` to update\r\n        [values.target.name]: values.target.value\r\n      }))\r\n    },\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div class=\"content\">\r\n        {/* <Toast key={1} autohide delay={3000} show={showToast.isShow} onClose={() => setShowToast({ isShow: false, type: \"\", message: \"\" })} className={\"loader \" + (showToast.type)} >\r\n          <Toast.Header>\r\n            <strong className=\"me-auto\">{showToast.type == \"bg-danger\" ? \"Error\" : \"Success\"} Message</strong>\r\n          </Toast.Header>\r\n          <Toast.Body className=\"Dark\">\r\n            {showToast.message}\r\n          </Toast.Body>\r\n        </Toast> */}\r\n        <Alert dismissible delay={3000} show={showToast.isShow} onClose={() => setShowToast({ isShow: false, type: \"\", message: \"\" })} key={showToast.type == \"bg-danger\" ? \"danger\" : \"success\"} variant={showToast.type == \"bg-danger\" ? \"danger\" : \"success\"}>\r\n          {showToast.message}\r\n        </Alert>\r\n        <Loader show={isShowLoader} />\r\n        <div class=\"row\">\r\n          <div class=\"col-md-8\">\r\n            <div class=\"card card-user\">\r\n              {/* <div class=\"card-header\">\r\n                <h5 class=\"card-title\">Add Member Group</h5>\r\n              </div> */}\r\n              <div class=\"card-body\">\r\n                <Form onSubmit={formik.handleSubmit}>\r\n                  <Form.Group className=\"mb-3 form-group required\" controlId=\"formBasicEmail\">\r\n                    <Form.Label>Group Code</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      name=\"group_code\"\r\n                      placeholder=\"Enter group code\"\r\n                      onChange={formik.handleChange}\r\n                      value={formik.values.group_code}\r\n\r\n                    />\r\n                    {formik.touched.group_code && formik.errors.group_code ? (\r\n                      <div class=\"text-danger\">{formik.errors.group_code}</div>\r\n                    ) : null}\r\n\r\n                  </Form.Group>\r\n\r\n                  <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                    <Form.Label>Group Name</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      name=\"group_name\"\r\n                      placeholder=\"Enter group name\"\r\n                      onChange={formik.handleChange}\r\n                      value={formik.values.group_name}\r\n                    />\r\n                  </Form.Group>\r\n\r\n                  <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                    <Form.Label>Remark</Form.Label>\r\n                    <Form.Control as=\"textarea\" rows={3} name=\"remark\"\r\n                      onChange={formik.handleChange}\r\n                      value={formik.values.remark} />\r\n                  </Form.Group>\r\n                  <Button variant=\"primary\" type=\"submit\">\r\n                    Save\r\n                  </Button>\r\n\r\n                </Form>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </>\r\n\r\n  );\r\n}\r\n\r\nexport default AddMemberGroup;","import {requests, superagent, API_ROOT} from \"./BaseUrl\"\r\n\r\n//const url = '/memberGroups/';\r\n\r\nconst MemberDetailModel = {\r\n  getMemberDetailsData(member_id=\"all\"){\r\n    return superagent.get(`${API_ROOT}/member/entry/${member_id}`)\r\n  },\r\n  saveMemberDetails(data){\r\n    return superagent.post(`${API_ROOT}/member/entry`,data)\r\n\r\n  },\r\n  deleteMember(id){\r\n    return superagent.del(`${API_ROOT}/member/entry/${id}`)\r\n  },  \r\n  editMember(data,id){\r\n    return superagent.put(`${API_ROOT}/member/entry/${id}`,data)\r\n  }  \r\n    \r\n  }\r\n    export default {MemberDetailModel};","import React, { useState, useEffect } from 'react';\r\nimport { Button, Form, Row, Col, Alert } from 'react-bootstrap';\r\nimport DatePicker from \"react-datepicker\";\r\nimport { useFormik } from 'formik';\r\nimport memberDetails from \"../../../models/memberDetails\"\r\nimport masterRecord from '../../../models/masterRecord';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { CHANGE_PAGE } from '../../../constants/actionTypes'\r\nimport Loader from '../../layout/Loader';\r\nimport {API_ROOT} from \"../../../models/BaseUrl\"\r\n//import \"react-datepicker/dist/react-datepicker.css\";\r\nfunction AddMember(props) {\r\n    const auth = useSelector(state => state.auth);\r\n    let history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const [enrollmentDate, setEnrollmentDate] = useState(new Date());\r\n    const [dob, setDob] = useState();\r\n    const [values, setValues] = useState({});\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [groups, setGroups] = useState([])\r\n    const [showToast, setShowToast] = useState({ isShow: false, type: \"\", message: \"\" })\r\n    const [image, setImage] = useState(\"\")\r\n    let baseURL = API_ROOT.replace('/api','/')\r\n    useEffect(() => {\r\n        console.log(props);\r\n        dispatch({ type: CHANGE_PAGE, page: \"Add Member\" });\r\n        if (props.location.state)\r\n            getMemberDetails(props.location.state);\r\n        getMemberGroups();\r\n    }, [])\r\n    const getMemberGroups = async () => {\r\n        try {\r\n            setisShowLoader(true);\r\n            let response = await masterRecord.MemberGroupModel.getMemberGroups();\r\n            setisShowLoader(false);\r\n            setGroups(response.body.message)\r\n        } catch (error) {\r\n            setisShowLoader(false);\r\n            setShowToast({ isShow: true, type: \"bg-danger\", message: error.response.body.message })\r\n        }\r\n    }\r\n    const getMemberDetails = async (member_id) => {\r\n        try {\r\n            setisShowLoader(true);\r\n            let response = await memberDetails.MemberDetailModel.getMemberDetailsData(member_id);\r\n            console.log(response);\r\n            formik.values.aadhar_number = response.body.message[0].aadhar_number\r\n            formik.values.member_name = response.body.message[0].member_name\r\n            formik.values.gender = response.body.message[0].gender\r\n            formik.values.age = response.body.message[0].age\r\n            formik.values.marital_status = response.body.message[0].marital_status\r\n            formik.values.mobile_number = response.body.message[0].mobile_number\r\n            formik.values.email_id = response.body.message[0].email_id\r\n            formik.values.member_group_id = response.body.message[0].member_group_id\r\n            formik.values.pan_card_number = response.body.message[0].pan_card_number\r\n            formik.values.driving_license_number = response.body.message[0].driving_license_number\r\n            formik.values.voter_id_number = response.body.message[0].voter_id_number\r\n            formik.values.ration_card_number = response.body.message[0].ration_card_number\r\n            formik.values.bank_account = response.body.message[0].bank_account\r\n            formik.values.bank_ifsc_code = response.body.message[0].bank_ifsc_code\r\n            formik.values.bank_account_holder = response.body.message[0].bank_account_holder\r\n            formik.values.enrollment_date = response.body.message[0].enrollment_date\r\n            setEnrollmentDate(new Date(response.body.message[0].enrollment_date));\r\n            formik.values.date_of_birth = response.body.message[0].date_of_birth\r\n            if(response.body.message[0].image){\r\n                setImage(response.body.message[0].image);\r\n            }\r\n            setDob(new Date(response.body.message[0].date_of_birth));\r\n\r\n            setisShowLoader(false);\r\n            //setGroups(response.body.message)\r\n        } catch (error) {\r\n            setisShowLoader(false);\r\n            setShowToast({ isShow: true, type: \"bg-danger\", message: error.response.body.message })\r\n        }\r\n\r\n    }\r\n    const validate = values => {\r\n        window.scrollTo(0, 0);\r\n        const errors = {};\r\n        if (!values.member_name) {\r\n            errors.member_name = 'Please provide member name';\r\n        }\r\n        return errors;\r\n    };\r\n    const getImage= async(e)=>{\r\n        try {\r\n            if(e.target.files.length==0)\r\n                return false;\r\n            setisShowLoader(true);\r\n            setShowToast({ isShow: false, type: \"\", message: \"\" })\r\n            const file = e.target.files[0];\r\n            let fileExtArr = file.name.split(\".\");\r\n            let fileExt = fileExtArr[1];\r\n            if(fileExt!=\"png\" && fileExt!=\"jpg\"){\r\n                setisShowLoader(false);\r\n                setShowToast({ isShow: true, type: \"bg-danger\", message: \"Please upload Image type PNG or JPG\" })\r\n            }\r\n            let formData = new FormData();\r\n            formData.append('image', file);\r\n            let response = await masterRecord.MemberGroupModel.saveImage(formData);\r\n            if(response.status==200){\r\n                setImage(response.body.message.image.path)\r\n            }\r\n            console.log(response);\r\n            setisShowLoader(false);\r\n        } catch (error) {\r\n            setisShowLoader(false);\r\n            setShowToast({ isShow: true, type: \"bg-danger\", message: error.toString() })\r\n\r\n        }\r\n    }\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            enrollment_date: enrollmentDate,\r\n            date_of_birth: dob,\r\n            member_name: '',\r\n            gender: \"\",\r\n            age: \"\",\r\n            marital_status: \"\",\r\n            mobile_number: \"\",\r\n            email_id: \"\",\r\n            member_group_id: \"\",\r\n            aadhar_number: \"\",\r\n            pan_card_number: \"\",\r\n            driving_license_number: \"\",\r\n            voter_id_number: \"\",\r\n            ration_card_number: \"\",\r\n            bank_account: \"\",\r\n            bank_ifsc_code: \"\",\r\n            bank_account_holder: \"\",\r\n            user_id: auth.id\r\n        },\r\n        validate,\r\n        onSubmit: async (values) => {\r\n            setisShowLoader(true);\r\n            window.scrollTo(0, 0);\r\n            try {\r\n                values.enrollment_date = enrollmentDate;\r\n                values.date_of_birth = dob;\r\n                values.image = image;\r\n                let response = [];\r\n                if (props.location.state) {\r\n                    response = await memberDetails.MemberDetailModel.editMember(values, props.location.state);\r\n                } else {\r\n                    response = await memberDetails.MemberDetailModel.saveMemberDetails(values);\r\n                }\r\n                setisShowLoader(false);\r\n                if (response.statusCode == 200) {\r\n                    formik.resetForm();\r\n                    if (props.location.state)\r\n                        history.push(\"/member\")\r\n                    setShowToast({ isShow: true, type: \"bg-success\", message: response.body.message })\r\n                } else {\r\n                    setShowToast({ isShow: true, type: \"bg-danger\", message: response.body.message })\r\n                }\r\n\r\n            } catch (error) {\r\n                console.log(error.response.body.message);\r\n                setisShowLoader(false);\r\n                setShowToast({ isShow: true, type: \"bg-danger\", message: error.response.body.message })\r\n            }\r\n        }\r\n    });\r\n    return (\r\n        <>\r\n\r\n            <div class=\"content\">\r\n                <Alert dismissible delay={3000} show={showToast.isShow} onClose={() => setShowToast({ isShow: false, type: \"\", message: \"\" })} key={showToast.type == \"bg-danger\" ? \"danger\" : \"success\"} variant={showToast.type == \"bg-danger\" ? \"danger\" : \"success\"}>\r\n                    {showToast.message}\r\n                </Alert>\r\n\r\n                <Loader show={isShowLoader} />\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-8\">\r\n                        <div class=\"card card-user\">\r\n                            {/* <div class=\"card-header\">\r\n                                <h5 class=\"card-title\">Add Member</h5>\r\n                            </div> */}\r\n                            <div class=\"card-body\">\r\n\r\n                                <Form onSubmit={formik.handleSubmit}>\r\n                                    <Row className=\"mb-3\" >\r\n                                        <Form.Group as={Col} className=\"form-group required\" controlId=\"formGridEnroll\">\r\n                                            <Form.Label >Enrollment Date</Form.Label>\r\n                                            <DatePicker className=\"form-control\"\r\n                                                selected={enrollmentDate}\r\n                                                onChange={(date) => setEnrollmentDate(date)}\r\n                                                name=\"enrollment_date\"\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Col} className=\"form-group required\" controlId=\"formGridName\">\r\n                                            <Form.Label >Member Name</Form.Label>\r\n                                            <Form.Control type=\"text\"\r\n                                                placeholder=\"member name\"\r\n                                                name=\"member_name\"\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.member_name}\r\n\r\n                                            />\r\n                                            {formik.touched.member_name && formik.errors.member_name ? (\r\n                                                <div class=\"text-danger\">{formik.errors.member_name}</div>\r\n                                            ) : null}\r\n                                        </Form.Group>\r\n                                    </Row>\r\n                                    <Row className=\"mb-3\" >\r\n                                        <Form.Group as={Col} controlId=\"formGriddob\">\r\n                                            <Form.Label>Date of Birth</Form.Label>\r\n                                            <DatePicker\r\n                                                className=\"form-control\"\r\n                                                selected={dob}\r\n                                                onChange={(date) => setDob(date)}\r\n                                                name=\"date_of_birth\"\r\n                                            />\r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} className=\"mb-3\" controlId=\"formGridAddress1\">\r\n                                            <Form.Label>Gender</Form.Label>\r\n                                            <select\r\n                                                className=\"form-control\"\r\n                                                name=\"gender\"\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.gender}\r\n                                            >\r\n                                                <option key=\"\" value=\"\">Select Gender</option>\r\n\r\n                                                <option key=\"male\" value=\"male\">Male</option>\r\n                                                <option key=\"female\" value=\"female\">Female</option>\r\n\r\n                                            </select>\r\n                                        </Form.Group>\r\n\r\n                                    </Row>\r\n                                    <Row className=\"mb-3\" >\r\n                                        <Form.Group as={Col} controlId=\"formGridAge\">\r\n                                            <Form.Label>Age</Form.Label>\r\n                                            <Form.Control\r\n                                                name=\"age\"\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.age}\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Col} controlId=\"formGridState\">\r\n                                            <Form.Label>Marital Status</Form.Label>\r\n                                            <Form.Control\r\n                                                name=\"marital_status\"\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.marital_status}\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                    </Row>\r\n\r\n                                    <Row className=\"mb-3\" >\r\n                                        <Form.Group as={Col} controlId=\"formGridAge\">\r\n                                            <Form.Label>Phone number</Form.Label>\r\n                                            <Form.Control\r\n                                                name=\"mobile_number\"\r\n                                                type=\"number\"\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.mobile_number}\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Col} controlId=\"formGridState\">\r\n                                            <Form.Label>Email</Form.Label>\r\n                                            <Form.Control\r\n                                                name=\"email_id\"\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.email_id}\r\n                                                type=\"text\"\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                    </Row>\r\n                                    <Row className=\"mb-3\">\r\n                                        <Form.Group as={Col} md={6} className=\"mb-3\" controlId=\"formGridAddress1\">\r\n                                            <Form.Label>Member Group</Form.Label>\r\n                                            <select className=\"form-control\" name=\"member_group_id\" onChange={formik.handleChange}\r\n                                                value={formik.values.member_group_id}\r\n                                            >\r\n                                                <option key=\"\" value=\"\">Select Member Group</option>\r\n                                                {groups.map((group, id) => (\r\n                                                    <option key={group.group_code} value={group.group_code}>{group.group_code}</option>\r\n                                                ))}\r\n                                            </select>\r\n                                        </Form.Group>\r\n\r\n                                    </Row>\r\n                                    <Row className=\"mb-3\">\r\n                                        <Col>\r\n                                            <h3 className=\"text-info\">KYC Information</h3>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row className=\"mb-3\" >\r\n                                        <Form.Group as={Col} controlId=\"formGridAge\">\r\n                                            <Form.Label>Aadhar no.</Form.Label>\r\n                                            <Form.Control\r\n                                                name=\"aadhar_number\"\r\n                                                type=\"number\"\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.aadhar_number}\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Col} controlId=\"formGridState\">\r\n                                            <Form.Label>PAN</Form.Label>\r\n                                            <Form.Control\r\n                                                name=\"pan_card_number\"\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.pan_card_number}\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                    </Row>\r\n                                    <Row className=\"mb-3\" >\r\n                                        <Form.Group as={Col} controlId=\"formGridAge\">\r\n                                            <Form.Label>Driving Licence No.</Form.Label>\r\n                                            <Form.Control\r\n                                                name=\"driving_license_number\"\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.driving_license_number}\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Col} controlId=\"formGridState\">\r\n                                            <Form.Label>Voter Id No.</Form.Label>\r\n                                            <Form.Control\r\n                                                name=\"voter_id_number\"\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.voter_id_number}\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                    </Row>\r\n                                    <Row className=\"mb-3\" >\r\n                                        <Form.Group as={Col} md={6} controlId=\"formGridAge\">\r\n                                            <Form.Label>Ration Card No.</Form.Label>\r\n                                            <Form.Control\r\n                                                name=\"ration_card_number\"\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.ration_card_number}\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                    </Row>\r\n\r\n                                    <Row className=\"mb-3\">\r\n                                        <Col>\r\n                                            <h3 className=\"text-info\">Bank Details</h3>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row className=\"mb-3\" >\r\n                                        <Form.Group as={Col} controlId=\"formGridAge\">\r\n                                            <Form.Label>Bank Account No.</Form.Label>\r\n                                            <Form.Control\r\n                                                name=\"bank_account\"\r\n                                                type=\"number\"\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.bank_account}\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Col} controlId=\"formGridState\">\r\n                                            <Form.Label>IFSC code</Form.Label>\r\n                                            <Form.Control\r\n                                                name=\"bank_ifsc_code\"\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.bank_ifsc_code}\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                    </Row>\r\n                                    <Row className=\"mb-3\" >\r\n                                        <Form.Group as={Col} md={6} controlId=\"formGridAge\">\r\n                                            <Form.Label>Account holder name</Form.Label>\r\n                                            <Form.Control\r\n                                                name=\"bank_account_holder\"\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.bank_account_holder}\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n\r\n                                    </Row>\r\n\r\n                                    <Button variant=\"primary\" type=\"submit\">\r\n                                        Save\r\n                                    </Button>\r\n                                </Form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-4\">\r\n                        <div class=\"card card-user\">\r\n                            <div class=\"card-body\">\r\n                                <div class=\"image\">\r\n                                    <img src=\"../assets/img/damir-bosnjak.jpg\" alt=\"...\" />\r\n                                </div>\r\n\r\n                                <div class=\"author\">\r\n                                    <a href=\"#\">                                      \r\n                                        <img class=\"avatar border-gray\" src={image==\"\"?\"../assets/img/blank_image.jpg\":baseURL+image} alt=\"...\" />\r\n                                        <input type=\"file\" name=\"profile_image\" onChange={(e)=>getImage(e)}/>\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AddMember;","import React, { useEffect, useState, useMemo } from 'react';\r\nimport { Table,Button,Modal,Pagination,ProgressBar } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport memberRecord from '../../../models/memberDetails';\r\nimport moment from 'moment';\r\nimport {useTable,useSortBy,usePagination,useFilters } from 'react-table'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { CHANGE_PAGE } from '../../../constants/actionTypes'\r\n\r\nfunction Members(props) {\r\n    let history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const [isShowLoader, setisShowLoader] = useState(0)\r\n    const [showDeleteModel, setShowDeleteModel] = useState(false)\r\n    const [deleteID, setDeleteID] = useState(0)\r\n    const [memberRecords,setMemberRecords]=useState([]);\r\n    useEffect(() => {\r\n        setisShowLoader(10);\r\n        getMemberGroup();\r\n        dispatch({ type: CHANGE_PAGE, page: \"All Members\" });\r\n    },[])\r\n    \r\n    const data = useMemo(\r\n        () => \r\n        memberRecords.map((record,index)=>\r\n                { \r\n             return {\r\n                col1:moment(record.enrollment_date).format('DD-MM-yyy hh:ss A'),\r\n                col2:record.member_name,\r\n                col3:record.member_group_id,\r\n                col4:record.mobile_number,\r\n                col5:record\r\n                }\r\n            }\r\n        )\r\n        ,\r\n        [memberRecords]\r\n      )   \r\n\r\n    const columns = useMemo(\r\n        () => [\r\n          {\r\n            Header: 'Enrollment Date',\r\n            accessor: 'col1', // accessor is the \"key\" in the data\r\n            allowFilter:true\r\n          },\r\n          {\r\n            Header: 'Member Name',\r\n            accessor: 'col2',\r\n            allowFilter:true\r\n          },\r\n          {\r\n            Header: 'Member Group Code',\r\n            accessor: 'col3',\r\n            allowFilter:true\r\n            },\r\n          {\r\n            Header: 'Mobile Number',\r\n            accessor: 'col4',\r\n            allowFilter:true\r\n          },\r\n          {\r\n            Header: 'Action',\r\n            accessor: 'col5',\r\n            allowFilter:false\r\n          }\r\n\r\n        ],\r\n        []\r\n      )    \r\n\r\n    const getMemberGroup = () =>{\r\n        setisShowLoader(30);\r\n        memberRecord.MemberDetailModel.getMemberDetailsData().then(res=>{\r\n            setisShowLoader(90);\r\n            if(res.statusCode == 200){\r\n                setMemberRecords(res.body.message);\r\n            }else{\r\n                setMemberRecords([]);\r\n            }\r\n            setisShowLoader(100);\r\n        })\r\n       \r\n    }\r\n    const deleteHandle=(id)=>{\r\n        setDeleteID(id);        \r\n        setShowDeleteModel(true);\r\n    }\r\n    const deleteMember=async()=>{\r\n        setShowDeleteModel(false);\r\n        let initialData = [...memberRecords];\r\n        setMemberRecords([]);\r\n        try{\r\n            setisShowLoader(30);\r\n            let response = await memberRecord.MemberDetailModel.deleteMember(deleteID);\r\n            setisShowLoader(90);\r\n            if(response.statusCode == 200){\r\n                let UpdatedList = initialData.filter((member,idx)=>member.member_id!=deleteID);\r\n                setMemberRecords(UpdatedList);\r\n             }\r\n             setisShowLoader(100);\r\n        }catch (error) {\r\n                console.log(error.response.body.message);\r\n                setisShowLoader(100);\r\n            }\r\n              \r\n    }\r\n  \r\n    function DefaultColumnFilter({\r\n        column: { filterValue, preFilteredRows, setFilter },\r\n    }) {\r\n        const count = preFilteredRows.length\r\n    \r\n        return (\r\n            <input\r\n                className=\"form-control\"\r\n                value={filterValue || ''}\r\n                onChange={e => {\r\n                    setFilter(e.target.value || undefined)\r\n                }}\r\n                placeholder={`Search ${count} records...`}\r\n            />\r\n        )\r\n    }    \r\n    const defaultColumn = React.useMemo(\r\n        () => ({\r\n            // Default Filter UI\r\n            Filter: DefaultColumnFilter,\r\n        }),\r\n        []\r\n    ) \r\n    const paginate = (totalPage)=>{\r\n      let pageNumberArray = [];\r\n      for(let i=1;i<=totalPage;i++){\r\n        pageNumberArray.push(i);\r\n      }\r\n      return(      \r\n      <Pagination>\r\n        <Pagination.First  onClick={() => gotoPage(0)}/>\r\n        <Pagination.Prev onClick={() => previousPage()} disabled={!canPreviousPage}/>\r\n        {pageNumberArray.map(num=><Pagination.Item key={num} active={num === (pageIndex+1)} onClick={() => gotoPage(num-1)}>{num}</Pagination.Item>)}\r\n        <Pagination.Next onClick={() => nextPage()} disabled={!canNextPage}/>\r\n        <Pagination.Last onClick={() => gotoPage(totalPage-1)}/>\r\n        </Pagination>\r\n      );\r\n    \r\n    }\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n        pageOptions,\r\n        page,\r\n        pageCount,\r\n        state: { pageIndex, pageSize },\r\n        gotoPage,\r\n        previousPage,\r\n        nextPage,\r\n        setPageSize,\r\n        canPreviousPage,\r\n        canNextPage,  \r\n      } = useTable({ columns, data, defaultColumn, initialState: { pageIndex: 0 }},useFilters,useSortBy,usePagination)\r\n    return (\r\n        <>\r\n      <Modal show={showDeleteModel} onHide={()=>setShowDeleteModel(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Delete Member</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>Are you sure?</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={()=>setShowDeleteModel(false)}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={()=>deleteMember()}>\r\n            Delete\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>        \r\n        {/* <Loader show={isShowLoader}/> */}\r\n        <div class=\"content\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-12\">\r\n                <Link to=\"/addMember\">\r\n                <Button variant=\"info\" active>\r\n                <i className=\"nc-icon nc-simple-add mr-2\"></i>\r\n                    Add Member\r\n                </Button>\r\n                </Link>\r\n                {/* </Col>\r\n            </Row>\r\n            <Row>\r\n            <Col> */}\r\n            <div className=\"text-right\">\r\n              {paginate(pageCount)}\r\n            </div>   \r\n            <div class=\"card\">\r\n                <div class=\"card-body\">\r\n                    <div class=\"table-responsive\">\r\n\r\n            <Table {...getTableProps()} className=\"table small\" >\r\n            <thead className=\"bg-primary\">\r\n                    {headerGroups.map(headerGroup => (\r\n                    <tr {...headerGroup.getHeaderGroupProps()}>\r\n                        {headerGroup.headers.map(column => (\r\n                        <th\r\n                            {...column.getHeaderProps(column.getSortByToggleProps())}\r\n                        >\r\n                            {column.render('Header')}\r\n                            <span>\r\n                            {column.isSorted ? (column.isSortedDesc ? ' 🔽' : ' 🔼') : ''}\r\n                            </span>\r\n                            <div>{column.allowFilter? column.render('Filter') : null}</div>\r\n                        </th>\r\n                        ))}\r\n                    </tr>\r\n                    ))}\r\n            </thead>\r\n            <tbody {...getTableBodyProps()}>\r\n\r\n                    {page.map(row => {\r\n                        prepareRow(row)\r\n                        return (\r\n                            <tr {...row.getRowProps()}>\r\n                            {row.cells.map(cell => {\r\n                                console.log(cell);\r\n                                if(cell.column.id !=\"col5\"){                                \r\n                                    return (\r\n                                        <td {...cell.getCellProps()}>\r\n                                            {cell.render('Cell')}\r\n                                        </td>\r\n                                        )\r\n                                    }else{\r\n                                        return (\r\n                                            <td>\r\n                                                <Button size={\"sm\"} variant=\"primary\"  onClick={()=>{history.push(\"/viewMemberDetail\",cell.value.member_id)}}>View</Button>\r\n                                                {' '}\r\n                                                <Button size={\"sm\"} variant=\"success\" onClick={()=>{history.push(\"/addMember\",cell.value.member_id)}} >Edit</Button>\r\n                                                {' '}\r\n                                                <Button size={\"sm\"} variant=\"danger\" onClick={()=>deleteHandle(cell.value.member_id)} >Delete</Button>\r\n                                            </td>\r\n                                        )\r\n                                    }\r\n                            })}\r\n                            </tr>\r\n                        )\r\n                        })}\r\n            </tbody>\r\n        </Table>\r\n        {isShowLoader<100?<div style={{ top: '50%',position:\"relative\" }}><ProgressBar style={{\"position\":\"relative\",\"width\":\"30%\",\"left\":\"40%\"}} striped variant=\"success\" now={isShowLoader} label={`${isShowLoader}%`} /></div>:\"\"}\r\n        </div></div></div>\r\n        <div className=\"text-right\">\r\n          {paginate(pageCount)}\r\n        </div>   \r\n        </div>\r\n        </div>\r\n        </div>\r\n        </>\r\n        );\r\n}\r\n\r\nexport default Members;","import React, { useEffect, useState } from 'react';\r\nimport { Table, Button, Container, Row, Col } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport memberRecord from '../../../models/memberDetails';\r\nimport Loader from '../../layout/Loader';\r\nimport moment from 'moment';\r\nimport {API_ROOT} from \"../../../models/BaseUrl\"\r\nfunction Members(props) {\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [memberRecords, setMemberRecords] = useState([]);\r\n    let baseURL = API_ROOT.replace('/api','/')\r\n    useEffect(() => {\r\n        console.log(props);\r\n        getMemberGroup();\r\n    }, [])\r\n\r\n    const getMemberGroup = () => {\r\n        setisShowLoader(true);\r\n        memberRecord.MemberDetailModel.getMemberDetailsData(props.location.state).then(res => {\r\n            setisShowLoader(false);\r\n            if (res.statusCode == 200) {\r\n                setMemberRecords(res.body.message[0]);\r\n            } else {\r\n                setMemberRecords([]);\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div class=\"content\">\r\n                <Loader show={isShowLoader} />\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-12\">\r\n                        <div class=\"card card-user\">\r\n                            {/* <div class=\"card-header\">\r\n                            <h5 class=\"card-title\">Member Detail - {memberRecords.member_name}</h5> */}\r\n                        <div class=\"image\">\r\n                            <img src=\"../assets/img/damir-bosnjak.jpg\" alt=\"...\"/>\r\n                        </div>\r\n                            <div class=\"card-body\">\r\n                                <div class=\"author\">\r\n                                    \r\n                                        <img class=\"avatar border-gray\" src={memberRecords.image?baseURL+memberRecords.image:\"../assets/img/damir-bosnjak.jpg\"} alt=\"...\" />\r\n                                        <h5 class=\"title\">{memberRecords.member_name}</h5>\r\n                                    \r\n                                    <p class=\"description\">\r\n                                        @{memberRecords.member_name}\r\n                                    </p>\r\n                                </div>\r\n                                <Table className=\"table\" >\r\n                                    <tbody>\r\n                                        <tr><th>Enrollment Date</th><td>{moment(memberRecords.enrollment_date).format(\"DD-MM-YYYY hh:ss A\")}</td> </tr>\r\n                                        {/* <tr><th>Member Name</th>  <td>{memberRecords.member_name}</td></tr> */}\r\n                                        <tr><th>Member Id</th>  <td>{memberRecords.member_id}</td></tr>\r\n                                        <tr> <th>Gender</th>  <td>{memberRecords.gender}</td></tr>\r\n                                        <tr><th>DOB</th>   <td>{memberRecords.date_of_birth?moment(memberRecords.date_of_birth).format(\"DD-MM-YYYY\"):\"\"} </td></tr>\r\n                                        <tr><th>Age</th> <td>{memberRecords.age}</td></tr>\r\n                                        <tr><th>Marital Status</th>  <td>{memberRecords.marital_status}</td></tr>\r\n                                        <tr><th>Mobile Number</th> <td>{memberRecords.mobile_number}</td></tr>\r\n                                        <tr><th>Email Id</th> <td>{memberRecords.email_id}</td></tr>\r\n                                        <tr> <th>Member Group Id</th>  <td>{memberRecords.member_group_id}</td></tr>\r\n                                        <tr> <th>Aadhar Number</th> <td>{memberRecords.aadhar_number}</td></tr>\r\n                                        <tr> <th>Driving License Number</th>  <td>{memberRecords.driving_license_number}</td></tr>\r\n                                        <tr> <th>Voter Id Number </th>  <td>{memberRecords.voter_id_number}</td></tr>\r\n                                        <tr>  <th>Ration Card Number</th> <td>{memberRecords.ration_card_number}</td></tr>\r\n                                        <tr> <th>PAN Number</th> <td>{memberRecords.pan_card_number}</td></tr>\r\n                                        <tr> <th>Bank Account no.</th> <td>{memberRecords.bank_account}</td></tr>\r\n                                        <tr> <th>IFSC Code</th> <td>{memberRecords.bank_ifsc_code}</td></tr>\r\n                                        <tr> <th>Bank Account Holder</th> <td>{memberRecords.bank_account_holder}</td></tr>\r\n\r\n                                    </tbody>\r\n                                </Table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* </div> */}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Members;","import moment from \"moment\"\r\nimport { requests, superagent, API_ROOT } from \"./BaseUrl\"\r\n//const url = '/memberGroups/';\r\n\r\nconst SchemeModel = {\r\n  getScheme() {\r\n    return superagent.get(`${API_ROOT}/scheme/entry`)\r\n  },\r\n  saveScheme(data) {\r\n    return superagent.post(`${API_ROOT}/scheme/entry`, data)\r\n  },\r\n  deleteScheme(id){\r\n    return superagent.del(`${API_ROOT}/scheme/entry/${id}`)\r\n  },  \r\n  getLoanAppInitialData(){\r\n      return [superagent.get(`${API_ROOT}/scheme/entry`),superagent.get(`${API_ROOT}/member/entry/all`)]\r\n  }\r\n\r\n}\r\nconst GroupLoanModel = {\r\n  applyForloan(data){\r\n    return superagent.post(`${API_ROOT}/groupLoan/applyGroupLoan`, data)\r\n  },\r\n  getApprovalList(){\r\n    return superagent.get(`${API_ROOT}/groupLoan/entry/pendingApproval`);\r\n  },\r\n  getDisburseList(){\r\n    return superagent.get(`${API_ROOT}/groupLoan/entry/pendingDisburse`);\r\n  },\r\n  getLoanDetailbyId(id){\r\n    return superagent.get(`${API_ROOT}/groupLoan/entry/${id}`);\r\n  },\r\n  approveRejectLoan(data){\r\n    return superagent.post(`${API_ROOT}/groupLoan/approveLoan`, data)\r\n  },\r\n  getAllLoanApplications(){\r\n    return superagent.get(`${API_ROOT}/groupLoan/entry/all`);\r\n  },\r\n  disburseRejectLoan(data){\r\n    return superagent.post(`${API_ROOT}/groupLoan/disburseLoan`, data)\r\n  },\r\n\r\n}\r\nconst EmiModel = {\r\n  calculateEMI(data){\r\n    return superagent.post(`${API_ROOT}/emis/calculateEMI`, data);\r\n  },\r\n  getDueEmis(today = moment().format(\"yyyy-MM-DD\")){\r\n    return superagent.get(`${API_ROOT}/emis/dueEMIs/${today}`);\r\n  },\r\n  paidEmi(id){\r\n    return superagent.put(`${API_ROOT}/emis/entry`,{\"id\":id});\r\n  },\r\n  getPaidEmis(loanAccountNo){\r\n    return superagent.get(`${API_ROOT}/emis/entry/${loanAccountNo}`);\r\n  }\r\n}\r\nexport default { SchemeModel,GroupLoanModel,EmiModel };","import React, { useEffect, useState } from 'react';\r\nimport { Table, Button, Container, Row, Col, Modal } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport groupLoan from '../../models/groupLoan';\r\nimport Loader from '../layout/Loader';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { CHANGE_PAGE } from '../../constants/actionTypes'\r\nfunction Scheme(props) {\r\n    const dispatch = useDispatch();\r\n    const [showDeleteModel, setShowDeleteModel] = useState(false)\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [schemes, setSchemes] = useState([]);\r\n    const [deleteID, setDeleteID] = useState(0)\r\n    useEffect(() => {\r\n        getSchemes();\r\n        dispatch({ type: CHANGE_PAGE, page: \"All Schemes\" });\r\n    }, [])\r\n\r\n    const getSchemes = () => {\r\n        setisShowLoader(true);\r\n        groupLoan.SchemeModel.getScheme().then(res => {\r\n            setisShowLoader(false);\r\n            if (res.statusCode == 200) {\r\n                setSchemes(res.body.message);\r\n            } else {\r\n                setSchemes([]);\r\n            }\r\n        })\r\n    }\r\n    const deleteHandle = (id) => {\r\n        setDeleteID(id);\r\n        setShowDeleteModel(true);\r\n    }\r\n\r\n    const deleteScheme = async () => {\r\n        setShowDeleteModel(false);\r\n        try {\r\n            setisShowLoader(true);\r\n            let response = await groupLoan.SchemeModel.deleteScheme(deleteID);\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n                let UpdatedList = schemes.filter((scheme, idx) => scheme.id != deleteID);\r\n                setSchemes(UpdatedList);\r\n            }\r\n        } catch (error) {\r\n            console.log(error.response.body.message);\r\n            setisShowLoader(false);\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"content\">\r\n                <Modal show={showDeleteModel} onHide={() => setShowDeleteModel(false)}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Delete Scheme</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>Are you sure?</Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={() => setShowDeleteModel(false)}>\r\n                            Cancel\r\n                        </Button>\r\n                        <Button variant=\"primary\" onClick={() => deleteScheme()}>\r\n                            Delete\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n\r\n                <Loader show={isShowLoader} />\r\n                <Row className=\"mb-5 mt-3\">\r\n                    <Col>\r\n                        <Link to=\"/addScheme\">\r\n                            <Button variant=\"info\" size=\"md\" active>\r\n                                Add Scheme\r\n                            </Button>\r\n                        </Link>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <Table className=\"shadow-lg p-3 mb-5 bg-white rounded\" striped bordered hover responsive>\r\n                            <thead className=\"bg-primary\">\r\n                                <tr>\r\n                                    <th>Scheme code</th>\r\n                                    <th>Scheme name</th>\r\n                                    <th>Max amount</th>\r\n                                    <th>Interest rate (%)</th>\r\n                                    <th>EMI type</th>\r\n                                    <th>Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {schemes.map((scheme, id) => (<tr>\r\n                                    <td>{scheme.scheme_code}</td>\r\n                                    <td>{scheme.scheme_name}</td>\r\n                                    <td>{scheme.max_amount}</td>\r\n                                    <td>{scheme.interest_rate}%</td>\r\n                                    <td>{scheme.EMI_type}</td>\r\n                                    <td>\r\n                                        <Button variant=\"danger\" size={\"sm\"} onClick={() => deleteHandle(scheme.id)} className=\"ml-2\">Delete</Button>\r\n\r\n                                    </td>\r\n                                </tr>))}\r\n                            </tbody>\r\n                        </Table>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default Scheme;","import React, { useState,useEffect } from 'react';\r\nimport { Button, Form, Container, Row, Col, Toast } from 'react-bootstrap';\r\nimport { useFormik } from 'formik';\r\nimport groupLoan from '../../models/groupLoan';\r\nimport Loader from '../layout/Loader';\r\nimport { useSelector,useDispatch } from \"react-redux\";\r\nimport {CHANGE_PAGE} from '../../constants/actionTypes'\r\nfunction AddScheme(props) {\r\n  const auth = useSelector(state => state.auth);\r\n  const dispatch = useDispatch();\r\n  const [values, setValues] = useState({});\r\n  const [isShowLoader, setisShowLoader] = useState(false)\r\n  const [showToast, setShowToast] = useState({ isShow: false, type: \"\", message: \"\" })\r\n  useEffect(()=>{\r\n    dispatch({type:CHANGE_PAGE,page:\"Add Scheme\"});\r\n  },[]);\r\n  const validate = values => {\r\n    const errors = {};\r\n    if (!values.scheme_code) {\r\n      errors.scheme_code = 'Scheme code is Required!';\r\n    }\r\n    if (!values.scheme_name) {\r\n      errors.scheme_name = 'Scheme name is Required!';\r\n    }\r\n    if (!values.max_amount) {\r\n      errors.max_amount = 'Max amount is Required!';\r\n    }\r\n    if (!values.interest_rate) {\r\n      errors.interest_rate = 'Interest rate is Required!';\r\n    }\r\n    if (!values.EMI_type) {\r\n      errors.EMI_type = 'EMI type is Required!';\r\n    }\r\n    return errors;\r\n  };\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      scheme_code: '',\r\n      scheme_name: '',\r\n      max_amount: '',\r\n      interest_rate: '',\r\n      EMI_type: '',\r\n      user_id: auth.id\r\n    },\r\n    validate,\r\n    onSubmit: async (values) => {\r\n      setisShowLoader(true);\r\n      try {\r\n        let response = await groupLoan.SchemeModel.saveScheme(values);\r\n        setisShowLoader(false);\r\n        if (response.statusCode == 200) {\r\n          formik.resetForm();\r\n          setShowToast({ isShow: true, type: \"bg-success\", message: response.body.message })\r\n        } else {\r\n          setShowToast({ isShow: true, type: \"bg-danger\", message: response.body.message })\r\n        }\r\n\r\n      } catch (error) {\r\n        setisShowLoader(false);\r\n        setShowToast({ isShow: true, type: \"bg-danger\", message: error.response.body.message })\r\n      }\r\n    },\r\n    handleChange: () => {\r\n      setValues(prevValues => ({\r\n        ...prevValues,\r\n        // we use the name to tell Formik which key of `values` to update\r\n        [values.target.name]: values.target.value\r\n      }))\r\n    },\r\n  });\r\n  return (\r\n    <>\r\n      <Toast key={1} autohide delay={3000} show={showToast.isShow} onClose={() => setShowToast({ isShow: false, type: \"\", message: \"\" })} className={\"loader \" + (showToast.type)} >\r\n        <Toast.Header>\r\n          <strong className=\"me-auto\">{showToast.type == \"bg-danger\" ? \"Error\" : \"Success\"} Message</strong>\r\n        </Toast.Header>\r\n        <Toast.Body className=\"Dark\">\r\n          {showToast.message}\r\n        </Toast.Body>\r\n      </Toast>\r\n      <div className=\"content\">\r\n        <Loader show={isShowLoader} />\r\n        {/* <h2 className=\"text-info text-center\">Add Scheme</h2> */}\r\n        {/* <Container fluid className=\"bg-white mt-5 shadow-lg p-3 mb-5 bg-white rounded\"> */}\r\n        <div className=\"row\">\r\n          <div className=\"col-md-8\">\r\n            <div className=\"card card-user\">\r\n              <div className=\"card-header\">\r\n                <h5 className=\"card-title\">Add Scheme</h5>\r\n              </div>\r\n              <div className=\"card-body\">\r\n\r\n                <Form onSubmit={formik.handleSubmit}>\r\n                  <Row className=\"mb-3\" >\r\n                    <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                      <Form.Label>Scheme Code</Form.Label>\r\n                      <Form.Control\r\n                        name=\"scheme_code\"\r\n                        onChange={formik.handleChange}\r\n                        value={formik.values.scheme_code}\r\n                      />\r\n                      {formik.touched.scheme_code && formik.errors.scheme_code ? (\r\n                        <div class=\"text-danger\">{formik.errors.scheme_code}</div>\r\n                      ) : null}\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} controlId=\"formGriddob\">\r\n                      <Form.Label>Scheme Name</Form.Label>\r\n                      <Form.Control\r\n                        name=\"scheme_name\"\r\n                        onChange={formik.handleChange}\r\n                        value={formik.values.scheme_name}\r\n                      />\r\n                      {formik.touched.scheme_name && formik.errors.scheme_name ? (\r\n                        <div class=\"text-danger\">{formik.errors.scheme_name}</div>\r\n                      ) : null}\r\n\r\n                    </Form.Group>\r\n\r\n                  </Row>\r\n                  <Row className=\"mb-3\" >\r\n                    <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                      <Form.Label>Max amount</Form.Label>\r\n                      <Form.Control\r\n                        name=\"max_amount\"\r\n                        type=\"number\"\r\n                        min=\"1\"\r\n                        onChange={formik.handleChange}\r\n                        value={formik.values.max_amount}\r\n                      />\r\n                      {formik.touched.max_amount && formik.errors.max_amount ? (\r\n                        <div class=\"text-danger\">{formik.errors.max_amount}</div>\r\n                      ) : null}\r\n\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                      <Form.Label>Interest Rate (in %)</Form.Label>\r\n                      <Form.Control\r\n                        name=\"interest_rate\"\r\n                        type=\"number\"\r\n                        min=\"0\"\r\n                        onChange={formik.handleChange}\r\n                        value={formik.values.interest_rate}\r\n                      />\r\n                      {formik.touched.interest_rate && formik.errors.interest_rate ? (\r\n                        <div class=\"text-danger\">{formik.errors.interest_rate}</div>\r\n                      ) : null}\r\n\r\n                    </Form.Group>\r\n\r\n                  </Row>\r\n                  <Row className=\"mb-3\" md={6}>\r\n                    <Form.Group as={Col} className=\"mb-3\" controlId=\"formGridAddress1\">\r\n                      <Form.Label>EMI type</Form.Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"EMI_type\"\r\n                        onChange={formik.handleChange}\r\n                        value={formik.values.EMI_type}\r\n                      >\r\n                        <option key=\"\" value=\"\">Select EMI type</option>\r\n                        <option key=\"flat\" value=\"flat\">Flat rate</option>\r\n                        {/* <option key=\"reduceing\" value=\"reduceing\">Reduceing rate</option> */}\r\n                      </select>\r\n                      {formik.touched.EMI_type && formik.errors.EMI_type ? (\r\n                        <div class=\"text-danger\">{formik.errors.EMI_type}</div>\r\n                      ) : null}\r\n\r\n                    </Form.Group>\r\n\r\n                  </Row>\r\n                  <Button variant=\"primary\" type=\"submit\">\r\n                    Save\r\n                  </Button>\r\n\r\n                </Form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* </Container> */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AddScheme;","import React,{useEffect} from 'react'\r\nimport agent from '../../agent'\r\nimport Loader from '../layout/Loader';\r\nimport {  Card, Col, Row } from 'react-bootstrap';\r\nimport { useDispatch } from 'react-redux';\r\nimport {CHANGE_PAGE} from '../../constants/actionTypes'\r\n//var demo;\r\nexport default function Dashboard() {\r\n  const dispatch = useDispatch();\r\n  useEffect(()=>{\r\n    dispatch({type:CHANGE_PAGE,page:\"Dashboard\"});\r\n  },[])\r\n  //demo.initChartsPages();\r\n    return (\r\n      <div className=\"content\">\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-3 col-md-6 col-sm-6\">\r\n          <div className=\"card card-stats\">\r\n            <div className=\"card-body \">\r\n              <div className=\"row\">\r\n                <div className=\"col-5 col-md-4\">\r\n                  <div className=\"icon-big text-center icon-warning\">\r\n                    <i className=\"nc-icon nc-globe text-warning\"></i>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-7 col-md-8\">\r\n                  <div className=\"numbers\">\r\n                    <p className=\"card-category\">Capacity</p>\r\n                    <p className=\"card-title\">150GB</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"card-footer \">\r\n              <hr/>\r\n              <div className=\"stats\">\r\n                <i className=\"fa fa-refresh\"></i>\r\n                Update Now\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-lg-3 col-md-6 col-sm-6\">\r\n          <div className=\"card card-stats\">\r\n            <div className=\"card-body \">\r\n              <div className=\"row\">\r\n                <div className=\"col-5 col-md-4\">\r\n                  <div className=\"icon-big text-center icon-warning\">\r\n                    <i className=\"nc-icon nc-money-coins text-success\"></i>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-7 col-md-8\">\r\n                  <div className=\"numbers\">\r\n                    <p className=\"card-category\">Revenue</p>\r\n                    <p className=\"card-title\">$ 1,345</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"card-footer \">\r\n              <hr/>\r\n              <div className=\"stats\">\r\n                <i className=\"fa fa-calendar-o\"></i>\r\n                Last day\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-lg-3 col-md-6 col-sm-6\">\r\n          <div className=\"card card-stats\">\r\n            <div className=\"card-body \">\r\n              <div className=\"row\">\r\n                <div className=\"col-5 col-md-4\">\r\n                  <div className=\"icon-big text-center icon-warning\">\r\n                    <i className=\"nc-icon nc-vector text-danger\"></i>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-7 col-md-8\">\r\n                  <div className=\"numbers\">\r\n                    <p className=\"card-category\">Errors</p>\r\n                    <p className=\"card-title\">23</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"card-footer \">\r\n              <hr/>\r\n              <div className=\"stats\">\r\n                <i className=\"fa fa-clock-o\"></i>\r\n                In the last hour\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-lg-3 col-md-6 col-sm-6\">\r\n          <div className=\"card card-stats\">\r\n            <div className=\"card-body \">\r\n              <div className=\"row\">\r\n                <div className=\"col-5 col-md-4\">\r\n                  <div className=\"icon-big text-center icon-warning\">\r\n                    <i className=\"nc-icon nc-favourite-28 text-primary\"></i>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-7 col-md-8\">\r\n                  <div className=\"numbers\">\r\n                    <p className=\"card-category\">Followers</p>\r\n                    <p className=\"card-title\">+45K</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"card-footer \">\r\n              <hr/>\r\n              <div className=\"stats\">\r\n                <i className=\"fa fa-refresh\"></i>\r\n                Update now\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <div className=\"card \">\r\n            <div className=\"card-header \">\r\n              <h5 className=\"card-title\">Users Behavior</h5>\r\n              <p className=\"card-category\">24 Hours performance</p>\r\n            </div>\r\n            <div className=\"card-body \">\r\n              <canvas id=\"chartHours\" width=\"400\" height=\"100\"></canvas>\r\n            </div>\r\n            <div className=\"card-footer \">\r\n              <hr/>\r\n              <div className=\"stats\">\r\n                <i className=\"fa fa-history\"></i> Updated 3 minutes ago\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> */}\r\n      {/* <div className=\"row\">\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card \">\r\n            <div className=\"card-header \">\r\n              <h5 className=\"card-title\">Email Statistics</h5>\r\n              <p className=\"card-category\">Last Campaign Performance</p>\r\n            </div>\r\n            <div className=\"card-body \">\r\n              <canvas id=\"chartEmail\"></canvas>\r\n            </div>\r\n            <div className=\"card-footer \">\r\n              <div className=\"legend\">\r\n                <i className=\"fa fa-circle text-primary\"></i> Opened\r\n                <i className=\"fa fa-circle text-warning\"></i> Read\r\n                <i className=\"fa fa-circle text-danger\"></i> Deleted\r\n                <i className=\"fa fa-circle text-gray\"></i> Unopened\r\n              </div>\r\n              <hr/>\r\n              <div className=\"stats\">\r\n                <i className=\"fa fa-calendar\"></i> Number of emails sent\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-8\">\r\n          <div className=\"card card-chart\">\r\n            <div className=\"card-header\">\r\n              <h5 className=\"card-title\">NASDAQ: AAPL</h5>\r\n              <p className=\"card-category\">Line Chart with Points</p>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <canvas id=\"speedChart\" width=\"400\" height=\"100\"></canvas>\r\n            </div>\r\n            <div className=\"card-footer\">\r\n              <div className=\"chart-legend\">\r\n                <i className=\"fa fa-circle text-info\"></i> Tesla Model S\r\n                <i className=\"fa fa-circle text-warning\"></i> BMW 5 Series\r\n              </div>\r\n              <hr />\r\n              <div className=\"card-stats\">\r\n                <i className=\"fa fa-check\"></i> Data information certified\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> */}\r\n    </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport { Button, Form, Container, Row, Col, Toast, Card, useAccordionButton, AccordionContext, Accordion } from 'react-bootstrap';\r\nimport { useFormik } from 'formik';\r\nimport DatePicker from \"react-datepicker\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport groupLoan from '../../models/groupLoan';\r\nimport Loader from '../layout/Loader';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { CHANGE_PAGE } from '../../constants/actionTypes'\r\nimport {API_ROOT} from \"../../models/BaseUrl\"\r\nfunction ContextAwareToggle({ children, eventKey, callback }) {\r\n    const { activeEventKey } = useContext(AccordionContext);\r\n\r\n    const decoratedOnClick = useAccordionButton(\r\n        eventKey,\r\n        () => callback && callback(eventKey),\r\n    );\r\n\r\n    const isCurrentEventKey = activeEventKey === eventKey;\r\n\r\n    return (\r\n        <Button variant=\"info\" onClick={decoratedOnClick}>\r\n            {/* <i className=\"nc-icon nc-simple-add mr-2\"></i> */}\r\n            {children}\r\n        </Button>\r\n\r\n    );\r\n}\r\nfunction LoanApplication(props) {\r\n    const auth = useSelector(state => state.auth);\r\n    const [enrollmentDate, setEnrollmentDate] = useState(new Date());\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [showToast, setShowToast] = useState({ isShow: false, type: \"\", message: \"\" })\r\n    const [memberRecords, setMemberRecords] = useState([]);\r\n    const [schemeRecords, setSchemeRecords] = useState([]);\r\n    const [selectedScheme, setSelectedScheme] = useState({});\r\n    const [image,setImage] = useState(\"\");\r\n    let baseURL = API_ROOT.replace('/api','/')\r\n    const tanure = { \"weekly\": \"Weeks\", \"monthly\": \"Months\", \"daily\": \"Days\", \"fortnight\": \"Fortnight\" };\r\n    let history = useHistory();\r\n    const dispatch = useDispatch();\r\n    //const selectedSm = {\"interest_rate\":0,\"EMI_type\":\"\",\"max_amount\":0};\r\n    useEffect(() => {\r\n        getSchemesAndMembers();\r\n        dispatch({ type: CHANGE_PAGE, page: \"Loan Application\" });\r\n    }, [])\r\n    const getSchemesAndMembers = async () => {\r\n        try {\r\n            setisShowLoader(true);\r\n            const response = await Promise.all(groupLoan.SchemeModel.getLoanAppInitialData())\r\n            setisShowLoader(false);\r\n            setSchemeRecords(response[0].body.message);\r\n            setMemberRecords(response[1].body.message);\r\n            console.log(response);\r\n        } catch (error) {\r\n            setisShowLoader(false);\r\n            setShowToast({ isShow: true, type: \"bg-danger\", message: error.response.body.message })\r\n        }\r\n    }\r\n    const validate = values => {\r\n        const errors = {};\r\n        if (!values.scheme_id) {\r\n            errors.scheme_id = 'Scheme code is Required!';\r\n        }\r\n        if (!values.member_id) {\r\n            errors.member_id = 'Member name is Required!';\r\n        }\r\n        if (!values.interest_rate) {\r\n            errors.interest_rate = 'Interest rate is Required!';\r\n        }\r\n        if (selectedScheme?.interest_rate > 0 && values.interest_rate > selectedScheme?.interest_rate) {\r\n            errors.interest_rate = `As per the Selected Scheme. Interest rate should not greater than ${selectedScheme.interest_rate}.`;\r\n        }\r\n        if (!values.loan_amount) {\r\n            errors.loan_amount = 'Loan amount is Required!';\r\n        }\r\n        if (selectedScheme?.max_amount > 0 && values.loan_amount > selectedScheme.max_amount) {\r\n            errors.loan_amount = `As per the Selected Scheme. Loan amount should not greater than ${selectedScheme.max_amount}.`;\r\n        }\r\n        if (!values.EMI_payout) {\r\n            errors.EMI_payout = 'EMI payout is Required!';\r\n        }\r\n        if (!values.tenure) {\r\n            errors.tenure = 'Tenure is Required!';\r\n        }\r\n        return errors;\r\n    };\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            scheme_id: '',\r\n            application_date: '',\r\n            member_id: '',\r\n            address: '',\r\n            interest_rate: \"\",\r\n            loan_amount: '',\r\n            // EMI_amount: '',\r\n            EMI_payout: \"\",\r\n            EMI_type: \"\",\r\n            tenure: \"\",\r\n            user_id: auth.id,\r\n            co_borrower_name: \"\",\r\n            co_borrower_aadhar_card: \"\",\r\n            co_borrower_pan_card: \"\",\r\n            co_borrower_ele_bill: \"\",\r\n            co_borrower_relationship:\"\"\r\n        },\r\n        validate,\r\n        onSubmit: async (values) => {\r\n            console.log(values);\r\n            setisShowLoader(true);\r\n            try {\r\n                //delete values.EMI_type;\r\n                values.application_date = enrollmentDate;\r\n                let response = await groupLoan.GroupLoanModel.applyForloan(values);\r\n                setisShowLoader(false);\r\n                if (response.statusCode == 200) {\r\n                    formik.resetForm();\r\n                    setShowToast({ isShow: true, type: \"bg-success\", message: response.body.message })\r\n                } else {\r\n                    setShowToast({ isShow: true, type: \"bg-danger\", message: response.body.message })\r\n                }\r\n\r\n            } catch (error) {\r\n                setisShowLoader(false);\r\n                setShowToast({ isShow: true, type: \"bg-danger\", message: error.response.body.message })\r\n            }\r\n        }\r\n    });\r\n    const handleScheme = (e) => {\r\n        console.log(e.target.value);\r\n        let selectedScheme = schemeRecords.filter(scheme => scheme.scheme_code == e.target.value);\r\n        setSelectedScheme(selectedScheme[0]);\r\n        formik.values.EMI_type = selectedScheme[0].EMI_type;\r\n        formik.values.interest_rate = selectedScheme[0].interest_rate;\r\n        formik.handleChange(e);\r\n    }\r\n    const handleMemberSelection = (e)=>{\r\n        if(e.target.value!=\"\"){\r\n            let selectMember = memberRecords.filter(val=>val.member_id.toString()==e.target.value);\r\n            setImage(selectMember[0].image);\r\n        }\r\n        formik.handleChange(e);\r\n    }\r\n    return (\r\n\r\n        <>\r\n\r\n            <div className=\"content\">\r\n                <Toast key={1} autohide delay={3000} show={showToast.isShow} onClose={() => setShowToast({ isShow: false, type: \"\", message: \"\" })} className={\"loader \" + (showToast.type)} >\r\n                    <Toast.Header>\r\n                        <strong className=\"me-auto\">{showToast.type == \"bg-danger\" ? \"Error\" : \"Success\"} Message</strong>\r\n                    </Toast.Header>\r\n                    <Toast.Body className=\"Dark\">\r\n                        {showToast.message}\r\n                    </Toast.Body>\r\n                </Toast>\r\n                <Loader show={isShowLoader} />\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-8\">\r\n                        <Form onSubmit={formik.handleSubmit}>\r\n                            <Accordion defaultActiveKey=\"0\" >\r\n                                <Card className=\"card card-user\">\r\n                                    <Card.Header>\r\n                                        <ContextAwareToggle eventKey=\"0\">Borrower Details</ContextAwareToggle>\r\n                                    </Card.Header>\r\n\r\n                                    <Accordion.Collapse eventKey=\"0\">\r\n                                        <Card.Body className=\"card-body\">\r\n\r\n                                            <Row className=\"mb-3\" >\r\n                                                <Form.Group as={Col} className=\"form-group required\" controlId=\"formGridEnroll\">\r\n                                                    <Form.Label >Application Date</Form.Label>\r\n                                                    <DatePicker className=\"form-control\"\r\n                                                        selected={enrollmentDate}\r\n                                                        onChange={(date) => setEnrollmentDate(date)}\r\n                                                        name=\"application_date\"\r\n                                                        dateFormat=\"dd/MM/yyyy\"\r\n                                                    />\r\n                                                </Form.Group>\r\n                                                <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                                                    <Form.Label>Member name</Form.Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"member_id\"\r\n                                                        onChange={(e)=>handleMemberSelection(e)}\r\n                                                        value={formik.values.member_id}\r\n                                                    >\r\n                                                        <option key=\"\" value=\"\">Select Member</option>\r\n                                                        {memberRecords.map((member, id) => (\r\n                                                            <option key={member.member_id} value={member.member_id}>{`name= ${member.member_name} - member_id= ${member.member_id} `}</option>\r\n                                                        ))}\r\n\r\n                                                    </select>\r\n                                                    {formik.touched.member_id && formik.errors.member_id ? (\r\n                                                        <div className=\"text-danger\">{formik.errors.member_id}</div>\r\n                                                    ) : null}\r\n                                                </Form.Group>\r\n\r\n                                            </Row>\r\n                                            <Row className=\"mb-3\" >\r\n                                                <Form.Group as={Col} controlId=\"formGriddob\">\r\n                                                    <Form.Label>Member Address</Form.Label>\r\n                                                    <Form.Control\r\n                                                        name=\"address\"\r\n                                                        as=\"textarea\"\r\n                                                        onChange={formik.handleChange}\r\n                                                        value={formik.values.address}\r\n\r\n                                                    />\r\n                                                </Form.Group>\r\n                                                <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                                                    <Form.Label>Scheme</Form.Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"scheme_id\"\r\n                                                        onChange={handleScheme}\r\n                                                        value={formik.values.scheme_id}\r\n                                                    >\r\n                                                        <option key=\"\" value=\"\">Select Scheme</option>\r\n                                                        {schemeRecords.map((schems, id) => (\r\n                                                            <option key={schems.scheme_code} value={schems.scheme_code}>{schems.scheme_code}</option>\r\n                                                        ))}\r\n\r\n                                                    </select>\r\n                                                    {formik.touched.scheme_id && formik.errors.scheme_id ? (\r\n                                                        <div className=\"text-danger\">{formik.errors.scheme_id}</div>\r\n                                                    ) : null}\r\n\r\n                                                </Form.Group>\r\n\r\n                                            </Row>\r\n                                            <Row className=\"mb-3\" >\r\n                                                <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                                                    <Form.Label>Interest Rate (in %)</Form.Label>\r\n                                                    <Form.Control\r\n                                                        name=\"interest_rate\"\r\n                                                        type=\"number\"\r\n                                                        min=\"0\"\r\n                                                        onChange={formik.handleChange}\r\n                                                        value={formik.values.interest_rate}\r\n                                                    />\r\n                                                    <Form.Text className=\"text-muted\">\r\n                                                        It will change as per scheme.\r\n                                                    </Form.Text>\r\n                                                    {formik.touched.interest_rate && formik.errors.interest_rate ? (\r\n                                                        <div className=\"text-danger\">{formik.errors.interest_rate}</div>\r\n                                                    ) : null}\r\n\r\n                                                </Form.Group>\r\n                                                <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                                                    <Form.Label>Loan Amount</Form.Label>\r\n                                                    <Form.Control\r\n                                                        name=\"loan_amount\"\r\n                                                        type=\"number\"\r\n                                                        min=\"0\"\r\n                                                        onChange={formik.handleChange}\r\n                                                        value={formik.values.loan_amount}\r\n                                                    />\r\n                                                    <Form.Text className=\"text-muted\">\r\n                                                        Default will be Max amount of selected scheme.\r\n                                                    </Form.Text>\r\n\r\n                                                    {formik.touched.loan_amount && formik.errors.loan_amount ? (\r\n                                                        <div className=\"text-danger\">{formik.errors.loan_amount}</div>\r\n                                                    ) : null}\r\n\r\n                                                </Form.Group>\r\n\r\n                                            </Row>\r\n                                            <Row className=\"mb-3\" >\r\n                                                <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                                                    <Form.Label>EMI Payout</Form.Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"EMI_payout\"\r\n                                                        onChange={formik.handleChange}\r\n                                                        value={formik.values.EMI_payout}\r\n                                                    >\r\n                                                        <option key=\"\" value=\"\">Select Payout</option>\r\n                                                        {/* <option key=\"weekly\" value=\"weekly\">Weekly</option>\r\n                                                <option key=\"monthly\" value=\"fortnight\">Fortnight</option> */}\r\n                                                        <option key=\"monthly\" value=\"monthly\">Monthly</option>\r\n                                                    </select>\r\n                                                    {formik.touched.EMI_payout && formik.errors.EMI_payout ? (\r\n                                                        <div className=\"text-danger\">{formik.errors.EMI_payout}</div>\r\n                                                    ) : null}\r\n\r\n                                                </Form.Group>\r\n                                                <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                                                    <Form.Label>Tenure(in {formik.values.EMI_payout != \"\" ? tanure[formik.values.EMI_payout] : \"Months\"})</Form.Label>\r\n                                                    <Form.Control\r\n                                                        name=\"tenure\"\r\n                                                        type=\"number\"\r\n                                                        min=\"1\"\r\n                                                        onChange={formik.handleChange}\r\n                                                        value={formik.values.tenure}\r\n                                                    />\r\n                                                    {formik.touched.tenure && formik.errors.tenure ? (\r\n                                                        <div className=\"text-danger\">{formik.errors.tenure}</div>\r\n                                                    ) : null}\r\n\r\n                                                </Form.Group>\r\n                                            </Row>\r\n                                            <Row className=\"mb-3\">\r\n                                                <Form.Group as={Col} md={6} controlId=\"formGriddob\" className=\"form-group required\">\r\n                                                    <Form.Label>EMI Type</Form.Label>\r\n                                                    <Form.Control\r\n                                                        name=\"EMI_type\"\r\n                                                        type=\"text\"\r\n                                                        onChange={formik.handleChange}\r\n                                                        value={formik.values.EMI_type}\r\n                                                        disabled=\"disabled\"\r\n                                                    />\r\n                                                    <Form.Text className=\"text-muted\">\r\n                                                        It will change as per selected scheme.\r\n                                                    </Form.Text>\r\n                                                </Form.Group>\r\n                                            </Row>\r\n                                            {/* <Button variant=\"primary\" type=\"button\" onClick={()=>setActiveCard(\"1\")}>\r\n                                                Save\r\n                                            </Button> */}\r\n                                            <ContextAwareToggle eventKey=\"1\">Next</ContextAwareToggle>\r\n                                            <Button variant=\"danger\" onClick={() => { history.push(\"/\") }} type=\"button\" className=\"ml-2\">\r\n                                                Cancel\r\n                                            </Button>\r\n                                            {/* </Form> */}\r\n                                        </Card.Body>\r\n                                    </Accordion.Collapse>\r\n                                </Card>\r\n                                <Card className=\"card card-user\">\r\n                                    <Card.Header>\r\n                                        <ContextAwareToggle eventKey=\"1\">Co-Borrower Details</ContextAwareToggle>\r\n                                    </Card.Header>\r\n\r\n                                    <Accordion.Collapse eventKey=\"1\">\r\n                                        <Card.Body className=\"card-body\">\r\n                                            {/* <Form onSubmit={formik.handleSubmit}> */}\r\n                                            <Row className=\"mb-3\" >\r\n                                                <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                                                    <Form.Label>Co-Borrower name</Form.Label>\r\n                                                    <Form.Control\r\n                                                        name=\"co_borrower_name\"\r\n                                                        type=\"input\"\r\n                                                        min=\"0\"\r\n                                                        onChange={formik.handleChange}\r\n                                                        value={formik.values.co_borrower_name}\r\n                                                    />\r\n                                                </Form.Group>\r\n                                                <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                                                    <Form.Label>Relation ship</Form.Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"co_borrower_relationship\"\r\n                                                        onChange={formik.handleChange}\r\n                                                        value={formik.values.co_borrower_relationship}\r\n                                                    >\r\n                                                        <option key=\"\" value=\"\">Select</option>\r\n                                                        <option key=\"husband\" value=\"husband\">Husband</option>\r\n                                                        <option key=\"father\" value=\"father\">Father</option>\r\n                                                    </select>\r\n                                                </Form.Group>\r\n                                            </Row>\r\n                                            <Row className=\"mb-3\" >\r\n                                                <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                                                    <Form.Label>Aadhar Card</Form.Label>\r\n                                                    <Form.Control\r\n                                                        name=\"co_borrower_aadhar_card\"\r\n                                                        type=\"number\"\r\n                                                        min=\"0\"\r\n                                                        onChange={formik.handleChange}\r\n                                                        value={formik.values.co_borrower_aadhar_card}\r\n                                                    />\r\n                                                </Form.Group>\r\n                                                <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                                                    <Form.Label>PAN Card</Form.Label>\r\n                                                    <Form.Control\r\n                                                        name=\"co_borrower_pan_card\"\r\n                                                        type=\"input\"\r\n                                                        min=\"0\"\r\n                                                        onChange={formik.handleChange}\r\n                                                        value={formik.values.co_borrower_pan_card}\r\n                                                    />\r\n                                                </Form.Group>\r\n                                            </Row>\r\n                                            <Row className=\"mb-3\">\r\n                                                <Form.Group as={Col} md={6} controlId=\"formGriddob\" className=\"form-group required\">\r\n                                                    <Form.Label>Ele Bill no</Form.Label>\r\n                                                    <Form.Control\r\n                                                        name=\"co_borrower_ele_bill\"\r\n                                                        type=\"text\"\r\n                                                        onChange={formik.handleChange}\r\n                                                        value={formik.values.co_borrower_ele_bill}\r\n                                                    />\r\n                                                </Form.Group>\r\n                                            </Row>\r\n\r\n                                            <Button variant=\"primary\" type=\"submit\">\r\n                                                Save\r\n                                            </Button>\r\n                                            <Button variant=\"danger\" onClick={() => { history.push(\"/\") }} type=\"button\" className=\"ml-2\">\r\n                                                Cancel\r\n                                            </Button>\r\n                                        </Card.Body>\r\n                                    </Accordion.Collapse>\r\n                                </Card>\r\n                            </Accordion>\r\n                        </Form>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        <div className=\"card card-user\">\r\n                            <div className=\"card-body\">\r\n                                <div className=\"image\">\r\n                                    <img src=\"../assets/img/damir-bosnjak.jpg\" alt=\"...\" />\r\n                                </div>\r\n\r\n                                <div className=\"author\">\r\n                                    <a href=\"#\">\r\n\r\n                                        <img className=\"avatar border-gray\" src={image==\"\"?\"../assets/img/blank_image.jpg\":baseURL+image} alt=\"...\" />\r\n                                        {/* <input type=\"file\" name=\"profile_image\"/> */}\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LoanApplication;","import React, { useEffect, useState } from 'react';\r\nimport { Table, Button, Container, Row, Col } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport groupLoan from '../../models/groupLoan';\r\nimport Loader from '../layout/Loader';\r\nimport { useHistory } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { CHANGE_PAGE } from '../../constants/actionTypes'\r\n\r\nfunction LoanApproval(props) {\r\n    let history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [loanlist, setLoanlist] = useState([]);\r\n    useEffect(() => {\r\n        getLoanList();\r\n        dispatch({ type: CHANGE_PAGE, page: \"Applications for Approval\" });\r\n    }, [])\r\n\r\n    const getLoanList = async () => {\r\n        try {\r\n            setisShowLoader(true);\r\n            let response = await groupLoan.GroupLoanModel.getApprovalList();\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n                setLoanlist(response.body.message);\r\n            }\r\n\r\n        } catch (error) {\r\n            setisShowLoader(false);\r\n            console.log(error);\r\n        }\r\n    }\r\n    const redirectApproval = (loan_id) => {\r\n        history.push(\"/loanApprovalDetails\", loan_id);\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"content\">\r\n                <Loader show={isShowLoader} />\r\n                {/* <Container fluid> */}\r\n                <Row>\r\n                    <Col>\r\n                        <Table className=\" shadow-lg p-3 mb-5 bg-white rounded\" striped bordered hover responsive>\r\n                            <thead className=\"bg-primary\">\r\n                                <tr>\r\n                                    <th>Application Date</th>\r\n                                    <th>Member name</th>\r\n                                    <th>Scheme ID</th>\r\n                                    <th>Loan Amount</th>\r\n                                    <th>Interest rate</th>\r\n                                    <th>Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {loanlist.length!=0?loanlist.map((loan, id) => (<tr key={loan.id}>\r\n                                    <td>{moment(loan.application_date).format(\"DD-MM-YYYY hh:ss A\")}</td>\r\n                                    <td>{loan.member_name}</td>\r\n                                    <td>{loan.scheme_id}</td>\r\n                                    <td>{loan.loan_amount}</td>\r\n                                    <td>{loan.interest_rate}</td>\r\n                                    <td><Button variant=\"success\" size={\"sm\"} onClick={() => redirectApproval(loan.id)}>Approve</Button></td>\r\n                                </tr>)):<tr><td colSpan={\"6\"} className=\"text-center\">No Application for Approval!</td></tr>}\r\n                            </tbody>\r\n                        </Table>\r\n                    </Col>\r\n                </Row>\r\n                {/* </Container>             */}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LoanApproval;","import React, { useEffect, useState } from 'react';\r\nimport { Table, Button, Container, Row, Col } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport groupLoan from '../../models/groupLoan';\r\nimport Loader from '../layout/Loader';\r\nimport { useHistory } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { CHANGE_PAGE } from '../../constants/actionTypes'\r\n\r\nfunction DisburseLoan(props) {\r\n    let history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [loanlist, setLoanlist] = useState([]);\r\n    useEffect(() => {\r\n        getLoanList();\r\n        dispatch({ type: CHANGE_PAGE, page: \"Applications for Disburse\" });\r\n    }, [])\r\n\r\n    const getLoanList = async () => {\r\n        try {\r\n            setisShowLoader(true);\r\n            let response = await groupLoan.GroupLoanModel.getDisburseList();\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n                setLoanlist(response.body.message);\r\n            }\r\n\r\n        } catch (error) {\r\n            setisShowLoader(false);\r\n            console.log(error);\r\n        }\r\n    }\r\n    const redirectDisburse = (loan_id) => {\r\n        history.push(\"/loanApprovalDetails\", loan_id);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"content\">\r\n                <Loader show={isShowLoader} />\r\n                {/* <Container fluid> */}\r\n                {/* <h2 className=\"text-info text-center\">Applications For Disburse</h2> */}\r\n                <Row >\r\n                    <Col>\r\n                        <Table className=\" shadow-lg p-3 mb-5 bg-white rounded\" striped bordered hover responsive>\r\n                            <thead className=\"bg-primary\">\r\n                                <tr>\r\n                                    <th>Application Date</th>\r\n                                    <th>Member name</th>\r\n                                    <th>Scheme ID</th>\r\n                                    <th>Loan Amount</th>\r\n                                    <th>Interest rate</th>\r\n                                    <th>Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {loanlist.length!=0?loanlist.map((loan, id) => (<tr>\r\n                                    <td>{moment(loan.application_date).format(\"DD-MM-YYYY hh:ss A\")}</td>\r\n                                    <td>{loan.member_name}</td>\r\n                                    <td>{loan.scheme_id}</td>\r\n                                    <td>{loan.loan_amount}</td>\r\n                                    <td>{loan.interest_rate}</td>\r\n                                    <td><Button variant=\"success\" size={\"sm\"} onClick={() => redirectDisburse(loan.id)}>Disburse</Button></td>\r\n                                </tr>)):<tr><td colSpan={\"6\"} className=\"text-center\">No Application for Disbursement!</td></tr>}\r\n                            </tbody>\r\n                        </Table>\r\n                    </Col>\r\n                </Row>\r\n                {/* </Container>             */}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default DisburseLoan;","import React from 'react';\r\nimport { Table, Card} from 'react-bootstrap';\r\n\r\nfunction EmiCard(props) {\r\n    console.log(\"emi card\");\r\n    return (\r\n        <Card border=\"primary\" header\r\n        key={0}\r\n        text={'dark'}\r\n        className=\"m-2\"\r\n    >\r\n        <Card.Header className=\"bg-primary text-center\"><b>EMI Details</b>\r\n            <svg onClick={props.handlePrintEMI} xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" className=\"bi bi-printer float-right cursar\" viewBox=\"0 0 16 16\">\r\n            <path d=\"M2.5 8a.5.5 0 1 0 0-1 .5.5 0 0 0 0 1z\"/>\r\n            <path d=\"M5 1a2 2 0 0 0-2 2v2H2a2 2 0 0 0-2 2v3a2 2 0 0 0 2 2h1v1a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-1h1a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-1V3a2 2 0 0 0-2-2H5zM4 3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v2H4V3zm1 5a2 2 0 0 0-2 2v1H2a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1h-1v-1a2 2 0 0 0-2-2H5zm7 2v3a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1z\"/>\r\n            </svg>\r\n        </Card.Header>\r\n        <Card.Body>\r\n        {/* <Loader show={isShowEMILoader} relative={true}/> */}\r\n        <Table size={\"sm\"} className=\"bg-white rounded small\" bordered responsive>\r\n            <thead>\r\n              <tr className=\"bg-success\">\r\n                  <th>EMI date</th>\r\n                  <th>EMI Amount</th>\r\n                  <th>Principal</th>\r\n                  <th>Interest</th>\r\n                  <th>Outstanding</th>\r\n                  {props.showDisburseButton?<th>EMI Paid</th>:\"\"}\r\n                  \r\n              </tr>\r\n          </thead>\r\n                <tbody>\r\n                {props.emiData.map((value,id)=>(<tr className={props.paidEmiRecord[value.date]?\"bg-warning\":\"\"}>\r\n                    <td>{value.date}</td>\r\n                    <td>{value.EMI}</td>\r\n                    <td>{value.principal}</td>\r\n                    <td>{value.int_amount}</td>\r\n                    <td>{value.outstanding }</td>\r\n                    {props.showDisburseButton?\r\n                    <td>{props.paidEmiRecord[value.date]?\r\n                    \r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-check-circle\" viewBox=\"0 0 16 16\">\r\n                        <path d=\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\r\n                        <path d=\"M10.97 4.97a.235.235 0 0 0-.02.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-1.071-1.05z\"/>\r\n                        </svg>:\"\"}</td>:\"\"}\r\n                </tr>))}\r\n                </tbody>\r\n        </Table>\r\n        </Card.Body>\r\n    </Card>\r\n);\r\n}\r\n\r\nexport default  React.memo(EmiCard);","import React from 'react';\r\nimport { Table, Card} from 'react-bootstrap';\r\n\r\nclass EmiCardPrint extends React.PureComponent {\r\n    render() {\r\n        console.log(this.props.emiData());\r\n    return (\r\n        <div>\r\n        <h3 className=\"text-center mb-5 mt-3\">Micro Finance Company</h3>\r\n        <Card border=\"primary\" header\r\n        key={0}\r\n        text={'dark'}\r\n        className=\"m-2\"\r\n    >\r\n        <Card.Header className=\" text-center\"><b>{this.props.heading}</b>\r\n\r\n        </Card.Header>\r\n        <Card.Body>\r\n        {/* <Loader show={isShowEMILoader} relative={true}/> */}\r\n        <Table size={\"sm\"} className=\"bg-white rounded\" striped bordered hover >\r\n            <thead>\r\n              <tr>{this.props.column.map(val=>(\r\n                  <th key={val}>{val}</th>\r\n              ))}\r\n              </tr>\r\n          </thead>\r\n                <tbody>\r\n                {this.props.emiData()}\r\n                {/* {this.props.emiData.map((value,id)=>(<tr>\r\n                    <td>{value.date}</td>\r\n                    <td>{value.EMI}</td>\r\n                    <td>{value.principal}</td>\r\n                    <td>{value.int_amount}</td>\r\n                    <td>{value.outstanding }</td>\r\n                    <td></td>\r\n                </tr>))} */}\r\n                </tbody>\r\n        </Table>\r\n        </Card.Body>\r\n    </Card>\r\n    </div>\r\n);\r\n\r\n    }\r\n}\r\n\r\nexport default EmiCardPrint;","import React from 'react';\r\nimport { Table, Card } from 'react-bootstrap';\r\nimport moment from 'moment';\r\n\r\nclass BorrowerPrint extends React.PureComponent {\r\n    render() {\r\n        const {loanDetails} = this.props;\r\n        return (\r\n            <>\r\n                <div style={{margin:\"10px\"}}>\r\n                    <h2 style={{textAlign:\"center\",marginBottom:\"50px\"}}>Micro Finance Company</h2>\r\n                    <div style={{marginBottom:\"20px\"}}>\r\n                        <div style={{textAlign:'center',paddingBottom:\"10px\"}}><h4>Application Form</h4></div>\r\n                        <div style={{borderBlockColor:\"black\",width:\"200px\",height:\"200px\", border:\"1px solid black\",textAlign:'center'}}>Photo</div>\r\n                    </div>\r\n                    <Table className=\"bg-white rounded\" striped bordered hover >\r\n                        <tbody>\r\n                        <tr><th>Member Name</th><td>{loanDetails.member_name}</td> </tr>\r\n                        <tr><th>Member Group ID</th>  <td>{loanDetails.member_group_id}</td></tr>\r\n                        <tr> <th>Member Address</th>  <td>{loanDetails.address}</td></tr>\r\n                        <tr><th>DOB</th>   <td>{loanDetails.date_of_birth?moment(loanDetails.date_of_birth).format(\"DD-MM-YYYY\"):\"\"}</td></tr>\r\n                        <tr><th>Phone</th> <td>{loanDetails.mobile_number}</td></tr>\r\n                        <tr><th>Gender</th>  <td>{loanDetails.gender}</td></tr>\r\n                        <tr><th>Aadhar No.</th> <td>{loanDetails.aadhar_number}</td></tr>\r\n                        <tr><th>PAN</th> <td>{loanDetails.pan_card_number}</td></tr>\r\n                        <tr><th>Driving License</th> <td>{loanDetails.driving_license_number}</td></tr>\r\n                        <tr><th>Ration Card No.</th> <td>{loanDetails.ration_card_number}</td></tr>\r\n                        <tr><th>Voter ID No.</th> <td>{loanDetails.voter_id_number}</td></tr>\r\n                        <tr><th>Bank Account No.</th> <td>{loanDetails.bank_account}</td></tr>\r\n                        <tr><th>Bank IFSC code</th> <td>{loanDetails.bank_ifsc_code}</td></tr>\r\n                        <tr><th>Bank Account Holder</th> <td>{loanDetails.bank_account_holder}</td></tr>\r\n                        </tbody>\r\n                    </Table>\r\n                    <div style={{marginTop:\"50px\"}}>\r\n                        <p>“I ____________________ , declare that all the information submitted by me in the application form is correct, true and valid. I will present the supporting documents as and when required.” Please note that there should be no change in this text.</p>\r\n                    </div>\r\n                    <div style={{bottom:0,textAlign:'right',marginTop:\"100px\"}}>\r\n                        <span>\r\n                            <label>Signature:_____________________</label>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\nexport default BorrowerPrint;","import moment from 'moment';\r\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\r\nimport { Table, Button, Container, Row, Col, Card, ListGroup, Modal, Toast, Form } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport groupLoan from '../../models/groupLoan';\r\nimport Loader from '../layout/Loader';\r\nimport { useSelector } from \"react-redux\";\r\nimport { useReactToPrint } from 'react-to-print';\r\nimport { useRef } from 'react';\r\nimport EmiCard from './EmiCard';\r\nimport EmiCardPrint from './EmiCardPrint';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { CHANGE_PAGE } from '../../constants/actionTypes'\r\nimport BorrowerPrint from './BorrowerPrint';\r\nimport DatePicker from \"react-datepicker\";\r\nfunction LoanApprovalDetails(props) {\r\n    const memberDetailsRef = useRef();\r\n    const dispatch = useDispatch();\r\n    const handlePrintMemberDetail = useReactToPrint({\r\n        content: () => memberDetailsRef.current,\r\n        documentTitle: \"AA2-Member\",\r\n    });\r\n\r\n    const applicationRef = useRef();\r\n    const handlePrintApplication = useReactToPrint({\r\n        content: () => applicationRef.current,\r\n        documentTitle: \"AA2-application\",\r\n    });\r\n\r\n    const emiRef = useRef();\r\n    const handlePrintEMI = useReactToPrint({\r\n        content: () => emiRef.current,\r\n        documentTitle: \"AA2-EMI-details\",\r\n    });\r\n    const handlePrintEMICallbak = useCallback(handlePrintEMI, [])\r\n\r\n    const coBorrowerRef = useRef();\r\n    const handleCoBorrowerPrint = useReactToPrint({\r\n        content: () => coBorrowerRef.current,\r\n        documentTitle: \"AA2-CoBorrower\",\r\n    });\r\n\r\n    const borrowerRef = useRef();\r\n    const handlePrintBorrower = useReactToPrint({\r\n        content: () => borrowerRef.current,\r\n        documentTitle: \"AA2-Borrower\",\r\n    });\r\n\r\n    const auth = useSelector(state => state.auth);\r\n    const [paidEmiRecord, setPaidEmiRecord] = useState([])\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [isShowEMILoader, setisShowEMILoader] = useState(false)\r\n    const [emiData, setEmiData] = useState([])\r\n    const [loanDetails, setLoanDetails] = useState({});\r\n    const [showToast, setShowToast] = useState({ isShow: false, type: \"\", message: \"\" })\r\n    const [showApprovalButton, setShowApprovalButton] = useState(false);\r\n    const [showDisburseButton, setShowDisburseButton] = useState(false);\r\n    const [show, setShow] = useState(false);\r\n    const [disburseDate, setDisburseDate] = useState(new Date());\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    //const [disburseActionButton,setDisburseActionButton]\r\n    useEffect(() => {\r\n        console.log(props);\r\n        getLoanDetails();\r\n        dispatch({ type: CHANGE_PAGE, page: \"Application for Approval/Disburse\" });\r\n    }, [])\r\n\r\n    const getLoanDetails = async () => {\r\n        try {\r\n            setisShowLoader(true);\r\n            setisShowEMILoader(true);\r\n\r\n            let response = await groupLoan.GroupLoanModel.getLoanDetailbyId(props.location.state);\r\n            let calculateEmi = {\r\n                \"loanStartDate\": response.body.message[0].disburse_date,\r\n                \"interest_rate\": response.body.message[0].interest_rate,\r\n                \"tenure\": response.body.message[0].Tenure,\r\n                \"EMI_payout\": response.body.message[0].EMI_payout,\r\n                \"loan_amount\": response.body.message[0].loan_amount,\r\n                \"EMI_type\": response.body.message[0].EMI_type\r\n            }\r\n            setisShowEMILoader(true);\r\n            let EmiData = await groupLoan.EmiModel.calculateEMI(calculateEmi);\r\n            let paidData = [];\r\n            let result = {};\r\n            paidData = await groupLoan.EmiModel.getPaidEmis(response.body.message[0].loan_account_no);\r\n            for (let i = 0; i < paidData.body.message.length; i++) {\r\n                let emiDate = moment(paidData.body.message[i].EMI_date).format(\"DD-MM-yyyy\");\r\n                result[emiDate] = true;\r\n            }\r\n            setPaidEmiRecord(result);\r\n            setEmiData(EmiData.body.message);\r\n            setisShowEMILoader(false);\r\n            console.log(response);\r\n\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n                setShowApprovalButton(response.body.message[0].is_approved != 0 ? false : true);\r\n                setShowDisburseButton(response.body.message[0].is_approved == 1 && response.body.message[0].is_disbursed == 0 ? true : false);\r\n                setLoanDetails(response.body.message[0]);\r\n            }\r\n\r\n        } catch (error) {\r\n            setisShowEMILoader(false);\r\n            setisShowLoader(false);\r\n            console.log(error);\r\n        }\r\n    }\r\n    const actionOnLoan = async (actionType) => {\r\n        try {\r\n            setisShowLoader(true);\r\n            const data = { \"id\": props.location.state, \"actionType\": actionType }\r\n            let response = await groupLoan.GroupLoanModel.approveRejectLoan(data);\r\n            console.log(response);\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n                setShowApprovalButton(false);\r\n                //setShowDisburseButton(false);\r\n                setShowToast({ isShow: true, type: \"bg-success\", message: response.body.message })\r\n            }\r\n        } catch (error) {\r\n            setisShowLoader(false);\r\n            setShowToast({ isShow: true, type: \"bg-danger\", message: error.response.body.message })\r\n            console.log(error);\r\n        }\r\n    }\r\n    const actionDisburseLoan = async (actionType) => {\r\n        try {\r\n            handleClose();\r\n            setisShowLoader(true);\r\n            const data = { \"id\": props.location.state, \"actionType\": actionType, disburseDate: disburseDate }\r\n            let response = await groupLoan.GroupLoanModel.disburseRejectLoan(data);\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n                setShowDisburseButton(false);\r\n                setShowToast({ isShow: true, type: \"bg-success\", message: response.body.message })\r\n            }\r\n        } catch (error) {\r\n            setisShowLoader(false);\r\n            setShowToast({ isShow: true, type: \"bg-danger\", message: error.response.body.message })\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n    const emiCol = useMemo(() => {\r\n        return [\"EMI date\", \"EMI Amount\", \"Principal\", \"Interest\", \"Outstanding\", \"Signature\"];\r\n    }, [])\r\n    const emiRecords = useCallback(() => {\r\n        return (emiData.map((value, id) => (\r\n            <tr>\r\n                <td>{value.date}</td>\r\n                <td>{value.EMI}</td>\r\n                <td>{value.principal}</td>\r\n                <td>{value.int_amount}</td>\r\n                <td>{value.outstanding}</td>\r\n                <td></td>\r\n            </tr>\r\n        )))\r\n    }, [emiData]);\r\n    const applicationRecords = useCallback(() => {\r\n        return (\r\n            <>\r\n                <tr><th>Account No</th>  <td>{loanDetails.loan_account_no}</td></tr>\r\n                <tr><th>Application Date</th><td>{moment(loanDetails.application_date).format(\"DD-MM-YYYY HH:SS\")}</td> </tr>\r\n                <tr><th>Scheme Id</th>  <td>{loanDetails.scheme_id}</td></tr>\r\n                <tr> <th>Member Address</th>  <td>{loanDetails.address}</td></tr>\r\n                <tr><th>Loan Amount</th>   <td>{loanDetails.loan_amount}</td></tr>\r\n                <tr><th>Interest rate</th> <td>{loanDetails.interest_rate}</td></tr>\r\n                <tr><th>EMI payout</th>  <td>{loanDetails.EMI_payout}</td></tr>\r\n                <tr><th>EMI type</th>  <td>{loanDetails.EMI_type}</td></tr>\r\n                <tr><th>Tenure</th> <td>{loanDetails.Tenure}</td></tr>\r\n            </>)\r\n    }, [loanDetails]);\r\n\r\n    const coBorrowRecords = useCallback(() => {\r\n        return (\r\n            <>\r\n                <tr><th>Name</th>  <td>{loanDetails.co_borrower_name}</td></tr>\r\n                <tr><th>Relationship</th><td>{loanDetails.co_borrower_relationship}</td> </tr>\r\n                <tr><th>Aadhar Card</th><td>{loanDetails.co_borrower_aadhar_card}</td> </tr>\r\n                <tr><th>PAN Card</th><td>{loanDetails.co_borrower_pan_card}</td> </tr>\r\n                <tr><th>Ele Card</th><td>{loanDetails.co_borrower_ele_bill}</td> </tr>\r\n            </>)\r\n    }, [loanDetails]);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"content\">\r\n                <Modal show={show} onHide={handleClose}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Loan Disbursement</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Form>\r\n                            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\r\n                                <Form.Label>Disbursement Date:</Form.Label>\r\n                                <DatePicker className=\"form-control\"\r\n                                selected={disburseDate}\r\n                                onChange={(date) => setDisburseDate(date)}\r\n                                name=\"disburseDate\"\r\n                                dateFormat=\"dd/MM/yyyy\"\r\n                            />\r\n                           </Form.Group>\r\n                        </Form>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={handleClose}>\r\n                            Close\r\n                        </Button>\r\n                        <Button variant=\"primary\" onClick={()=>actionDisburseLoan(1)}>\r\n                            Disburse\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n                <Toast key={1} autohide delay={3000} show={showToast.isShow} onClose={() => setShowToast({ isShow: false, type: \"\", message: \"\" })} className={\"loader \" + (showToast.type)} >\r\n                    <Toast.Header>\r\n                        <strong className=\"me-auto\">{showToast.type == \"bg-danger\" ? \"Error\" : \"Success\"} Message</strong>\r\n                    </Toast.Header>\r\n                    <Toast.Body className=\"Dark\">\r\n                        {showToast.message}\r\n                    </Toast.Body>\r\n                </Toast>\r\n                <Loader show={isShowLoader} />\r\n                {showApprovalButton && (auth.role == \"checker\" || auth.role == \"admin\") ? <Row className=\"m-5\">\r\n                    <Col className=\"text-center\">\r\n                        <Button variant=\"primary\" type=\"button\" onClick={() => actionOnLoan(1)}>\r\n                            Approve\r\n                        </Button>{'  '}\r\n                        <Button variant=\"danger\" type=\"button\" onClick={() => actionOnLoan(-1)}>\r\n                            Reject\r\n                        </Button>\r\n                    </Col>\r\n                </Row> : \"\"}\r\n\r\n                {showDisburseButton && (auth.role == \"checker\" || auth.role == \"admin\") ? <Row className=\"m-5\">\r\n                    <Col className=\"text-center\">\r\n                        <Button variant=\"primary\" type=\"button\" onClick={() => handleShow()}>\r\n                            Disburse\r\n                        </Button>{'  '}\r\n                        <Button variant=\"danger\" type=\"button\" onClick={() => actionDisburseLoan(-1)}>\r\n                            Reject\r\n                        </Button>\r\n                    </Col>\r\n                </Row> : \"\"}\r\n\r\n                <Row xs={1} md={2} className=\"g-1\">\r\n                    <Col>\r\n                        <Card border=\"success\" header\r\n                            key={0}\r\n                            text={'dark'}\r\n                            className=\"m-2\"\r\n                            ref={memberDetailsRef}\r\n                        >\r\n                            <Card.Header className=\"bg-success text-center\"><b>Borrower Details</b>\r\n                                <svg onClick={handlePrintBorrower} xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" className=\"bi bi-printer float-right cursar\" viewBox=\"0 0 16 16\">\r\n                                    <path d=\"M2.5 8a.5.5 0 1 0 0-1 .5.5 0 0 0 0 1z\" />\r\n                                    <path d=\"M5 1a2 2 0 0 0-2 2v2H2a2 2 0 0 0-2 2v3a2 2 0 0 0 2 2h1v1a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-1h1a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-1V3a2 2 0 0 0-2-2H5zM4 3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v2H4V3zm1 5a2 2 0 0 0-2 2v1H2a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1h-1v-1a2 2 0 0 0-2-2H5zm7 2v3a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1z\" />\r\n                                </svg>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <Table size=\"sm\" className=\"bg-white rounded\" striped bordered hover responsive>\r\n                                    <tbody>\r\n                                        <tr><th>Member Name</th><td>{loanDetails.member_name}</td> </tr>\r\n                                        <tr><th>Member Group ID</th>  <td>{loanDetails.member_group_id}</td></tr>\r\n                                        <tr> <th>Member Address</th>  <td>{loanDetails.address}</td></tr>\r\n                                        <tr><th>DOB</th>   <td>{loanDetails.date_of_birth ? moment(loanDetails.date_of_birth).format(\"DD-MM-YYYY\") : \"\"}</td></tr>\r\n                                        <tr><th>Phone</th> <td>{loanDetails.mobile_number}</td></tr>\r\n                                        <tr><th>Gender</th>  <td>{loanDetails.gender}</td></tr>\r\n                                        <tr><th>Aadhar No.</th> <td>{loanDetails.aadhar_number}</td></tr>\r\n                                        <tr><th>PAN</th> <td>{loanDetails.pan_card_number}</td></tr>\r\n                                        <tr><th>Driving License</th> <td>{loanDetails.driving_license_number}</td></tr>\r\n                                        <tr><th>Ration Card No.</th> <td>{loanDetails.ration_card_number}</td></tr>\r\n                                        <tr><th>Voter ID No.</th> <td>{loanDetails.voter_id_number}</td></tr>\r\n                                        <tr><th>Bank Account No.</th> <td>{loanDetails.bank_account}</td></tr>\r\n                                        <tr><th>Bank IFSC code</th> <td>{loanDetails.bank_ifsc_code}</td></tr>\r\n                                        <tr><th>Bank Account Holder</th> <td>{loanDetails.bank_account_holder}</td></tr>\r\n\r\n                                    </tbody>\r\n                                </Table>\r\n\r\n                            </Card.Body>\r\n                        </Card>\r\n                        <div style={{ display: \"none\" }}><BorrowerPrint ref={borrowerRef} loanDetails={loanDetails} /></div>\r\n\r\n                    </Col>\r\n                    <Col>\r\n                        <Card border=\"info\" header\r\n                            key={0}\r\n                            text={'dark'}\r\n                            // style={{ width: '18rem' }}\r\n                            className=\"m-2\"\r\n\r\n                        >\r\n                            <Card.Header className=\"bg-info text-center\"><b>Application Details</b><svg onClick={handlePrintApplication} xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" className=\"bi bi-printer float-right cursar\" viewBox=\"0 0 16 16\">\r\n                                <path d=\"M2.5 8a.5.5 0 1 0 0-1 .5.5 0 0 0 0 1z\" />\r\n                                <path d=\"M5 1a2 2 0 0 0-2 2v2H2a2 2 0 0 0-2 2v3a2 2 0 0 0 2 2h1v1a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-1h1a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-1V3a2 2 0 0 0-2-2H5zM4 3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v2H4V3zm1 5a2 2 0 0 0-2 2v1H2a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1h-1v-1a2 2 0 0 0-2-2H5zm7 2v3a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1z\" />\r\n                            </svg></Card.Header>\r\n                            <Card.Body>\r\n\r\n                                <Table size=\"sm\" className=\"bg-white rounded\" striped bordered hover responsive>\r\n                                    <tbody>\r\n                                        <tr><th>Account No</th>  <td>{loanDetails.loan_account_no}</td></tr>\r\n                                        <tr><th>Application Date</th><td>{moment(loanDetails.application_date).format(\"DD-MM-YYYY HH:SS\")}</td> </tr>\r\n                                        <tr><th>Scheme Id</th>  <td>{loanDetails.scheme_id}</td></tr>\r\n                                        <tr> <th>Member Address</th>  <td>{loanDetails.address}</td></tr>\r\n                                        <tr><th>Loan Amount</th>   <td>{loanDetails.loan_amount}</td></tr>\r\n                                        <tr><th>Interest rate</th> <td>{loanDetails.interest_rate}</td></tr>\r\n                                        <tr><th>EMI payout</th>  <td>{loanDetails.EMI_payout}</td></tr>\r\n                                        <tr><th>EMI type</th>  <td>{loanDetails.EMI_type}</td></tr>\r\n                                        {/* <tr><th>EMI amount</th> <td>{loanDetails.EMI_amount}</td></tr> */}\r\n                                        <tr><th>Tenure</th> <td>{loanDetails.Tenure}</td></tr>\r\n                                    </tbody>\r\n                                </Table>\r\n\r\n                            </Card.Body>\r\n                        </Card>\r\n                        <div style={{ display: \"none\" }}><EmiCardPrint ref={applicationRef} emiData={applicationRecords} column={[]} heading=\"Application Details\" /></div>\r\n                    </Col>\r\n                    <Col >\r\n                        <Loader show={isShowEMILoader} relative={true} />\r\n                        <EmiCard showDisburseButton={loanDetails.is_approved == 1 && loanDetails.is_disbursed == 1} emiData={emiData} paidEmiRecord={paidEmiRecord} handlePrintEMI={handlePrintEMICallbak} />\r\n                        <div style={{ display: \"none\" }}><EmiCardPrint ref={emiRef} emiData={emiRecords} column={emiCol} heading=\"EMI Details\" /></div>\r\n                    </Col>\r\n                    <Col>\r\n                        <Card border=\"info\" header\r\n                            key={0}\r\n                            text={'dark'}\r\n                            // style={{ width: '18rem' }}\r\n                            className=\"m-2\"\r\n                        // ref={applicationRef}\r\n                        >\r\n                            <Card.Header className=\"bg-info text-center\"><b>Co-Borrower Details</b>\r\n                                <svg onClick={handleCoBorrowerPrint} xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" className=\"bi bi-printer float-right cursar\" viewBox=\"0 0 16 16\">\r\n                                    <path d=\"M2.5 8a.5.5 0 1 0 0-1 .5.5 0 0 0 0 1z\" />\r\n                                    <path d=\"M5 1a2 2 0 0 0-2 2v2H2a2 2 0 0 0-2 2v3a2 2 0 0 0 2 2h1v1a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-1h1a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-1V3a2 2 0 0 0-2-2H5zM4 3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v2H4V3zm1 5a2 2 0 0 0-2 2v1H2a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1h-1v-1a2 2 0 0 0-2-2H5zm7 2v3a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1z\" />\r\n                                </svg>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n\r\n                                <Table size=\"sm\" className=\"bg-white rounded\" striped bordered hover responsive>\r\n                                    <tbody>\r\n                                        <tr><th>Name</th>  <td>{loanDetails.co_borrower_name}</td></tr>\r\n                                        <tr><th>Relationship</th><td>{loanDetails.co_borrower_relationship}</td> </tr>\r\n                                        <tr><th>Aadhar Card</th><td>{loanDetails.co_borrower_aadhar_card}</td> </tr>\r\n                                        <tr><th>PAN Card</th><td>{loanDetails.co_borrower_pan_card}</td> </tr>\r\n                                        <tr><th>Ele Card</th><td>{loanDetails.co_borrower_ele_bill}</td> </tr>\r\n                                    </tbody>\r\n                                </Table>\r\n\r\n                            </Card.Body>\r\n                        </Card>\r\n                        <div style={{ display: \"none\" }}><EmiCardPrint ref={coBorrowerRef} emiData={coBorrowRecords} column={[]} heading=\"Co-Borrower Details\" /></div>\r\n                    </Col>\r\n\r\n                </Row>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LoanApprovalDetails;","import React, { useEffect, useState, useMemo } from 'react';\r\nimport { Table, Badge, Container, Row, Col, Button, Pagination } from 'react-bootstrap';\r\nimport groupLoan from '../../models/groupLoan';\r\nimport Loader from '../layout/Loader';\r\nimport { useHistory } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport { useTable, useSortBy, usePagination, useFilters } from 'react-table'\r\nimport { useDispatch } from \"react-redux\";\r\nimport { CHANGE_PAGE } from '../../constants/actionTypes'\r\n\r\nfunction AllApplications(props) {\r\n    let history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [loanlist, setLoanlist] = useState([]);\r\n    useEffect(() => {\r\n        getLoanList();\r\n        dispatch({ type: CHANGE_PAGE, page: \"All Loan Applications\" });\r\n    }, [])\r\n    const data = useMemo(\r\n        () =>\r\n\r\n            loanlist.map((record, index) => {\r\n                return {\r\n                    col1: record.loan_account_no ? record.loan_account_no : \"N/A\",\r\n                    col2: moment(record.application_date).format('DD-MM-yyy hh:ss A'),\r\n                    col3: record.member_name,\r\n                    col4: record.scheme_id,\r\n                    col5: record.loan_amount,\r\n                    col6: record.interest_rate,\r\n                    col7: record.actionStatus,\r\n                    col8: record\r\n                }\r\n            }\r\n            )\r\n        ,\r\n        [loanlist]\r\n    )\r\n\r\n    const columns = useMemo(\r\n        () => [\r\n            {\r\n                Header: 'Account no.',\r\n                accessor: 'col1', // accessor is the \"key\" in the data\r\n                allowFilter: true\r\n            },\r\n            {\r\n                Header: 'Application date',\r\n                accessor: 'col2', // accessor is the \"key\" in the data\r\n                allowFilter: true\r\n            },\r\n            {\r\n                Header: 'Member name',\r\n                accessor: 'col3',\r\n                allowFilter: true\r\n            },\r\n            {\r\n                Header: 'Scheme ID',\r\n                accessor: 'col4',\r\n                allowFilter: true\r\n            },\r\n            {\r\n                Header: 'Loan amount',\r\n                accessor: 'col5',\r\n                allowFilter: true\r\n            },\r\n            {\r\n                Header: 'Interest rate',\r\n                accessor: 'col6',\r\n                allowFilter: true\r\n            },\r\n            {\r\n                Header: 'Status',\r\n                accessor: 'col7',\r\n                allowFilter: false\r\n            },\r\n            {\r\n                Header: 'Action',\r\n                accessor: 'col8',\r\n                allowFilter: false\r\n            }\r\n\r\n        ],\r\n        []\r\n    )\r\n    function DefaultColumnFilter({\r\n        column: { filterValue, preFilteredRows, setFilter },\r\n    }) {\r\n        const count = preFilteredRows.length\r\n\r\n        return (\r\n            <input\r\n                className=\"form-control\"\r\n                value={filterValue || ''}\r\n                onChange={e => {\r\n                    setFilter(e.target.value || undefined)\r\n                }}\r\n                placeholder={`Search ${count} records...`}\r\n            />\r\n        )\r\n    }\r\n    const defaultColumn = React.useMemo(\r\n        () => ({\r\n            // Default Filter UI\r\n            Filter: DefaultColumnFilter,\r\n        }),\r\n        []\r\n    )\r\n    const paginate = (totalPage) => {\r\n        let pageNumberArray = [];\r\n        for (let i = 1; i <= totalPage; i++) {\r\n            pageNumberArray.push(i);\r\n        }\r\n        return (\r\n            <Pagination>\r\n                <Pagination.First onClick={() => gotoPage(0)} />\r\n                <Pagination.Prev onClick={() => previousPage()} disabled={!canPreviousPage} />\r\n                {pageNumberArray.map(num => <Pagination.Item key={num} active={num === (pageIndex + 1)} onClick={() => gotoPage(num - 1)}>{num}</Pagination.Item>)}\r\n                <Pagination.Next onClick={() => nextPage()} disabled={!canNextPage} />\r\n                <Pagination.Last onClick={() => gotoPage(totalPage - 1)} />\r\n            </Pagination>\r\n        );\r\n\r\n    }\r\n\r\n    const getLoanList = async () => {\r\n        try {\r\n            setisShowLoader(true);\r\n            let response = await groupLoan.GroupLoanModel.getAllLoanApplications();\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n                let formatedData = response.body.message.map((loan, id) => {\r\n                    if (loan.is_approved == 1 && loan.is_disbursed == 1) {\r\n                        loan[\"actionStatus\"] = \"Disbursed\";\r\n                    } else if (loan.is_approved == 1 && loan.is_disbursed == 0) {\r\n                        loan[\"actionStatus\"] = \"Approved\";\r\n                    } else if (loan.is_disbursed == -1) {\r\n                        loan[\"actionStatus\"] = \"Disburse Rejected\";\r\n                    } else if (loan.is_approved == -1) {\r\n                        loan[\"actionStatus\"] = \"Approval Rejected\";\r\n                    } else {\r\n                        loan[\"actionStatus\"] = \"Pending\";\r\n                    }\r\n\r\n                    return loan;\r\n                });\r\n                setLoanlist(formatedData);\r\n            }\r\n\r\n        } catch (error) {\r\n            setisShowLoader(false);\r\n            console.log(error);\r\n        }\r\n    }\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n        pageOptions,\r\n        page,\r\n        pageCount,\r\n        state: { pageIndex, pageSize },\r\n        gotoPage,\r\n        previousPage,\r\n        nextPage,\r\n        setPageSize,\r\n        canPreviousPage,\r\n        canNextPage,\r\n    } = useTable({ columns, data, defaultColumn, initialState: { pageIndex: 0 } }, useFilters, useSortBy, usePagination)\r\n    return (\r\n        <>\r\n            <div className=\"content\">\r\n                <Loader show={isShowLoader} />\r\n                {/* <Container fluid> */}\r\n                <Row>\r\n                    <Col>\r\n                        <div className=\"text-right\">\r\n                            {paginate(pageCount)}\r\n                        </div>\r\n\r\n                        <Table  {...getTableProps()} className=\"shadow-lg p-3 mb-5 bg-white rounded small\" striped bordered hover responsive>\r\n                            <thead className=\"bg-primary\">\r\n                                {headerGroups.map(headerGroup => (\r\n                                    <tr {...headerGroup.getHeaderGroupProps()}>\r\n                                        {headerGroup.headers.map(column => (\r\n                                            <th\r\n                                                {...column.getHeaderProps(column.getSortByToggleProps())}\r\n                                            >\r\n                                                {column.render('Header')}\r\n                                                <span>\r\n                                                    {column.isSorted ? (column.isSortedDesc ? ' 🔽' : ' 🔼') : ''}\r\n                                                </span>\r\n                                                <div>{column.allowFilter ? column.render('Filter') : null}</div>\r\n                                            </th>\r\n                                        ))}\r\n                                    </tr>\r\n                                ))}\r\n                            </thead>\r\n                            <tbody{...getTableBodyProps()}>\r\n\r\n                                {page.map(row => {\r\n                                    prepareRow(row)\r\n                                    return (\r\n                                        <tr {...row.getRowProps()}>\r\n                                            {row.cells.map(cell => {\r\n                                                console.log(cell);\r\n                                                if (cell.column.id != \"col8\" && cell.column.id != \"col7\") {\r\n                                                    return (\r\n                                                        <td {...cell.getCellProps()}>\r\n                                                            {cell.render('Cell')}\r\n                                                        </td>\r\n                                                    )\r\n                                                } else if (cell.column.id == \"col8\") {\r\n                                                    return (\r\n                                                        <td>\r\n                                                            <Button size={\"sm\"} variant=\"info\" onClick={() => { history.push(\"/loanApprovalDetails\", cell.value.id) }} type=\"button\" className=\"ml-2\">\r\n                                                                View\r\n                                                            </Button>\r\n                                                        </td>\r\n                                                    )\r\n                                                } else if (cell.column.id == \"col7\") {\r\n                                                    return (\r\n                                                        <td>\r\n                                                            <Badge className={cell.value == \"Approved\" || cell.value == \"Disbursed\" ? \"bg-success\" : \"bg-danger\"}>\r\n                                                                {cell.value}\r\n                                                            </Badge>\r\n                                                        </td>)\r\n\r\n                                                }\r\n                                            })}\r\n                                        </tr>\r\n                                    )\r\n                                })}\r\n\r\n                            </tbody>\r\n                        </Table>\r\n                        <div className=\"text-right\">\r\n                            {paginate(pageCount)}\r\n                        </div>\r\n\r\n                    </Col>\r\n                </Row>\r\n\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AllApplications;","import React,{useState,useRef,useEffect } from 'react';\r\nimport { Table,Button, Container, Row, Col, Card, Form } from 'react-bootstrap';\r\nimport Loader from '../layout/Loader';\r\nimport { useFormik } from 'formik';\r\nimport DatePicker from \"react-datepicker\";\r\nimport groupLoan from \"../../models/groupLoan\";\r\nimport { useReactToPrint } from 'react-to-print';\r\nfunction EmiCalculator(props) {\r\n    const [enrollmentDate, setEnrollmentDate] = useState(new Date());\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [calculatedData,setCalculatedData] = useState([]);\r\n    const componentRef = useRef();\r\n    const handlePrint = useReactToPrint({\r\n      content: () => componentRef.current,\r\n      documentTitle:\"EMI-details\",\r\n    });\r\n    const validate = values => {\r\n        const errors = {};\r\n        if (!values.interest_rate) {\r\n          errors.interest_rate = 'Interest rate is Required';\r\n        }\r\n        if (!values.loan_amount) {\r\n            errors.loan_amount = 'Loan amount is Required';\r\n          }\r\n          if (!values.tenure) {\r\n            errors.tenure = 'Tenure is Required';\r\n          }\r\n          if (!values.EMI_payout) {\r\n            errors.EMI_payout = 'EMI payout is Required';\r\n          }\r\n          return errors;\r\n      };\r\n      const formik = useFormik({\r\n        initialValues: {\r\n        loanStartDate: '',\r\n        interest_rate: '',\r\n        tenure: '',\r\n        EMI_payout:'',\r\n        loan_amount:'',\r\n        EMI_type:\"flat\"\r\n        },\r\n        validate,\r\n        onSubmit: async (values) => {\r\n          setisShowLoader(true);\r\n          try {\r\n             values.loanStartDate = enrollmentDate;\r\n             console.log(values);\r\n            let response = await groupLoan.EmiModel.calculateEMI(values);\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n              //formik.resetForm();\r\n              setCalculatedData(response.body.message);\r\n            } else {\r\n              //setShowToast({ isShow: true,type:\"bg-danger\", message: response.body.message })\r\n            }\r\n    \r\n          } catch (error) {\r\n            setisShowLoader(false);\r\n            //setShowToast({ isShow: true,type:\"bg-danger\", message: error.response.body.message })\r\n          }\r\n        },\r\n      });\r\n    \r\n    return (\r\n        <>\r\n        <Loader show={isShowLoader}/>\r\n        <div className=\"content\">\r\n        <div className=\"row\">\r\n        <div className=\"col-md-4\">\r\n            <Container className=\"bg-white mt-2 shadow-lg p-3 mb-5 bg-white rounded\">\r\n            <Form onSubmit={formik.handleSubmit}>\r\n            <Form.Group as={Col} className=\"form-group required pl-0 pr-0\" controlId=\"formGridEnroll\">\r\n                            <Form.Label >Application Date</Form.Label>\r\n                            <DatePicker className=\"form-control\"\r\n                                selected={enrollmentDate}\r\n                                onChange={(date) => setEnrollmentDate(date)}\r\n                                name=\"loanStartDate\"\r\n                                dateFormat=\"dd/MM/yyyy\"\r\n                            />\r\n                {formik.touched.loanStartDate && formik.errors.loanStartDate ? (\r\n                  <div className=\"text-danger\">{formik.errors.loanStartDate}</div>\r\n                ) : null}\r\n\r\n            </Form.Group>\r\n\r\n              <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                <Form.Label>Loan amount</Form.Label>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  name=\"loan_amount\"\r\n                  placeholder=\"Enter loan amount\"\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.loan_amount}\r\n                />\r\n                {formik.touched.loan_amount && formik.errors.loan_amount ? (\r\n                  <div className=\"text-danger\">{formik.errors.loan_amount}</div>\r\n                ) : null}\r\n\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-3 form-group required\" controlId=\"formBasicEmail\">\r\n                <Form.Label>Interest rate</Form.Label>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  name=\"interest_rate\"\r\n                  placeholder=\"Enter interest rate\"\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.interest_rate}\r\n\r\n                />\r\n                {formik.touched.interest_rate && formik.errors.interest_rate ? (\r\n                  <div className=\"text-danger\">{formik.errors.interest_rate}</div>\r\n                ) : null}\r\n\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-3 form-group required\" controlId=\"formBasicEmail\">\r\n                <Form.Label>Tenure</Form.Label>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  name=\"tenure\"\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.tenure}\r\n\r\n                />\r\n                {formik.touched.tenure && formik.errors.tenure ? (\r\n                  <div className=\"text-danger\">{formik.errors.tenure}</div>\r\n                ) : null}\r\n\r\n              </Form.Group>\r\n              <Form.Group as={Col} className=\"mb-3 pl-0 pr-0\" controlId=\"formGridAddress1\">\r\n                <Form.Label>EMI payout</Form.Label>\r\n                <select\r\n                    className=\"form-control\"\r\n                    name=\"EMI_payout\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.EMI_payout}\r\n                >\r\n                    <option key=\"\" value=\"\">Select payout</option>\r\n\r\n                    {/* <option key=\"daily\" value=\"daily\">Daily</option> */}\r\n                    {/* <option key=\"weekly\" value=\"weekly\">Weekly</option>\r\n                    <option key=\"monthly\" value=\"fortnight\">Fortnight</option> */}\r\n                    <option key=\"monthly\" value=\"monthly\">Monthly</option>\r\n                </select>\r\n                {formik.touched.EMI_payout && formik.errors.EMI_payout ? (\r\n                  <div className=\"text-danger\">{formik.errors.EMI_payout}</div>\r\n                ) : null}\r\n\r\n            </Form.Group>\r\n\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                Calculate\r\n              </Button>\r\n\r\n            </Form>\r\n            </Container>\r\n            </div>\r\n            <div className=\"col-md-8\">\r\n            <Card border=\"primary\" header\r\n                        key={0}\r\n                        text={'dark'}\r\n                        // style={{ width: '18rem' }}\r\n                        className=\"m-2\"\r\n                        ref={componentRef}\r\n                    >\r\n                      {/* {isclickPrint?<h2 className=\"text-center mb-3\">AA2 MicroFinance Foundation</h2>:\"\"} */}\r\n                        <Card.Header className=\"bg-primary text-center\"><b>Micro Finance EMI Details</b><svg onClick={handlePrint} xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" className=\"bi bi-printer float-right cursar\" viewBox=\"0 0 16 16\">\r\n  <path d=\"M2.5 8a.5.5 0 1 0 0-1 .5.5 0 0 0 0 1z\"/>\r\n  <path d=\"M5 1a2 2 0 0 0-2 2v2H2a2 2 0 0 0-2 2v3a2 2 0 0 0 2 2h1v1a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-1h1a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-1V3a2 2 0 0 0-2-2H5zM4 3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v2H4V3zm1 5a2 2 0 0 0-2 2v1H2a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1h-1v-1a2 2 0 0 0-2-2H5zm7 2v3a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1z\"/>\r\n</svg></Card.Header>\r\n                        <Card.Body >\r\n                            <Table  size={\"sm\"} className=\"bg-white rounded\" striped bordered hover responsive>\r\n                            <thead>\r\n                              <tr>\r\n                                  <th>EMI date</th>\r\n                                  <th>EMI Amount</th>\r\n                                  <th>Principal</th>\r\n                                  <th>Interest</th>\r\n                                  <th>Outstanding</th>\r\n                              </tr>\r\n                          </thead>\r\n                                <tbody>\r\n                                {calculatedData.map((value,id)=>(<tr key={id}>\r\n                                    <td>{value.date}</td>\r\n                                    <td>{value.EMI}</td>\r\n                                    <td>{value.principal}</td>\r\n                                    <td>{value.int_amount}</td>\r\n                                    <td>{value.outstanding }</td>\r\n                                </tr>))}\r\n                                </tbody>\r\n                            </Table>\r\n\r\n                        </Card.Body>\r\n                    </Card>\r\n            </div>\r\n\r\n    </div>\r\n    </div>            \r\n        </>\r\n    );\r\n}\r\n\r\nexport default EmiCalculator;","import React, { useEffect, useState } from 'react';\r\nimport { Table, Button, Container, Row, Col, Modal, InputGroup, FormLabel } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport groupLoan from '../../models/groupLoan';\r\nimport Loader from '../layout/Loader';\r\nimport DatePicker from \"react-datepicker\";\r\nimport moment from \"moment\"\r\nimport { useDispatch } from \"react-redux\";\r\nimport { CHANGE_PAGE } from '../../constants/actionTypes'\r\nfunction DueEmis(props) {\r\n    const dispatch = useDispatch();\r\n    const [showDeleteModel, setShowDeleteModel] = useState(false)\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [dueEmis, setDueEmis] = useState([]);\r\n    const [paidID, setPaidID] = useState(0)\r\n    const [enrollmentDate, setEnrollmentDate] = useState(new Date());\r\n    useEffect(() => {\r\n        getDueEmisRecord();\r\n        dispatch({ type: CHANGE_PAGE, page: \"EMI Dues\" });\r\n    }, [])\r\n\r\n    const getDueEmisRecord = (today = moment().format(\"yyyy-MM-DD\")) => {\r\n        setisShowLoader(true);\r\n        groupLoan.EmiModel.getDueEmis(today).then(res => {\r\n            setisShowLoader(false);\r\n            if (res.statusCode == 200) {\r\n                let emiData = [];\r\n                emiData = res.body.message.map(emi=>{ \r\n                   // return emi\r\n                   emi[\"loan_table_id\"]=emi.loan_account_no.substring(11)\r\n                   return emi;\r\n                });\r\n                setDueEmis(emiData);\r\n            } else {\r\n                setDueEmis([]);\r\n            }\r\n        })\r\n    }\r\n    const paidEMI = async()=>{\r\n        setShowDeleteModel(false);\r\n        try{\r\n            setisShowLoader(true);\r\n            let response = await groupLoan.EmiModel.paidEmi(paidID);\r\n            setisShowLoader(false);\r\n            if(response.statusCode == 200){\r\n                let UpdatedList = dueEmis.filter((emidata,idx)=>emidata.emi_id!=paidID);\r\n                setDueEmis(UpdatedList);\r\n            }\r\n        }catch (error) {\r\n            console.log(error.response.body.message);\r\n            setisShowLoader(false);\r\n        }\r\n    }\r\n    const paidHandle=(id)=>{\r\n        setPaidID(id);        \r\n        setShowDeleteModel(true);\r\n    }\r\n    const changeEmiDate = (selectedDate)=>{\r\n        setEnrollmentDate(selectedDate)\r\n        getDueEmisRecord(moment(selectedDate).format(\"yyyy-MM-DD\"));\r\n    }\r\n    return (\r\n        <>\r\n      <Modal show={showDeleteModel} onHide={()=>setShowDeleteModel(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Paid EMI </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>Are you sure?</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={()=>setShowDeleteModel(false)}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={()=>paidEMI()}>\r\n            Paid\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>        \r\n\r\n            <Loader show={isShowLoader} />\r\n            <div className=\"content\">\r\n                {/* <h2 className=\"text-info text-center\">Due EMIs</h2> */}\r\n                <Row>\r\n              <Col>\r\n                    <InputGroup className=\"mb-3\">\r\n                    <FormLabel className=\"mr-3\">EMI Date:</FormLabel>\r\n                    <DatePicker className=\"form-control\"\r\n                                selected={enrollmentDate}\r\n                                onChange={(date) => changeEmiDate(date)}\r\n                                name=\"enrollment_date\"\r\n                                dateFormat=\"dd/MM/yyyy\"\r\n                            />\r\n\r\n                    </InputGroup>\r\n\r\n                        <Table className=\" shadow-lg p-3 mb-5 bg-white rounded small\" striped bordered hover responsive>\r\n                            <thead className=\"bg-primary\">\r\n                                <tr>\r\n                                    <th>Account No.</th>\r\n                                    <th>Group</th>\r\n                                    <th>Member ID</th>\r\n                                    <th>Name</th>\r\n                                    <th>No. of Emi</th>\r\n                                    <th>EMI Amount</th>\r\n                                    <th>Outstanding</th>\r\n                                    <th>Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {dueEmis.length!=0?dueEmis.map((emi, id) => (<tr key={emi.id}>\r\n                                    <td><Link to={{\r\n                                        pathname: '/loanApprovalDetails',\r\n                                        state: emi.loan_table_id\r\n                                        }}>{emi.loan_account_no}</Link></td>\r\n                                    <td><Link to=\"/memberGroup\">{emi.member_group_id}</Link></td>\r\n                                    <td><Link to={{\r\n                                        pathname: '/viewMemberDetail',\r\n                                        state: emi.member_id\r\n                                        }}>{emi.member_id}</Link></td>\r\n                                    <td><Link to={{\r\n                                        pathname: '/viewMemberDetail',\r\n                                        state: emi.member_id\r\n                                        }}>{emi.member_name}</Link></td>\r\n                                    <td>{emi.remain_EMI}</td>\r\n                                    <td>{emi.EMI_amount}</td>\r\n                                    <td>{emi.outstanding}</td>\r\n                                    <td><Button size={\"sm\"} variant=\"success\" onClick={() => paidHandle(emi.emi_id) }>Pay</Button></td>\r\n                                </tr>)):<tr><td colSpan={\"8\"} className=\"text-center\">No Dues for selected date!</td></tr>}\r\n                            </tbody>\r\n                        </Table>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default DueEmis;","import React from 'react'\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport Home from './components/home/Home'\r\nimport Registration from './components/users/Registration'\r\nimport Login from './components/users/Login'\r\n// import FillItr from './components/finance-Itr/FillItr'\r\nimport InnerLayout from './components/layout/InnerLayout'\r\n//import CategoryList from './components/food-order/CategoryList'\r\n// import MyCart from './components/food-order/MyCart'\r\n// import PlaceOrder from './components/food-order/PlaceOrder'\r\n// import OrderSuccess from './components/food-order/OrderSuccess'\r\n//import AdminHome from './components/Admin/Home';\r\n//import CategoryManagement from './components/Admin/CategoryManagement';\r\n//import AddCategory from './components/Admin/AddCategory';\r\n//import OrderHistory from './components/Admin/orders/OrderHistory';\r\nimport UserOrderHistory from './components/users/UserOrderHistory';\r\nimport UserAction from './components/users/user-actions/UserAction';\r\n//import ProductManagement from './components/Admin/products/ProductManagement';\r\n//import AddProduct from './components/Admin/products/AddProduct';\r\n//import EditProduct from './components/Admin/products/EditProduct';\r\n// import OrderFailed from './components/food-order/OrderFailed';\r\n//import FinanceRequests from './components/Admin/finance/FinanceRequests';\r\n//import Form16Requests from './components/Admin/finance/Form16Requests';\r\n//import InqueryForm from './components/home/InqueryForm';\r\nimport MemberGroup from  './components/masterRecord/memberGroup/MemberGroup';\r\nimport AddMemberGroup from  './components/masterRecord/memberGroup/AddMemberGroup';\r\nimport AddMember from  './components/masterRecord/member/AddMember';\r\nimport Member from  './components/masterRecord/member/Member';\r\nimport MemberViewDetails from  './components/masterRecord/member/MemberViewDetails';\r\nimport Scheme from  './components/groupLoan/Scheme';\r\nimport AddScheme from  './components/groupLoan/AddScheme';\r\nimport Dashboard from './components/dashboard/Dashboard';\r\nimport LoanApplication from  './components/groupLoan/LoanApplication';\r\nimport LoanApproval from  './components/groupLoan/LoanApproval';\r\nimport DisburseLoan from  './components/groupLoan/DisburseLoan';\r\nimport LoanApprovalDetails from  './components/groupLoan/LoanApprovalDetails';\r\nimport AllApplications from  './components/groupLoan/AllApplications';\r\nimport EmiCalculator from  './components/groupLoan/EmiCalculator';\r\nimport DueEmis from './components/emis/DueEmis';\r\n\r\nfunction Routes() {\r\n    const checkLogin=()=>{\r\n        console.log(\"check login\")\r\n    }\r\n    return (\r\n        <BrowserRouter>\r\n            <Switch>\r\n            <InnerLayout exact path=\"/\" component={Dashboard}/>\r\n            <InnerLayout exact path=\"/memberGroup\" component={MemberGroup} />\r\n            <InnerLayout exact path=\"/addMemberGroup\" component={AddMemberGroup} />\r\n            <InnerLayout exact path=\"/addMember\" component={AddMember} />\r\n            <InnerLayout exact path=\"/addMember\" component={AddMember} />\r\n            <InnerLayout exact path=\"/scheme\" component={Scheme} />\r\n            <InnerLayout exact path=\"/viewMemberDetail\" component={MemberViewDetails} />\r\n            <InnerLayout exact path=\"/addScheme\" component={AddScheme} />\r\n            <InnerLayout exact path=\"/loanApplication\" component={LoanApplication} />\r\n            <InnerLayout exact path=\"/loanApproval\" component={LoanApproval} />\r\n            <InnerLayout exact path=\"/disburseLoan\" component={DisburseLoan} />\r\n            <InnerLayout exact path=\"/loanApprovalDetails\" component={LoanApprovalDetails} />\r\n            <InnerLayout exact path=\"/allApplications\" component={AllApplications} />\r\n            <InnerLayout exact path=\"/emiCalculator\" component={EmiCalculator} />\r\n            <InnerLayout exact path=\"/dueEmis\" component={DueEmis} />\r\n                <Route path=\"/login\" component={Login} />\r\n                <InnerLayout path=\"/registration\" component={Registration} />\r\n                {/* <InnerLayout path=\"/fillItr\" component={FillItr} />\r\n                <InnerLayout path=\"/CategoryList\" component={CategoryList} />\r\n                <InnerLayout path=\"/myCart\" component={MyCart} />\r\n                <InnerLayout path=\"/placeOrder\" component={PlaceOrder} />\r\n                <InnerLayout path=\"/orderSuccess\" component={OrderSuccess} />\r\n                <InnerLayout path=\"/adminHome\" component={AdminHome} />\r\n                <InnerLayout path=\"/categoryManagement\" component={CategoryManagement} />\r\n                <InnerLayout path=\"/addCategory\" component={AddCategory} />\r\n                <InnerLayout path=\"/orderHistory\" component={OrderHistory} />\r\n                <InnerLayout path=\"/userOrderHistory\" component={UserOrderHistory} />\r\n                <InnerLayout path=\"/userAction\" component={UserAction} />\r\n                <InnerLayout path=\"/productManagement\" component={ProductManagement} />\r\n                <InnerLayout path=\"/addProduct\" component={AddProduct} />\r\n                <InnerLayout path=\"/editProduct\" component={EditProduct} />\r\n                <InnerLayout path=\"/orderFailed\" component={OrderFailed} />\r\n                <InnerLayout path=\"/financeRequests\" component={FinanceRequests} />\r\n                <InnerLayout path=\"/form16Requests\" component={Form16Requests} />\r\n                <InnerLayout path=\"/inqueryForm\" component={InqueryForm} /> */}\r\n                <InnerLayout path=\"/member\" component={Member} />\r\n\r\n            </Switch>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default Routes\r\n","import './App.css';\r\nimport { Provider } from 'react-redux';\r\nimport { store, persistor} from './store';\r\nimport Routes from './Routes';\r\nimport { PersistGate } from 'redux-persist/integration/react'\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <div className=\"App\">\r\n          {/* <Header/> */}\r\n          <Routes/>\r\n        </div>\r\n      </PersistGate>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","import superagentPromise from 'superagent-promise';\r\nimport _superagent from 'superagent';\r\n\r\nconst superagent = superagentPromise(_superagent, global.Promise);\r\n\r\nconst API_ROOT = '/api';\r\n\r\nconst encode = encodeURIComponent;\r\nconst responseBody = res => res;\r\nconst errorBody = err =>{\r\n  return err.response\r\n} ;\r\nlet token = null;\r\nconst tokenPlugin = req => {\r\n  if (token) {\r\n    req.set('Token', token);\r\n  }\r\n}\r\n\r\nconst requests = {\r\n  // del: url =>\r\n  //   superagent.del(`${API_ROOT}${url}`).use(tokenPlugin).then(responseBody),\r\n  get: url =>\r\n    superagent.get(`${API_ROOT}${url}`).use(tokenPlugin).then(responseBody,errorBody),\r\n  // put: (url, body) =>\r\n  //   superagent.put(`${API_ROOT}${url}`, body).use(tokenPlugin).then(responseBody),\r\n  post: (url, body) =>\r\n    superagent.post(`${API_ROOT}${url}`, body).use(tokenPlugin).then(responseBody,errorBody)\r\n};\r\n\r\nconst Auth = {\r\n  login: (email, password) =>\r\n    requests.post('/user/login',  { email, password } ),\r\n  register: (userDetails) =>\r\n    requests.post('/user/registration',  userDetails ),\r\n};\r\n\r\nconst Order = {\r\n  getProductsByCat:(catname)=>\r\n  requests.get(`/products?category=${catname}`),\r\n  getCatgoryInitialData:()=>{\r\n    return [superagent.get(`${API_ROOT}/category`),superagent.get(`${API_ROOT}/products`)]\r\n  },\r\n  placeOrder:(data)=>{\r\n    //requests.post(\"/orders/place-order\",data)\r\n    return superagent.post(`${API_ROOT}/orders/place-order`, data).use(tokenPlugin)\r\n  },\r\n  getCategoryAdmin(){\r\n    return superagent.get(`${API_ROOT}/category`).use(tokenPlugin)\r\n  },\r\n  getOrdersHistoryAdmin(page){\r\n    return superagent.get(`${API_ROOT}/orders/admin-order-list?page=${page}`).use(tokenPlugin)\r\n  },\r\n  getOrderHistoryByUserEmail(){\r\n    return superagent.get(`${API_ROOT}/orders/get-order`).use(tokenPlugin)\r\n  },\r\n  addCategory(data){\r\n    return superagent.post(`${API_ROOT}/category`,data).use(tokenPlugin)\r\n  },\r\n  deleteCategory(data){\r\n    return superagent.del(`${API_ROOT}/category?name=${data}`,data).use(tokenPlugin)\r\n  },\r\n  editCategory(data){\r\n    return superagent.put(`${API_ROOT}/category`,data).use(tokenPlugin)\r\n  },\r\n  getProducts(){\r\n    return superagent.get(`${API_ROOT}/products`).use(tokenPlugin)\r\n  },\r\n  deleteProduct(data){\r\n    return superagent.del(`${API_ROOT}/products?title=${data}`,data).use(tokenPlugin)\r\n  },\r\n  addProducts(data){\r\n    return superagent.post(`${API_ROOT}/products`,data).use(tokenPlugin)\r\n  },\r\n  editProducts(data){\r\n    return superagent.put(`${API_ROOT}/products`,data).use(tokenPlugin)\r\n  }\r\n};\r\nconst Payment = {\r\n  getRazorpayOrderId(data){\r\n    return superagent.post(`${API_ROOT}/payment/food-create-order-no`,data).use(tokenPlugin)\r\n  },\r\n  updatePaymentStatus(data){\r\n    return superagent.post(`${API_ROOT}/payment/updatePaymentStatus`,data).use(tokenPlugin)\r\n  }\r\n};\r\nconst Finance = {\r\n  fillItr(data){\r\n    return superagent.post(`${API_ROOT}/finance/fill-itr`,data).use(tokenPlugin)\r\n  },\r\n  getAdminItr(){\r\n    return superagent.get(`${API_ROOT}/finance/fill-itr`).use(tokenPlugin)\r\n  },\r\n  uploadForm16(data){\r\n    return superagent.post(`${API_ROOT}/finance/form16Upload`,data).use(tokenPlugin)\r\n  },\r\n  getAdminForm16(){\r\n    return superagent.get(`${API_ROOT}/finance/form16Upload`).use(tokenPlugin)\r\n  },\r\n  downloadForm16(data){\r\n    return superagent.get(`${API_ROOT}/download?fileName=${data.fileName}`).use(tokenPlugin)\r\n  }\r\n \r\n}\r\nconst Inquery = {\r\n  submitInquery(data){\r\n    return superagent.post(`${API_ROOT}/user/submitInquery`,data).use(tokenPlugin)\r\n  }\r\n}\r\nexport default {\r\n  Auth,\r\n  Order,\r\n  Payment,\r\n  Finance,\r\n  Inquery,\r\n  getToken:()=>{return token},\r\n  setToken: _token => { token = _token; }\r\n};"],"sourceRoot":""}