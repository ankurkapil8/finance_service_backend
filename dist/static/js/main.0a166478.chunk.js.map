{"version":3,"sources":["models/BaseUrl.js","agent.js","constants/actionTypes.js","reducers/order.js","reducers/product.js","reducer.js","reducers/auth.js","reducers/common.js","middleware.js","store.js","components/finance-Itr/ItrPopup.js","components/home/InqueryForm.js","components/layout/SectionMenu.js","components/layout/SectionOffers.js","components/layout/LogedInView.js","components/layout/LogedOutView.js","components/layout/Header.js","components/home/Home.js","components/layout/ListErrors.js","components/users/Registration.js","models/interceptor-middleware.js","models/user.js","components/layout/Loader.js","components/users/Login.js","components/finance-Itr/FillItr.js","components/layout/InnerHeader.js","components/layout/Leftbar.js","components/layout/TopNav.js","components/layout/InnerLayout.js","components/food-order/AddCartButton.js","components/food-order/CategoryList.js","components/food-order/MyCart.js","components/food-order/PlaceOrder.js","components/food-order/OrderSuccess.js","components/Admin/CategoryManagement.js","components/Admin/orders/OrderHistory.js","components/Admin/AddCategory.js","components/Admin/products/ProductManagement.js","components/Admin/products/AddProduct.js","components/Admin/products/EditProduct.js","components/Admin/finance/FinanceRequests.js","components/Admin/finance/Form16Requests.js","components/Admin/Home.js","components/users/UserOrderHistory.js","components/users/user-actions/UserAction.js","components/food-order/OrderFailed.js","models/masterRecord.js","components/masterRecord/memberGroup/MemberGroup.js","components/masterRecord/memberGroup/AddMemberGroup.js","models/memberDetails.js","components/masterRecord/member/AddMember.js","components/masterRecord/member/Member.js","components/masterRecord/member/MemberViewDetails.js","models/groupLoan.js","components/groupLoan/Scheme.js","components/groupLoan/AddScheme.js","components/dashboard/Dashboard.js","components/groupLoan/LoanApplication.js","components/groupLoan/LoanApproval.js","components/groupLoan/DisburseLoan.js","components/groupLoan/EmiCard.js","components/groupLoan/EmiCardPrint.js","components/groupLoan/LoanApprovalDetails.js","components/groupLoan/AllApplications.js","components/groupLoan/EmiCalculator.js","components/emis/DueEmis.js","Routes.js","App.js","reportWebVitals.js","index.js"],"names":["superagent","superagentPromise","_superagent","global","Promise","API_ROOT","window","location","hostname","encodeURIComponent","responseBody","res","errorBody","err","response","token","tokenPlugin","req","set","requests","url","get","use","then","body","post","Auth","login","email","password","register","userDetails","Order","getProductsByCat","catname","getCatgoryInitialData","placeOrder","data","getCategoryAdmin","getOrdersHistoryAdmin","page","getOrderHistoryByUserEmail","addCategory","deleteCategory","del","editCategory","put","getProducts","deleteProduct","addProducts","editProducts","Payment","getRazorpayOrderId","updatePaymentStatus","Finance","fillItr","getAdminItr","uploadForm16","getAdminForm16","downloadForm16","fileName","Inquery","submitInquery","getToken","setToken","_token","REDIRECT","LOGIN","LOGOUT","REGISTER","LOGIN_PAGE_UNLOADED","REGISTER_PAGE_UNLOADED","ASYNC_START","ASYNC_END","UPDATE_FIELD_AUTH","ADD_ITEM_INITIAL","INCREASE_QUANTITY","DECREASE_QUANTITY","RESET_ORDER","STORE_EDIT_PRODUCT","GET_EDIT_PRODUCT","UPDATE_PRODUCT_FIELD","defaultState","addedItem","product","appReducer","combineReducers","auth","state","action","type","inProgress","errors","payload","message","role","record","id","statusCode","jwtToken","isLoginSuccess","subtype","key","value","common","redirectTo","order","productId","item","_id","quantity","perItemPrice","price","map","prod","rootReducer","undefined","promiseMiddleware","store","next","v","dispatch","currentView","getState","viewChangeCounter","skipTracking","currentState","promise","error","localStorageMiddleware","localStorage","setItem","agent","persistConfig","storage","whitelist","pReducer","persistReducer","reducer","createStore","composeWithDevTools","applyMiddleware","persistor","persistStore","ItrPopup","props","Modal","show","isopen","onHide","hide","centered","className","Header","closeButton","Title","Body","to","pathname","query","InqueryForm","useState","fullName","business","dob","Date","gender","service","Phone","setState","dobstate","setdobstate","setmessage","loading","setloading","handleChange","e","target","name","console","log","Alert","variant","onClose","dismissible","Form","onSubmit","ev","preventDefault","serviceType","reset","Row","Group","as","Col","controlId","Label","Control","onChange","placeholder","selected","date","dateFormat","showYearDropdown","dateFormatCalendar","yearDropdownItemNumber","scrollableYearDropdown","maxDate","defaultValue","readOnly","Button","disabled","Component","LogedInView","currentUser","aactiveClassName","LogedOutView","useDispatch","history","useHistory","split","isAdmin","isPrimeMember","onClick","push","handleITRPopup","this","connect","Home","ListErrors","Registration","submitForm","isLoading","required","Text","React","axios","interceptors","request","successfulReq","reject","successRes","formatedResponse","username","Loader","Spinner","animation","relative","Login","isShowLoader","user","catch","changeEmail","onChangeEmail","changePassword","onChangePassword","document","classList","add","onlogout","remove","onUnload","src","autoFocus","href","FillItr","setstate","isphoneinvalid","setisphoneinvalid","isemailinvalid","setiisemailinvalid","isaadharinvalid","setiisaadharinvalid","form16","setform16","handlePay","checkValidate","orderForService","onlinePayment","returnType","amount","options","updatePaymentState","rzp1","Razorpay","on","open","alert","status","obj","paymentObj","razorpay_order_id","paymentStatus","paymentResponse","metadata","order_id","handleSubmit","onFileUpload","paymentMode","formData","FormData","append","isInvalid","Feedback","rows","File","Input","accept","files","InnerHeader","Leftbar","useSelector","useLocation","process","Nav","Link","eventKey","TopNav","navClick","setNevClick","InnerLayout","component","rest","showSidebar","setshowSidebar","useEffect","innerWidth","checkLogin","toggleSidebar","jwt","getItem","hasOwnProperty","render","AddCartButton","initialAddItem","addItemInitial","increaseQuantity","decreaseQuantity","nextprops","arr","length","filter","Badge","CategoryList","getInitialData","showloader","all","categories","products","categoryList","itemList","changeCategory","catName","selectedTab","Container","fluid","md","ListGroup","defaultActiveKey","Item","active","index","CardColumns","Card","border","Img","imageUrl","title","Subtitle","description","Footer","MyCart","priceTotal","reduce","prevValue","currentValue","parseInt","Table","responsive","striped","bordered","colSpan","PlaceOrder","authState","shipingDetails","setShipingDetails","showPayementModel","setshowPayementModel","isnameinvalid","setisnameinvalid","isaddressinvalid","setisaddressinvalid","totalQuantity","totalPrice","shippingObj","address","phone","city","street","landmark","items","shipping","selectPaymentMode","forEach","element","borderless","OrderSuccess","Heading","CategoryManagement","setShow","heading","setalert","handleClose","showLoader","getCategories","useMemo","col1","col2","col3","columns","accessor","useTable","initialState","pageIndex","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","pageOptions","previousPage","pageSize","gotoPage","nextPage","canPreviousPage","setPageSize","canNextPage","changeTab","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","isSorted","isSortedDesc","row","getRowProps","cells","cell","getCellProps","width","height","viewBox","class","fill","xmlns","d","OrderHistory","getOrders","orderHistory","setorderHistory","selectedorder","setselectedorder","totalPage","settotalPage","isopenpopup","setisopenpopup","selectedPage","setselectedPage","number","Pagination","changePage","paginationBasic","totalOrders","datePlaced","itm","viewOrderPopUp","hover","isDiscountApplied","totalBillAmount","AddCategory","ProductManagement","col4","col5","col6","category","col7","Image","thumbnail","editProduct","AddProduct","setcategory","EditProduct","storeProduct","FinanceRequests","ITRrequests","setITRrequests","getITRrequests","firstName","lastName","aadhar","zip","Form16Requests","form16requests","setform16requests","getForm16requests","filePathArr","filePath","setisShowLoader","setselectedTab","tab","UserOrderHistory","UserAction","OrderFailed","getMemberGroups","saveMemberGroups","MemberGroup","memberGroupRecords","setMemberGroupsRecords","getMemberGroup","masterRecord","group","group_code","group_name","remark","moment","created_at","format","style","top","position","ProgressBar","now","label","AddMemberGroup","values","setValues","isShow","showToast","setShowToast","handleAlertShow","setTimeout","formik","useFormik","initialValues","user_id","validate","resetForm","prevValues","delay","touched","MemberDetailModel","getMemberDetailsData","member_id","saveMemberDetails","deleteMember","editMember","AddMember","enrollmentDate","setEnrollmentDate","setDob","groups","setGroups","getMemberDetails","memberDetails","aadhar_number","member_name","age","marital_status","mobile_number","email_id","member_group_id","pan_card_number","driving_license_number","voter_id_number","ration_card_number","bank_account","bank_ifsc_code","bank_account_holder","enrollment_date","date_of_birth","scrollTo","Members","showDeleteModel","setShowDeleteModel","deleteID","setDeleteID","memberRecords","setMemberRecords","allowFilter","memberRecord","initialData","UpdatedList","member","idx","DefaultColumnFilter","filterValue","preFilteredRows","setFilter","count","defaultColumn","Filter","paginate","pageNumberArray","i","First","Prev","num","Next","Last","useFilters","pageCount","size","alt","EmiModel","calculateEMI","getDueEmis","today","paidEmi","getPaidEmis","loanAccountNo","getScheme","saveScheme","deleteScheme","getLoanAppInitialData","applyForloan","getApprovalList","getDisburseList","getLoanDetailbyId","approveRejectLoan","getAllLoanApplications","disburseRejectLoan","Scheme","schemes","setSchemes","getSchemes","groupLoan","scheme","scheme_code","scheme_name","max_amount","interest_rate","EMI_type","deleteHandle","AddScheme","Toast","autohide","min","Dashboard","LoanApplication","schemeRecords","setSchemeRecords","selectedScheme","setSelectedScheme","getSchemesAndMembers","scheme_id","application_date","loan_amount","EMI_payout","tenure","schems","LoanApproval","loanlist","setLoanlist","getLoanList","loan","loan_id","DisburseLoan","EmiCard","header","text","handlePrintEMI","showDisburseButton","emiData","paidEmiRecord","EMI","principal","int_amount","outstanding","EmiCardPrint","PureComponent","LoanApprovalDetails","memberDetailsRef","useRef","handlePrintMemberDetail","useReactToPrint","content","current","documentTitle","applicationRef","handlePrintApplication","emiRef","setPaidEmiRecord","isShowEMILoader","setisShowEMILoader","setEmiData","loanDetails","setLoanDetails","showApprovalButton","setShowApprovalButton","setShowDisburseButton","getLoanDetails","calculateEmi","Tenure","EmiData","paidData","result","loan_account_no","emiDate","EMI_date","is_approved","is_disbursed","actionOnLoan","actionType","actionDisburseLoan","xs","ref","display","AllApplications","actionStatus","col8","formatedData","EmiCalculator","calculatedData","setCalculatedData","componentRef","handlePrint","loanStartDate","DueEmis","dueEmis","setDueEmis","paidID","setPaidID","getDueEmisRecord","emi","substring","paidEMI","emidata","emi_id","InputGroup","FormLabel","selectedDate","loan_table_id","remain_EMI","EMI_amount","paidHandle","Routes","exact","path","MemberViewDetails","AdminHome","Member","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0a166478.chunk.js","sourcesContent":["import superagentPromise from 'superagent-promise';\r\nimport _superagent from 'superagent';\r\n\r\nexport const superagent = superagentPromise(_superagent, global.Promise);\r\nexport const API_ROOT = window.location.hostname==\"localhost\"?\"https://micro-service-dev.herokuapp.com/api\": '/api';\r\n\r\n\r\nconst encode = encodeURIComponent;\r\nconst responseBody = res => res;\r\nconst errorBody = err =>{\r\n  return err.response\r\n} ;\r\nlet token = null;\r\nconst tokenPlugin = req => {\r\n  if (token) {\r\n    req.set('Token', token);\r\n  }\r\n}\r\nexport const requests = {\r\n    del: url =>\r\n      superagent.del(`${API_ROOT}${url}`).then(responseBody,errorBody),\r\n    get: url =>\r\n      superagent.get(`${API_ROOT}${url}`).then(responseBody,errorBody),\r\n    // put: (url, body) =>\r\n    //   superagent.put(`${API_ROOT}${url}`, body).use(tokenPlugin).then(responseBody),\r\n    post: (url, body) =>\r\n      superagent.post(`${API_ROOT}${url}`, body).then(responseBody,errorBody)\r\n  };","import superagentPromise from 'superagent-promise';\r\nimport _superagent from 'superagent';\r\n\r\nconst superagent = superagentPromise(_superagent, global.Promise);\r\n\r\nconst API_ROOT = '/api';\r\n\r\nconst encode = encodeURIComponent;\r\nconst responseBody = res => res;\r\nconst errorBody = err =>{\r\n  return err.response\r\n} ;\r\nlet token = null;\r\nconst tokenPlugin = req => {\r\n  if (token) {\r\n    req.set('Token', token);\r\n  }\r\n}\r\n\r\nconst requests = {\r\n  // del: url =>\r\n  //   superagent.del(`${API_ROOT}${url}`).use(tokenPlugin).then(responseBody),\r\n  get: url =>\r\n    superagent.get(`${API_ROOT}${url}`).use(tokenPlugin).then(responseBody,errorBody),\r\n  // put: (url, body) =>\r\n  //   superagent.put(`${API_ROOT}${url}`, body).use(tokenPlugin).then(responseBody),\r\n  post: (url, body) =>\r\n    superagent.post(`${API_ROOT}${url}`, body).use(tokenPlugin).then(responseBody,errorBody)\r\n};\r\n\r\nconst Auth = {\r\n  login: (email, password) =>\r\n    requests.post('/user/login',  { email, password } ),\r\n  register: (userDetails) =>\r\n    requests.post('/user/registration',  userDetails ),\r\n};\r\n\r\nconst Order = {\r\n  getProductsByCat:(catname)=>\r\n  requests.get(`/products?category=${catname}`),\r\n  getCatgoryInitialData:()=>{\r\n    return [superagent.get(`${API_ROOT}/category`),superagent.get(`${API_ROOT}/products`)]\r\n  },\r\n  placeOrder:(data)=>{\r\n    //requests.post(\"/orders/place-order\",data)\r\n    return superagent.post(`${API_ROOT}/orders/place-order`, data).use(tokenPlugin)\r\n  },\r\n  getCategoryAdmin(){\r\n    return superagent.get(`${API_ROOT}/category`).use(tokenPlugin)\r\n  },\r\n  getOrdersHistoryAdmin(page){\r\n    return superagent.get(`${API_ROOT}/orders/admin-order-list?page=${page}`).use(tokenPlugin)\r\n  },\r\n  getOrderHistoryByUserEmail(){\r\n    return superagent.get(`${API_ROOT}/orders/get-order`).use(tokenPlugin)\r\n  },\r\n  addCategory(data){\r\n    return superagent.post(`${API_ROOT}/category`,data).use(tokenPlugin)\r\n  },\r\n  deleteCategory(data){\r\n    return superagent.del(`${API_ROOT}/category?name=${data}`,data).use(tokenPlugin)\r\n  },\r\n  editCategory(data){\r\n    return superagent.put(`${API_ROOT}/category`,data).use(tokenPlugin)\r\n  },\r\n  getProducts(){\r\n    return superagent.get(`${API_ROOT}/products`).use(tokenPlugin)\r\n  },\r\n  deleteProduct(data){\r\n    return superagent.del(`${API_ROOT}/products?title=${data}`,data).use(tokenPlugin)\r\n  },\r\n  addProducts(data){\r\n    return superagent.post(`${API_ROOT}/products`,data).use(tokenPlugin)\r\n  },\r\n  editProducts(data){\r\n    return superagent.put(`${API_ROOT}/products`,data).use(tokenPlugin)\r\n  }\r\n};\r\nconst Payment = {\r\n  getRazorpayOrderId(data){\r\n    return superagent.post(`${API_ROOT}/payment/food-create-order-no`,data).use(tokenPlugin)\r\n  },\r\n  updatePaymentStatus(data){\r\n    return superagent.post(`${API_ROOT}/payment/updatePaymentStatus`,data).use(tokenPlugin)\r\n  }\r\n};\r\nconst Finance = {\r\n  fillItr(data){\r\n    return superagent.post(`${API_ROOT}/finance/fill-itr`,data).use(tokenPlugin)\r\n  },\r\n  getAdminItr(){\r\n    return superagent.get(`${API_ROOT}/finance/fill-itr`).use(tokenPlugin)\r\n  },\r\n  uploadForm16(data){\r\n    return superagent.post(`${API_ROOT}/finance/form16Upload`,data).use(tokenPlugin)\r\n  },\r\n  getAdminForm16(){\r\n    return superagent.get(`${API_ROOT}/finance/form16Upload`).use(tokenPlugin)\r\n  },\r\n  downloadForm16(data){\r\n    return superagent.get(`${API_ROOT}/download?fileName=${data.fileName}`).use(tokenPlugin)\r\n  }\r\n \r\n}\r\nconst Inquery = {\r\n  submitInquery(data){\r\n    return superagent.post(`${API_ROOT}/user/submitInquery`,data).use(tokenPlugin)\r\n  }\r\n}\r\nexport default {\r\n  Auth,\r\n  Order,\r\n  Payment,\r\n  Finance,\r\n  Inquery,\r\n  getToken:()=>{return token},\r\n  setToken: _token => { token = _token; }\r\n};","\r\n  \r\nexport const APP_LOAD = 'APP_LOAD';\r\nexport const REDIRECT = 'REDIRECT';\r\nexport const ARTICLE_SUBMITTED = 'ARTICLE_SUBMITTED';\r\nexport const SETTINGS_SAVED = 'SETTINGS_SAVED';\r\nexport const DELETE_ARTICLE = 'DELETE_ARTICLE';\r\nexport const SETTINGS_PAGE_UNLOADED = 'SETTINGS_PAGE_UNLOADED';\r\nexport const HOME_PAGE_LOADED = 'HOME_PAGE_LOADED';\r\nexport const HOME_PAGE_UNLOADED = 'HOME_PAGE_UNLOADED';\r\nexport const ARTICLE_PAGE_LOADED = 'ARTICLE_PAGE_LOADED';\r\nexport const ARTICLE_PAGE_UNLOADED = 'ARTICLE_PAGE_UNLOADED';\r\nexport const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const DELETE_COMMENT = 'DELETE_COMMENT';\r\nexport const ARTICLE_FAVORITED = 'ARTICLE_FAVORITED';\r\nexport const ARTICLE_UNFAVORITED = 'ARTICLE_UNFAVORITED';\r\nexport const SET_PAGE = 'SET_PAGE';\r\nexport const APPLY_TAG_FILTER = 'APPLY_TAG_FILTER';\r\nexport const CHANGE_TAB = 'CHANGE_TAB';\r\nexport const PROFILE_PAGE_LOADED = 'PROFILE_PAGE_LOADED';\r\nexport const PROFILE_PAGE_UNLOADED = 'PROFILE_PAGE_UNLOADED';\r\nexport const LOGIN = 'LOGIN';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const REGISTER = 'REGISTER';\r\nexport const LOGIN_PAGE_UNLOADED = 'LOGIN_PAGE_UNLOADED';\r\nexport const REGISTER_PAGE_UNLOADED = 'REGISTER_PAGE_UNLOADED';\r\nexport const ASYNC_START = 'ASYNC_START';\r\nexport const ASYNC_END = 'ASYNC_END';\r\nexport const EDITOR_PAGE_LOADED = 'EDITOR_PAGE_LOADED';\r\nexport const EDITOR_PAGE_UNLOADED = 'EDITOR_PAGE_UNLOADED';\r\nexport const ADD_TAG = 'ADD_TAG';\r\nexport const REMOVE_TAG = 'REMOVE_TAG';\r\nexport const UPDATE_FIELD_AUTH = 'UPDATE_FIELD_AUTH';\r\nexport const UPDATE_FIELD_EDITOR = 'UPDATE_FIELD_EDITOR';\r\nexport const FOLLOW_USER = 'FOLLOW_USER';\r\nexport const UNFOLLOW_USER = 'UNFOLLOW_USER';\r\nexport const PROFILE_FAVORITES_PAGE_UNLOADED = 'PROFILE_FAVORITES_PAGE_UNLOADED';\r\nexport const PROFILE_FAVORITES_PAGE_LOADED = 'PROFILE_FAVORITES_PAGE_LOADED';\r\nexport const ADD_ITEM_INITIAL = 'ADD_ITEM_INITIAL';\r\nexport const INCREASE_QUANTITY = 'INCREASE_QUANTITY';\r\nexport const DECREASE_QUANTITY = 'DECREASE_QUANTITY';\r\nexport const RESET_ORDER = 'RESET_ORDER';\r\nexport const STORE_EDIT_PRODUCT = 'STORE_EDIT_PRODUCT';\r\nexport const GET_EDIT_PRODUCT = 'GET_EDIT_PRODUCT';\r\nexport const UPDATE_PRODUCT_FIELD = 'UPDATE_PRODUCT_FIELD';","import {\r\n    ADD_ITEM_INITIAL,\r\n    INCREASE_QUANTITY,\r\n    DECREASE_QUANTITY,\r\n    RESET_ORDER\r\n  } from '../constants/actionTypes';\r\n  const defaultState = {\r\n    addedItem: [],\r\n  };\r\n  \r\n  export default (state = defaultState, action) => {\r\n      switch (action.type) {\r\n        case ADD_ITEM_INITIAL:\r\n            const addedItem =[...state.addedItem,{\r\n                productId:action.item._id,\r\n                quantity:1,\r\n                perItemPrice:action.item.price,\r\n                item:action.item\r\n            }]\r\n            return {...state, addedItem};\r\n        case INCREASE_QUANTITY:\r\n             state.addedItem.map(record=>{\r\n                if(record.productId == action.productId){\r\n                    record.quantity +=1\r\n                }\r\n                return record;\r\n            });\r\n            return {...state,state}\r\n        case DECREASE_QUANTITY:\r\n            state.addedItem.map(record=>{\r\n                if(record.productId == action.productId && record.quantity !=0){\r\n                        record.quantity -=1\r\n                }\r\n                return record;\r\n            });\r\n            return {...state,state}\r\n        case RESET_ORDER:\r\n            state.addedItem = []\r\n            return {...state}\r\n        default:\r\n          return state;\r\n      }\r\n      return state;\r\n    };","import {\r\n    STORE_EDIT_PRODUCT,\r\n    GET_EDIT_PRODUCT,\r\n    UPDATE_PRODUCT_FIELD\r\n  } from '../constants/actionTypes';\r\n  const defaultState = {\r\n    product: {},\r\n  };\r\n  \r\n  export default (state = defaultState, action) => {\r\n      switch (action.type) {\r\n        case STORE_EDIT_PRODUCT:\r\n            return {...state,\r\n                product:action.data \r\n            };\r\n        case GET_EDIT_PRODUCT:\r\n            return {...state};\r\n        case UPDATE_PRODUCT_FIELD:\r\n            let prod = state.product;\r\n            prod[action.data.key]=action.data.value;\r\n           return {...state,product:prod}\r\n        default:\r\n          return state;\r\n      }\r\n      return state;\r\n    };","import auth from './reducers/auth';\r\nimport common from './reducers/common';\r\nimport order from './reducers/order';\r\nimport product from './reducers/product';\r\nimport { combineReducers } from 'redux';\r\n//import { routerReducer } from 'react-router-redux';\r\n\r\nconst appReducer = combineReducers({\r\n  auth,\r\n  common,\r\n  order,\r\n  product\r\n  /* your app’s top-level reducers */\r\n})\r\n\r\nconst rootReducer = (state, action) => {\r\n  if (action.type === 'LOGOUT') {\r\n    state = undefined\r\n  }\r\n\r\n  return appReducer(state, action)\r\n}\r\nexport default rootReducer\r\n// export default combineReducers({\r\n//   auth,\r\n//   common,\r\n//   order,\r\n//     //router: routerReducer\r\n//   });","import {\r\n    LOGIN,\r\n    REGISTER,\r\n    LOGIN_PAGE_UNLOADED,\r\n    REGISTER_PAGE_UNLOADED,\r\n    ASYNC_START,\r\n    UPDATE_FIELD_AUTH,\r\n    LOGOUT\r\n  } from '../constants/actionTypes';\r\n  \r\n  export default (state = {}, action) => {\r\n  //console.log(action);\r\n    switch (action.type) {\r\n      case LOGIN:\r\n        return {\r\n          ...state,\r\n          inProgress: false,\r\n          errors: action.payload.message,\r\n          role:action.payload.record[0]?.role,\r\n          id:action.payload.record[0]?.id,\r\n          statusCode:action.payload.jwtToken != \"\"?\"200\":\"\",\r\n          isLoginSuccess:action.payload.jwtToken != \"\"? true:false\r\n        }\r\n      case REGISTER:\r\n        return {\r\n          ...state,\r\n          inProgress: false,\r\n          errors: action.payload,\r\n          statusCode:action.payload.statusCode\r\n        };\r\n      case LOGIN_PAGE_UNLOADED:\r\n      return{\r\n        ...state,\r\n        //errors: action.payload,\r\n        //userDetails:\r\n      }\r\n      case REGISTER_PAGE_UNLOADED:\r\n        return {};\r\n      case ASYNC_START:\r\n        if (action.subtype === LOGIN || action.subtype === REGISTER) {\r\n          return { ...state, inProgress: true };\r\n        }\r\n        break;\r\n      case UPDATE_FIELD_AUTH:\r\n        return { ...state, [action.key]: action.value };\r\n      default:\r\n        return state;\r\n    }\r\n    return state;\r\n  };","import {\r\n    LOGOUT,\r\n    REDIRECT\r\n  } from '../constants/actionTypes';\r\n  const defaultState = {\r\n    appName: 'Conduit',\r\n    token: null,\r\n    viewChangeCounter: 0\r\n  };\r\n  \r\n  export default (state = {}, action) => {\r\n    //console.log(action);\r\n      switch (action.type) {\r\n        case REDIRECT:\r\n            return { ...state, redirectTo: null };\r\n        // case LOGOUT:\r\n        //     return { redirectTo: '/login', token: null, currentUser: null };\r\n        default:\r\n          return state;\r\n      }\r\n      return state;\r\n    };","import agent from './agent';\r\nimport {\r\n  ASYNC_START,\r\n  ASYNC_END,\r\n  LOGIN,\r\n  LOGOUT,\r\n  REGISTER\r\n} from './constants/actionTypes';\r\n\r\nconst promiseMiddleware = store => next => action => {\r\n  if (isPromise(action.payload)) {\r\n    store.dispatch({ type: ASYNC_START, subtype: action.type });\r\n\r\n    const currentView = store.getState().viewChangeCounter;\r\n    const skipTracking = action.skipTracking;\r\n\r\n    action.payload.then(\r\n      res => {\r\n        const currentState = store.getState()\r\n        if (!skipTracking && currentState.viewChangeCounter !== currentView) {\r\n          return\r\n        }\r\n        action.payload = res;\r\n        store.dispatch({ type: ASYNC_END, promise: action.payload });\r\n        store.dispatch(action);\r\n      },\r\n      error => {\r\n        const currentState = store.getState()\r\n        if (!skipTracking && currentState.viewChangeCounter !== currentView) {\r\n          return\r\n        }\r\n        action.error = true;\r\n        action.payload = error.response.body;\r\n        if (!action.skipTracking) {\r\n          store.dispatch({ type: ASYNC_END, promise: action.payload });\r\n        }\r\n        store.dispatch(action);\r\n      }\r\n    );\r\n\r\n    return;\r\n  }\r\n\r\n  next(action);\r\n};\r\n\r\nconst localStorageMiddleware = store => next => action => {\r\n  if (action.type === LOGIN && action.payload != undefined) {\r\n    if (action.payload.jwtToken!=\"\") {\r\n      window.localStorage.setItem('jwt', action.payload.jwtToken);\r\n      agent.setToken(action.payload.jwtToken);\r\n    }\r\n  } else if (action.type === LOGOUT) {\r\n    window.localStorage.setItem('jwt','');\r\n    agent.setToken(null);\r\n  }\r\n\r\n   next(action);\r\n};\r\n\r\nfunction isPromise(v) {\r\n  return v && typeof v.then === 'function';\r\n}\r\n\r\n\r\nexport { promiseMiddleware, localStorageMiddleware }","import { applyMiddleware, createStore } from 'redux';\r\nimport reducer from './reducer';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport { promiseMiddleware, localStorageMiddleware } from './middleware';\r\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\r\nimport storage from 'redux-persist/lib/storage';\r\nconst persistConfig = {\r\n  key: 'authType',\r\n  storage: storage,\r\n  whitelist: ['auth'] // which reducer want to store\r\n};\r\nconst pReducer = persistReducer(persistConfig, reducer);\r\nconst getMiddleware = () => {\r\n      return applyMiddleware( promiseMiddleware, localStorageMiddleware);\r\n  };\r\nconst store = createStore(pReducer,composeWithDevTools(getMiddleware()));\r\nconst persistor = persistStore(store);\r\nexport { persistor, store };","import React from 'react'\r\nimport { Modal, Button } from 'react-bootstrap';\r\nimport {Link} from 'react-router-dom';\r\n\r\n//import \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nfunction ItrPopup(props) {\r\n    return (\r\n    <Modal show={props.isopen} onHide={props.hide} centered className=\"text-center\">\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Tax Return</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Link to={{ pathname: `/fillItr`, query:{type: 'fill'}}}  className=\"btn btn-danger btn-sm\">Start Your Tax Return</Link>\r\n                <Link to={{ pathname: `/fillItr`, query:{type: 'uploadForm16'}}} className=\"btn btn-danger btn-sm\">Upload Form-16 Now</Link>\r\n            </Modal.Body>\r\n        </Modal>\r\n        )\r\n}\r\n\r\nexport default ItrPopup\r\n","import React, { useState } from 'react'\r\nimport { Button, Form, Col, Row, Container, Modal,Alert } from 'react-bootstrap';\r\nimport agent from '../../agent'\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nfunction InqueryForm(props) {\r\n    const [state, setState] = useState(\r\n        {fullName:\"\",\r\n            email:\"\",\r\n            business:\"\",\r\n            dob:new Date(),\r\n            gender:\"\",\r\n            service:\"\",\r\n            Phone:\"\"\r\n        });\r\n    const [dobstate, setdobstate] = useState(new Date());\r\n    const [message, setmessage] = useState({type:\"\",message:\"\"})\r\n    const [loading, setloading] = useState(false)\r\n\r\n    const handleChange = (e)=>{\r\n        state[e.target.name] = e.target.value;\r\n        setState(state);\r\n        console.log(state);\r\n    }\r\n    const handleSubmit = (ev)=>{\r\n        ev.preventDefault();\r\n\r\n        state[\"dob\"] = dobstate;\r\n        state[\"service\"] = props.serviceType;\r\n        setState(state);\r\n        console.log(state);\r\n        setloading(true);\r\n        agent.Inquery.submitInquery(state).then((res=>{\r\n            if(res.statusCode == 200){\r\n                ev.target.reset();\r\n                message.type = \"success\";\r\n                message.message = \"Your Details has been submited. Our agent will contact you soon.\"\r\n            }else{\r\n                message.type = \"error\";\r\n                message.message = \"Something went wrong. Please try again.\"\r\n            }\r\n            setmessage(message);\r\n            setloading(false);\r\n\r\n        }))\r\n    }\r\n    return (\r\n        <>\r\n\r\n        <Modal show={props.isopen} onHide={props.hide} >\r\n\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Enquiry</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                {  message.type != \"\"? \r\n                message.type ==\"success\"?\r\n                <Alert key={message.type} variant={\"success\"} onClose={() => setmessage({type:\"\",message:\"\"})} dismissible>\r\n                    {message.message}\r\n                </Alert>:<Alert key={message.type} variant={\"danger\"} onClose={() => setmessage({type:\"\",message:\"\"})} dismissible>\r\n                    {message.message}\r\n                </Alert>:\"\"        \r\n                }\r\n\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridPassword\">\r\n                            <Form.Label>Full Name</Form.Label>\r\n                            <Form.Control onChange={handleChange} type=\"text\" name=\"fullName\"/>\r\n                        </Form.Group>\r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"formGridEmail\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type=\"email\" onChange={handleChange} name=\"email\" placeholder=\"Enter email\" />\r\n                        </Form.Group>\r\n\r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridAddress1\">\r\n                        <Form.Label>Business</Form.Label>\r\n                        <Form.Control type=\"text\" onChange={handleChange}  name=\"business\"/>\r\n                    </Form.Group>\r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridAddress1\">\r\n                        <Form.Label>Date of Birth</Form.Label>\r\n                        <DatePicker\r\n                         selected={dobstate} \r\n                         onChange={date=>setdobstate(date)}\r\n                         dateFormat=\"dd/MM/yyyy\"\r\n                         showYearDropdown\r\n                         dateFormatCalendar=\"MMMM\"\r\n                         yearDropdownItemNumber={50}\r\n                         scrollableYearDropdown\r\n                         maxDate={new Date()}\r\n                         />\r\n                    </Form.Group>\r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridState\">\r\n                    <Form.Label>Gender</Form.Label>\r\n                    <Form.Control name=\"gender\" as=\"select\" onChange={handleChange} defaultValue=\"Choose...\">\r\n                        <option>Choose...</option>\r\n                        <option value=\"male\">Male</option>\r\n                        <option value=\"female\">Female</option>\r\n                    </Form.Control>\r\n                    </Form.Group>                        \r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridState\">\r\n                    <Form.Label>Service</Form.Label>\r\n                        <Form.Control onChange={handleChange} type=\"text\" name=\"service\" value={props.serviceType} readOnly/>\r\n                    </Form.Group>                        \r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridAddress1\">\r\n                        <Form.Label>Phone</Form.Label>\r\n                        <Form.Control type=\"text\" onChange={handleChange}  name=\"phone\"/>\r\n                    </Form.Group>\r\n                    </Form.Row>\r\n\r\n                    <Button variant=\"primary\" type=\"submit\" disabled={loading}>\r\n                    {loading ? 'Loading…' : \"Submit\"}\r\n\r\n                    </Button>\r\n                </Form>\r\n            </Modal.Body>\r\n        </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default InqueryForm\r\n","import React, { Component} from 'react'\r\nimport ItrPopup from '../finance-Itr/ItrPopup'\r\nimport InqueryForm from '../home/InqueryForm'\r\nimport {Link} from 'react-router-dom';\r\n\r\n  class SectionMenu extends Component {\r\n    isopen = false;\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        isopen:false,\r\n        openEnqueryForm:false,\r\n        serviceType:\"\"\r\n      }\r\n    }\r\n    handleITRPopup = () =>{\r\n      this.setState({\r\n        isopen:this.state.isopen?false:true\r\n      })\r\n    }\r\n    handleEnqueryForm = (serviceType = \"\")=>{\r\n      console.log(serviceType);\r\n      this.setState({\r\n        openEnqueryForm:this.state.openEnqueryForm?false:true,\r\n        serviceType:serviceType\r\n      })\r\n\r\n    }\r\n    render() {\r\n        return (\r\n          <>\r\n            <section className=\"text-center \">\r\n            <div className=\"container\">\r\n              <div className=\"col-md-12 shadow-sm p-5 service \">\r\n                <div className=\"row roww\">\r\n                  <div className=\"col-md-2 col-sm-3 col-xs-3 p-2 service-box\" onClick={this.handleITRPopup}>\r\n                    <img src={process.env.PUBLIC_URL + '/assets/img/itr.png'} alt=\"\"/>\r\n                    <h5 className=\"my-4\">Fill ITR</h5>\r\n                  </div>\r\n                 \r\n                  <div className=\"col-md-2 col-sm-3 col-xs-3 p-2 service-box \">\r\n                  <Link to=\"/CategoryList\">\r\n                    <img  src={process.env.PUBLIC_URL + '/assets/img/food.png'} alt=\"\"/>\r\n                    <h5 className=\"my-4\">FOOD</h5></Link>\r\n                  </div>\r\n                  <div className=\"col-md-2 col-sm-3 col-xs-3 p-2 service-box\" onClick={()=>this.handleEnqueryForm(\"Catering\")}>\r\n\r\n                    <img src={process.env.PUBLIC_URL + '/assets/img/catering.png'} alt=\"\"/>\r\n                    <h5 className=\"my-4\">Catering</h5>\r\n                  </div>\r\n                  <div className=\"col-md-2 col-sm-3 col-xs-3 p-2 service-box\" onClick={()=>this.handleEnqueryForm(\"Balance Sheet\")}>\r\n\r\n                    <img src={process.env.PUBLIC_URL + '/assets/img/finance.png'} alt=\"\"/>\r\n                    <h5 className=\"my-4\">Financial Consultancy</h5>\r\n                  </div>\r\n                  <div className=\"col-md-2 col-sm-3 col-xs-3 p-2 service-box\" onClick={()=>this.handleEnqueryForm(\"Investment Planning\")}>\r\n\r\n                    <img src={process.env.PUBLIC_URL + '/assets/img/investment.png'} alt=\"\"/>\r\n                    <h5 className=\"my-4\">Investment Planning</h5>\r\n                  </div>\r\n                  <div className=\"col-md-2 col-sm-3 col-xs-3 p-2 service-box\" onClick={()=>this.handleEnqueryForm(\"GST filing\")}>\r\n                    <img src={process.env.PUBLIC_URL + '/assets/img/gst.png'} alt=\"\"/>\r\n                    <h5 className=\"my-4\">GST Filing </h5>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n          <ItrPopup isopen={this.state.isopen} hide={this.handleITRPopup}/>\r\n          <InqueryForm isopen={this.state.openEnqueryForm} serviceType={this.state.serviceType} hide={this.handleEnqueryForm}/>         \r\n        </>\r\n        )\r\n    }\r\n}\r\nexport default SectionMenu\r\n","import React, { Component } from 'react'\r\n\r\nexport default class SectionOffers extends Component {\r\n    render() {\r\n        return (\r\n            <section className=\"text-center\">\r\n                <div className=\"container\">\r\n                    <h4 className=\"h4-responsive font-weight-bold my-3 text-primary\">Best Offers</h4>\r\n                    <div className=\"row my-5\">\r\n                        <div className=\"col-md-3\">\r\n                            <img src={process.env.PUBLIC_URL + '/assets/img/s-1.jpeg'} className=\"img-fluid radius\" alt=\"\" />\r\n                            <h5 className=\"font-weight-bold my-4 text-primary\">Offer 1</h5>\r\n                            <p className=\"grey-text mb-md-0 mb-5 text-primary\">Up to 50% Off\r\n                            </p>\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                            <img src={process.env.PUBLIC_URL + '/assets/img/s-2.jpg'} className=\"img-fluid radius\" alt=\"\" />\r\n                            <h5 className=\"font-weight-bold my-4 text-primary\">offer 2</h5>\r\n                            <p className=\"grey-text mb-md-0 mb-5 text-primary\">Up to 60% off\r\n                  </p>\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                            <img src={process.env.PUBLIC_URL + '/assets/img/s-4.jpeg'} className=\"img-fluid radius\" alt=\"\" />\r\n                            <h5 className=\"font-weight-bold my-4 text-primary\">offer 3</h5>\r\n                            <p className=\"grey-text mb-0 text-primary\">Up to 50% off\r\n                  </p>\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                            <img src={process.env.PUBLIC_URL + '/assets/img/s-3.jpeg'} className=\"img-fluid radius\" alt=\"\" />\r\n                            <h5 className=\"font-weight-bold my-4 text-primary\">Offer 4</h5>\r\n                            <p className=\"grey-text mb-0 text-primary\">Standard EMI Options Available\r\n                  </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { Route,NavLink } from 'react-router-dom'\r\n\r\nfunction LogedInView(props) {\r\n    if(!props.currentUser.errors || props.currentUser.errors.statusCode ==500){\r\n        return (\r\n\r\n        <li className=\"nav-item\">\r\n        <NavLink aactiveClassName=\"active\" className=\"nav-link\" to=\"/login\">Login</NavLink>\r\n        </li>\r\n        )\r\n    }\r\n    return null;\r\n\r\n}\r\n\r\nexport default LogedInView\r\n","import React from 'react'\r\nimport { Route, NavLink } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux'\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nimport {\r\n    LOGOUT\r\n  } from '../../constants/actionTypes';\r\nfunction LogedOutView(props) {\r\n    const dispatch = useDispatch();\r\n    let history = useHistory();\r\n\r\n    const logout = ()=>{\r\n         dispatch({ type: LOGOUT })\r\n           console.log(\"hollo\");\r\n           history.push(\"/\");\r\n       }\r\n         if (props.currentUser.errors && props.currentUser.errors.statusCode == 200) {\r\n        let name = props.currentUser.email.split(\"@\");\r\n\r\n        return (<>\r\n            \r\n            {props.currentUser.errors.body.record.isAdmin?<li className=\"nav-item\">\r\n            <li className=\"nav-item\">\r\n            <NavLink aactiveClassName=\"active\" to=\"/adminHome\" className=\"nav-link\">Admin</NavLink>\r\n            </li>\r\n                \r\n            </li>:\"\"}            \r\n            <li className=\"nav-item\">\r\n                <NavLink aactiveClassName=\"active\" to=\"/userAction\" className=\"nav-link\">\r\n                    {name[0]}\r\n\r\n                    {props.currentUser.errors.body.record.isPrimeMember?<label className=\"clr-cyan\">(Prime member)</label>:\"\"}  \r\n\r\n                    \r\n                    </NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <a className=\"nav-link\" onClick={logout} >Logout</a>\r\n                {/* <NavLink className=\"nav-link\">{props.email}</NavLink> */}\r\n            </li>\r\n        </>\r\n        )\r\n    }\r\n    return null;\r\n}\r\n\r\nexport default LogedOutView\r\n","import React, { Component } from 'react'\r\nimport { Route,NavLink, Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport LoggedInView from './LogedInView';\r\nimport LoggedOutView from './LogedOutView';\r\nimport ItrPopup from '../finance-Itr/ItrPopup'\r\n\r\nclass Header extends Component {\r\n    isopen = false;\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        isopen:false\r\n      }\r\n    }\r\n    handleITRPopup = () =>{\r\n        this.setState({\r\n          isopen:this.state.isopen?false:true\r\n        })\r\n      }\r\n  \r\n    render(){\r\n\r\n    return (\r\n        <header>\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark fixed-top scrolling-navbar\">\r\n                <div className=\"container\">\r\n                    <NavLink className=\"navbar-brand\" to=\"/\"> <h2>AA2 Mutualhelp</h2></NavLink>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent-7\"\r\n                        aria-controls=\"navbarSupportedContent-7\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent-7\">\r\n                        <ul className=\"navbar-nav ml-auto\">\r\n                            <li className=\"nav-item\">\r\n                            {/* <NavLink aactiveClassName=\"active\" className=\"nav-link\" to=\"/\">Home</NavLink> */}\r\n\r\n                            </li>\r\n                            {/* <li className=\"nav-item\" onClick={this.handleITRPopup}>\r\n                                <a className=\"nav-link\" onClick={this.handleITRPopup}>File ITR</a>\r\n                            </li> */}\r\n                            {/* <li className=\"nav-item\">\r\n                                <NavLink activeClassName=\"active\" to=\"/CategoryList\" className=\"nav-link\">Order Food</NavLink>\r\n                                \r\n                            </li> */}\r\n                            <LoggedOutView currentUser={this.props}/>\r\n                            <LoggedInView currentUser={this.props}/>\r\n\r\n                        </ul>\r\n\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n            <div className=\"view\">\r\n                <div className=\"mask rgba-gradient d-flex justify-content-center align-items-center\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12 white-text text-center mx-auto  mb-5 wow fadeInLeft\" data-wow-delay=\"0.3s\">\r\n                                <h1 className=\"my-3 text-center mx-auto font-weight-bold wow fadeInLeft\">Services, on demand.</h1>\r\n\r\n                                <div className=\"ml-auto mr-auto main-search \">\r\n\r\n                                    <form action=\"\" className=\"search-service\">\r\n                                        <input className=\"search-form form-control form-control-lg\" type=\"text\" placeholder=\"Search Services\" />\r\n                                    </form>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <ItrPopup isopen={this.state.isopen} hide={this.handleITRPopup}/>\r\n        </header>\r\n    )}\r\n}\r\n\r\nconst mapStateToProps = state => ({ ...state.auth});\r\nconst mapDispatchToProps = dispatch => ({\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header)\r\n","import React from 'react'\r\nimport SectionMenu from '../layout/SectionMenu'\r\nimport SectionOffers from '../layout/SectionOffers'\r\nimport Header from '../layout/Header'\r\nimport Footer from '../layout/Footer'\r\nfunction Home() {\r\n    return (\r\n        <>\r\n            <Header />\r\n            <SectionMenu />\r\n            {/* <SectionOffers /> */}\r\n            <Footer />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React, { Component } from 'react'\r\nimport { Button, Form, Col, Alert } from 'react-bootstrap';\r\n\r\nexport default class ListErrors extends Component {\r\n    render() {\r\n        const errors = this.props.errors;\r\n        const statusCode = this.props.statusCode;\r\n        if (errors) {\r\n            return (\r\n                <Alert  variant={statusCode==200?\"success\":\"danger\"}>\r\n                    {errors}\r\n              </Alert>\r\n            );\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { Button, Form, Col, Alert } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom'\r\nimport agent from '../../agent'\r\nimport ListErrors from '../layout/ListErrors';\r\n\r\n\r\nclass Registration extends React.Component {    \r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            userDetails: {},\r\n            errors:\"\",\r\n            statusCode:\"\",\r\n            isLoading:false\r\n        }\r\n    }\r\n    handleChange = (e) => {\r\n        const state = this.state.userDetails\r\n        state[e.target.name] = e.target.value;\r\n        this.setState({ userDetails: state });\r\n        \r\n    }\r\n    submitForm=() => ev =>{\r\n        ev.preventDefault();\r\n        this.setState({ isLoading: true });\r\n        agent.Auth.register(this.state.userDetails).then((res=>{\r\n            this.setState({ errors: res, statusCode:res.statusCode, isLoading:false});\r\n            if(res.statusCode == 200){\r\n                ev.target.reset();\r\n                //this.props.history.push('/login')\r\n            }\r\n        }));\r\n    }\r\n    render() {\r\n\r\n    return (\r\n        <div className=\"login-div\">\r\n            <ListErrors errors={this.state.errors} statusCode={this.state.statusCode} />\r\n            <Form className=\"login-form\" onSubmit={this.submitForm()}>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formBasicEmail\" >\r\n                        <Form.Label>Email address</Form.Label>\r\n                        <Form.Control type=\"email\" name=\"email\" placeholder=\"Enter email\"  onChange={this.handleChange} required/>\r\n                        <Form.Text className=\"text-muted\">\r\n                            We'll never share your email with anyone else.\r\n                    </Form.Text>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formBasicEmail\">\r\n                        <Form.Label>Phone</Form.Label>\r\n                        <Form.Control type=\"phone\" name=\"phone\"  onChange={this.handleChange} required/>\r\n                        <Form.Text className=\"text-muted\">\r\n                            We'll never share your phone no with anyone else.\r\n                    </Form.Text>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n\r\n                <Form.Row>\r\n                    <Form.Group as={Col}  controlId=\"formBasicPassword\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control type=\"password\" name=\"password\" placeholder=\"Password\"  onChange={this.handleChange} required/>\r\n                    </Form.Group>\r\n\r\n                </Form.Row>\r\n                <Form.Row>\r\n                    <Button variant=\"primary\" type=\"submit\" disabled={this.state.isLoading}>\r\n                        \r\n                        {this.state.isLoading ? 'Loading…' : \"Register\"}\r\n                    </Button>\r\n                </Form.Row>\r\n\r\n            </Form>\r\n        </div>\r\n\r\n    )}\r\n}\r\n\r\nexport default Registration\r\n","import axios from 'axios';\r\n\r\naxios.interceptors.request.use(\r\n    function(successfulReq) {\r\n        return successfulReq;\r\n    }, \r\n    function(error) {\r\n      return Promise.reject(error);\r\n    }\r\n  );\r\n\r\n  axios.interceptors.response.use( \r\n    function(successRes) {\r\n        let formatedResponse = successRes;\r\n        formatedResponse[\"statusCode\"] = successRes[\"status\"];\r\n        formatedResponse[\"body\"] = successRes[\"data\"];\r\n        delete formatedResponse[\"data\"];\r\n        return formatedResponse;\r\n    }, \r\n    function(error) {\r\n        return Promise.reject(error);\r\n    }\r\n  );\r\n\r\nexport default axios;","import {API_ROOT } from \"./BaseUrl\"\r\nimport axios from \"./interceptor-middleware\";\r\n\r\nconst Auth = {\r\n    login: (username, password) =>\r\n    axios.post(`${API_ROOT}/user/login`,  { username, password } ),\r\n  };\r\n  \r\n  export default {Auth};\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\nfunction Loader(props) {\r\n    if(props.show){\r\n        return (\r\n            <Spinner animation=\"border\" role=\"status\" className={props?.relative?\"loader-relative\":\"loader\"}>\r\n            </Spinner>\r\n        )\r\n    }else{\r\n        return null\r\n    }\r\n}\r\n\r\nexport default Loader\r\n","import React, { Component}  from 'react'\r\nimport { Button, Form, Col, Alert } from 'react-bootstrap';\r\nimport { Route, NavLink, Link,useHistory } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport agent from '../../agent'\r\nimport ListErrors from '../layout/ListErrors';\r\nimport user from \"../../models/user\";\r\nimport Loader from '../layout/Loader';\r\nimport {\r\n    UPDATE_FIELD_AUTH,\r\n    LOGIN,\r\n    LOGIN_PAGE_UNLOADED,\r\n    LOGOUT\r\n} from '../../constants/actionTypes';\r\nimport \"./login.css\";\r\nclass Login extends Component {\r\n   // let history = useHistory();\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state ={isShowLoader:false};\r\n        this.changeEmail = ev => {this.props.onChangeEmail(ev.target.value)};\r\n        this.changePassword = ev => {this.props.onChangePassword(ev.target.value)};\r\n    }\r\n    componentDidMount(){\r\n        var body = document.body;\r\n        body.classList.add(\"login-body\");\r\n\r\n        // var dd = document.html;\r\n        // dd.classList.add(\"login-body\");\r\n        this.props.onlogout()\r\n        this.props.onChangeEmail(\"\")\r\n        this.props.onChangePassword(\"\")\r\n    }\r\n    submitForm=ev=> {\r\n        ev.preventDefault();\r\n        this.setState({isShowLoader:true});\r\n        user.Auth.login(this.props.username, this.props.password).then(res=>{\r\n            this.setState({isShowLoader:false});\r\n            console.log(res);\r\n            this.props.onSubmit(res.body);\r\n        }).catch(err=>{\r\n            console.log(err);\r\n        })\r\n    };\r\n\r\n    componentDidUpdate(){\r\n        if(this.props.isLoginSuccess){\r\n            this.props.history.push('/')\r\n        }\r\n        \r\n    }\r\n    \r\n    componentWillUnmount() {\r\n        var body = document.body;\r\n        body.classList.remove(\"login-body\");\r\n\r\n        this.props.onUnload();\r\n      }\r\n    render() {\r\n        const username = this.props.username;\r\n        const password = this.props.password;\r\n        return (\r\n            <div id=\"login\">\r\n           \r\n            <Loader show={this.state.isShowLoader} />\r\n        {/* <Alert key={this.state.errormsg} variant=\"danger\">{this.state.errormsg}</Alert> */}\r\n            <ListErrors errors={this.props.errors} statusCode={this.props.statusCode}/>\r\n            <div className=\"container\">\r\n        <div className=\"card card-container\">\r\n             {/* <img className=\"profile-img-card\" src=\"//lh3.googleusercontent.com/-6V8xOA6M7BA/AAAAAAAAAAI/AAAAAAAAAAA/rzlHcD0KYwo/photo.jpg?sz=120\" alt=\"\" /> */}\r\n            <img id=\"profile-img\" className=\"profile-img-card\" src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\" />\r\n            <p id=\"profile-name\" className=\"profile-name-card\"></p>\r\n            <Form  className=\"form-signin\" onSubmit={this.submitForm}>\r\n                <span id=\"reauth-email\" className=\"reauth-email\"></span>\r\n                <input type=\"text\" autoFocus id=\"inputEmail\" value={username} onChange={this.changeEmail} className=\"form-control\" placeholder=\"Username\" required/>\r\n                <input type=\"password\" id=\"inputPassword\" value={password}  onChange={this.changePassword} className=\"form-control\" placeholder=\"Password\" required/>\r\n                <div id=\"remember\" className=\"checkbox\">\r\n                    <label>\r\n                        <input type=\"checkbox\" value=\"remember-me\"/> Remember me\r\n                    </label>\r\n                </div>\r\n                <Button variant=\"primary btn-signin\" disabled={this.state.isShowLoader} type=\"submit\">{this.state.isShowLoader ? 'Loading…' : \"Sign in\"}</Button>\r\n            </Form>\r\n            <a href=\"#\" className=\"forgot-password\">\r\n                Forgot the password?\r\n            </a>\r\n        </div>\r\n    </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => ({ ...state.auth });\r\nconst mapDispatchToProps = dispatch => ({\r\n    onChangeEmail: value =>\r\n        dispatch({ type: UPDATE_FIELD_AUTH, key: 'username', value }),\r\n    onChangePassword: value =>\r\n        dispatch({ type: UPDATE_FIELD_AUTH, key: 'password', value }),\r\n    onSubmit: (data) =>\r\n        dispatch({ type: LOGIN, payload: data }),\r\n    onUnload: () =>\r\n        dispatch({ type: LOGIN_PAGE_UNLOADED }),\r\n    onlogout:()=>\r\n        dispatch({ type: LOGOUT })\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","import React,{useState} from 'react'\r\nimport { Button, Form, Col, Row, Container } from 'react-bootstrap';\r\nimport './Finance.css';\r\nimport agent from '../../agent'\r\n// import {KEY_ID,KEY_SECRET} from '../../constants/paymantConstants'\r\n\r\nfunction FillItr(props) {\r\n    const [state, setstate] = useState({});\r\n    const [loading, setloading] = useState(false);\r\n    const [isphoneinvalid,setisphoneinvalid] = useState(false);\r\n    const [isemailinvalid,setiisemailinvalid] = useState(false);\r\n    const [isaadharinvalid,setiisaadharinvalid] = useState(false);\r\n    const [form16, setform16] = useState([]);\r\n    console.log(props);\r\n    const handleChange = (e) => {\r\n        state[e.target.name] = e.target.value;\r\n        setstate(state);\r\n    }\r\n\r\n    const handlePay=()=>{\r\n        setloading(true);\r\n        if(checkValidate()){\r\n            console.log(\"Valid Form\");\r\n            let orderForService = \"Form16\";\r\n            if(props.location.query?.type == \"fill\"){\r\n                orderForService = \"ITR\"\r\n            }\r\n            onlinePayment(orderForService);\r\n        }else{\r\n            console.log(\"invalid from\")\r\n            setloading(false);\r\n\r\n        }\r\n    } \r\n\r\n    const checkValidate=()=>{\r\n        let returnType = true;\r\n        setisphoneinvalid(false);\r\n        setiisemailinvalid(false);            \r\n        setiisaadharinvalid(false);\r\n\r\n        if(state[\"phone\"] ==undefined || state[\"phone\"] ==\"\"){\r\n            setisphoneinvalid(true);\r\n            returnType = false\r\n        }\r\n        if((state[\"email\"] ==undefined || state[\"email\"] ==\"\") && props.location.query?.type == \"fill\" ){\r\n            setiisemailinvalid(true);            \r\n            returnType = false\r\n        } \r\n        if((state[\"aadhar\"] ==undefined || state[\"aadhar\"] ==\"\") && props.location.query?.type == \"fill\"){\r\n            setiisaadharinvalid(true);\r\n            returnType = false\r\n        } \r\n        return returnType;\r\n    } \r\n\r\n    const onlinePayment = (orderForService = \"ITR\")=>{\r\n        let amount = 300;\r\n        agent.Payment.getRazorpayOrderId({amount:amount,orderForService:orderForService}).then((res=>{\r\n            if(res.statusCode == 200){\r\n                console.log(res);\r\n                var options = {\r\n                    \"key\": \"1234\", // Enter the Key ID generated from the Dashboard\r\n                    \"amount\": amount*100, // Amount is in currency subunits. Default currency is INR. Hence, 50000 refers to 50000 paise\r\n                    \"currency\": \"INR\",\r\n                    \"name\": \"Guest\",\r\n                    \"description\": \"ITR Fill Transaction\",\r\n                    \"image\": \"https://example.com/your_logo\",\r\n                    \"order_id\": res.body.record.id, //This is a sample Order ID. Pass the `id` obtained in the response of Step 1\r\n                    \"handler\": function (response){\r\n                        updatePaymentState(\"success\",response);\r\n                    },                \r\n                    \"theme\": {\r\n                        \"color\": \"#3399cc\"\r\n                    }\r\n                };   \r\n                // console.log(options); \r\n                const rzp1 = new window.Razorpay(options);\r\n                rzp1.on('payment.failed', function (response){\r\n                    updatePaymentState(\"failed\",response);\r\n    \r\n                });            \r\n                rzp1.open();\r\n    \r\n            }else{\r\n                setloading(false);\r\n\r\n                alert(res.body)\r\n\r\n            }\r\n        }));\r\n    \r\n    }\r\n    const updatePaymentState=(status,obj)=>{\r\n        let orderId = \"\";\r\n        let paymentObj = {\r\n            razorpay_order_id:\"\",\r\n            paymentStatus:\"\",\r\n            paymentResponse:\"\"\r\n        }\r\n        if(status == \"success\"){\r\n            paymentObj.razorpay_order_id = obj.razorpay_order_id;\r\n            paymentObj.paymentStatus = status;\r\n            paymentObj.paymentResponse = obj;\r\n        }\r\n        if(status == \"failed\"){\r\n            paymentObj.razorpay_order_id = obj.error.metadata.order_id;\r\n            paymentObj.paymentStatus = status;\r\n            paymentObj.paymentResponse = obj;\r\n        }\r\n        try{\r\n            agent.Payment.updatePaymentStatus(paymentObj).then((res=>{\r\n                if(res.statusCode ==200 && status == \"success\"){\r\n                    if(props.location.query?.type == \"fill\"){\r\n                        handleSubmit(paymentObj.razorpay_order_id);\r\n                    }else{\r\n                        onFileUpload(paymentObj.razorpay_order_id);\r\n                    }\r\n                }\r\n                if(res.statusCode ==200 && status == \"failed\"){\r\n                    setloading(false);\r\n                    props.history.push('/orderFailed')\r\n    \r\n                }\r\n    \r\n            }),(err)=>{\r\n                console.log(err.response.body.message);\r\n            });\r\n        }catch(err){\r\n            alert(err);\r\n        }\r\n    }\r\n    const handleSubmit = ( razorpay_order_id, paymentMode=\"online\") =>{\r\n        state[\"razorpay_order_id\"] = razorpay_order_id;\r\n        state[\"paymentMode\"] = paymentMode;\r\n        setstate(state);\r\n        agent.Finance.fillItr(state).then((res=>{\r\n            setloading(false);\r\n            if(res.statusCode ==200){\r\n                props.history.push('/orderSuccess');\r\n            }\r\n        }),(err)=>{\r\n            console.log(err.response.body.message);\r\n        });\r\n    } \r\n    const handleFileUpload = (e)=>{\r\n        setform16(e.target.files[0]);   \r\n    }\r\n    const onFileUpload=(razorpay_order_id)=>{\r\n        const formData = new FormData(); \r\n        formData.append( \r\n          \"myFile\", \r\n          form16, \r\n          form16.name\r\n        ); \r\n        formData.append(\"razorpay_order_id\",razorpay_order_id);        \r\n        formData.append(\"phone\",state[\"phone\"]);        \r\n        agent.Finance.uploadForm16(formData).then((res=>{\r\n            setloading(false);\r\n            if(res.statusCode ==200){\r\n                props.history.push('/orderSuccess');\r\n            }\r\n        }),(err)=>{\r\n            console.log(err.response.body.message);\r\n        });   \r\n\r\n    }\r\n    if(props.location.query?.type == \"fill\"){\r\n        return (\r\n            <>\r\n            <h4 className=\"py-5 text-center\"><b>Fill ITR</b></h4>\r\n            <Form className=\"m-5\">\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridFirstName\">\r\n                        <Form.Label variant=\"primary\">First name</Form.Label>\r\n                        <Form.Control name=\"firstName\" onChange={handleChange}  type=\"text\"  />\r\n                    </Form.Group>\r\n    \r\n                    <Form.Group as={Col} controlId=\"formGridlastName\">\r\n                        <Form.Label>Last name</Form.Label>\r\n                        <Form.Control name=\"lastName\" onChange={handleChange} type=\"text\"  />\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridFirstName\">\r\n                        <Form.Label variant=\"primary\">Phone*</Form.Label>\r\n                        <Form.Control name=\"phone\" onChange={handleChange}  type=\"text\"  isInvalid={isphoneinvalid}/>\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            Please provide a phone number.\r\n                        </Form.Control.Feedback>                    \r\n                    </Form.Group>\r\n                </Form.Row>\r\n    \r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridBusiness\">\r\n                        <Form.Label>Business Name</Form.Label>\r\n                        <Form.Control name=\"business\" onChange={handleChange} type=\"text\" placeholder=\"ABC limited\" />\r\n                    </Form.Group>\r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                    <Form.Group  as={Col} controlId=\"formGridEmail\">\r\n                        <Form.Label>Email*</Form.Label>\r\n                        <Form.Control name=\"email\" onChange={handleChange} type=\"email\" placeholder=\"you@example.com\" isInvalid={isemailinvalid}/>\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            Please provide a Email.\r\n                        </Form.Control.Feedback>                    \r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Form.Row>\r\n                <Form.Group as={Col} controlId=\"formGridAadhar\">\r\n                        <Form.Label>Address</Form.Label>\r\n                        <Form.Control name=\"address\" onChange={handleChange} as=\"textarea\" rows={3} />\r\n                    </Form.Group>\r\n                    </Form.Row><Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridAadhar\">\r\n                        <Form.Label>Aadhar Number*</Form.Label>\r\n                        <Form.Control name=\"aadhar\" onChange={handleChange} type=\"text\" isInvalid={isaadharinvalid}/>\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            Please provide aadhar number.\r\n                        </Form.Control.Feedback>                    \r\n    \r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridState\">\r\n                        <Form.Label>Service</Form.Label>\r\n                        <Form.Control name=\"service\" onChange={handleChange} as=\"select\" defaultValue=\"Choose...\">\r\n                            <option>Choose...</option>\r\n                            <option>Balance Sheet</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} controlId=\"formGridAddress\">\r\n                        <Form.Label>PAN Number</Form.Label>\r\n                        <Form.Control name=\"pan\" onChange={handleChange} type=\"text\" />\r\n                    </Form.Group>\r\n    \r\n    \r\n                    <Form.Group as={Col} controlId=\"formGridZip\">\r\n                        <Form.Label>Zip</Form.Label>\r\n                        <Form.Control type=\"text\" onChange={handleChange} name=\"zip\"/>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Button variant=\"danger\" className=\"center\" type=\"button\" onClick={handlePay} disabled={loading}>\r\n                    {loading ? 'Loading…' : \"Pay Now\"}\r\n                </Button>\r\n            </Form>\r\n            </>\r\n            )\r\n    \r\n    }else{\r\n        return (  <div className=\"login-div\">\r\n                <Form className=\"login-form\">\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridFirstName\">\r\n                        <Form.Label variant=\"primary\">Phone*</Form.Label>\r\n                        <Form.Control name=\"phone\" onChange={handleChange}  type=\"text\"  isInvalid={isphoneinvalid}/>\r\n                        <Form.Text className=\"text-muted\">\r\n                            We will contact you at this phone number.\r\n                        </Form.Text>\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            Please provide a phone number.\r\n                        </Form.Control.Feedback>                    \r\n                    </Form.Group>\r\n                </Form.Row>\r\n                    <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"formBasicEmail\">\r\n                        <Form.File id=\"formcheck-api-regular\">\r\n                        <Form.Label variant=\"primary\">Form16*</Form.Label>\r\n                            <Form.File.Input accept=\".pdf\" onChange={handleFileUpload}/>\r\n                        </Form.File>\r\n                        <Form.Text className=\"text-muted\">\r\n                            Only PDF file.\r\n                        </Form.Text>\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                        <Button variant=\"danger\"  type=\"button\" onClick={handlePay} disabled={loading}>{loading ? 'Loading…' : \"Pay Now\"}\r\n                    </Button>\r\n                    </Form.Row>\r\n                </Form>\r\n                </div>\r\n    )\r\n    }       \r\n}\r\n\r\nexport default FillItr\r\n","import React, { Component } from 'react'\r\nimport { Route,NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport LoggedInView from './LogedInView';\r\nimport LoggedOutView from './LogedOutView';\r\nimport ItrPopup from '../finance-Itr/ItrPopup'\r\n\r\nclass InnerHeader extends Component {\r\n    isopen = false;\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        isopen:false\r\n      }\r\n    }\r\n    handleITRPopup = () =>{\r\n        this.setState({\r\n          isopen:this.state.isopen?false:true\r\n        })\r\n      }\r\n    render(){\r\n    return (\r\n        <header>\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark top-nav-collapse\">\r\n                <div className=\"container\">\r\n                <NavLink className=\"navbar-brand\" to=\"/\"> <h2>AA2 Mutualhelp</h2></NavLink>\r\n\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent-7\"\r\n                        aria-controls=\"navbarSupportedContent-7\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent-7\">\r\n                        <ul className=\"navbar-nav ml-auto\">\r\n                            {/* <li className=\"nav-item\">\r\n                            <NavLink aactiveClassName=\"active\" className=\"nav-link\" to=\"/\">Home</NavLink> */}\r\n\r\n                                {/* <a className=\"nav-link\" href=\"#\">Home\r\n                    <span className=\"sr-only\">(current)</span>\r\n                                </a> */}\r\n                            {/* </li> */}\r\n                            {/* <li className=\"nav-item\" onClick={this.handleITRPopup}>\r\n                                <a className=\"nav-link\" onClick={this.handleITRPopup}>File ITR</a>\r\n                            </li> */}\r\n                            {/* <li className=\"nav-item\"> */}\r\n                                {/* <a className=\"nav-link\" href=\"#\">Order Food</a> */}\r\n                                {/* <NavLink aactiveClassName=\"active\" to=\"/CategoryList\" className=\"nav-link\">Order Food</NavLink>\r\n                            </li> */}\r\n                            {/* <li className=\"nav-item\">\r\n                            <NavLink className=\"nav-link\" to=\"/login\">Login</NavLink>\r\n\r\n                            </li> */}\r\n                            <LoggedOutView currentUser={this.props}/>\r\n                            <LoggedInView currentUser={this.props}/>\r\n\r\n                        </ul>\r\n\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n            <ItrPopup isopen={this.state.isopen} hide={this.handleITRPopup}/>\r\n        </header>\r\n    )}\r\n\r\n}\r\nconst mapStateToProps = state => ({ ...state.auth});\r\nconst mapDispatchToProps = dispatch => ({\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InnerHeader)\r\n","import React,{useEffect} from 'react'\r\nimport { useSelector } from \"react-redux\";\r\nimport { Col, Nav} from 'react-bootstrap';\r\nimport { LinkContainer} from 'react-router-bootstrap';\r\nimport { useLocation } from 'react-router-dom'\r\nexport default function Leftbar() {\r\n    const auth = useSelector(state => state.auth);\r\n    const location = useLocation();\r\n    \r\n    return (\r\n        <div className=\"sidebar\" data-color=\"white\" data-active-color=\"danger\">\r\n          <div className=\"logo\">\r\n            <a href=\"https://www.creative-tim.com\" className=\"simple-text logo-mini\">\r\n              <div className=\"logo-image-small\">\r\n                <img src={process.env.PUBLIC_URL+\"/assets/img/logo-small.png\"} />\r\n              </div>\r\n            </a>\r\n            <a href=\"https://www.creative-tim.com\" className=\"simple-text logo-normal\">\r\n              {auth.username}\r\n            </a>\r\n          </div>\r\n          <div className=\"sidebar-wrapper\">\r\n            <ul className=\"nav\">\r\n              <li className={location.pathname == \"/\"?\"active\":\"\"}>\r\n                {/* <a href=\"./dashboard.html\"> */}\r\n                <LinkContainer to=\"/\">\r\n                <Nav.Link>\r\n                  <i className=\"nc-icon nc-bank\"></i>\r\n                  <p>Dashboard</p>\r\n                  </Nav.Link>\r\n                  </LinkContainer>\r\n                {/* </a> */}\r\n              </li>\r\n              <li className={location.pathname == \"/memberGroup\" || location.pathname == \"/member\" || location.pathname == \"/member\" || location.pathname == \"/addMember\"?\"active\":\"\"}>\r\n                <a data-toggle=\"collapse\" aria-expanded=\"false\" href=\"#homeSubmenu\" className=\"dropdown-toggle\">\r\n                <i className=\"nc-icon nc-badge\"></i>\r\n                  Master Record\r\n                </a>\r\n                <ul className=\"list-unstyled collapse\" id=\"homeSubmenu\" >\r\n                  <li className={location.pathname == \"/memberGroup\" || location.pathname == \"/addMemberGroup\"?\"active\":\"\"}>\r\n                  <LinkContainer to=\"/memberGroup\">\r\n                    <Nav.Link>\r\n                    Member Group\r\n                    </Nav.Link>\r\n                  </LinkContainer>\r\n\r\n                    \r\n                  </li>\r\n                  <li className={location.pathname == \"/member\" || location.pathname == \"/addMember\"?\"active\":\"\"}>\r\n                  <LinkContainer to=\"/member\">\r\n                    <Nav.Link>\r\n                    Members\r\n                    </Nav.Link>\r\n                  </LinkContainer>\r\n\r\n                  </li>\r\n                </ul>\r\n              </li>\r\n              <li \r\n              className={location.pathname == \"/emiCalculator\" \r\n              || location.pathname == \"/scheme\" \r\n              || location.pathname == \"/loanApplication\" \r\n              || location.pathname == \"/loanApproval\"\r\n              || location.pathname == \"/addScheme\"\r\n              || location.pathname == \"/allApplications\"\r\n              || location.pathname == \"/disburseLoan\"\r\n\r\n              ?\"active\":\"\"}>\r\n                <a data-toggle=\"collapse\" aria-expanded=\"false\" href=\"#groupLoan\" className=\"dropdown-toggle\">\r\n                <i className=\"nc-icon nc-umbrella-13\"></i>\r\n                  Group Loan\r\n                </a>\r\n                <ul className=\"list-unstyled collapse\" id=\"groupLoan\" >\r\n                <li className={location.pathname == \"/emiCalculator\"?\"active\":\"\"}>\r\n                    <LinkContainer to=\"/emiCalculator\">\r\n                      <Nav.Link href=\"#\">Calculator</Nav.Link>\r\n                    </LinkContainer>\r\n                  </li>\r\n                  <li className={location.pathname == \"/scheme\" || location.pathname == \"/addScheme\"?\"active\":\"\"}>\r\n                  <LinkContainer to=\"/scheme\">\r\n                    <Nav.Link eventKey=\"link-1\">Scheme</Nav.Link>\r\n                  </LinkContainer>\r\n                  </li>\r\n                  <li className={location.pathname == \"/loanApplication\"?\"active\":\"\"}>\r\n                    <LinkContainer to=\"/loanApplication\">\r\n                      <Nav.Link eventKey=\"link-2\">Application</Nav.Link>\r\n                    </LinkContainer>\r\n                  </li>\r\n                  {(auth.role==\"checker\"||auth.role==\"admin\")? <li className={location.pathname == \"/loanApproval\"?\"active\":\"\"}>\r\n\r\n                    <LinkContainer to=\"/loanApproval\">\r\n                      <Nav.Link eventKey=\"link-2\">Approve Application</Nav.Link>\r\n                    </LinkContainer>\r\n                  </li>:\"\"}\r\n                  {(auth.role==\"checker\"||auth.role==\"admin\")?<li className={location.pathname == \"/disburseLoan\"?\"active\":\"\"}>\r\n                    <LinkContainer to=\"/disburseLoan\">\r\n                      <Nav.Link eventKey=\"link-2\">Disbure Application</Nav.Link>\r\n                      </LinkContainer>\r\n                    </li>:\"\"}\r\n                    <li className={location.pathname == \"/allApplications\"?\"active\":\"\"}>\r\n                      <LinkContainer to=\"/allApplications\">\r\n                        <Nav.Link eventKey=\"link-2\">Loan Applications</Nav.Link>\r\n                        </LinkContainer>\r\n\r\n                    </li>\r\n                </ul>\r\n              </li>              \r\n              <li className={location.pathname == \"/processingFee\"?\"active\":\"\"}>\r\n              <LinkContainer to=\"/\">\r\n                      <Nav.Link href=\"#\"><i className=\"nc-icon nc-paper\"></i>Processing Fee</Nav.Link>\r\n                </LinkContainer>\r\n              </li>              \r\n              <li>\r\n              <LinkContainer to=\"/\">\r\n                      <Nav.Link href=\"#\"><i className=\"nc-icon nc-credit-card\"></i>Expenses</Nav.Link>\r\n                </LinkContainer>\r\n\r\n              </li>              \r\n              <li className={location.pathname == \"/dueEmis\"?\"active\":\"\"}>\r\n              <LinkContainer to=\"/dueEmis\">\r\n                      <Nav.Link href=\"#\"><i className=\"nc-icon nc-money-coins\"></i> Payment to collect</Nav.Link>\r\n                </LinkContainer>\r\n\r\n              </li>              \r\n            </ul>\r\n          </div>\r\n        </div>        \r\n        // // <Col md={2} id=\"sidebar-col\" className=\"pr-0\">\r\n        //     <nav id=\"sidebar\">\r\n        //         {/* <div className=\"sidebar-header\">\r\n        //             <h5>AA2 MutualHelp</h5>\r\n        //         </div> */}\r\n        //         <Nav className=\"list-unstyled components flex-column\" as=\"ul\" >\r\n        //         <Nav.Item as=\"li\" className=\"active\">\r\n        //         <LinkContainer to=\"/\">\r\n        //         <Nav.Link>\r\n        //              Dashboard\r\n        //     </Nav.Link>\r\n        //     </LinkContainer>\r\n        //         </Nav.Item>\r\n        //             <Nav.Item as=\"li\" >\r\n                   \r\n        //                 <Nav.Link href=\"#homeSubmenu\" className=\"dropdown-toggle\" data-toggle=\"collapse\" aria-expanded=\"false\">Master Record</Nav.Link>\r\n                        \r\n        //                 {/* <ul class=\"collapse list-unstyled\" id=\"homeSubmenu\"> */}\r\n        //                 <Nav class=\"collapse list-unstyled\" id=\"homeSubmenu\" as=\"ul\">\r\n        //                     <Nav.Item as=\"li\">\r\n        //                     <LinkContainer to=\"/memberGroup\">\r\n        //                         <Nav.Link href=\"/home\">Member Group</Nav.Link>\r\n        //                         </LinkContainer>\r\n        //                         {/* <NavLink to=\"/memberGroup\">Member Group</NavLink> */}\r\n        //                     </Nav.Item>\r\n        //                     <Nav.Item as=\"li\">\r\n        //                     <LinkContainer to=\"/member\">\r\n        //                         <Nav.Link eventKey=\"link-1\">Members</Nav.Link>\r\n        //                     </LinkContainer>\r\n        //                     </Nav.Item>\r\n        //                 </Nav>\r\n        //             </Nav.Item>\r\n        //             <Nav.Item as=\"li\" >\r\n        //                 <Nav.Link href=\"#groupLoan\" data-toggle=\"collapse\" aria-expanded=\"false\" className=\"dropdown-toggle\">Group Loan</Nav.Link>\r\n        //                 {/* <ul class=\"collapse list-unstyled\" id=\"homeSubmenu\"> */}\r\n        //                 <Nav class=\"collapse list-unstyled\" id=\"groupLoan\" as=\"ul\">\r\n        //                     <Nav.Item as=\"li\">\r\n        //                     <LinkContainer to=\"/emiCalculator\">\r\n        //                         <Nav.Link href=\"#\">Calculator</Nav.Link>\r\n        //                         </LinkContainer>\r\n        //                     </Nav.Item>\r\n        //                     <Nav.Item as=\"li\">\r\n        //                     <LinkContainer to=\"/scheme\">\r\n        //                         <Nav.Link eventKey=\"link-1\">Scheme</Nav.Link>\r\n        //                         </LinkContainer>\r\n        //                     </Nav.Item>\r\n        //                     <Nav.Item as=\"li\">\r\n        //                     <LinkContainer to=\"/loanApplication\">\r\n        //                         <Nav.Link eventKey=\"link-2\">Application</Nav.Link>\r\n        //                         </LinkContainer>\r\n        //                     </Nav.Item>\r\n        //                     {(auth.role==\"checker\"||auth.role==\"admin\")?<Nav.Item as=\"li\">\r\n        //                     <LinkContainer to=\"/loanApproval\">\r\n        //                         <Nav.Link eventKey=\"link-2\">Approve Application</Nav.Link>\r\n        //                         </LinkContainer>\r\n        //                     </Nav.Item>:\"\"}\r\n        //                     {(auth.role==\"checker\"||auth.role==\"admin\")?<Nav.Item as=\"li\">\r\n        //                     <LinkContainer to=\"/disburseLoan\">\r\n        //                         <Nav.Link eventKey=\"link-2\">Disbure Application</Nav.Link>\r\n        //                         </LinkContainer>\r\n        //                     </Nav.Item>:\"\"}\r\n        //                     <Nav.Item as=\"li\">\r\n        //                     <LinkContainer to=\"/allApplications\">\r\n        //                         <Nav.Link eventKey=\"link-2\">Loan Applications</Nav.Link>\r\n        //                         </LinkContainer>\r\n        //                     </Nav.Item>\r\n\r\n        //                 </Nav>\r\n        //             </Nav.Item>\r\n\r\n        //             <Nav.Item as=\"li\" >\r\n        //                 <Nav.Link href=\"#processingFee\" data-toggle=\"collapse\" aria-expanded=\"false\" className=\"dropdown-toggle\">Processing Fee</Nav.Link>\r\n        //                 {/* <ul class=\"collapse list-unstyled\" id=\"homeSubmenu\"> */}\r\n        //                 <Nav class=\"collapse list-unstyled\" id=\"processingFee\" as=\"ul\">\r\n        //                     <Nav.Item as=\"li\">\r\n        //                         <Nav.Link href=\"#\">List Processing Fee</Nav.Link>\r\n        //                     </Nav.Item>\r\n\r\n        //                 </Nav>\r\n        //             </Nav.Item>\r\n\r\n        //             <Nav.Item as=\"li\" >\r\n        //                 <Nav.Link href=\"#expense\" data-toggle=\"collapse\" aria-expanded=\"false\" className=\"dropdown-toggle\">Expense</Nav.Link>\r\n        //                 {/* <ul class=\"collapse list-unstyled\" id=\"homeSubmenu\"> */}\r\n        //                 <Nav class=\"collapse list-unstyled\" id=\"expense\" as=\"ul\">\r\n        //                     <Nav.Item as=\"li\">\r\n        //                         <Nav.Link href=\"#\">List Expense</Nav.Link>\r\n        //                     </Nav.Item>\r\n\r\n        //                 </Nav>\r\n        //             </Nav.Item>\r\n\r\n        //             <Nav.Item as=\"li\" >\r\n        //                 <Nav.Link href=\"#payments\" data-toggle=\"collapse\" aria-expanded=\"false\" className=\"dropdown-toggle\">Payment to collect</Nav.Link>\r\n        //                 {/* <ul class=\"collapse list-unstyled\" id=\"homeSubmenu\"> */}\r\n        //                 <Nav class=\"collapse list-unstyled\" id=\"payments\" as=\"ul\">\r\n        //                     <Nav.Item as=\"li\">\r\n        //                         <LinkContainer to=\"/dueEmis\">\r\n        //                             <Nav.Link href=\"#\">Payment to collect(Loan)</Nav.Link>\r\n        //                         </LinkContainer>\r\n        //                     </Nav.Item>\r\n\r\n        //                 </Nav>\r\n        //             </Nav.Item>\r\n        //         </Nav>\r\n        //     </nav>\r\n        // </Col>\r\n    )\r\n}\r\n","import React,{useState} from 'react'\r\nimport {  Navbar, Nav } from 'react-bootstrap';\r\nimport { useSelector,useDispatch } from \"react-redux\";\r\nimport { useHistory } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport {LOGOUT} from '../../constants/actionTypes';\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nexport default function TopNav(props) {\r\n  const listRouteName = {\r\n                          \"/\":\"Dashboard\",\r\n                          \"/memberGroup\":\"Member Group\",\r\n                          \"/addMemberGroup\":\"Member Group\",\r\n                          \"/member\":\"Member\",\r\n                          \"/addMember\":\"Member\",\r\n                          \"/emiCalculator\":\"Calculate EMI\"\r\n                        }\r\n  const location = useLocation();\r\n  const auth = useSelector(state => state.auth);\r\n  const dispatch = useDispatch();\r\n  let history = useHistory();\r\nconst [navClick,setNevClick] = useState(false);\r\n    return (\r\n        <nav className={navClick?\"navbar navbar-expand-lg navbar-absolute fixed-top bg-white\":\"navbar navbar-expand-lg navbar-absolute fixed-top navbar-transparent\"} >\r\n        <div className=\"container-fluid\">\r\n          <div className=\"navbar-wrapper\">\r\n            <div className=\"navbar-toggle\">\r\n              <button type=\"button\" className=\"navbar-toggler\">\r\n                <span className=\"navbar-toggler-bar bar1\"></span>\r\n                <span className=\"navbar-toggler-bar bar2\"></span>\r\n                <span className=\"navbar-toggler-bar bar3\"></span>\r\n              </button>\r\n            </div>\r\n            <a className=\"navbar-brand\" href=\"#\">{listRouteName[location.pathname]}</a>\r\n          </div>\r\n          <button onClick={()=>setNevClick(!navClick)} className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navigation\" aria-controls=\"navigation-index\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-bar navbar-kebab\"></span>\r\n            <span className=\"navbar-toggler-bar navbar-kebab\"></span>\r\n            <span className=\"navbar-toggler-bar navbar-kebab\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse justify-content-end\" id=\"navigation\">\r\n            <form>\r\n              <div className=\"input-group no-border\">\r\n                <input type=\"text\" value=\"\" className=\"form-control\" placeholder=\"Search...\"/>\r\n                <div className=\"input-group-append\">\r\n                  <div className=\"input-group-text\">\r\n                    <i className=\"nc-icon nc-zoom-split\"></i>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </form>\r\n            <ul className=\"navbar-nav\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link btn-magnify\" href=\"#\">\r\n                  <i className=\"nc-icon nc-layout-11\"></i>\r\n                  <p>\r\n                    <span className=\"d-lg-none d-md-block\">Stats</span>\r\n                  </p>\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item btn-rotate dropdown\">\r\n                <a className=\"nav-link dropdown-toggle\" href=\"http://example.com\" id=\"navbarDropdownMenuLink\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                  <i className=\"nc-icon nc-bell-55\"></i>\r\n                  <p>\r\n                    <span className=\"d-lg-none d-md-block\"></span>\r\n                  </p>\r\n                </a>\r\n                <div className=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"navbarDropdownMenuLink\">\r\n                  <Link className=\"dropdown-item\" to={\"/login\"} >Logout</Link>\r\n                  {/* <a className=\"dropdown-item\" href=\"#\">Another action</a>\r\n                  <a className=\"dropdown-item\" href=\"#\">Something else here</a> */}\r\n                </div>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link btn-rotate\" href=\"#\">\r\n                  <i className=\"nc-icon nc-settings-gear-65\"></i>\r\n                  <p>\r\n                    <span className=\"d-lg-none d-md-block\">Account</span>\r\n                  </p>\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n\r\n        // <Navbar collapseOnSelect expand=\"lg\" bg=\"info\" variant=\"dark\">\r\n               \r\n        //         <h4 id=\"logo-web\" className=\"mr-4\">AA2 MutualHelp</h4>\r\n        //     <button type=\"button\" onClick={props.toggleSidebar} class=\"btn btn-dark\">\r\n        //         <i class=\"fas fa-align-left\"></i>\r\n        //     </button>\r\n        //     <h4 id=\"logo-mobile\" className=\"\">AA2 MutualHelp</h4>\r\n        //     <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n        //     <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n        //         <Nav className=\"ml-auto\">\r\n        //             <Nav.Link href=\"#\">{auth.username}</Nav.Link>\r\n        //             <Nav.Link eventKey={2} onClick={logout}>\r\n        //                 Logout\r\n        //             </Nav.Link>\r\n        //         </Nav>\r\n        //     </Navbar.Collapse>\r\n        // </Navbar>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport { useSelector,useDispatch } from \"react-redux\";\r\nimport InnerHeader from './InnerHeader';\r\nimport Footer from './Footer';\r\nimport Leftbar from './Leftbar';\r\nimport TopNav from './TopNav';\r\nimport { useHistory } from 'react-router';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nconst InnerLayout = ({ component: Component, ...rest }) => {\r\n    const auth = useSelector(state => state.auth);\r\n    const history = useHistory();\r\n    const [showSidebar, setshowSidebar] = useState(true)\r\n    useEffect(() => {\r\n        setshowSidebar(window.innerWidth <= 768 ? false : true);\r\n        checkLogin();\r\n    }, [Component]);\r\n    const toggleSidebar = () => {\r\n\r\n        console.log(window);\r\n        setshowSidebar(showSidebar ? false : true)\r\n        // this.setState({\r\n        //   isopen:this.state.isopen?false:true\r\n        // })\r\n    }\r\n    const checkLogin = () =>{\r\n        let jwt = \"\";\r\n         jwt = localStorage.getItem(\"jwt\");\r\n         console.log(jwt);\r\n         if(jwt==\"\" || !auth.hasOwnProperty(\"username\")){\r\n             history.push(\"/login\");\r\n         }\r\n    }\r\n    return (\r\n        <Route {...rest} render={props => (\r\n            <>\r\n        <div className=\"wrapper \">\r\n        <Leftbar/>\r\n        <div className=\"main-panel\">\r\n            <TopNav toggleSidebar={toggleSidebar} />\r\n          {/* <nav className=\"navbar navbar-expand-lg navbar-absolute fixed-top navbar-transparent\">\r\n            <div className=\"container-fluid\">\r\n              <div className=\"navbar-wrapper\">\r\n                <div className=\"navbar-toggle\">\r\n                  <button type=\"button\" className=\"navbar-toggler\">\r\n                    <span className=\"navbar-toggler-bar bar1\"></span>\r\n                    <span className=\"navbar-toggler-bar bar2\"></span>\r\n                    <span className=\"navbar-toggler-bar bar3\"></span>\r\n                  </button>\r\n                </div>\r\n                <a className=\"navbar-brand\" href=\"javascript:;\">Paper Dashboard 2</a>\r\n              </div>\r\n              <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navigation\" aria-controls=\"navigation-index\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-bar navbar-kebab\"></span>\r\n                <span className=\"navbar-toggler-bar navbar-kebab\"></span>\r\n                <span className=\"navbar-toggler-bar navbar-kebab\"></span>\r\n              </button>\r\n              <div className=\"collapse navbar-collapse justify-content-end\" id=\"navigation\">\r\n                <form>\r\n                  <div className=\"input-group no-border\">\r\n                    <input type=\"text\" value=\"\" className=\"form-control\" placeholder=\"Search...\"/>\r\n                    <div className=\"input-group-append\">\r\n                      <div className=\"input-group-text\">\r\n                        <i className=\"nc-icon nc-zoom-split\"></i>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n                <ul className=\"navbar-nav\">\r\n                  <li className=\"nav-item\">\r\n                    <a className=\"nav-link btn-magnify\" href=\"javascript:;\">\r\n                      <i className=\"nc-icon nc-layout-11\"></i>\r\n                      <p>\r\n                        <span className=\"d-lg-none d-md-block\">Stats</span>\r\n                      </p>\r\n                    </a>\r\n                  </li>\r\n                  <li className=\"nav-item btn-rotate dropdown\">\r\n                    <a className=\"nav-link dropdown-toggle\" href=\"http://example.com\" id=\"navbarDropdownMenuLink\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                      <i className=\"nc-icon nc-bell-55\"></i>\r\n                      <p>\r\n                        <span className=\"d-lg-none d-md-block\">Some Actions</span>\r\n                      </p>\r\n                    </a>\r\n                    <div className=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"navbarDropdownMenuLink\">\r\n                      <a className=\"dropdown-item\" href=\"#\">Action</a>\r\n                      <a className=\"dropdown-item\" href=\"#\">Another action</a>\r\n                      <a className=\"dropdown-item\" href=\"#\">Something else here</a>\r\n                    </div>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <a className=\"nav-link btn-rotate\" href=\"javascript:;\">\r\n                      <i className=\"nc-icon nc-settings-gear-65\"></i>\r\n                      <p>\r\n                        <span className=\"d-lg-none d-md-block\">Account</span>\r\n                      </p>\r\n                    </a>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </nav> */}\r\n          <Component {...props} />\r\n          {/* <div className=\"content\">\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-3 col-md-6 col-sm-6\">\r\n                <div className=\"card card-stats\">\r\n                  <div className=\"card-body \">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-5 col-md-4\">\r\n                        <div className=\"icon-big text-center icon-warning\">\r\n                          <i className=\"nc-icon nc-globe text-warning\"></i>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-7 col-md-8\">\r\n                        <div className=\"numbers\">\r\n                          <p className=\"card-category\">Capacity</p>\r\n                          <p className=\"card-title\">150GB</p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"card-footer \">\r\n                    <hr/>\r\n                    <div className=\"stats\">\r\n                      <i className=\"fa fa-refresh\"></i>\r\n                      Update Now\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-lg-3 col-md-6 col-sm-6\">\r\n                <div className=\"card card-stats\">\r\n                  <div className=\"card-body \">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-5 col-md-4\">\r\n                        <div className=\"icon-big text-center icon-warning\">\r\n                          <i className=\"nc-icon nc-money-coins text-success\"></i>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-7 col-md-8\">\r\n                        <div className=\"numbers\">\r\n                          <p className=\"card-category\">Revenue</p>\r\n                          <p className=\"card-title\">$ 1,345</p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"card-footer \">\r\n                    <hr/>\r\n                    <div className=\"stats\">\r\n                      <i className=\"fa fa-calendar-o\"></i>\r\n                      Last day\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-lg-3 col-md-6 col-sm-6\">\r\n                <div className=\"card card-stats\">\r\n                  <div className=\"card-body \">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-5 col-md-4\">\r\n                        <div className=\"icon-big text-center icon-warning\">\r\n                          <i className=\"nc-icon nc-vector text-danger\"></i>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-7 col-md-8\">\r\n                        <div className=\"numbers\">\r\n                          <p className=\"card-category\">Errors</p>\r\n                          <p className=\"card-title\">23</p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"card-footer \">\r\n                    <hr/>\r\n                    <div className=\"stats\">\r\n                      <i className=\"fa fa-clock-o\"></i>\r\n                      In the last hour\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-lg-3 col-md-6 col-sm-6\">\r\n                <div className=\"card card-stats\">\r\n                  <div className=\"card-body \">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-5 col-md-4\">\r\n                        <div className=\"icon-big text-center icon-warning\">\r\n                          <i className=\"nc-icon nc-favourite-28 text-primary\"></i>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-7 col-md-8\">\r\n                        <div className=\"numbers\">\r\n                          <p className=\"card-category\">Followers</p>\r\n                          <p className=\"card-title\">+45K</p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"card-footer \">\r\n                    <hr/>\r\n                    <div className=\"stats\">\r\n                      <i className=\"fa fa-refresh\"></i>\r\n                      Update now\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12\">\r\n                <div className=\"card \">\r\n                  <div className=\"card-header \">\r\n                    <h5 className=\"card-title\">Users Behavior</h5>\r\n                    <p className=\"card-category\">24 Hours performance</p>\r\n                  </div>\r\n                  <div className=\"card-body \">\r\n                    <canvas id=\"chartHours\" width=\"400\" height=\"100\"></canvas>\r\n                  </div>\r\n                  <div className=\"card-footer \">\r\n                    <hr/>\r\n                    <div className=\"stats\">\r\n                      <i className=\"fa fa-history\"></i> Updated 3 minutes ago\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-4\">\r\n                <div className=\"card \">\r\n                  <div className=\"card-header \">\r\n                    <h5 className=\"card-title\">Email Statistics</h5>\r\n                    <p className=\"card-category\">Last Campaign Performance</p>\r\n                  </div>\r\n                  <div className=\"card-body \">\r\n                    <canvas id=\"chartEmail\"></canvas>\r\n                  </div>\r\n                  <div className=\"card-footer \">\r\n                    <div className=\"legend\">\r\n                      <i className=\"fa fa-circle text-primary\"></i> Opened\r\n                      <i className=\"fa fa-circle text-warning\"></i> Read\r\n                      <i className=\"fa fa-circle text-danger\"></i> Deleted\r\n                      <i className=\"fa fa-circle text-gray\"></i> Unopened\r\n                    </div>\r\n                    <hr/>\r\n                    <div className=\"stats\">\r\n                      <i className=\"fa fa-calendar\"></i> Number of emails sent\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-8\">\r\n                <div className=\"card card-chart\">\r\n                  <div className=\"card-header\">\r\n                    <h5 className=\"card-title\">NASDAQ: AAPL</h5>\r\n                    <p className=\"card-category\">Line Chart with Points</p>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <canvas id=\"speedChart\" width=\"400\" height=\"100\"></canvas>\r\n                  </div>\r\n                  <div className=\"card-footer\">\r\n                    <div className=\"chart-legend\">\r\n                      <i className=\"fa fa-circle text-info\"></i> Tesla Model S\r\n                      <i className=\"fa fa-circle text-warning\"></i> BMW 5 Series\r\n                    </div>\r\n                    <hr />\r\n                    <div className=\"card-stats\">\r\n                      <i className=\"fa fa-check\"></i> Data information certified\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div> */}\r\n        </div>\r\n      </div>\r\n            \r\n            {/* <Container fluid className=\"pl-0 pr-0\">\r\n            <Row>\r\n                <Col>\r\n                <TopNav toggleSidebar={toggleSidebar} />\r\n                </Col>\r\n            \r\n            </Row>\r\n                \r\n                <Row>\r\n                    \r\n                        {showSidebar ?<Col md={2} sm={2} id=\"sidebar-col\" className=\"bg-info\"><Leftbar/></Col> : \"\"}\r\n                        \r\n                   \r\n                    <Col sm={showSidebar ? 10 : 12} >\r\n                        <div id=\"content\">\r\n\r\n                            <Component {...props} />\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n\r\n                \r\n                </Container> */}\r\n            </>\r\n        )} />)\r\n}\r\n\r\nexport default InnerLayout\r\n","import React ,{Component}from 'react'\r\nimport { Badge } from 'react-bootstrap';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    ADD_ITEM_INITIAL,\r\n    DECREASE_QUANTITY,\r\n    INCREASE_QUANTITY\r\n} from '../../constants/actionTypes';\r\n \r\nclass AddCartButton extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        console.log(props);\r\n        this.initialAddItem = (item) => ev => {\r\n            ev.preventDefault();\r\n            this.props.addItemInitial(item);\r\n        };\r\n        this.increaseQuantity = (productId) =>ev =>{\r\n            ev.preventDefault();\r\n            this.props.increaseQuantity(productId);\r\n        }\r\n        this.decreaseQuantity = (productId) =>ev =>{\r\n            ev.preventDefault();\r\n            this.props.decreaseQuantity(productId);\r\n        }\r\n    }\r\n    componentWillReceiveProps(nextprops){\r\n    }\r\n    render(){\r\n    let arr = []\r\n     arr= this.props.addedItem.filter(record=>record.productId==this.props.item._id);\r\n    let length = arr.length;\r\n    console.log(length);\r\n    console.log(this.props.addedItem);\r\n    if(!length){\r\n        return (\r\n            <Badge variant=\"danger\" className=\"pointer\" onClick={this.initialAddItem(this.props.item)}>ADD+</Badge> \r\n        )\r\n    }else{\r\n        return (\r\n            <>\r\n                <Badge className=\"pointer\" variant=\"primary\" onClick={this.decreaseQuantity(arr[0].productId)}>-</Badge> \r\n                <Badge variant=\"danger\">{arr[0].quantity}</Badge> \r\n                <Badge className=\"pointer\" variant=\"primary\" onClick={this.increaseQuantity(arr[0].productId)}>+</Badge> \r\n            </>\r\n        )}\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({ ...state.order });\r\nconst mapDispatchToProps = dispatch => ({\r\n    addItemInitial: item =>\r\n        dispatch({ type: ADD_ITEM_INITIAL, item }),\r\n    increaseQuantity: productId =>\r\n        dispatch({ type: INCREASE_QUANTITY, productId }),\r\n    decreaseQuantity: productId =>\r\n        dispatch({ type: DECREASE_QUANTITY, productId }),\r\n});\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(AddCartButton)\r\n","import React, { Component } from 'react'\r\nimport { ListGroup, Container, Row, Col, Card, Button, CardColumns,Toast,Alert } from 'react-bootstrap';\r\nimport agent from '../../agent'\r\nimport AddCartButton from './AddCartButton';\r\nimport Loader from '../layout/Loader';\r\nexport class CategoryList extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            categoryList:[],\r\n            itemList:[],\r\n            showloader:false,\r\n            selectedTab:\"\"\r\n        }\r\n    }\r\n    componentDidMount(){\r\n     // this.getCategories();\r\n     //this.getInitialData();\r\n    }\r\n    selectItem(ev){\r\n        console.log(ev);\r\n    }\r\n     getInitialData=async ()=>{\r\n        this.setState({\r\n            showloader:true\r\n        })\r\n\r\n        const [categories, products] =await Promise.all(agent.Order.getCatgoryInitialData())\r\n        if(categories.statusCode == 200){\r\n            this.setState({\r\n                categoryList:categories.body.record\r\n            })\r\n        }\r\n        if(products.statusCode == 200){\r\n            this.setState({\r\n                itemList:products.body.record\r\n            })\r\n        }\r\n        this.setState({\r\n            showloader:false\r\n        })\r\n\r\n\r\n    }\r\n    changeCategory= (catName=\"\") => ev =>{\r\n        this.setState({\r\n            showloader:true\r\n        })\r\n        this.setState({\r\n            selectedTab:catName\r\n        })\r\n        agent.Order.getProductsByCat(catName).then(products=>{\r\n            this.setState({\r\n                showloader:false\r\n            })\r\n    \r\n            if(products.statusCode == 200){\r\n                this.setState({\r\n                    itemList:products.body.record\r\n                })\r\n            }\r\n    \r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n\r\n                <Container fluid>\r\n                    <Row>\r\n                        <Col  md={3} className=\"p-4\" >\r\n                            <ListGroup defaultActiveKey=\"all\">\r\n                            <ListGroup.Item className=\"mobile-list\" key={\"all\"} active={this.state.selectedTab==\"\"?true:false}  onClick={this.changeCategory()}>All category</ListGroup.Item>\r\n                                {this.state.categoryList.map(\r\n                                    (item,index)=><ListGroup.Item className=\"mobile-list\" key={index} active={this.state.selectedTab==item.name?true:false}  action onClick={this.changeCategory(item.name)}>{item.name}</ListGroup.Item>\r\n                                    )}\r\n                            </ListGroup>\r\n                        </Col>\r\n                        <Col md={9} className=\"p-4 production-col\" >\r\n                        <Loader show={this.state.showloader}/>\r\n                            <CardColumns>\r\n                            {this.state.itemList.map(\r\n                                (item,index)=> \r\n                                <Card border=\"danger\" key={index}>\r\n                                    <Card.Img variant=\"top\" src={item.imageUrl} />\r\n                                    <Card.Body>\r\n                                        <Card.Title>{item.title}</Card.Title>\r\n                                        <Card.Subtitle className=\"mb-2 text-muted\"><span>&#8377;</span>{item.price}</Card.Subtitle>\r\n                                        <Card.Text>\r\n                                        {item.description}\r\n                                        </Card.Text>\r\n                                    </Card.Body>\r\n                                    <Card.Footer>\r\n                                        <AddCartButton  item={item}/>\r\n                                    </Card.Footer>\r\n                                </Card>\r\n                                    )}\r\n\r\n                            </CardColumns>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CategoryList\r\n","import React, {Component} from 'react'\r\nimport { Table } from 'react-bootstrap';\r\nimport {connect} from 'react-redux';\r\nimport AddCartButton from './AddCartButton'\r\nclass MyCart extends Component {\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    render(){\r\n        const priceTotal = this.props.addedItem.reduce(\r\n            (prevValue, currentValue) => prevValue + (currentValue.quantity * parseInt(currentValue.perItemPrice)),\r\n            0\r\n          );\r\n        \r\n        return (\r\n            <Table responsive striped bordered className=\"cart-table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Product</th>\r\n                        <th>Quantity</th>\r\n                        <th>Price</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {this.props.addedItem.map(record=>\r\n                    <tr>\r\n                        <td>{record.item.title}</td>\r\n                        <td><AddCartButton  item={record.item}/></td>\r\n                        <td><span>&#8377;</span>{parseInt(record.perItemPrice)*record.quantity}</td>\r\n                    </tr>\r\n                    \r\n                    )}\r\n                </tbody>\r\n                <tfoot>\r\n                    {/* <tr>\r\n                        <td colSpan=\"2\">\r\n                            Prime member discount\r\n                        </td>\r\n                        <td>\r\n                            10%\r\n                        </td>\r\n    \r\n                    </tr> */}\r\n                    <tr>\r\n                        <td colSpan=\"2\">\r\n                            <h5>Total</h5>\r\n                        </td>\r\n                        <td>\r\n                        <span>&#8377;</span> {priceTotal}\r\n                        </td>\r\n    \r\n                    </tr>\r\n                </tfoot>\r\n            </Table>)\r\n    \r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({ ...state.order });\r\nconst mapDispatchToProps = dispatch => ({\r\n    // addItemInitial: item =>\r\n    //     dispatch({ type: ADD_ITEM_INITIAL, item }),\r\n    // increaseQuantity: productId =>\r\n    //     dispatch({ type: INCREASE_QUANTITY, productId }),\r\n    // decreaseQuantity: productId =>\r\n    //     dispatch({ type: DECREASE_QUANTITY, productId }),\r\n});\r\nexport default connect(mapStateToProps,mapDispatchToProps)(MyCart)\r\n","import React,{useState} from 'react'\r\nimport { Table, Container, Row, Col,Form, Button, Modal} from 'react-bootstrap';\r\nimport { useSelector } from \"react-redux\";\r\nimport {Link} from 'react-router-dom';\r\nimport agent from '../../agent'\r\n// import {KEY_ID,KEY_SECRET} from '../../constants/paymantConstants'\r\n//import Razorpay from 'razorpay';\r\nfunction PlaceOrder(props) {\r\n    const order = useSelector(state => state.order);\r\n    const authState = useSelector(state => state.auth);\r\n    const [shipingDetails, setShipingDetails] = useState([]);\r\n    const [showPayementModel, setshowPayementModel] = useState(false);\r\n    const [isphoneinvalid,setisphoneinvalid] = useState(false);\r\n    const [isnameinvalid,setisnameinvalid] = useState(false);\r\n    const [isaddressinvalid,setisaddressinvalid] = useState(false);\r\n\r\n    let totalQuantity = 0;\r\n    let totalPrice = 0;\r\n\r\n    const products = order.addedItem.map(record=>                        \r\n    <tr>\r\n        <td>\r\n        {record.quantity} x {record.item.title}\r\n        </td>\r\n        <td>\r\n        <span>&#8377;</span> {record.quantity*parseInt(record. perItemPrice)}\r\n        </td>\r\n    </tr>\r\n);\r\nconst handleSubmit=(paymentMode=\"COD\", razorpay_order_id=\"\")=>{\r\n    let shippingObj = {\r\n        name:shipingDetails[\"name\"],\r\n        address:shipingDetails[\"address\"],\r\n        phone:shipingDetails[\"phone\"],\r\n        city:\"barh\",\r\n        street:shipingDetails[\"street\"],\r\n        landmark:shipingDetails[\"landmark\"]\r\n    } \r\n    let data = {\r\n        items:order.addedItem, \r\n        shipping:shippingObj,\r\n        paymentMode:paymentMode,\r\n        razorpay_order_id:razorpay_order_id\r\n    };\r\n    agent.Order.placeOrder(data).then((res=>{\r\n        if(res.statusCode == 200){\r\n            props.history.push('/orderSuccess')\r\n        }\r\n    }),(err)=>{\r\n        alert(err.response.body.message);\r\n    });\r\n\r\n}\r\nconst selectPaymentMode = ()=>{\r\n    if(checkValidate()){\r\n        setshowPayementModel(showPayementModel?false:true);\r\n    }\r\n}\r\nconst handleChange = (e) => {\r\n    shipingDetails[e.target.name] = e.target.value;\r\n    setShipingDetails(shipingDetails);\r\n}\r\n\r\norder.addedItem.forEach(element => {\r\n    totalQuantity += element.quantity;\r\n    totalPrice += parseInt(element.quantity)*element.perItemPrice;\r\n});\r\nif(authState?.errors?.body.record.isPrimeMember){\r\n    totalPrice -= ((totalPrice*10)/100)\r\n}\r\nconst onlinePayment = ()=>{\r\n    agent.Payment.getRazorpayOrderId({amount:totalPrice,orderForService:\"Food Order\"}).then((res=>{\r\n        if(res.statusCode == 200){\r\n            console.log(res);\r\n            var options = {\r\n                \"key\": \"123\", // Enter the Key ID generated from the Dashboard\r\n                \"amount\": res.body.record.amount*100, // Amount is in currency subunits. Default currency is INR. Hence, 50000 refers to 50000 paise\r\n                \"currency\": \"INR\",\r\n                \"name\": \"Guest\",\r\n                \"description\": \"Food Order Transaction\",\r\n                \"image\": \"https://example.com/your_logo\",\r\n                \"order_id\": res.body.record.id, //This is a sample Order ID. Pass the `id` obtained in the response of Step 1\r\n                \"handler\": function (response){\r\n                    updatePaymentState(\"success\",response);\r\n                },                \r\n                \"theme\": {\r\n                    \"color\": \"#3399cc\"\r\n                }\r\n            };   \r\n            const rzp1 = new window.Razorpay(options);\r\n            rzp1.on('payment.failed', function (response){\r\n                updatePaymentState(\"failed\",response);\r\n\r\n            });            \r\n            rzp1.open();\r\n\r\n        }else{\r\n            alert(res.body)\r\n        }\r\n    }));\r\n\r\n}\r\nconst updatePaymentState=(status,obj)=>{\r\n    console.log(\"status\",status);\r\n    console.log(\"returnobj\",obj);\r\n    let orderId = \"\";\r\n    let paymentObj = {\r\n        razorpay_order_id:\"\",\r\n        paymentStatus:\"\",\r\n        paymentResponse:\"\"\r\n    }\r\n    if(status == \"success\"){\r\n        paymentObj.razorpay_order_id = obj.razorpay_order_id;\r\n        paymentObj.paymentStatus = status;\r\n        paymentObj.paymentResponse = obj;\r\n    }\r\n    if(status == \"failed\"){\r\n        paymentObj.razorpay_order_id = obj.error.metadata.order_id;\r\n        paymentObj.paymentStatus = status;\r\n        paymentObj.paymentResponse = obj;\r\n    }\r\n    try{\r\n        agent.Payment.updatePaymentStatus(paymentObj).then((res=>{\r\n            console.log(res.body.record)\r\n            if(res.statusCode ==200 && status == \"success\"){\r\n                handleSubmit(\"online\",paymentObj.razorpay_order_id);\r\n            }\r\n            if(res.statusCode ==200 && status == \"failed\"){\r\n                props.history.push('/orderFailed')\r\n\r\n            }\r\n\r\n        }),(err)=>{\r\n            console.log(err.response.body.message);\r\n        });\r\n    }catch(err){\r\n        alert(err);\r\n    }\r\n}\r\nconst checkValidate=()=>{\r\n    let returnType = true;\r\n    setisnameinvalid(false);\r\n    setisaddressinvalid(false);\r\n    setisphoneinvalid(false);\r\n\r\n    if((shipingDetails[\"name\"] ==undefined || shipingDetails[\"name\"] ==\"\")){\r\n        setisnameinvalid(true);            \r\n        returnType = false\r\n    } \r\n\r\n    if(shipingDetails[\"phone\"] ==undefined || shipingDetails[\"phone\"] ==\"\"){\r\n        setisphoneinvalid(true);\r\n        returnType = false\r\n    }\r\n    if((shipingDetails[\"address\"] ==undefined || shipingDetails[\"address\"] ==\"\") ){\r\n        setisaddressinvalid(true);            \r\n        returnType = false\r\n    } \r\n    return returnType;\r\n} \r\n\r\nconst token = agent.getToken();\r\n    return (\r\n        <>\r\n        <Container fluid>\r\n            <Row className=\"p-3 order-summary\">\r\n                <Col md={6} >\r\n                    <h4>Shipping Details</h4>\r\n                    <Form>\r\n                        <Form.Group controlId=\"exampleForm.ControlInput1\" >\r\n                            <Form.Label>Name</Form.Label>\r\n                            <Form.Control type=\"text\" name=\"name\"  onChange={handleChange} isInvalid={isnameinvalid}/>\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                            Please provide your name.\r\n                            </Form.Control.Feedback>                    \r\n\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                            <Form.Label>Address</Form.Label>\r\n                            <Form.Control type=\"textarea\" name=\"address\" placeholder=\"Line 1\" onChange={handleChange} isInvalid={isaddressinvalid}/>\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                            Please provide your address.\r\n                            </Form.Control.Feedback>                    \r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                            <Form.Label>Street/Mohalla</Form.Label>\r\n                            <Form.Control type=\"textarea\" name=\"street\" onChange={handleChange} />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                            <Form.Label>Landmark</Form.Label>\r\n                            <Form.Control type=\"textarea\" name=\"landmark\" onChange={handleChange} />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                            <Form.Label>Mobile no.</Form.Label>\r\n                            <Form.Control type=\"text\" name=\"phone\"  onChange={handleChange} isInvalid={isphoneinvalid}/>\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                            Please provide your phone no..\r\n                            </Form.Control.Feedback>                    \r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                            <Form.Label>City</Form.Label>\r\n                            <Form.Control type=\"text\"  name=\"city\" onChange={handleChange} value=\"barh\" readOnly/>\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                        <Button variant=\"danger\" type=\"button\"  onClick={(ev)=>selectPaymentMode()}>\r\n                            Place Order\r\n                        </Button>\r\n                            {/* {token==null?<Form.Label>Please <Link to=\"/login\" className=\"underline\">login</Link> for place order </Form.Label>:\"\"} */}\r\n                            \r\n                        </Form.Group>\r\n                    </Form>               \r\n                     </Col>\r\n                <Col md={6} >\r\n                    <p>Order Summary</p>\r\n                    <h5>You have {totalQuantity} items in your food cart</h5>\r\n                    <Table borderless>\r\n                        <tbody className=\"order-summary-border\">\r\n                            {products}\r\n                        </tbody>\r\n                        <tfoot >\r\n                            {authState?.errors?.body.record.isPrimeMember?                            <tr>\r\n                                <td>\r\n                                    <b>Prime member discount</b>\r\n                                </td>\r\n                                <td>\r\n                                    10%\r\n                                </td>\r\n                            </tr>:\"\"}\r\n                            <tr>\r\n                                <td>\r\n                                    <b>Total</b>\r\n                                </td>\r\n                                <td>\r\n                                <span>&#8377;</span> {totalPrice}\r\n                                </td>\r\n                            </tr>\r\n                        </tfoot>\r\n                    </Table>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n        <Modal show={showPayementModel} onHide={selectPaymentMode} centered>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Payment Mode</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n            <Button variant=\"success\" onClick={()=>handleSubmit()}>Cash on Delivery</Button>\r\n            <Button variant=\"primary\"onClick={onlinePayment}>Pay Now</Button>\r\n\r\n            </Modal.Body>\r\n        </Modal>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PlaceOrder\r\n","import React from 'react'\r\nimport { Alert, Button} from 'react-bootstrap';\r\nimport {useDispatch } from \"react-redux\";\r\nimport orderR from '../../reducers/order';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport {\r\n    RESET_ORDER\r\n} from '../../constants/actionTypes';\r\n\r\nfunction OrderSuccess() {\r\n    // const [show, setShow] = useState(true);\r\n    const dispatch = useDispatch();\r\n    dispatch({type:RESET_ORDER})\r\n    return (\r\n      <>\r\n        <Alert show={true} className=\"login-div\">\r\n          <Alert.Heading>Success!</Alert.Heading>\r\n          <p>\r\n         Our representative will call you for order confirmation within 2 minutes. If you not get a call please dial <b>9990708074</b>.\r\n          </p>\r\n          <hr />\r\n          <div className=\"d-flex justify-content-end\">\r\n              <Link to=\"/\">\r\n              <Button variant=\"danger\">\r\n              Ok\r\n            </Button>\r\n\r\n              </Link>\r\n          </div>\r\n        </Alert>\r\n      </>\r\n    );\r\n}\r\n\r\nexport default OrderSuccess\r\n","import React,{useState,useEffect, useMemo} from 'react'\r\nimport { Table, Nav, Button, Modal } from 'react-bootstrap';\r\nimport agent from '../../agent'\r\nimport {Link} from 'react-router-dom';\r\nimport {useTable,useSortBy,usePagination} from 'react-table'\r\nfunction CategoryManagement(props) {\r\n      const initialState = {\r\n          categoryList:[]\r\n      }\r\n      const [state, setstate] = useState([]) \r\n      const [show, setShow] = useState(false);\r\n      const [alert, setalert] = useState({heading:\"\",message:\"\",data:{}});\r\n        const handleClose = (action) => {\r\n            if(action==\"yes\"){\r\n                props.showLoader(true);\r\n                agent.Order.deleteCategory(alert.data.name).then((res=>{\r\n                    props.showLoader(false);\r\n                    console.log(res);\r\n                    if(res.statusCode == 200){\r\n                        getCategories()\r\n                    }else{\r\n                    }\r\n                }));\r\n        \r\n            }\r\n            setShow(false)\r\n        };\r\n      const handleShow = () => setShow(true);\r\n    \r\n      useEffect(() => {\r\n        if(props.selectedTab==\"categories\"){\r\n            getCategories()\r\n        }\r\n    },[props.selectedTab])\r\n\r\n    const getCategories =()=>{\r\n        console.log(\"category run\")\r\n        props.showLoader(true);\r\n        agent.Order.getCategoryAdmin().then((res=>{\r\n            props.showLoader(false);\r\n            if(res.statusCode == 200){\r\n                setstate(res.body.record);\r\n            }else{\r\n                setstate([]);\r\n            }\r\n        }));\r\n    }\r\n    const deleteCategory = (data)=>{\r\n        console.log(data);\r\n        setalert({\r\n            heading:`Delete Category: ${data.name}`,\r\n            message:`Are you sure you want to delete category: ${data.name}`,\r\n            data:data\r\n        })\r\n        handleShow();    \r\n    }\r\n    const data = useMemo(\r\n        () => \r\n            state.map((record,index)=>\r\n                { return {col1:index+1,\r\n                col2:record.name,\r\n                col3:record\r\n                }\r\n            }\r\n        )\r\n        ,\r\n        [state]\r\n      )   \r\n      const columns = useMemo(\r\n        () => [\r\n          {\r\n            Header: '#',\r\n            accessor: 'col1', // accessor is the \"key\" in the data\r\n          },\r\n          {\r\n            Header: 'Name',\r\n            accessor: 'col2',\r\n          },\r\n          {\r\n            Header: 'Action',\r\n            accessor: 'col3',\r\n          },\r\n\r\n        ],\r\n        []\r\n      )    \r\n      \r\n      const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n        pageOptions,\r\n        page,\r\n        state: { pageIndex, pageSize },\r\n        gotoPage,\r\n        previousPage,\r\n        nextPage,\r\n        setPageSize,\r\n        canPreviousPage,\r\n        canNextPage,        \r\n      } = useTable({ columns, data ,initialState: { pageIndex: 0 }},useSortBy,usePagination)\r\n    if(props.selectedTab == \"categories\"){\r\n        return (\r\n            <>\r\n                <Button type=\"button\" onClick={()=>props.changeTab(\"addCategory\")} variant=\"danger\">Add Category</Button>\r\n                <Table {...getTableProps()} responsive>\r\n                    <thead>\r\n                        {headerGroups.map(headerGroup => (\r\n                        <tr {...headerGroup.getHeaderGroupProps()}>\r\n                            {headerGroup.headers.map(column => (\r\n                            <th\r\n                                {...column.getHeaderProps(column.getSortByToggleProps())}\r\n                            >\r\n                                {column.render('Header')}\r\n                                <span>\r\n                                {column.isSorted ? (column.isSortedDesc ? ' 🔽' : ' 🔼') : ''}\r\n                                </span>\r\n\r\n                            </th>\r\n                            ))}\r\n                        </tr>\r\n                        ))}\r\n                    </thead>\r\n                    <tbody {...getTableBodyProps()}>\r\n                        {page.map(row => {\r\n                        prepareRow(row)\r\n                        return (\r\n                            <tr {...row.getRowProps()}>\r\n                            {row.cells.map(cell => {\r\n                                console.log(cell);\r\n                                if(cell.column.id !=\"col3\"){\r\n                                    return (\r\n                                        <td {...cell.getCellProps()}>\r\n                                            {cell.render('Cell')}\r\n                                        </td>\r\n                                        )\r\n        \r\n                                }else{\r\n                                    return (\r\n                                        <td>\r\n                                        <span onClick={()=>deleteCategory(cell.value)}>\r\n                                            <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-trash\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                            <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\"/>\r\n                                            <path fill-rule=\"evenodd\" d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4L4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"/>\r\n                                            </svg>\r\n                                        </span>\r\n                                    </td>\r\n        \r\n                                    )\r\n                                }\r\n                            })}\r\n                            </tr>\r\n                        )\r\n                        })}\r\n                    </tbody>\r\n                </Table>\r\n    <div>\r\n     <button onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n        Previous Page\r\n      </button>\r\n       <button onClick={() => nextPage()} disabled={!canNextPage}>\r\n         Next Page\r\n       </button>\r\n       <div>\r\n         Page{' '}\r\n         <em>\r\n           {pageIndex + 1} of {pageOptions.length}\r\n         </em>\r\n       </div>\r\n     </div>                                              \r\n                <Modal show={show} onHide={handleClose}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>{alert.heading}</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>{alert.message}</Modal.Body>\r\n                    <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={()=>handleClose(\"yes\")}>\r\n                        Yes\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={()=>handleClose(\"no\")}>\r\n                        Cancel\r\n                    </Button>\r\n                    </Modal.Footer>\r\n                </Modal> \r\n            </>)\r\n    \r\n    }else{\r\n        return \"\";\r\n    }\r\n}\r\n\r\nexport default CategoryManagement\r\n","import React, { useEffect, useState } from 'react'\r\nimport agent from '../../../agent'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Table, Nav, Pagination, Button, Modal } from 'react-bootstrap';\r\n\r\nfunction OrderHistory(props) {\r\n    //let active = 0;\r\n    let items = [];\r\n\r\n    useEffect(() => {\r\n        if(props.selectedTab==\"orders\"){\r\n            getOrders()\r\n        }\r\n    }, [props.selectedTab])\r\n\r\n    const [orderHistory, setorderHistory] = useState([])\r\n    const [selectedorder, setselectedorder] = useState([]);\r\n    const [totalPage, settotalPage] = useState(0);\r\n    const [isopenpopup, setisopenpopup] = useState(false);\r\n    const [selectedPage,setselectedPage] = useState(0);\r\n    const handleClose = () => setisopenpopup(false);\r\n    for (let number = 0; number <= totalPage; number++) {\r\n        if(totalPage >0){\r\n            items.push(\r\n                <Pagination.Item onClick={() => changePage(number)} key={number} active={number == selectedPage}>\r\n                  {number+1}\r\n                </Pagination.Item>,\r\n              );\r\n        }\r\n      }         \r\n      const paginationBasic = (\r\n        <div>\r\n          <Pagination>{items}</Pagination>\r\n        </div>\r\n      ); \r\n\r\n    const viewOrderPopUp = (record) => {\r\n        setselectedorder(record);\r\n        setisopenpopup(true);\r\n    }\r\n    let history = useHistory();\r\n    const getOrders = (page=0) => {\r\n        props.showLoader(true);\r\n        agent.Order.getOrdersHistoryAdmin(page).then((res => {\r\n            props.showLoader(false);\r\n            console.log(res.body.record)\r\n            setorderHistory(res.body.record);\r\n            let totalRecord = res.body.totalOrders;\r\n            let totalPage = parseInt(res.body.totalOrders)/10;\r\n            console.log(\"totalPage\",totalPage);\r\n            settotalPage(totalPage);\r\n        }), (err) => {\r\n            console.log(err.response.body.message);\r\n            if (err.response.body.message == \"jwt must be provided\") {\r\n                console.log(\"login required\");\r\n                history.push(\"/login\");\r\n            }\r\n            props.showLoader(false);\r\n\r\n        });\r\n    }\r\n    const changePage=(number) =>{\r\n        console.log(\"page\",number);\r\n        setselectedPage(number);\r\n        getOrders(number);\r\n    }\r\n    if (props.selectedTab == \"orders\") {\r\n        return (\r\n            <>\r\n                <Table responsive>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>#</th>\r\n                            <th>Customer</th>\r\n                            <th>Date</th>\r\n                            <th>Details</th>\r\n                            <th>Number</th>\r\n                            <th>Action</th>\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {orderHistory.map((record, index) =>\r\n                            <tr>\r\n                                <td>{index + 1}</td>\r\n                                <td>{record.shipping.name}</td>\r\n                                <td>{record.datePlaced}</td>\r\n                                <td>{record.items.map(itm => <span>{itm.item.title} Quantity:{itm.quantity}<br></br></span>)}</td>\r\n                                <td>{record.shipping.phone}</td>\r\n\r\n                                <td>\r\n                                    <Button type=\"button\" onClick={() => viewOrderPopUp(record)}>View</Button>\r\n                                </td>\r\n                            </tr>\r\n\r\n                        )}\r\n                    </tbody>\r\n                </Table>\r\n                {paginationBasic}\r\n                <Modal show={isopenpopup} onHide={handleClose}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Order Details</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Table striped bordered hover responsive>\r\n                            <thead><tr><td colSpan=\"6\"><h4>Shipping Details</h4></td></tr></thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td><b>Name:</b> {selectedorder?.shipping?.name}</td>\r\n                                    <td><b>Address:</b> {selectedorder?.shipping?.address}</td>\r\n                                    <td><b>Street:</b> {selectedorder?.shipping?.street}</td>\r\n                                    <td><b>Landmark:</b> {selectedorder?.shipping?.landmark}</td>\r\n\r\n                                    <td><b>Phone:</b> {selectedorder?.shipping?.phone}</td>\r\n                                    <td><b>City:</b> {selectedorder?.shipping?.city}</td>\r\n\r\n                                </tr>\r\n                            </tbody>\r\n                        </Table>\r\n                        <Table striped bordered hover responsive>\r\n                            <thead><tr><td colSpan=\"4\"><h4>Products</h4></td></tr></thead>\r\n                            <tbody>{selectedorder?.items?.map(itm => <tr>\r\n                                <td><b>Title:</b> {itm.item.title}</td>\r\n                                <td><b>Description:</b> {itm.item.description}</td>\r\n                                <td><b>Quantity:</b> {itm.quantity}</td>\r\n                                <td><b>Total Price:</b> {parseInt(itm.quantity) * itm.perItemPrice}</td>\r\n                            </tr>)}\r\n                            </tbody>\r\n                        </Table>\r\n                        <Table striped bordered hover responsive>\r\n                            <thead><tr><td colSpan=\"4\"><h4>Payment Details</h4></td></tr></thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td><b>Payment Mode: </b>{selectedorder.paymentMode}</td>\r\n                                    <td><b>Razorpay Order id: </b>{selectedorder.razorpay_order_id}</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </Table>\r\n\r\n\r\n                        <Table striped bordered hover responsive>\r\n                            <thead><tr><td colSpan=\"4\"><h4>Bill Details</h4></td></tr></thead>\r\n                            <tbody>\r\n                                {selectedorder.isDiscountApplied ? <tr>\r\n                                    <td>\r\n                                        <b>\r\n                                            Prime Member Discount:\r\n                                </b>\r\n                                    </td>\r\n                                    <td>10%</td>\r\n                                </tr> : \"\"}\r\n                                <tr>\r\n                                    <td>\r\n                                        <b>Total Bill Amount</b>\r\n                                    </td>\r\n                                    <td>{selectedorder.totalBillAmount}</td>\r\n                                </tr>\r\n                            </tbody>\r\n\r\n                        </Table>\r\n\r\n                    </Modal.Body>\r\n                </Modal>\r\n\r\n            </>\r\n        )\r\n\r\n    } else {\r\n        return \"\";\r\n    }\r\n}\r\n\r\nexport default OrderHistory\r\n","import React,{useState} from 'react'\r\nimport { Button,Form, Col} from 'react-bootstrap';\r\nimport agent from '../../agent'\r\n\r\nfunction AddCategory(props) {\r\n    const [state, setstate] = useState(\"\")\r\n    const handleSubmit=(ev) =>{\r\n        props.showLoader(false);\r\n        agent.Order.addCategory({name:state}).then((res=>{\r\n            props.showLoader(false);\r\n\r\n            if(res.statusCode == 200){\r\n                console.log(props);\r\n                props.changeTab(\"categories\");\r\n            }else{\r\n                //setstate([]);\r\n            }\r\n        }));\r\n        ev.preventDefault();\r\n    }\r\n    const handleChange = (e) => {\r\n        setstate(e.target.value);\r\n    }    \r\n    if (props.selectedTab == \"addCategory\") {\r\n\r\n        return (\r\n            <Form onSubmit={handleSubmit}>\r\n                <Form.Row>\r\n                <Form.Group as={Col} md=\"4\" controlId=\"formBasicEmail\">\r\n                    <Form.Label>Category Name:</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"\" onChange={handleChange}/>\r\n                </Form.Group>\r\n\r\n                </Form.Row>\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                    Save\r\n                </Button>\r\n            </Form>\r\n            )\r\n\r\n    } else {\r\n        return \"\";\r\n    }\r\n}\r\n\r\nexport default AddCategory\r\n","import React,{useState,useEffect, useMemo} from 'react'\r\nimport { Table, Nav, Pagination, Button, Modal, Image } from 'react-bootstrap';\r\nimport agent from '../../../agent'\r\nimport {Link} from 'react-router-dom';\r\nimport {useDispatch } from \"react-redux\";\r\nimport {useTable,useSortBy,usePagination} from 'react-table'\r\n\r\nimport {\r\n    STORE_EDIT_PRODUCT\r\n} from '../../../constants/actionTypes';\r\n\r\nfunction ProductManagement(props) {\r\n    \r\n    useEffect(() => {\r\n        if(props.selectedTab==\"products\"){\r\n            getProducts()\r\n        }\r\n    },[props.selectedTab])\r\n\r\n    const [state, setstate] = useState([]) \r\n    const [show, setShow] = useState(false);\r\n    const [alert, setalert] = useState({heading:\"\",message:\"\",data:{}});\r\n    const dispatch = useDispatch()\r\n    \r\n    const getProducts =()=>{\r\n        props.showLoader(true);\r\n        agent.Order.getProducts().then((res=>{\r\n            props.showLoader(false);\r\n\r\n            if(res.statusCode == 200){\r\n                setstate(res.body.record);\r\n            }else{\r\n                setstate([]);\r\n            }\r\n        }));\r\n    }\r\n    const handleClose = (action) => {\r\n        if(action==\"yes\"){\r\n            props.showLoader(true);\r\n            agent.Order.deleteProduct(alert.data.title).then((res=>{\r\n                props.showLoader(false);\r\n                if(res.statusCode == 200){\r\n                    getProducts()\r\n                }else{\r\n                }\r\n            }));\r\n    \r\n        }\r\n        setShow(false)\r\n    };\r\n    const handleShow = () => setShow(true);\r\n    const deleteProduct = (data)=>{\r\n        console.log(data);\r\n        setalert({\r\n            heading:`Delete Product: ${data.title}`,\r\n            message:`Are you sure you want to delete Product: ${data.title}`,\r\n            data:data\r\n        })\r\n        handleShow();    \r\n    }\r\n    const editProduct = (data)=>{\r\n        dispatch({type:STORE_EDIT_PRODUCT,data})\r\n        props.changeTab(\"editProduct\")\r\n    }\r\n    const columns = useMemo(\r\n        () => [\r\n          {\r\n            Header: '#',\r\n            accessor: 'col1', // accessor is the \"key\" in the data\r\n          },\r\n          {\r\n            Header: 'Image',\r\n            accessor: 'col2',\r\n          },\r\n          {\r\n            Header: 'Title',\r\n            accessor: 'col3',\r\n          },\r\n          {\r\n            Header: 'Description',\r\n            accessor: 'col4',\r\n          },\r\n          {\r\n            Header: 'Price',\r\n            accessor: 'col5',\r\n          },\r\n          {\r\n            Header: 'Category',\r\n            accessor: 'col6',\r\n          },\r\n          {\r\n            Header: 'Action',\r\n            accessor: 'col7',\r\n          },\r\n\r\n        ],\r\n        []\r\n    )    \r\n\r\n    const data = useMemo(\r\n        () => \r\n            state.map((record,index)=>\r\n                { return {col1:index+1,\r\n                col2:record.imageUrl,\r\n                col3:record.title,\r\n                col4:record.description,\r\n                col5:record.price,\r\n                col6:record.category,\r\n                col7:record\r\n                }\r\n            }\r\n        )\r\n        ,\r\n        [state]\r\n      )  \r\n\r\n      const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n        pageOptions,\r\n        page,\r\n        state: { pageIndex, pageSize },\r\n        gotoPage,\r\n        previousPage,\r\n        nextPage,\r\n        setPageSize,\r\n        canPreviousPage,\r\n        canNextPage,        \r\n      } = useTable({ columns, data ,initialState: { pageIndex: 0 }},useSortBy,usePagination)\r\n\r\n    if(props.selectedTab == \"products\"){\r\n        return (\r\n            <>\r\n                <Button type=\"button\" onClick={()=>props.changeTab(\"addProduct\")} variant=\"danger\">Add Product</Button>\r\n                <Table {...getTableProps()} responsive>\r\n                    <thead>\r\n                        {headerGroups.map(headerGroup => (\r\n                        <tr {...headerGroup.getHeaderGroupProps()}>\r\n                            {headerGroup.headers.map(column => (\r\n                            <th\r\n                                {...column.getHeaderProps(column.getSortByToggleProps())}\r\n                            >\r\n                                {column.render('Header')}\r\n                                <span>\r\n                                {column.isSorted ? (column.isSortedDesc ? ' 🔽' : ' 🔼') : ''}\r\n                                </span>\r\n\r\n                            </th>\r\n                            ))}\r\n                        </tr>\r\n                        ))}\r\n                    </thead>\r\n                    <tbody {...getTableBodyProps()}>\r\n                        {page.map(row => {\r\n                        prepareRow(row)\r\n                        return (\r\n                            <tr {...row.getRowProps()}>\r\n                            {row.cells.map(cell => {\r\n                                console.log(cell);\r\n                                if(cell.column.id ==\"col2\"){\r\n                                    return(<td>{cell.value !=\"\"?<Image src={cell.value} className=\"product-image\" thumbnail />:\"No Image\"}</td>)\r\n                                }                                \r\n                                if(cell.column.id !=\"col7\"){\r\n                                    return (\r\n                                        <td {...cell.getCellProps()}>\r\n                                            {cell.render('Cell')}\r\n                                        </td>\r\n                                        )\r\n        \r\n                                }else{\r\n                                    return (\r\n                                        <td>\r\n                                        <span onClick={()=>deleteProduct(cell.value)}>\r\n                                            <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-trash\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                            <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\"/>\r\n                                            <path fill-rule=\"evenodd\" d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4L4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"/>\r\n                                            </svg>\r\n                                        </span>\r\n                                        <span className=\"ml-2\" onClick={()=>editProduct(cell.value)}>\r\n                                            <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-pencil-square\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                            <path d=\"M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456l-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z\"/>\r\n                                            <path fill-rule=\"evenodd\" d=\"M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z\"/>\r\n                                            </svg>\r\n                                        </span>\r\n                                    </td>\r\n        \r\n                                    )\r\n                                }\r\n                            })}\r\n                            </tr>\r\n                        )\r\n                        })}\r\n                    </tbody>\r\n                </Table>\r\n                <div>\r\n                <button onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n                    Previous Page\r\n                </button>\r\n                <button onClick={() => nextPage()} disabled={!canNextPage}>\r\n                    Next Page\r\n                </button>\r\n                <div>\r\n                    Page{' '}\r\n                    <em>\r\n                    {pageIndex + 1} of {pageOptions.length}\r\n                    </em>\r\n                </div>\r\n                </div>                                              \r\n                <Modal show={show} onHide={handleClose}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>{alert.heading}</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>{alert.message}</Modal.Body>\r\n                    <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={()=>handleClose(\"yes\")}>\r\n                        Yes\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={()=>handleClose(\"no\")}>\r\n                        Cancel\r\n                    </Button>\r\n                    </Modal.Footer>\r\n                </Modal>               \r\n            </>)\r\n    \r\n    }else{\r\n        return \"\";\r\n    }\r\n}\r\n\r\nexport default ProductManagement\r\n","import React,{useState,useEffect} from 'react'\r\nimport {Button, Form, Col } from 'react-bootstrap';\r\nimport agent from '../../../agent';\r\n\r\nfunction AddProduct(props) {\r\n    const [category, setcategory] = useState([])\r\n    const [state, setState] = useState({})\r\n\r\n    useEffect(() => {\r\n        if(props.selectedTab==\"addProduct\"){\r\n            getCategories()\r\n        }\r\n    },[props.selectedTab])\r\n    const getCategories =()=>{\r\n        props.showLoader(true);\r\n        agent.Order.getCategoryAdmin().then((res=>{\r\n            props.showLoader(false);\r\n\r\n            if(res.statusCode == 200){\r\n                //setstate(res.body.record);\r\n                setcategory(res.body.record)\r\n            }else{\r\n                //setstate([]);\r\n                setcategory([])\r\n            }\r\n        }));\r\n    }\r\n    const handleChange = (e) => {\r\n\r\n        //const state = this.state.userDetails\r\n        state[e.target.name] = e.target.value;\r\n        setState(state);\r\n        console.log(state);\r\n        \r\n    }\r\n\r\n    const handleSubmit=(ev) =>{\r\n        props.showLoader(false);\r\n        console.log(state);\r\n        agent.Order.addProducts(state).then((res=>{\r\n            props.showLoader(false);\r\n\r\n            if(res.statusCode == 200){\r\n                //console.log(props);\r\n                props.changeTab(\"products\");\r\n            }else{\r\n                //setstate([]);\r\n            }\r\n        }));\r\n        ev.preventDefault();\r\n    }\r\n\r\n    if (props.selectedTab == \"addProduct\") {\r\n        return (\r\n            <Form onSubmit={handleSubmit}>\r\n                <Form.Row>\r\n            <Form.Group as={Col} controlId=\"exampleForm.ControlSelect1\">\r\n                <Form.Label>Select Category</Form.Label>\r\n                <Form.Control as=\"select\" name=\"category\" onChange={handleChange} required>\r\n                <option key={\"\"}>Select Category</option>\r\n                    {category.map(item=><option key={item.name}>{item.name}</option>)}\r\n                </Form.Control>\r\n            </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n            <Form.Group as={Col} controlId=\"exampleForm.ControlInput1\">\r\n                <Form.Label>Title</Form.Label>\r\n                <Form.Control type=\"text\"  name=\"title\" onChange={handleChange} required/>\r\n            </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n            <Form.Group as={Col} controlId=\"exampleForm.ControlTextarea1\">\r\n                <Form.Label>Description</Form.Label>\r\n                <Form.Control as=\"textarea\" rows={3} name=\"description\" onChange={handleChange}/>\r\n            </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n            <Form.Group as={Col} controlId=\"exampleForm.ControlTextarea1\">\r\n                <Form.Label>Price</Form.Label>\r\n                <Form.Control type=\"number\" name=\"price\" onChange={handleChange}/>\r\n            </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n            <Form.Group as={Col} controlId=\"exampleForm.ControlInput1\">\r\n                <Form.Label>ImageURL</Form.Label>\r\n                <Form.Control type=\"text\"  name=\"imageURL\" onChange={handleChange}/>\r\n            </Form.Group>\r\n            </Form.Row>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n                Save\r\n            </Button>    \r\n            </Form>   \r\n         )\r\n        \r\n    }else{\r\n        return \"\";\r\n    }\r\n}\r\n\r\nexport default AddProduct\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Button, Form, Col } from 'react-bootstrap';\r\nimport agent from '../../../agent';\r\nimport { useSelector,useDispatch } from \"react-redux\";\r\nimport {\r\n    UPDATE_PRODUCT_FIELD\r\n} from '../../../constants/actionTypes';\r\n\r\nfunction EditProduct(props) {\r\n    const storeProduct = useSelector(state => state.product);\r\n\r\n    const [category, setcategory] = useState([])\r\n    const [state, setState] = useState({})\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        if (props.selectedTab == \"editProduct\") {\r\n            getCategories()\r\n        }\r\n    }, [props.selectedTab])\r\n\r\n    const getCategories = () => {\r\n        props.showLoader(true);\r\n        agent.Order.getCategoryAdmin().then((res => {\r\n            props.showLoader(false);\r\n\r\n            if (res.statusCode == 200) {\r\n                setcategory(res.body.record)\r\n            } else {\r\n                setcategory([])\r\n            }\r\n        }));\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        let data = {key:e.target.name,value:e.target.value}\r\n        dispatch({type:UPDATE_PRODUCT_FIELD,data});\r\n    }\r\n\r\n    const handleSubmit = (ev) => {\r\n        console.log(storeProduct);\r\n        props.showLoader(false);\r\n        agent.Order.editProducts(storeProduct.product).then((res => {\r\n            props.showLoader(false);\r\n            if (res.statusCode == 200) {\r\n                props.changeTab(\"products\");\r\n            } else {\r\n            }\r\n        }));\r\n        ev.preventDefault();\r\n    }\r\n\r\n    if (props.selectedTab == \"editProduct\") {\r\n        return (\r\n            <Form onSubmit={handleSubmit}>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"exampleForm.ControlSelect1\">\r\n                        <Form.Label>Select Category</Form.Label>\r\n                        <Form.Control as=\"select\" value={storeProduct.product?.category} name=\"category\" onChange={handleChange} required>\r\n                            <option key={\"\"}>Select Category</option>\r\n                            {category.map(item => <option key={item.name}>{item.name}</option>)}\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"exampleForm.ControlInput1\">\r\n                        <Form.Label>Title</Form.Label>\r\n                        <Form.Control type=\"text\" value={storeProduct.product?.title} name=\"title\" onChange={handleChange} required />\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"exampleForm.ControlTextarea1\">\r\n                        <Form.Label>Description</Form.Label>\r\n                        <Form.Control as=\"textarea\" value={storeProduct.product?.description} rows={3} name=\"description\" onChange={handleChange} />\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"exampleForm.ControlTextarea1\">\r\n                        <Form.Label>Price</Form.Label>\r\n                        <Form.Control type=\"number\" value={storeProduct.product?.price} name=\"price\" onChange={handleChange} />\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"exampleForm.ControlInput5\">\r\n                        <Form.Label>ImageURL</Form.Label>\r\n                        <Form.Control type=\"text\" value={storeProduct.product?.imageUrl} name=\"imageUrl\" onChange={handleChange} />\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                    Save\r\n            </Button>\r\n            </Form>\r\n        )\r\n\r\n    } else {\r\n        return \"\"\r\n    }\r\n}\r\n\r\nexport default EditProduct\r\n","import React, { useEffect, useState,useMemo } from 'react'\r\nimport agent from '../../../agent'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Table, Nav, Pagination, Button, Modal } from 'react-bootstrap';\r\nimport {useTable,useSortBy,usePagination} from 'react-table'\r\n\r\nfunction FinanceRequests(props) {\r\n    const [ITRrequests, setITRrequests] = useState([])\r\n    const [isopenpopup, setisopenpopup] = useState(false);\r\n    const [selectedorder, setselectedorder] = useState([]);\r\n\r\n    const handleClose = () => setisopenpopup(false);\r\n\r\n    useEffect(() => {\r\n        if(props.selectedTab==\"finance\"){\r\n            getITRrequests()\r\n        }\r\n    }, [props.selectedTab])\r\n\r\n    const getITRrequests = () => {\r\n        props.showLoader(true);\r\n        agent.Finance.getAdminItr().then((res => {\r\n            props.showLoader(false);\r\n            console.log(res.body.record);\r\n            setITRrequests(res.body.record);\r\n        }), (err) => {\r\n            // if (err.response.body.message == \"jwt must be provided\") {\r\n            //     console.log(\"login required\");\r\n            //     history.push(\"/login\");\r\n            // }\r\n            props.showLoader(false);\r\n\r\n        });\r\n    }\r\n    const columns = useMemo(\r\n        () => [\r\n          {\r\n            Header: '#',\r\n            accessor: 'col1', // accessor is the \"key\" in the data\r\n          },\r\n          {\r\n            Header: 'FirstName',\r\n            accessor: 'col2',\r\n          },\r\n          {\r\n            Header: 'LastName',\r\n            accessor: 'col3',\r\n          },\r\n          {\r\n            Header: 'Phone',\r\n            accessor: 'col4',\r\n          },\r\n          {\r\n            Header: 'Email',\r\n            accessor: 'col5',\r\n          },\r\n          // {\r\n          //   Header: 'Address',\r\n          //   accessor: 'col6',\r\n          // },\r\n          // {\r\n          //   Header: 'Aadhar',\r\n          //   accessor: 'col7',\r\n          // },\r\n          // {\r\n          //   Header: 'Business',\r\n          //   accessor: 'col8',\r\n          // },\r\n          // {\r\n          //   Header: 'Zip',\r\n          //   accessor: 'col9',\r\n          // },\r\n          // {\r\n          //   Header: 'Service',\r\n          //   accessor: 'col10',\r\n          // },\r\n          {\r\n            Header:'Action',\r\n            accessor: 'col6'\r\n          }\r\n        ],\r\n        []\r\n    )    \r\n    const data = useMemo(\r\n        () => \r\n        ITRrequests.map((record,index)=>\r\n                { return {col1:index+1,\r\n                col2:record.firstName,\r\n                col3:record.lastName,\r\n                col4:record.phone,\r\n                col5:record.email,\r\n                col6:record\r\n                // col6:record.address,\r\n                // col7:record.aadhar,\r\n                // col8:record.business,\r\n                // col9:record.zip,\r\n                // col10:record.service\r\n                }\r\n            }\r\n        )\r\n        ,\r\n        [ITRrequests]\r\n      )  \r\n      const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n        pageOptions,\r\n        page,\r\n        state: { pageIndex, pageSize },\r\n        gotoPage,\r\n        previousPage,\r\n        nextPage,\r\n        setPageSize,\r\n        canPreviousPage,\r\n        canNextPage,        \r\n      } = useTable({ columns, data ,initialState: { pageIndex: 0 }},useSortBy,usePagination)\r\n    const viewOrderPopUp = (record) => {\r\n        setselectedorder(record);\r\n        setisopenpopup(true);\r\n    }\r\n\r\n    if (props.selectedTab == \"finance\") {\r\n    return (\r\n        <>\r\n        <Table {...getTableProps()} responsive>\r\n        <thead>\r\n            {headerGroups.map(headerGroup => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n                {headerGroup.headers.map(column => (\r\n                <th\r\n                    {...column.getHeaderProps(column.getSortByToggleProps())}\r\n                >\r\n                    {column.render('Header')}\r\n                    <span>\r\n                    {column.isSorted ? (column.isSortedDesc ? ' 🔽' : ' 🔼') : ''}\r\n                    </span>\r\n\r\n                </th>\r\n                ))}\r\n            </tr>\r\n            ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n            {page.map(row => {\r\n            prepareRow(row)\r\n            return (\r\n                <tr {...row.getRowProps()}>\r\n                {row.cells.map(cell => {\r\n                                if(cell.column.id ==\"col6\"){\r\n                                  return(\r\n                                  <td>\r\n                                    <Button type=\"button\" onClick={() => viewOrderPopUp(cell.value)}>View</Button>\r\n                                    </td>\r\n                                  )\r\n                              } else{\r\n                                return (\r\n                                  <td {...cell.getCellProps()}>\r\n                                      {cell.render('Cell')}\r\n                                  </td>\r\n                                  )\r\n          \r\n                              }                               \r\n\r\n                })}\r\n                </tr>\r\n            )\r\n            })}\r\n        </tbody>\r\n    </Table>\r\n                <div>\r\n                <button onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n                    Previous Page\r\n                </button>\r\n                <button onClick={() => nextPage()} disabled={!canNextPage}>\r\n                    Next Page\r\n                </button>\r\n                <div>\r\n                    Page{' '}\r\n                    <em>\r\n                    {pageIndex + 1} of {pageOptions.length}\r\n                    </em>\r\n                </div>\r\n                </div> \r\n                <Modal show={isopenpopup} onHide={handleClose}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>User Details</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Table striped bordered hover responsive>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td><b>First Name: </b></td>\r\n                                    <td>{selectedorder.firstName}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><b>Last Name: </b></td>\r\n                                    <td>{selectedorder.lastName}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><b>Phone: </b></td>\r\n                                    <td>{selectedorder.phone}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><b>Email: </b></td>\r\n                                    <td>{selectedorder.email}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><b>Address: </b></td>\r\n                                    <td>{selectedorder.address}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><b>Aadhar: </b></td>\r\n                                    <td>{selectedorder.aadhar}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><b>Business: </b></td>\r\n                                    <td>{selectedorder.business}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><b>Zip: </b></td>\r\n                                    <td>{selectedorder.zip}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><b>Service: </b></td>\r\n                                    <td>{selectedorder.service}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><b>Razorpay order id: </b></td>\r\n                                    <td>{selectedorder.razorpay_order_id}</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </Table>\r\n                    </Modal.Body>\r\n                </Modal>\r\n\r\n                </>    \r\n                                                       \r\n\r\n)\r\n    }else{\r\n        return \"\";\r\n    }\r\n}\r\n\r\nexport default FinanceRequests\r\n","import React, { useEffect, useState,useMemo } from 'react'\r\nimport agent from '../../../agent'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Table, Nav, Pagination, Button, Modal } from 'react-bootstrap';\r\nimport {useTable,useSortBy,usePagination} from 'react-table'\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction Form16Requests(props) {\r\n    const [form16requests, setform16requests] = useState([])\r\n    useEffect(() => {\r\n        if(props.selectedTab==\"form16\"){\r\n            getForm16requests()\r\n        }\r\n    }, [props.selectedTab])\r\n\r\n    const getForm16requests = () => {\r\n        props.showLoader(true);\r\n        agent.Finance.getAdminForm16().then((res => {\r\n            props.showLoader(false);\r\n            console.log(res.body.record);\r\n            setform16requests(res.body.record);\r\n        }), (err) => {\r\n            props.showLoader(false);\r\n\r\n        });\r\n    }\r\n    const downloadForm16=(filepath=\"\")=>{\r\n        console.log(filepath);\r\n        let filePathArr = filepath.split(\"/\");\r\n        let fileName = filePathArr[filePathArr.length -1];\r\n        console.log(fileName);\r\n        agent.Finance.downloadForm16({fileName:fileName}).then(res => {\r\n            console.log(res);\r\n\r\n        });\r\n    }\r\n    const columns = useMemo(\r\n        () => [\r\n          {\r\n            Header: '#',\r\n            accessor: 'col1', // accessor is the \"key\" in the data\r\n          },\r\n          {\r\n            Header: 'Phone',\r\n            accessor: 'col2',\r\n          },\r\n          {\r\n            Header: 'Form16',\r\n            accessor: 'col3',\r\n          },\r\n          {\r\n            Header: 'Razorpay Order Id',\r\n            accessor: 'col4',\r\n          }\r\n\r\n\r\n        ],\r\n        []\r\n    )    \r\n    const data = useMemo(\r\n        () => \r\n        form16requests.map((record,index)=>\r\n                { \r\n                    let filePathArr = record.filePath.split(\"/\");\r\n                    let fileName = filePathArr[filePathArr.length -1];\r\n                return {col1:index+1,\r\n                col2:record.phone,\r\n                col3:fileName,\r\n                col4:record.razorpay_order_id,\r\n                }\r\n            }\r\n        )\r\n        ,\r\n        [form16requests]\r\n      )  \r\n      const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n        pageOptions,\r\n        page,\r\n        state: { pageIndex, pageSize },\r\n        gotoPage,\r\n        previousPage,\r\n        nextPage,\r\n        setPageSize,\r\n        canPreviousPage,\r\n        canNextPage,        \r\n      } = useTable({ columns, data ,initialState: { pageIndex: 0 }},useSortBy,usePagination)\r\n\r\n    if(props.selectedTab == \"form16\"){\r\n        return (\r\n            <>\r\n            <Table {...getTableProps()} responsive>\r\n            <thead>\r\n                {headerGroups.map(headerGroup => (\r\n                <tr {...headerGroup.getHeaderGroupProps()}>\r\n                    {headerGroup.headers.map(column => (\r\n                    <th\r\n                        {...column.getHeaderProps(column.getSortByToggleProps())}\r\n                    >\r\n                        {column.render('Header')}\r\n                        <span>\r\n                        {column.isSorted ? (column.isSortedDesc ? ' 🔽' : ' 🔼') : ''}\r\n                        </span>\r\n    \r\n                    </th>\r\n                    ))}\r\n                </tr>\r\n                ))}\r\n            </thead>\r\n            <tbody {...getTableBodyProps()}>\r\n                {page.map(row => {\r\n                prepareRow(row)\r\n                return (\r\n                    <tr {...row.getRowProps()}>\r\n                    {row.cells.map(cell => {\r\n                                if(cell.column.id ==\"col3\"){\r\n                                    return(<td>\r\n                                        {/* <a target={\"_blank\"}  href = \"http://localhost:3000/api/download?fileName=16057165121892019-08-30-12-14-11-448_1567147451448_XXXPK9512X_Acknowledgement.pdf\">Download</a> */}\r\n                                        <Link className=\"btn btn-danger\" target={\"_blank\"} to={`/api/download?fileName=${cell.value}`}>Download</Link>\r\n                                        {/* <Button type=\"button\" onClick={()=>downloadForm16(cell.value)} variant=\"danger\"> Download</Button>  */}\r\n                                         </td>)\r\n                                }else{\r\n                                    return (\r\n                                        <td {...cell.getCellProps()}>\r\n                                            {cell.render('Cell')}\r\n                                        </td>\r\n                                        )\r\n        \r\n                                }                                \r\n\r\n                    })}\r\n                    </tr>\r\n                )\r\n                })}\r\n            </tbody>\r\n        </Table>\r\n                    <div>\r\n                    <button onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n                        Previous Page\r\n                    </button>\r\n                    <button onClick={() => nextPage()} disabled={!canNextPage}>\r\n                        Next Page\r\n                    </button>\r\n                    <div>\r\n                        Page{' '}\r\n                        <em>\r\n                        {pageIndex + 1} of {pageOptions.length}\r\n                        </em>\r\n                    </div>\r\n                    </div>   \r\n                    </>                                           \r\n    \r\n            )\r\n        }else{\r\n        return \"\";\r\n    }\r\n}\r\n\r\nexport default Form16Requests\r\n","import React,{useState,useEffect} from 'react'\r\nimport { ListGroup, Container, Row, Col, Card, Button, CardColumns,Toast,Alert } from 'react-bootstrap';\r\n import CategoryManagement from '../Admin/CategoryManagement';\r\nimport Loader from '../layout/Loader';\r\nimport OrderHistory from '../Admin/orders/OrderHistory';\r\nimport AddCategory from '../Admin/AddCategory';\r\nimport ProductManagement from '../Admin/products/ProductManagement'\r\nimport AddProduct from '../Admin/products/AddProduct'\r\nimport EditProduct from '../Admin/products/EditProduct'\r\nimport FinanceRequests from '../Admin/finance/FinanceRequests';\r\nimport Form16Requests from '../Admin/finance/Form16Requests';\r\n\r\nfunction Home(props) {\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [selectedTab, setselectedTab] = useState(\"categories\")\r\n    const showLoader =(value)=>{\r\n        setisShowLoader(value);\r\n    }\r\n    const changeTab=(tab=\"\")=>{\r\n        setselectedTab(tab);\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Container fluid>\r\n            <Row>\r\n                <Col md={3} className=\"p-4\">\r\n                    <ListGroup >\r\n                        <ListGroup.Item key={\"categories\"} active={selectedTab==\"categories\"?true:false} action  onClick={()=>changeTab(\"categories\")}>Category Management</ListGroup.Item>\r\n                        <ListGroup.Item key={\"products\"} active={selectedTab==\"products\"?true:false} action onClick={()=>changeTab(\"products\")}>Product Management</ListGroup.Item>\r\n                        <ListGroup.Item key={\"orders\"} active={selectedTab==\"orders\"?true:false} action onClick={()=>changeTab(\"orders\")}>Order History</ListGroup.Item>\r\n                        <ListGroup.Item key={\"finance\"}  active={selectedTab==\"finance\"?true:false} action onClick={()=>changeTab(\"finance\")}>ITR Requests</ListGroup.Item>\r\n                        <ListGroup.Item key={\"form16\"}  active={selectedTab==\"form16\"?true:false} action onClick={()=>changeTab(\"form16\")}>Form16 Requests</ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={9} className=\"p-4 production-col\" >\r\n                    <Loader show={isShowLoader}/>\r\n                    \r\n                    <CategoryManagement changeTab={changeTab} selectedTab={selectedTab} showLoader={showLoader}/>\r\n                    <ProductManagement changeTab={changeTab} selectedTab={selectedTab} showLoader={showLoader}/>\r\n                    <OrderHistory  selectedTab={selectedTab} showLoader={showLoader}/>\r\n                    <AddCategory changeTab={changeTab} selectedTab={selectedTab} showLoader={showLoader}/>\r\n                    <AddProduct changeTab={changeTab} selectedTab={selectedTab} showLoader={showLoader}/>\r\n                    <EditProduct changeTab={changeTab} selectedTab={selectedTab} showLoader={showLoader}/>\r\n                    <FinanceRequests changeTab={changeTab} selectedTab={selectedTab} showLoader={showLoader}/>\r\n                    <Form16Requests changeTab={changeTab} selectedTab={selectedTab} showLoader={showLoader}/>\r\n\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    </>\r\n)\r\n}\r\n\r\nexport default Home\r\n","import React,{useEffect,useState} from 'react'\r\nimport agent from '../../agent'\r\nimport {useHistory} from 'react-router-dom';\r\nimport { Table, Nav, Pagination,Button,Modal } from 'react-bootstrap';\r\n\r\nfunction UserOrderHistory(props) {\r\n    useEffect(() => {\r\n        getOrders()\r\n  },[])\r\n  const [orderHistory, setorderHistory] = useState([])\r\n  const [selectedorder,setselectedorder] = useState([]);\r\n  const [isopenpopup, setisopenpopup] = useState(false)\r\n  const handleClose = () => setisopenpopup(false);\r\n\r\n  const viewOrderPopUp = (record)=>{\r\n      setselectedorder(record);\r\n      setisopenpopup(true);\r\n  }\r\n  let history = useHistory();\r\n  const getOrders =()=>{\r\n      props.showLoader(true);\r\n      agent.Order.getOrderHistoryByUserEmail().then((res=>{\r\n          props.showLoader(false);\r\n          console.log(res.body.record)\r\n\r\n          setorderHistory(res.body.record);\r\n      }),(err)=>{\r\n          console.log(err.response.body.message);\r\n          if(err.response.body.message ==\"jwt must be provided\"){\r\n              console.log(\"login required\");\r\n            history.push(\"/login\");\r\n          }\r\n          props.showLoader(false);\r\n\r\n      });\r\n  }\r\n\r\n    return (\r\n        <>\r\n        <Table responsive>\r\n        <thead>\r\n            <tr>\r\n                <th>#</th>\r\n                <th>Customer</th>\r\n                <th>Date</th>\r\n                <th>Details</th>\r\n                <th>Number</th>\r\n                <th>Action</th>\r\n\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            {orderHistory.map((record,index)=>\r\n            <tr>\r\n                <td>{index+1}</td>\r\n                <td>{record.shipping.name}</td>\r\n                <td>{record.datePlaced}</td>\r\n                <td>{record.items.map(itm=><span>{itm.item.title} Quantity:{itm.quantity}<br></br></span>)}</td>\r\n                <td>{record.shipping.phone}</td>\r\n\r\n                <td>\r\n                    <Button type=\"button\" onClick={()=>viewOrderPopUp(record)}>View</Button>\r\n                </td>\r\n            </tr>\r\n\r\n            )}\r\n        </tbody>\r\n    </Table>\r\n    <Modal show={isopenpopup} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Order Details</Modal.Title>\r\n        </Modal.Header>\r\n            <Modal.Body>\r\n                <Table striped bordered hover responsive>\r\n                    <thead><tr><td colSpan=\"4\"><h4>Shipping Details</h4></td></tr></thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td><b>Name:</b> {selectedorder?.shipping?.name}</td>\r\n                            <td><b>Address:</b> {selectedorder?.shipping?.address}</td>\r\n                            <td><b>Phone:</b> {selectedorder?.shipping?.phone}</td>\r\n                            <td><b>City:</b> {selectedorder?.shipping?.city}</td>\r\n\r\n                        </tr>\r\n                    </tbody>\r\n                </Table>\r\n                <Table striped bordered hover responsive>\r\n                    <thead><tr><td colSpan=\"4\"><h4>Products</h4></td></tr></thead>\r\n                    <tbody>{selectedorder?.items?.map(itm=><tr>\r\n                    <td><b>Title:</b> {itm.item.title}</td>\r\n                    <td><b>Description:</b> {itm.item.description}</td>\r\n                    <td><b>Quantity:</b> {itm.quantity}</td>\r\n                    <td><b>Total Price:</b> {parseInt(itm.quantity)*itm.perItemPrice}</td>\r\n                    </tr>)}\r\n                    </tbody>\r\n                </Table>\r\n\r\n                <Table striped bordered hover responsive>\r\n                <thead><tr><td colSpan=\"4\"><h4>Bill Details</h4></td></tr></thead>\r\n                    <tbody>\r\n                        {selectedorder.isDiscountApplied?<tr>\r\n                            <td>\r\n                                <b>\r\n                                Prime Member Discount:\r\n                                </b>\r\n                            </td>\r\n                            <td>10%</td>\r\n                        </tr>:\"\"}\r\n                        <tr>\r\n                            <td>\r\n                                <b>Total Bill Amount</b>\r\n                            </td>\r\n                            <td>{selectedorder.totalBillAmount}</td>\r\n                        </tr>\r\n                    </tbody>\r\n\r\n                </Table>\r\n\r\n            </Modal.Body>\r\n      </Modal>\r\n\r\n    </>\r\n)\r\n}\r\n\r\nexport default UserOrderHistory\r\n","import React,{useState} from 'react'\r\nimport { ListGroup, Container, Row, Col, Card, Button, CardColumns,Toast,Alert } from 'react-bootstrap';\r\n// import CategoryManagement from '../Admin/CategoryManagement';\r\nimport Loader from '../../layout/Loader';\r\nimport UserOrderHistory from '../UserOrderHistory';\r\nfunction UserAction(props) {\r\n\r\nconst [isShowLoader, setisShowLoader] = useState(false)\r\nconst showLoader =(value)=>{\r\n    setisShowLoader(value);\r\n}\r\nreturn (\r\n    <>\r\n    <Container fluid>\r\n        <Row>\r\n            <Col md={3} className=\"p-4\">\r\n                <ListGroup>\r\n                    {/* <ListGroup.Item  active action>Category Management</ListGroup.Item>\r\n                    <ListGroup.Item  action>Product Management</ListGroup.Item> */}\r\n                    <ListGroup.Item  action active>Order History</ListGroup.Item>\r\n                    {/* <ListGroup.Item  action>Finance</ListGroup.Item> */}\r\n                </ListGroup>\r\n            </Col>\r\n            <Col md={9} className=\"p-4 production-col\" >\r\n                <Loader show={isShowLoader}/>\r\n                {/* <CategoryManagement showLoader={showLoader}/> */}\r\n                <UserOrderHistory showLoader={showLoader}/>\r\n            </Col>\r\n        </Row>\r\n    </Container>\r\n</>\r\n)\r\n\r\n}\r\nexport default UserAction\r\n","import React from 'react'\r\nimport { Alert, Button} from 'react-bootstrap';\r\nimport {useDispatch } from \"react-redux\";\r\nimport orderR from '../../reducers/order';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction OrderFailed() {\r\n    // const [show, setShow] = useState(true);\r\n    return (\r\n      <>\r\n        <Alert show={true} className=\"login-div\">\r\n          <Alert.Heading>Filed!</Alert.Heading>\r\n          <p>\r\nSomething went wrong to place order. Please try again.\r\n          </p>\r\n          <hr />\r\n          <div className=\"d-flex justify-content-end\">\r\n              <Link to=\"/placeOrder\">\r\n              <Button variant=\"danger\">\r\n              Ok\r\n            </Button>\r\n\r\n              </Link>\r\n          </div>\r\n        </Alert>\r\n      </>\r\n    );\r\n}\r\n\r\nexport default OrderFailed\r\n","import {API_ROOT} from \"./BaseUrl\"\r\nimport axios from \"./interceptor-middleware\";\r\n//const url = '/memberGroups/';\r\n\r\nconst MemberGroupModel = {\r\n  getMemberGroups(){\r\n    return axios.get(`${API_ROOT}/memberGroups/entry`)\r\n  },\r\n  saveMemberGroups(data){\r\n    return axios.post(`${API_ROOT}/memberGroups/entry`,data)\r\n  }\r\n  }\r\n    export default {MemberGroupModel};","import React, { useEffect, useState } from 'react';\r\nimport { Table, Button,ProgressBar } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport masterRecord from '../../../models/masterRecord';\r\nimport moment from 'moment';\r\nfunction MemberGroup(props) {\r\n    const [isShowLoader, setisShowLoader] = useState(0)\r\n    const [memberGroupRecords, setMemberGroupsRecords] = useState([]);\r\n    useEffect(() => {\r\n        setisShowLoader(10);\r\n        getMemberGroup();\r\n    }, [])\r\n\r\n    const getMemberGroup = () => {\r\n        setisShowLoader(30);\r\n        masterRecord.MemberGroupModel.getMemberGroups().then(res => {\r\n            setisShowLoader(90);\r\n            if (res.statusCode == 200) {\r\n                setMemberGroupsRecords(res.body.message);\r\n            } else {\r\n                setMemberGroupsRecords([]);\r\n            }\r\n            setisShowLoader(100);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div class=\"content\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-12\">\r\n                        <Link to=\"/addMemberGroup\">\r\n                            <Button variant=\"info\" active>\r\n                                <i className=\"nc-icon nc-simple-add mr-2\"></i>\r\n                                Member Group\r\n                            </Button>\r\n                        </Link>\r\n\r\n                        <div class=\"card\">\r\n                            <div class=\"card-body\">\r\n                                <div class=\"table-responsive\">\r\n                                    <Table className=\" table\">\r\n                                        \r\n                                        <thead className=\"bg-primary\">\r\n                                            <tr>\r\n                                                <th>Group Code</th>\r\n                                                <th>Name</th>\r\n                                                <th>Remark</th>\r\n                                                <th>Created At</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {memberGroupRecords.map((group, id) => (<tr>\r\n                                                <td>{group.group_code}</td>\r\n                                                <td>{group.group_name}</td>\r\n                                                <td>{group.remark}</td>\r\n                                                <td>{moment(group.created_at).format(\"DD-MM-YYYY HH:SS\")}</td>\r\n                                            </tr>))}\r\n                                        </tbody>\r\n                                    </Table>\r\n                                    {isShowLoader<100?<div style={{ top: '50%',position:\"relative\" }}><ProgressBar style={{\"position\":\"relative\",\"width\":\"30%\",\"left\":\"40%\"}} striped variant=\"success\" now={isShowLoader} label={`${isShowLoader}%`} /></div>:\"\"}\r\n                                    \r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default MemberGroup;","import React, { useState } from 'react';\r\nimport { Button, Form, Container, Row, Col, Toast,Alert } from 'react-bootstrap';\r\nimport { useFormik } from 'formik';\r\nimport masterRecord from '../../../models/masterRecord';\r\nimport Loader from '../../layout/Loader';\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction AddMemberGroup(props) {\r\n  const auth = useSelector(state => state.auth);\r\n  const [values, setValues] = useState({});\r\n  const [isShowLoader, setisShowLoader] = useState(false)\r\n  const [showToast, setShowToast] = useState({ isShow: false, type: \"\", message: \"\" })\r\n\r\n  const handleAlertShow=(obj)=>{\r\n      setShowToast(obj);\r\n      setTimeout(() => { \r\n        setShowToast({ isShow: false, type: \"\", message: \"\" })\r\n    }, 2000);\r\n  }\r\n  const validate = values => {\r\n    const errors = {};\r\n    if (!values.group_code) {\r\n      errors.group_code = 'Group Code is Required';\r\n    }\r\n    return errors;\r\n  };\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      group_code: '',\r\n      group_name: '',\r\n      remark: '',\r\n      user_id: auth.id\r\n    },\r\n    validate,\r\n    onSubmit: async (values) => {\r\n      setisShowLoader(true);\r\n      try {\r\n        let response = await masterRecord.MemberGroupModel.saveMemberGroups(values);\r\n        setisShowLoader(false);\r\n        if (response.statusCode == 200) {\r\n          handleAlertShow({ isShow: true, type: \"bg-success\", message: response.body.message })\r\n          formik.resetForm();\r\n        } else {\r\n          handleAlertShow({ isShow: true, type: \"bg-danger\", message: response.body.message })\r\n\r\n        }\r\n\r\n      } catch (error) {\r\n        setisShowLoader(false);\r\n        handleAlertShow({ isShow: true, type: \"bg-danger\", message: error.response.body.message })\r\n      }\r\n    },\r\n    handleChange: () => {\r\n      setValues(prevValues => ({\r\n        ...prevValues,\r\n        // we use the name to tell Formik which key of `values` to update\r\n        [values.target.name]: values.target.value\r\n      }))\r\n    },\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div class=\"content\">\r\n        {/* <Toast key={1} autohide delay={3000} show={showToast.isShow} onClose={() => setShowToast({ isShow: false, type: \"\", message: \"\" })} className={\"loader \" + (showToast.type)} >\r\n          <Toast.Header>\r\n            <strong className=\"me-auto\">{showToast.type == \"bg-danger\" ? \"Error\" : \"Success\"} Message</strong>\r\n          </Toast.Header>\r\n          <Toast.Body className=\"Dark\">\r\n            {showToast.message}\r\n          </Toast.Body>\r\n        </Toast> */}\r\n        <Alert dismissible delay={3000} show={showToast.isShow} onClose={() => setShowToast({ isShow: false, type: \"\", message: \"\" })} key={showToast.type == \"bg-danger\" ? \"danger\" : \"success\"} variant={showToast.type == \"bg-danger\" ? \"danger\" : \"success\"}>\r\n        {showToast.message}\r\n        </Alert>\r\n        <Loader show={isShowLoader} />\r\n        <div class=\"row\">\r\n          <div class=\"col-md-8\">\r\n            <div class=\"card card-user\">\r\n              <div class=\"card-header\">\r\n                <h5 class=\"card-title\">Add Member Group</h5>\r\n              </div>\r\n              <div class=\"card-body\">\r\n                <Form onSubmit={formik.handleSubmit}>\r\n                  <Form.Group className=\"mb-3 form-group required\" controlId=\"formBasicEmail\">\r\n                    <Form.Label>Group Code</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      name=\"group_code\"\r\n                      placeholder=\"Enter group code\"\r\n                      onChange={formik.handleChange}\r\n                      value={formik.values.group_code}\r\n\r\n                    />\r\n                    {formik.touched.group_code && formik.errors.group_code ? (\r\n                      <div class=\"text-danger\">{formik.errors.group_code}</div>\r\n                    ) : null}\r\n\r\n                  </Form.Group>\r\n\r\n                  <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                    <Form.Label>Group Name</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      name=\"group_name\"\r\n                      placeholder=\"Enter group name\"\r\n                      onChange={formik.handleChange}\r\n                      value={formik.values.group_name}\r\n                    />\r\n                  </Form.Group>\r\n\r\n                  <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                    <Form.Label>Remark</Form.Label>\r\n                    <Form.Control as=\"textarea\" rows={3} name=\"remark\"\r\n                      onChange={formik.handleChange}\r\n                      value={formik.values.remark} />\r\n                  </Form.Group>\r\n                  <Button variant=\"primary\" type=\"submit\">\r\n                    Save\r\n                  </Button>\r\n\r\n                </Form>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </>\r\n\r\n  );\r\n}\r\n\r\nexport default AddMemberGroup;","import {requests, superagent, API_ROOT} from \"./BaseUrl\"\r\n\r\n//const url = '/memberGroups/';\r\n\r\nconst MemberDetailModel = {\r\n  getMemberDetailsData(member_id=\"all\"){\r\n    return superagent.get(`${API_ROOT}/member/entry/${member_id}`)\r\n  },\r\n  saveMemberDetails(data){\r\n    return superagent.post(`${API_ROOT}/member/entry`,data)\r\n\r\n  },\r\n  deleteMember(id){\r\n    return superagent.del(`${API_ROOT}/member/entry/${id}`)\r\n  },  \r\n  editMember(data,id){\r\n    return superagent.put(`${API_ROOT}/member/entry/${id}`,data)\r\n  }  \r\n    \r\n  }\r\n    export default {MemberDetailModel};","import React, { useState, useEffect } from 'react';\r\nimport { Button, Form, Container, Row, Col, Alert } from 'react-bootstrap';\r\nimport DatePicker from \"react-datepicker\";\r\nimport { useFormik } from 'formik';\r\nimport memberDetails from \"../../../models/memberDetails\"\r\nimport masterRecord from '../../../models/masterRecord';\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport Loader from '../../layout/Loader';\r\n\r\n//import \"react-datepicker/dist/react-datepicker.css\";\r\nfunction AddMember(props) {\r\n    const auth = useSelector(state => state.auth);\r\n    let history = useHistory();\r\n\r\n    const [enrollmentDate, setEnrollmentDate] = useState(new Date());\r\n    const [dob, setDob] = useState();\r\n\r\n    const [values, setValues] = useState({});\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [groups, setGroups] = useState([])\r\n    const [showToast, setShowToast] = useState({ isShow: false, type: \"\", message: \"\" })\r\n    useEffect(() => {\r\n        console.log(props);\r\n        if (props.location.state)\r\n            getMemberDetails(props.location.state);\r\n        getMemberGroups();\r\n    }, [])\r\n    const getMemberGroups = async () => {\r\n        try {\r\n            setisShowLoader(true);\r\n            let response = await masterRecord.MemberGroupModel.getMemberGroups();\r\n            setisShowLoader(false);\r\n            setGroups(response.body.message)\r\n        } catch (error) {\r\n            setisShowLoader(false);\r\n            setShowToast({ isShow: true, type: \"bg-danger\", message: error.response.body.message })\r\n        }\r\n    }\r\n    const getMemberDetails = async (member_id) => {\r\n        try {\r\n            setisShowLoader(true);\r\n            let response = await memberDetails.MemberDetailModel.getMemberDetailsData(member_id);\r\n            console.log(response);\r\n            formik.values.aadhar_number = response.body.message[0].aadhar_number\r\n            formik.values.member_name = response.body.message[0].member_name\r\n            formik.values.gender = response.body.message[0].gender\r\n            formik.values.age = response.body.message[0].age\r\n            formik.values.marital_status = response.body.message[0].marital_status\r\n            formik.values.mobile_number = response.body.message[0].mobile_number\r\n            formik.values.email_id = response.body.message[0].email_id\r\n            formik.values.member_group_id = response.body.message[0].member_group_id\r\n            formik.values.pan_card_number = response.body.message[0].pan_card_number\r\n            formik.values.driving_license_number = response.body.message[0].driving_license_number\r\n            formik.values.voter_id_number = response.body.message[0].voter_id_number\r\n            formik.values.ration_card_number = response.body.message[0].ration_card_number\r\n            formik.values.bank_account = response.body.message[0].bank_account\r\n            formik.values.bank_ifsc_code = response.body.message[0].bank_ifsc_code\r\n            formik.values.bank_account_holder = response.body.message[0].bank_account_holder\r\n            formik.values.enrollment_date = response.body.message[0].enrollment_date\r\n            setEnrollmentDate(new Date(response.body.message[0].enrollment_date));\r\n            formik.values.date_of_birth = response.body.message[0].date_of_birth\r\n            setDob(new Date(response.body.message[0].date_of_birth));\r\n\r\n            setisShowLoader(false);\r\n            //setGroups(response.body.message)\r\n        } catch (error) {\r\n            setisShowLoader(false);\r\n            setShowToast({ isShow: true, type: \"bg-danger\", message: error.response.body.message })\r\n        }\r\n\r\n    }\r\n    const validate = values => {\r\n        window.scrollTo(0, 0);\r\n        const errors = {};\r\n        if (!values.member_name) {\r\n            errors.member_name = 'Please provide member name';\r\n        }\r\n        return errors;\r\n    };\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            enrollment_date: enrollmentDate,\r\n            date_of_birth: dob,\r\n            member_name: '',\r\n            gender: \"\",\r\n            age: \"\",\r\n            marital_status: \"\",\r\n            mobile_number: \"\",\r\n            email_id: \"\",\r\n            member_group_id: \"\",\r\n            aadhar_number: \"\",\r\n            pan_card_number: \"\",\r\n            driving_license_number: \"\",\r\n            voter_id_number: \"\",\r\n            ration_card_number: \"\",\r\n            bank_account: \"\",\r\n            bank_ifsc_code: \"\",\r\n            bank_account_holder: \"\",\r\n            user_id: auth.id\r\n        },\r\n        validate,\r\n        onSubmit: async (values) => {\r\n            setisShowLoader(true);\r\n            window.scrollTo(0, 0);\r\n            try {\r\n                values.enrollment_date = enrollmentDate;\r\n                values.date_of_birth = dob;\r\n                let response = [];\r\n                if (props.location.state) {\r\n                    response = await memberDetails.MemberDetailModel.editMember(values, props.location.state);\r\n\r\n                } else {\r\n                    response = await memberDetails.MemberDetailModel.saveMemberDetails(values);\r\n                }\r\n                setisShowLoader(false);\r\n                if (response.statusCode == 200) {\r\n                    formik.resetForm();\r\n                    if (props.location.state)\r\n                        history.push(\"/member\")\r\n                    setShowToast({ isShow: true, type: \"bg-success\", message: response.body.message })\r\n                } else {\r\n                    setShowToast({ isShow: true, type: \"bg-danger\", message: response.body.message })\r\n                }\r\n\r\n            } catch (error) {\r\n                console.log(error.response.body.message);\r\n                setisShowLoader(false);\r\n                setShowToast({ isShow: true, type: \"bg-danger\", message: error.response.body.message })\r\n            }\r\n        }\r\n    });\r\n    return (\r\n        <>\r\n\r\n            <div class=\"content\">\r\n                <Alert dismissible delay={3000} show={showToast.isShow} onClose={() => setShowToast({ isShow: false, type: \"\", message: \"\" })} key={showToast.type == \"bg-danger\" ? \"danger\" : \"success\"} variant={showToast.type == \"bg-danger\" ? \"danger\" : \"success\"}>\r\n                    {showToast.message}\r\n                </Alert>\r\n\r\n                <Loader show={isShowLoader} />\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-8\">\r\n                        <div class=\"card card-user\">\r\n                            <div class=\"card-header\">\r\n                                <h5 class=\"card-title\">Add Member</h5>\r\n                            </div>\r\n                            <div class=\"card-body\">\r\n\r\n                                <Form onSubmit={formik.handleSubmit}>\r\n                                    <Row className=\"mb-3\" >\r\n                                        <Form.Group as={Col} className=\"form-group required\" controlId=\"formGridEnroll\">\r\n                                            <Form.Label >Enrollment Date</Form.Label>\r\n                                            <DatePicker className=\"form-control\"\r\n                                                selected={enrollmentDate}\r\n                                                onChange={(date) => setEnrollmentDate(date)}\r\n                                                name=\"enrollment_date\"\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Col} className=\"form-group required\" controlId=\"formGridName\">\r\n                                            <Form.Label >Member Name</Form.Label>\r\n                                            <Form.Control type=\"text\"\r\n                                                placeholder=\"member name\"\r\n                                                name=\"member_name\"\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.member_name}\r\n\r\n                                            />\r\n                                            {formik.touched.member_name && formik.errors.member_name ? (\r\n                                                <div class=\"text-danger\">{formik.errors.member_name}</div>\r\n                                            ) : null}\r\n                                        </Form.Group>\r\n                                    </Row>\r\n                                    <Row className=\"mb-3\" >\r\n                                        <Form.Group as={Col} controlId=\"formGriddob\">\r\n                                            <Form.Label>Date of Birth</Form.Label>\r\n                                            <DatePicker\r\n                                                className=\"form-control\"\r\n                                                selected={dob}\r\n                                                onChange={(date) => setDob(date)}\r\n                                                name=\"date_of_birth\"\r\n                                            />\r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} className=\"mb-3\" controlId=\"formGridAddress1\">\r\n                                            <Form.Label>Gender</Form.Label>\r\n                                            <select\r\n                                                className=\"form-control\"\r\n                                                name=\"gender\"\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.gender}\r\n                                            >\r\n                                                <option key=\"\" value=\"\">Select Gender</option>\r\n\r\n                                                <option key=\"male\" value=\"male\">Male</option>\r\n                                                <option key=\"female\" value=\"female\">Female</option>\r\n\r\n                                            </select>\r\n                                        </Form.Group>\r\n\r\n                                    </Row>\r\n                                    <Row className=\"mb-3\" >\r\n                                        <Form.Group as={Col} controlId=\"formGridAge\">\r\n                                            <Form.Label>Age</Form.Label>\r\n                                            <Form.Control\r\n                                                name=\"age\"\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.age}\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Col} controlId=\"formGridState\">\r\n                                            <Form.Label>Marital Status</Form.Label>\r\n                                            <Form.Control\r\n                                                name=\"marital_status\"\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.marital_status}\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                    </Row>\r\n\r\n                                    <Row className=\"mb-3\" >\r\n                                        <Form.Group as={Col} controlId=\"formGridAge\">\r\n                                            <Form.Label>Phone number</Form.Label>\r\n                                            <Form.Control\r\n                                                name=\"mobile_number\"\r\n                                                type=\"number\"\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.mobile_number}\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Col} controlId=\"formGridState\">\r\n                                            <Form.Label>Email</Form.Label>\r\n                                            <Form.Control\r\n                                                name=\"email_id\"\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.email_id}\r\n                                                type=\"text\"\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                    </Row>\r\n                                    <Row className=\"mb-3\">\r\n                                        <Form.Group as={Col} md={6} className=\"mb-3\" controlId=\"formGridAddress1\">\r\n                                            <Form.Label>Member Group</Form.Label>\r\n                                            <select className=\"form-control\" name=\"member_group_id\" onChange={formik.handleChange}\r\n                                                value={formik.values.member_group_id}\r\n                                            >\r\n                                                <option key=\"\" value=\"\">Select Member Group</option>\r\n                                                {groups.map((group, id) => (\r\n                                                    <option key={group.group_code} value={group.group_code}>{group.group_code}</option>\r\n                                                ))}\r\n                                            </select>\r\n                                        </Form.Group>\r\n\r\n                                    </Row>\r\n                                    <Row className=\"mb-3\">\r\n                                        <Col>\r\n                                            <h3 className=\"text-info\">KYC Information</h3>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row className=\"mb-3\" >\r\n                                        <Form.Group as={Col} controlId=\"formGridAge\">\r\n                                            <Form.Label>Aadhar no.</Form.Label>\r\n                                            <Form.Control\r\n                                                name=\"aadhar_number\"\r\n                                                type=\"number\"\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.aadhar_number}\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Col} controlId=\"formGridState\">\r\n                                            <Form.Label>PAN</Form.Label>\r\n                                            <Form.Control\r\n                                                name=\"pan_card_number\"\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.pan_card_number}\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                    </Row>\r\n                                    <Row className=\"mb-3\" >\r\n                                        <Form.Group as={Col} controlId=\"formGridAge\">\r\n                                            <Form.Label>Driving Licence No.</Form.Label>\r\n                                            <Form.Control\r\n                                                name=\"driving_license_number\"\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.driving_license_number}\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Col} controlId=\"formGridState\">\r\n                                            <Form.Label>Voter Id No.</Form.Label>\r\n                                            <Form.Control\r\n                                                name=\"voter_id_number\"\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.voter_id_number}\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                    </Row>\r\n                                    <Row className=\"mb-3\" >\r\n                                        <Form.Group as={Col} md={6} controlId=\"formGridAge\">\r\n                                            <Form.Label>Ration Card No.</Form.Label>\r\n                                            <Form.Control\r\n                                                name=\"ration_card_number\"\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.ration_card_number}\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                    </Row>\r\n\r\n                                    <Row className=\"mb-3\">\r\n                                        <Col>\r\n                                            <h3 className=\"text-info\">Bank Details</h3>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row className=\"mb-3\" >\r\n                                        <Form.Group as={Col} controlId=\"formGridAge\">\r\n                                            <Form.Label>Bank Account No.</Form.Label>\r\n                                            <Form.Control\r\n                                                name=\"bank_account\"\r\n                                                type=\"number\"\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.bank_account}\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Col} controlId=\"formGridState\">\r\n                                            <Form.Label>IFSC code</Form.Label>\r\n                                            <Form.Control\r\n                                                name=\"bank_ifsc_code\"\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.bank_ifsc_code}\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                    </Row>\r\n                                    <Row className=\"mb-3\" >\r\n                                        <Form.Group as={Col} md={6} controlId=\"formGridAge\">\r\n                                            <Form.Label>Account holder name</Form.Label>\r\n                                            <Form.Control\r\n                                                name=\"bank_account_holder\"\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.bank_account_holder}\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n\r\n                                    </Row>\r\n\r\n                                    <Button variant=\"primary\" type=\"submit\">\r\n                                        Save\r\n                                    </Button>\r\n                                </Form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AddMember;","import React, { useEffect, useState, useMemo } from 'react';\r\nimport { Table,Button,Modal,Pagination,ProgressBar } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport memberRecord from '../../../models/memberDetails';\r\nimport moment from 'moment';\r\nimport {useTable,useSortBy,usePagination,useFilters } from 'react-table'\r\nimport { useHistory } from 'react-router-dom';\r\nfunction Members(props) {\r\n    let history = useHistory();\r\n    const [isShowLoader, setisShowLoader] = useState(0)\r\n    const [showDeleteModel, setShowDeleteModel] = useState(false)\r\n    const [deleteID, setDeleteID] = useState(0)\r\n    const [memberRecords,setMemberRecords]=useState([]);\r\n    useEffect(() => {\r\n        setisShowLoader(10);\r\n        getMemberGroup();\r\n    },[])\r\n    \r\n    const data = useMemo(\r\n        () => \r\n        memberRecords.map((record,index)=>\r\n                { \r\n             return {\r\n                col1:moment(record.enrollment_date).format('DD-MM-yyy hh:ss A'),\r\n                col2:record.member_name,\r\n                col3:record.member_group_id,\r\n                col4:record.mobile_number,\r\n                col5:record\r\n                }\r\n            }\r\n        )\r\n        ,\r\n        [memberRecords]\r\n      )   \r\n\r\n    const columns = useMemo(\r\n        () => [\r\n          {\r\n            Header: 'Enrollment Date',\r\n            accessor: 'col1', // accessor is the \"key\" in the data\r\n            allowFilter:true\r\n          },\r\n          {\r\n            Header: 'Member Name',\r\n            accessor: 'col2',\r\n            allowFilter:true\r\n          },\r\n          {\r\n            Header: 'Member Group Code',\r\n            accessor: 'col3',\r\n            allowFilter:true\r\n            },\r\n          {\r\n            Header: 'Mobile Number',\r\n            accessor: 'col4',\r\n            allowFilter:true\r\n          },\r\n          {\r\n            Header: 'Action',\r\n            accessor: 'col5',\r\n            allowFilter:false\r\n          }\r\n\r\n        ],\r\n        []\r\n      )    \r\n\r\n    const getMemberGroup = () =>{\r\n        setisShowLoader(30);\r\n        memberRecord.MemberDetailModel.getMemberDetailsData().then(res=>{\r\n            setisShowLoader(90);\r\n            if(res.statusCode == 200){\r\n                setMemberRecords(res.body.message);\r\n            }else{\r\n                setMemberRecords([]);\r\n            }\r\n            setisShowLoader(100);\r\n        })\r\n       \r\n    }\r\n    const deleteHandle=(id)=>{\r\n        setDeleteID(id);        \r\n        setShowDeleteModel(true);\r\n    }\r\n    const deleteMember=async()=>{\r\n        setShowDeleteModel(false);\r\n        let initialData = [...memberRecords];\r\n        setMemberRecords([]);\r\n        try{\r\n            setisShowLoader(30);\r\n            let response = await memberRecord.MemberDetailModel.deleteMember(deleteID);\r\n            setisShowLoader(90);\r\n            if(response.statusCode == 200){\r\n                let UpdatedList = initialData.filter((member,idx)=>member.member_id!=deleteID);\r\n                setMemberRecords(UpdatedList);\r\n             }\r\n             setisShowLoader(100);\r\n        }catch (error) {\r\n                console.log(error.response.body.message);\r\n                setisShowLoader(100);\r\n            }\r\n              \r\n    }\r\n  \r\n    function DefaultColumnFilter({\r\n        column: { filterValue, preFilteredRows, setFilter },\r\n    }) {\r\n        const count = preFilteredRows.length\r\n    \r\n        return (\r\n            <input\r\n                className=\"form-control\"\r\n                value={filterValue || ''}\r\n                onChange={e => {\r\n                    setFilter(e.target.value || undefined)\r\n                }}\r\n                placeholder={`Search ${count} records...`}\r\n            />\r\n        )\r\n    }    \r\n    const defaultColumn = React.useMemo(\r\n        () => ({\r\n            // Default Filter UI\r\n            Filter: DefaultColumnFilter,\r\n        }),\r\n        []\r\n    ) \r\n    const paginate = (totalPage)=>{\r\n      let pageNumberArray = [];\r\n      for(let i=1;i<=totalPage;i++){\r\n        pageNumberArray.push(i);\r\n      }\r\n      return(      \r\n      <Pagination>\r\n        <Pagination.First  onClick={() => gotoPage(0)}/>\r\n        <Pagination.Prev onClick={() => previousPage()} disabled={!canPreviousPage}/>\r\n        {pageNumberArray.map(num=><Pagination.Item key={num} active={num === (pageIndex+1)} onClick={() => gotoPage(num-1)}>{num}</Pagination.Item>)}\r\n        <Pagination.Next onClick={() => nextPage()} disabled={!canNextPage}/>\r\n        <Pagination.Last onClick={() => gotoPage(totalPage-1)}/>\r\n        </Pagination>\r\n      );\r\n    \r\n    }\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n        pageOptions,\r\n        page,\r\n        pageCount,\r\n        state: { pageIndex, pageSize },\r\n        gotoPage,\r\n        previousPage,\r\n        nextPage,\r\n        setPageSize,\r\n        canPreviousPage,\r\n        canNextPage,  \r\n      } = useTable({ columns, data, defaultColumn, initialState: { pageIndex: 0 }},useFilters,useSortBy,usePagination)\r\n    return (\r\n        <>\r\n      <Modal show={showDeleteModel} onHide={()=>setShowDeleteModel(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Delete Member</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>Are you sure?</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={()=>setShowDeleteModel(false)}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={()=>deleteMember()}>\r\n            Delete\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>        \r\n        {/* <Loader show={isShowLoader}/> */}\r\n        <div class=\"content\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-12\">\r\n                <Link to=\"/addMember\">\r\n                <Button variant=\"info\" active>\r\n                <i className=\"nc-icon nc-simple-add mr-2\"></i>\r\n                    Add Member\r\n                </Button>\r\n                </Link>\r\n                {/* </Col>\r\n            </Row>\r\n            <Row>\r\n            <Col> */}\r\n            <div className=\"text-right\">\r\n              {paginate(pageCount)}\r\n            </div>   \r\n            <div class=\"card\">\r\n                <div class=\"card-body\">\r\n                    <div class=\"table-responsive\">\r\n\r\n            <Table {...getTableProps()} className=\"table small\" >\r\n            <thead className=\"bg-primary\">\r\n                    {headerGroups.map(headerGroup => (\r\n                    <tr {...headerGroup.getHeaderGroupProps()}>\r\n                        {headerGroup.headers.map(column => (\r\n                        <th\r\n                            {...column.getHeaderProps(column.getSortByToggleProps())}\r\n                        >\r\n                            {column.render('Header')}\r\n                            <span>\r\n                            {column.isSorted ? (column.isSortedDesc ? ' 🔽' : ' 🔼') : ''}\r\n                            </span>\r\n                            <div>{column.allowFilter? column.render('Filter') : null}</div>\r\n                        </th>\r\n                        ))}\r\n                    </tr>\r\n                    ))}\r\n            </thead>\r\n            <tbody {...getTableBodyProps()}>\r\n\r\n                    {page.map(row => {\r\n                        prepareRow(row)\r\n                        return (\r\n                            <tr {...row.getRowProps()}>\r\n                            {row.cells.map(cell => {\r\n                                console.log(cell);\r\n                                if(cell.column.id !=\"col5\"){                                \r\n                                    return (\r\n                                        <td {...cell.getCellProps()}>\r\n                                            {cell.render('Cell')}\r\n                                        </td>\r\n                                        )\r\n                                    }else{\r\n                                        return (\r\n                                            <td>\r\n                                                <Button size={\"sm\"} variant=\"primary\"  onClick={()=>{history.push(\"/viewMemberDetail\",cell.value.member_id)}}>View</Button>\r\n                                                {' '}\r\n                                                <Button size={\"sm\"} variant=\"success\" onClick={()=>{history.push(\"/addMember\",cell.value.member_id)}} >Edit</Button>\r\n                                                {' '}\r\n                                                <Button size={\"sm\"} variant=\"danger\" onClick={()=>deleteHandle(cell.value.member_id)} >Delete</Button>\r\n                                            </td>\r\n                                        )\r\n                                    }\r\n                            })}\r\n                            </tr>\r\n                        )\r\n                        })}\r\n            </tbody>\r\n        </Table>\r\n        {isShowLoader<100?<div style={{ top: '50%',position:\"relative\" }}><ProgressBar style={{\"position\":\"relative\",\"width\":\"30%\",\"left\":\"40%\"}} striped variant=\"success\" now={isShowLoader} label={`${isShowLoader}%`} /></div>:\"\"}\r\n        </div></div></div>\r\n        <div className=\"text-right\">\r\n          {paginate(pageCount)}\r\n        </div>   \r\n        </div>\r\n        </div>\r\n        </div>\r\n        </>\r\n        );\r\n}\r\n\r\nexport default Members;","import React, { useEffect, useState } from 'react';\r\nimport { Table, Button, Container, Row, Col } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport memberRecord from '../../../models/memberDetails';\r\nimport Loader from '../../layout/Loader';\r\nimport moment from 'moment';\r\n\r\nfunction Members(props) {\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [memberRecords, setMemberRecords] = useState([]);\r\n    useEffect(() => {\r\n        console.log(props);\r\n        getMemberGroup();\r\n    }, [])\r\n\r\n    const getMemberGroup = () => {\r\n        setisShowLoader(true);\r\n        memberRecord.MemberDetailModel.getMemberDetailsData(props.location.state).then(res => {\r\n            setisShowLoader(false);\r\n            if (res.statusCode == 200) {\r\n                setMemberRecords(res.body.message[0]);\r\n            } else {\r\n                setMemberRecords([]);\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div class=\"content\">\r\n                <Loader show={isShowLoader} />\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-12\">\r\n                        <div class=\"card card-user\">\r\n                            {/* <div class=\"card-header\">\r\n                            <h5 class=\"card-title\">Member Detail - {memberRecords.member_name}</h5> */}\r\n                        <div class=\"image\">\r\n                            <img src=\"../assets/img/damir-bosnjak.jpg\" alt=\"...\"/>\r\n                        </div>\r\n                            <div class=\"card-body\">\r\n                                <div class=\"author\">\r\n                                    \r\n                                        <img class=\"avatar border-gray\" src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\" alt=\"...\" />\r\n                                        <h5 class=\"title\">{memberRecords.member_name}</h5>\r\n                                    \r\n                                    <p class=\"description\">\r\n                                        @{memberRecords.member_name}\r\n                                    </p>\r\n                                </div>\r\n                                <Table className=\"table\" >\r\n                                    <tbody>\r\n                                        <tr><th>Enrollment Date</th><td>{moment(memberRecords.enrollment_date).format(\"DD-MM-YYYY hh:ss A\")}</td> </tr>\r\n                                        {/* <tr><th>Member Name</th>  <td>{memberRecords.member_name}</td></tr> */}\r\n                                        <tr><th>Member Id</th>  <td>{memberRecords.member_id}</td></tr>\r\n                                        <tr> <th>Gender</th>  <td>{memberRecords.gender}</td></tr>\r\n                                        <tr><th>DOB</th>   <td>{moment(memberRecords.date_of_birth).format(\"DD-MM-YYYY\")} </td></tr>\r\n                                        <tr><th>Age</th> <td>{memberRecords.age}</td></tr>\r\n                                        <tr><th>Marital Status</th>  <td>{memberRecords.marital_status}</td></tr>\r\n                                        <tr><th>Mobile Number</th> <td>{memberRecords.mobile_number}</td></tr>\r\n                                        <tr><th>Email Id</th> <td>{memberRecords.email_id}</td></tr>\r\n                                        <tr> <th>Member Group Id</th>  <td>{memberRecords.member_group_id}</td></tr>\r\n                                        <tr> <th>Aadhar Number</th> <td>{memberRecords.aadhar_number}</td></tr>\r\n                                        <tr> <th>Driving License Number</th>  <td>{memberRecords.driving_license_number}</td></tr>\r\n                                        <tr> <th>Voter Id Number </th>  <td>{memberRecords.voter_id_number}</td></tr>\r\n                                        <tr>  <th>Ration Card Number</th> <td>{memberRecords.ration_card_number}</td></tr>\r\n                                        <tr> <th>PAN Number</th> <td>{memberRecords.pan_card_number}</td></tr>\r\n                                        <tr> <th>Bank Account no.</th> <td>{memberRecords.bank_account}</td></tr>\r\n                                        <tr> <th>IFSC Code</th> <td>{memberRecords.bank_ifsc_code}</td></tr>\r\n                                        <tr> <th>Bank Account Holder</th> <td>{memberRecords.bank_account_holder}</td></tr>\r\n\r\n                                    </tbody>\r\n                                </Table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* </div> */}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Members;","import moment from \"moment\"\r\nimport { requests, superagent, API_ROOT } from \"./BaseUrl\"\r\n//const url = '/memberGroups/';\r\n\r\nconst SchemeModel = {\r\n  getScheme() {\r\n    return superagent.get(`${API_ROOT}/scheme/entry`)\r\n  },\r\n  saveScheme(data) {\r\n    return superagent.post(`${API_ROOT}/scheme/entry`, data)\r\n  },\r\n  deleteScheme(id){\r\n    return superagent.del(`${API_ROOT}/scheme/entry/${id}`)\r\n  },  \r\n  getLoanAppInitialData(){\r\n      return [superagent.get(`${API_ROOT}/scheme/entry`),superagent.get(`${API_ROOT}/member/entry/all`)]\r\n  }\r\n\r\n}\r\nconst GroupLoanModel = {\r\n  applyForloan(data){\r\n    return superagent.post(`${API_ROOT}/groupLoan/applyGroupLoan`, data)\r\n  },\r\n  getApprovalList(){\r\n    return superagent.get(`${API_ROOT}/groupLoan/entry/pendingApproval`);\r\n  },\r\n  getDisburseList(){\r\n    return superagent.get(`${API_ROOT}/groupLoan/entry/pendingDisburse`);\r\n  },\r\n  getLoanDetailbyId(id){\r\n    return superagent.get(`${API_ROOT}/groupLoan/entry/${id}`);\r\n  },\r\n  approveRejectLoan(data){\r\n    return superagent.post(`${API_ROOT}/groupLoan/approveLoan`, data)\r\n  },\r\n  getAllLoanApplications(){\r\n    return superagent.get(`${API_ROOT}/groupLoan/entry/all`);\r\n  },\r\n  disburseRejectLoan(data){\r\n    return superagent.post(`${API_ROOT}/groupLoan/disburseLoan`, data)\r\n  },\r\n\r\n}\r\nconst EmiModel = {\r\n  calculateEMI(data){\r\n    return superagent.post(`${API_ROOT}/emis/calculateEMI`, data);\r\n  },\r\n  getDueEmis(today = moment().format(\"yyyy-MM-DD\")){\r\n    return superagent.get(`${API_ROOT}/emis/dueEMIs/${today}`);\r\n  },\r\n  paidEmi(id){\r\n    return superagent.put(`${API_ROOT}/emis/entry`,{\"id\":id});\r\n  },\r\n  getPaidEmis(loanAccountNo){\r\n    return superagent.get(`${API_ROOT}/emis/entry/${loanAccountNo}`);\r\n  }\r\n}\r\nexport default { SchemeModel,GroupLoanModel,EmiModel };","import React, { useEffect, useState } from 'react';\r\nimport { Table,Button, Container, Row, Col,Modal } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport groupLoan from '../../models/groupLoan';\r\nimport Loader from '../layout/Loader';\r\n\r\nfunction Scheme(props) {\r\n    const [showDeleteModel, setShowDeleteModel] = useState(false)\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [schemes,setSchemes]=useState([]);\r\n    const [deleteID, setDeleteID] = useState(0)\r\n    useEffect(() => {\r\n        getSchemes();\r\n    },[])\r\n\r\n    const getSchemes = () =>{\r\n        setisShowLoader(true);\r\n        groupLoan.SchemeModel.getScheme().then(res=>{\r\n            setisShowLoader(false);\r\n            if(res.statusCode == 200){\r\n                setSchemes(res.body.message);\r\n            }else{\r\n                setSchemes([]);\r\n            }\r\n        })\r\n    }\r\n    const  deleteHandle=(id)=>{\r\n        setDeleteID(id); \r\n        setShowDeleteModel(true);\r\n    }\r\n\r\n    const deleteScheme=async()=>{\r\n        setShowDeleteModel(false);\r\n        try{\r\n            setisShowLoader(true);\r\n            let response = await groupLoan.SchemeModel.deleteScheme(deleteID);\r\n            setisShowLoader(false);\r\n            if(response.statusCode == 200){\r\n                let UpdatedList = schemes.filter((scheme,idx)=>scheme.id!=deleteID);\r\n                setSchemes(UpdatedList);\r\n             }\r\n        }catch (error) {\r\n                console.log(error.response.body.message);\r\n                setisShowLoader(false);\r\n            }\r\n    }    \r\n    return (\r\n        <>\r\n      <Modal show={showDeleteModel} onHide={()=>setShowDeleteModel(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Delete Scheme</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>Are you sure?</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={()=>setShowDeleteModel(false)}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={()=>deleteScheme()}>\r\n            Delete\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>        \r\n        \r\n        <Loader show={isShowLoader}/>\r\n        <Container fluid>\r\n        <h2 className=\"text-info text-center\">Schemes</h2>\r\n            <Row className=\"mb-5 mt-3\">\r\n                <Col>\r\n                <Link to=\"/addScheme\">\r\n                <Button variant=\"info\" size=\"lg\" active>\r\n                    Add Scheme\r\n                </Button>\r\n                </Link>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n            <Col>\r\n            <Table className=\"shadow-lg p-3 mb-5 bg-white rounded\" striped bordered hover responsive>\r\n            <thead className=\"bg-primary\">\r\n                <tr>\r\n                    <th>Scheme code</th>\r\n                    <th>Scheme name</th>\r\n                    <th>Max amount</th>\r\n                    <th>Interest rate (%)</th>\r\n                    <th>EMI type</th>\r\n                    <th>Action</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {schemes.map((scheme,id)=>(<tr>\r\n                    <td>{scheme.scheme_code}</td>\r\n                    <td>{scheme.scheme_name}</td>\r\n                    <td>{scheme.max_amount}</td>\r\n                    <td>{scheme.interest_rate }%</td>\r\n                    <td>{scheme.EMI_type }</td>\r\n                    <td>\r\n                    <Button variant=\"danger\" size={\"sm\"} onClick={()=>deleteHandle(scheme.id)} className=\"ml-2\">Delete</Button>\r\n\r\n                    </td>\r\n                </tr>))}\r\n            </tbody>\r\n        </Table>\r\n</Col>\r\n            </Row>\r\n        </Container>\r\n        </>\r\n        );\r\n}\r\n\r\n\r\nexport default Scheme;","import React, { useState } from 'react';\r\nimport { Button, Form, Container, Row, Col, Toast } from 'react-bootstrap';\r\nimport { useFormik } from 'formik';\r\nimport groupLoan from '../../models/groupLoan';\r\nimport Loader from '../layout/Loader';\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction AddScheme(props) {\r\n  const auth = useSelector(state => state.auth);\r\n\r\n  const [values, setValues] = useState({});\r\n  const [isShowLoader, setisShowLoader] = useState(false)\r\n  const [showToast, setShowToast] = useState({ isShow: false, type: \"\", message: \"\" })\r\n  const validate = values => {\r\n    const errors = {};\r\n    if (!values.scheme_code) {\r\n      errors.scheme_code = 'Scheme code is Required!';\r\n    }\r\n    if (!values.scheme_name) {\r\n      errors.scheme_name = 'Scheme name is Required!';\r\n    }\r\n    if (!values.max_amount) {\r\n      errors.max_amount = 'Max amount is Required!';\r\n    }\r\n    if (!values.interest_rate) {\r\n      errors.interest_rate = 'Interest rate is Required!';\r\n    }\r\n    if (!values.EMI_type) {\r\n      errors.EMI_type = 'EMI type is Required!';\r\n    }\r\n    return errors;\r\n  };\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      scheme_code: '',\r\n      scheme_name: '',\r\n      max_amount: '',\r\n      interest_rate: '',\r\n      EMI_type: '',\r\n      user_id:auth.id\r\n    },\r\n    validate,\r\n    onSubmit: async (values) => {\r\n      setisShowLoader(true);\r\n        try {\r\n          let response = await groupLoan.SchemeModel.saveScheme(values);\r\n          setisShowLoader(false);\r\n          if (response.statusCode == 200) {\r\n            formik.resetForm();\r\n            setShowToast({ isShow: true,type:\"bg-success\", message: response.body.message })\r\n          } else {\r\n            setShowToast({ isShow: true,type:\"bg-danger\", message: response.body.message })\r\n          }\r\n\r\n        } catch (error) {\r\n          setisShowLoader(false);\r\n          setShowToast({ isShow: true,type:\"bg-danger\", message: error.response.body.message })\r\n        }\r\n    },\r\n    handleChange: () => {\r\n      setValues(prevValues => ({\r\n        ...prevValues,\r\n        // we use the name to tell Formik which key of `values` to update\r\n        [values.target.name]: values.target.value\r\n      }))\r\n    },\r\n  });\r\n  return (\r\n    <>\r\n      <Toast key={1} autohide delay={3000} show={showToast.isShow} onClose={() => setShowToast({ isShow: false,type:\"\", message: \"\" })} className={\"loader \"+ (showToast.type) } >\r\n        <Toast.Header>\r\n          <strong className=\"me-auto\">{showToast.type==\"bg-danger\"?\"Error\":\"Success\"} Message</strong>\r\n        </Toast.Header>\r\n        <Toast.Body className=\"Dark\">\r\n        {showToast.message}\r\n        </Toast.Body>\r\n      </Toast>\r\n      <Loader show={isShowLoader} />\r\n      <h2 className=\"text-info text-center\">Add Scheme</h2>\r\n      <Container fluid className=\"bg-white mt-5 shadow-lg p-3 mb-5 bg-white rounded\">\r\n        <Form onSubmit={formik.handleSubmit}>\r\n          <Row className=\"mb-3\" >\r\n            <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n              <Form.Label>Scheme Code</Form.Label>\r\n              <Form.Control\r\n                name=\"scheme_code\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.scheme_code}\r\n              />\r\n                {formik.touched.scheme_code && formik.errors.scheme_code ? (\r\n                  <div class=\"text-danger\">{formik.errors.scheme_code}</div>\r\n                ) : null}              \r\n            </Form.Group>\r\n            <Form.Group as={Col} controlId=\"formGriddob\">\r\n              <Form.Label>Scheme Name</Form.Label>\r\n              <Form.Control\r\n                name=\"scheme_name\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.scheme_name}\r\n              />\r\n                {formik.touched.scheme_name && formik.errors.scheme_name ? (\r\n                  <div class=\"text-danger\">{formik.errors.scheme_name}</div>\r\n                ) : null}              \r\n\r\n            </Form.Group>\r\n\r\n          </Row>\r\n          <Row className=\"mb-3\" >\r\n            <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n              <Form.Label>Max amount</Form.Label>\r\n              <Form.Control\r\n                name=\"max_amount\"\r\n                type=\"number\"\r\n                min=\"1\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.max_amount}\r\n              />\r\n                {formik.touched.max_amount && formik.errors.max_amount ? (\r\n                  <div class=\"text-danger\">{formik.errors.max_amount}</div>\r\n                ) : null}              \r\n\r\n            </Form.Group>\r\n            <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n              <Form.Label>Interest Rate (in %)</Form.Label>\r\n              <Form.Control\r\n                name=\"interest_rate\"\r\n                type=\"number\"\r\n                min=\"0\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.interest_rate}\r\n              />\r\n                {formik.touched.interest_rate && formik.errors.interest_rate ? (\r\n                  <div class=\"text-danger\">{formik.errors.interest_rate}</div>\r\n                ) : null}              \r\n\r\n            </Form.Group>\r\n\r\n          </Row>\r\n          <Row className=\"mb-3\" md={6}>\r\n            <Form.Group as={Col} className=\"mb-3\" controlId=\"formGridAddress1\">\r\n              <Form.Label>EMI type</Form.Label>\r\n              <select\r\n                className=\"form-control\"\r\n                name=\"EMI_type\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.EMI_type}\r\n              >\r\n                <option key=\"\" value=\"\">Select EMI type</option>\r\n                <option key=\"flat\" value=\"flat\">Flat rate</option>\r\n                {/* <option key=\"reduceing\" value=\"reduceing\">Reduceing rate</option> */}\r\n              </select>\r\n              {formik.touched.EMI_type && formik.errors.EMI_type ? (\r\n                  <div class=\"text-danger\">{formik.errors.EMI_type}</div>\r\n                ) : null}              \r\n\r\n            </Form.Group>\r\n\r\n          </Row>\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Save\r\n          </Button>\r\n\r\n        </Form>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AddScheme;","import React from 'react'\r\nimport agent from '../../agent'\r\nimport Loader from '../layout/Loader';\r\nimport {  Card, Col, Row } from 'react-bootstrap';\r\n//var demo;\r\nexport default function Dashboard() {\r\n  //demo.initChartsPages();\r\n    return (\r\n      <div className=\"content\">\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-3 col-md-6 col-sm-6\">\r\n          <div className=\"card card-stats\">\r\n            <div className=\"card-body \">\r\n              <div className=\"row\">\r\n                <div className=\"col-5 col-md-4\">\r\n                  <div className=\"icon-big text-center icon-warning\">\r\n                    <i className=\"nc-icon nc-globe text-warning\"></i>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-7 col-md-8\">\r\n                  <div className=\"numbers\">\r\n                    <p className=\"card-category\">Capacity</p>\r\n                    <p className=\"card-title\">150GB</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"card-footer \">\r\n              <hr/>\r\n              <div className=\"stats\">\r\n                <i className=\"fa fa-refresh\"></i>\r\n                Update Now\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-lg-3 col-md-6 col-sm-6\">\r\n          <div className=\"card card-stats\">\r\n            <div className=\"card-body \">\r\n              <div className=\"row\">\r\n                <div className=\"col-5 col-md-4\">\r\n                  <div className=\"icon-big text-center icon-warning\">\r\n                    <i className=\"nc-icon nc-money-coins text-success\"></i>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-7 col-md-8\">\r\n                  <div className=\"numbers\">\r\n                    <p className=\"card-category\">Revenue</p>\r\n                    <p className=\"card-title\">$ 1,345</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"card-footer \">\r\n              <hr/>\r\n              <div className=\"stats\">\r\n                <i className=\"fa fa-calendar-o\"></i>\r\n                Last day\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-lg-3 col-md-6 col-sm-6\">\r\n          <div className=\"card card-stats\">\r\n            <div className=\"card-body \">\r\n              <div className=\"row\">\r\n                <div className=\"col-5 col-md-4\">\r\n                  <div className=\"icon-big text-center icon-warning\">\r\n                    <i className=\"nc-icon nc-vector text-danger\"></i>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-7 col-md-8\">\r\n                  <div className=\"numbers\">\r\n                    <p className=\"card-category\">Errors</p>\r\n                    <p className=\"card-title\">23</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"card-footer \">\r\n              <hr/>\r\n              <div className=\"stats\">\r\n                <i className=\"fa fa-clock-o\"></i>\r\n                In the last hour\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-lg-3 col-md-6 col-sm-6\">\r\n          <div className=\"card card-stats\">\r\n            <div className=\"card-body \">\r\n              <div className=\"row\">\r\n                <div className=\"col-5 col-md-4\">\r\n                  <div className=\"icon-big text-center icon-warning\">\r\n                    <i className=\"nc-icon nc-favourite-28 text-primary\"></i>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-7 col-md-8\">\r\n                  <div className=\"numbers\">\r\n                    <p className=\"card-category\">Followers</p>\r\n                    <p className=\"card-title\">+45K</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"card-footer \">\r\n              <hr/>\r\n              <div className=\"stats\">\r\n                <i className=\"fa fa-refresh\"></i>\r\n                Update now\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <div className=\"card \">\r\n            <div className=\"card-header \">\r\n              <h5 className=\"card-title\">Users Behavior</h5>\r\n              <p className=\"card-category\">24 Hours performance</p>\r\n            </div>\r\n            <div className=\"card-body \">\r\n              <canvas id=\"chartHours\" width=\"400\" height=\"100\"></canvas>\r\n            </div>\r\n            <div className=\"card-footer \">\r\n              <hr/>\r\n              <div className=\"stats\">\r\n                <i className=\"fa fa-history\"></i> Updated 3 minutes ago\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card \">\r\n            <div className=\"card-header \">\r\n              <h5 className=\"card-title\">Email Statistics</h5>\r\n              <p className=\"card-category\">Last Campaign Performance</p>\r\n            </div>\r\n            <div className=\"card-body \">\r\n              <canvas id=\"chartEmail\"></canvas>\r\n            </div>\r\n            <div className=\"card-footer \">\r\n              <div className=\"legend\">\r\n                <i className=\"fa fa-circle text-primary\"></i> Opened\r\n                <i className=\"fa fa-circle text-warning\"></i> Read\r\n                <i className=\"fa fa-circle text-danger\"></i> Deleted\r\n                <i className=\"fa fa-circle text-gray\"></i> Unopened\r\n              </div>\r\n              <hr/>\r\n              <div className=\"stats\">\r\n                <i className=\"fa fa-calendar\"></i> Number of emails sent\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-8\">\r\n          <div className=\"card card-chart\">\r\n            <div className=\"card-header\">\r\n              <h5 className=\"card-title\">NASDAQ: AAPL</h5>\r\n              <p className=\"card-category\">Line Chart with Points</p>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <canvas id=\"speedChart\" width=\"400\" height=\"100\"></canvas>\r\n            </div>\r\n            <div className=\"card-footer\">\r\n              <div className=\"chart-legend\">\r\n                <i className=\"fa fa-circle text-info\"></i> Tesla Model S\r\n                <i className=\"fa fa-circle text-warning\"></i> BMW 5 Series\r\n              </div>\r\n              <hr />\r\n              <div className=\"card-stats\">\r\n                <i className=\"fa fa-check\"></i> Data information certified\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Button, Form, Container, Row, Col, Toast } from 'react-bootstrap';\r\nimport { useFormik } from 'formik';\r\nimport DatePicker from \"react-datepicker\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport groupLoan from '../../models/groupLoan';\r\nimport Loader from '../layout/Loader';\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction LoanApplication(props) {\r\n    const auth = useSelector(state => state.auth);\r\n    const [enrollmentDate, setEnrollmentDate] = useState(new Date());\r\n    const [values, setValues] = useState({});\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [showToast, setShowToast] = useState({ isShow: false, type: \"\", message: \"\" })\r\n    const [memberRecords, setMemberRecords] = useState([]);\r\n    const [schemeRecords, setSchemeRecords] = useState([]);\r\n    const [selectedScheme, setSelectedScheme] = useState({});\r\n\r\n    const tanure = {\"weekly\":\"Weeks\",\"monthly\":\"Months\",\"daily\":\"Days\",\"fortnight\":\"Fortnight\"};\r\n    let history = useHistory();\r\n    //const selectedSm = {\"interest_rate\":0,\"EMI_type\":\"\",\"max_amount\":0};\r\n    useEffect(()=>{\r\n        getSchemesAndMembers();\r\n    },[])\r\n    const getSchemesAndMembers=async()=>{\r\n        try{\r\n            setisShowLoader(true);\r\n            const response =await Promise.all(groupLoan.SchemeModel.getLoanAppInitialData())\r\n            setisShowLoader(false);\r\n            setSchemeRecords(response[0].body.message);\r\n            setMemberRecords(response[1].body.message);\r\n            console.log(response);\r\n        } catch (error) {\r\n            setisShowLoader(false);\r\n            setShowToast({ isShow: true,type:\"bg-danger\", message: error.response.body.message })\r\n          }\r\n    }\r\n    const validate = values => {\r\n        const errors = {};\r\n        if (!values.scheme_id) {\r\n            errors.scheme_id = 'Scheme code is Required!';\r\n        }\r\n        if (!values.member_id) {\r\n            errors.member_id = 'Member name is Required!';\r\n        }\r\n        if (!values.interest_rate) {\r\n            errors.interest_rate = 'Interest rate is Required!';\r\n        }\r\n        if (selectedScheme?.interest_rate>0 && values.interest_rate>selectedScheme?.interest_rate) {\r\n            errors.interest_rate = `As per the Selected Scheme. Interest rate should not greater than ${selectedScheme.interest_rate}.`;\r\n        }\r\n        if (!values.loan_amount) {\r\n            errors.loan_amount = 'Loan amount is Required!';\r\n        }\r\n        if (selectedScheme?.max_amount>0 && values.loan_amount>selectedScheme.max_amount) {\r\n            errors.loan_amount = `As per the Selected Scheme. Loan amount should not greater than ${selectedScheme.max_amount}.`;\r\n        }\r\n        // if (!values.EMI_amount) {\r\n        //     errors.EMI_amount = 'EMI amount is Required!';\r\n        // }\r\n        if (!values.EMI_payout) {\r\n            errors.EMI_payout = 'EMI payout is Required!';\r\n        }\r\n        if (!values.tenure) {\r\n            errors.tenure = 'Tenure is Required!';\r\n        }\r\n        return errors;\r\n    };\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            scheme_id: '',\r\n            application_date: '',\r\n            member_id: '',\r\n            address:'',\r\n            interest_rate: \"\",\r\n            loan_amount:'',\r\n            // EMI_amount: '',\r\n            EMI_payout:\"\",\r\n            EMI_type:\"\",\r\n            tenure:\"\",\r\n            user_id:auth.id\r\n        },\r\n        validate,\r\n        onSubmit: async (values) => {\r\n            console.log(values);\r\n           setisShowLoader(true);\r\n            try {\r\n                //delete values.EMI_type;\r\n                values.application_date = enrollmentDate;\r\n              let response = await groupLoan.GroupLoanModel.applyForloan(values);\r\n              setisShowLoader(false);\r\n              if (response.statusCode == 200) {\r\n                formik.resetForm();\r\n                setShowToast({ isShow: true,type:\"bg-success\", message: response.body.message })\r\n              } else {\r\n                setShowToast({ isShow: true,type:\"bg-danger\", message: response.body.message })\r\n              }\r\n\r\n            } catch (error) {\r\n              setisShowLoader(false);\r\n              setShowToast({ isShow: true,type:\"bg-danger\", message: error.response.body.message })\r\n            }\r\n        }\r\n    });\r\n    const handleScheme=(e)=>{\r\n        console.log(e.target.value);\r\n        let selectedScheme = schemeRecords.filter(scheme=>scheme.scheme_code==e.target.value);\r\n        setSelectedScheme(selectedScheme[0]);\r\n         formik.values.EMI_type = selectedScheme[0].EMI_type;\r\n         formik.values.interest_rate = selectedScheme[0].interest_rate;\r\n        formik.handleChange(e);\r\n    }\r\n    return (\r\n        \r\n        <>\r\n        <Toast key={1} autohide delay={3000} show={showToast.isShow} onClose={() => setShowToast({ isShow: false,type:\"\", message: \"\" })} className={\"loader \"+ (showToast.type) } >\r\n            <Toast.Header>\r\n            <strong className=\"me-auto\">{showToast.type==\"bg-danger\"?\"Error\":\"Success\"} Message</strong>\r\n            </Toast.Header>\r\n            <Toast.Body className=\"Dark\">\r\n            {showToast.message}\r\n            </Toast.Body>\r\n        </Toast>\r\n         <Loader show={isShowLoader} />\r\n            <h2 className=\"text-info text-center\">Add Loan Application</h2>\r\n            \r\n            <Container fluid className=\"bg-white mt-5 shadow-lg p-3 mb-5 bg-white rounded\">\r\n                <Form onSubmit={formik.handleSubmit}>\r\n                    <Row className=\"mb-3\" >\r\n                    <Form.Group as={Col} className=\"form-group required\" controlId=\"formGridEnroll\">\r\n                            <Form.Label >Application Date</Form.Label>\r\n                            <DatePicker class=\"form-control\"\r\n                                selected={enrollmentDate}\r\n                                onChange={(date) => setEnrollmentDate(date)}\r\n                                name=\"application_date\"\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                            <Form.Label>Member name</Form.Label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                name=\"member_id\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.member_id}\r\n                            >\r\n                                <option key=\"\" value=\"\">Select Member</option>\r\n                                {memberRecords.map((member,id)=>(\r\n                                    <option key={member.member_id} value={member.member_id}>{`name= ${member.member_name} - member_id= ${member.member_id} `}</option>\r\n                                ))}\r\n\r\n                            </select>\r\n                            {formik.touched.member_id && formik.errors.member_id ? (\r\n                  <div class=\"text-danger\">{formik.errors.member_id}</div>\r\n                ) : null}              \r\n                        </Form.Group>\r\n\r\n                    </Row>\r\n                    <Row className=\"mb-3\" >\r\n                    <Form.Group as={Col} controlId=\"formGriddob\">\r\n                            <Form.Label>Member Address</Form.Label>\r\n                            <Form.Control\r\n                                name=\"address\"\r\n                                as=\"textarea\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.address}\r\n\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                            <Form.Label>Scheme</Form.Label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                name=\"scheme_id\"\r\n                                onChange={handleScheme}\r\n                                value={formik.values.scheme_id}\r\n                            >\r\n                                <option key=\"\" value=\"\">Select Scheme</option>\r\n                                {schemeRecords.map((schems,id)=>(\r\n                                    <option key={schems.scheme_code} value={schems.scheme_code}>{schems.scheme_code}</option>\r\n                                ))}\r\n\r\n                            </select>\r\n                            {formik.touched.scheme_id && formik.errors.scheme_id ? (\r\n                                <div class=\"text-danger\">{formik.errors.scheme_id}</div>\r\n                            ) : null}\r\n\r\n                        </Form.Group>\r\n\r\n                    </Row>\r\n                    <Row className=\"mb-3\" >\r\n                        <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                            <Form.Label>Interest Rate (in %)</Form.Label>\r\n                            <Form.Control\r\n                                name=\"interest_rate\"\r\n                                type=\"number\"\r\n                                min=\"0\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.interest_rate}\r\n                            />\r\n                            <Form.Text className=\"text-muted\">\r\n                            It will change as per scheme.\r\n                            </Form.Text>                            \r\n                            {formik.touched.interest_rate && formik.errors.interest_rate ? (\r\n                                <div class=\"text-danger\">{formik.errors.interest_rate}</div>\r\n                            ) : null}\r\n\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                            <Form.Label>Loan Amount</Form.Label>\r\n                            <Form.Control\r\n                                name=\"loan_amount\"\r\n                                type=\"number\"\r\n                                min=\"0\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.loan_amount}\r\n                            />\r\n                            <Form.Text className=\"text-muted\">\r\n                            Default will be Max amount of selected scheme.\r\n                            </Form.Text>                            \r\n\r\n                            {formik.touched.loan_amount && formik.errors.loan_amount ? (\r\n                                <div class=\"text-danger\">{formik.errors.loan_amount}</div>\r\n                            ) : null}\r\n\r\n                        </Form.Group>\r\n\r\n                    </Row>\r\n                    <Row className=\"mb-3\" >\r\n                        {/* <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                            <Form.Label>EMI Amount</Form.Label>\r\n                            <Form.Control\r\n                                name=\"EMI_amount\"\r\n                                type=\"number\"\r\n                                min=\"0\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.EMI_amount}\r\n                            />\r\n                            {formik.touched.EMI_amount && formik.errors.EMI_amount ? (\r\n                                <div class=\"text-danger\">{formik.errors.EMI_amount}</div>\r\n                            ) : null}\r\n\r\n                        </Form.Group> */}\r\n                        <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                            <Form.Label>EMI Payout</Form.Label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                name=\"EMI_payout\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.EMI_payout}\r\n                            >\r\n                                <option key=\"\" value=\"\">Select Payout</option>\r\n                                {/* <option key=\"daily\" value=\"daily\">Daily</option> */}\r\n                                <option key=\"weekly\" value=\"weekly\">Weekly</option>\r\n                                <option key=\"monthly\" value=\"fortnight\">Fortnight</option>\r\n\r\n                            </select>\r\n                            {formik.touched.EMI_payout && formik.errors.EMI_payout ? (\r\n                                <div class=\"text-danger\">{formik.errors.EMI_payout}</div>\r\n                            ) : null}\r\n\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                            <Form.Label>Tenure(in {formik.values.EMI_payout!=\"\"?tanure[formik.values.EMI_payout]:\"Months\"})</Form.Label>\r\n                            <Form.Control\r\n                                name=\"tenure\"\r\n                                type=\"number\"\r\n                                min=\"1\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.tenure}\r\n                            />\r\n                            {formik.touched.tenure && formik.errors.tenure ? (\r\n                                <div class=\"text-danger\">{formik.errors.tenure}</div>\r\n                            ) : null}\r\n\r\n                        </Form.Group>\r\n                    </Row>\r\n                    <Row className=\"mb-3\">\r\n                    <Form.Group as={Col} md={6} controlId=\"formGriddob\" className=\"form-group required\">\r\n                            <Form.Label>EMI Type</Form.Label>\r\n                            <Form.Control\r\n                                name=\"EMI_type\"\r\n                                type=\"text\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.EMI_type}\r\n                                disabled=\"disabled\"\r\n                            />\r\n                            <Form.Text className=\"text-muted\">\r\n                            It will change as per selected scheme.\r\n                            </Form.Text>                            \r\n                        </Form.Group>\r\n                    </Row>\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Save\r\n                    </Button>\r\n                    <Button variant=\"danger\" onClick={()=>{history.push(\"/\")}} type=\"button\" className=\"ml-2\">\r\n                        Cancel\r\n                    </Button>\r\n                </Form>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LoanApplication;","import React, { useEffect, useState } from 'react';\r\nimport { Table,Button, Container, Row, Col } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport groupLoan from '../../models/groupLoan';\r\nimport Loader from '../layout/Loader';\r\nimport { useHistory } from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nfunction LoanApproval(props) {\r\n    let history = useHistory();\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\nconst [loanlist,setLoanlist]=useState([]);\r\n    useEffect(() => {\r\n        getLoanList();\r\n    },[])\r\n\r\n    const getLoanList = async() =>{\r\n        try {\r\n            setisShowLoader(true);\r\n            let response = await groupLoan.GroupLoanModel.getApprovalList();\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n                setLoanlist(response.body.message);\r\n            } \r\n  \r\n          } catch (error) {\r\n            setisShowLoader(false);\r\n            console.log(error);\r\n          }\r\n      }\r\n      const redirectApproval=(loan_id)=>{\r\n        history.push(\"/loanApprovalDetails\",loan_id);\r\n      }\r\n    return (\r\n        <>\r\n        <Loader show={isShowLoader}/>\r\n        <Container fluid>\r\n        <h2 className=\"text-info text-center\">Applications for Approval</h2>\r\n            <Row>\r\n            <Col>\r\n            <Table className=\" shadow-lg p-3 mb-5 bg-white rounded\" striped bordered hover responsive>\r\n            <thead className=\"bg-primary\">\r\n                <tr>\r\n                    <th>Application Date</th>\r\n                    <th>Member name</th>\r\n                    <th>Scheme ID</th>\r\n                    <th>Loan Amount</th>\r\n                    <th>Interest rate</th>\r\n                    <th>Action</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {loanlist.map((loan,id)=>(<tr>\r\n                    <td>{moment(loan.application_date).format(\"DD-MM-YYYY hh:ss A\") }</td>\r\n                    <td>{loan.member_name}</td>\r\n                    <td>{loan.scheme_id}</td>\r\n                    <td>{loan.loan_amount }</td>\r\n                    <td>{loan.interest_rate }</td>\r\n                    <td><Button variant=\"success\" size={\"sm\"} onClick={()=>redirectApproval(loan.id)}>Approve</Button></td>\r\n                </tr>))}\r\n            </tbody>\r\n        </Table>\r\n</Col>\r\n            </Row>\r\n        </Container>            \r\n        </>\r\n    );\r\n}\r\n\r\nexport default LoanApproval;","import React, { useEffect, useState } from 'react';\r\nimport { Table,Button, Container, Row, Col } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport groupLoan from '../../models/groupLoan';\r\nimport Loader from '../layout/Loader';\r\nimport { useHistory } from 'react-router-dom';\r\nimport moment from 'moment';\r\nfunction DisburseLoan(props) {\r\n    let history = useHistory();\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\nconst [loanlist,setLoanlist]=useState([]);\r\n    useEffect(() => {\r\n        getLoanList();\r\n    },[])\r\n\r\n    const getLoanList = async() =>{\r\n        try {\r\n            setisShowLoader(true);\r\n            let response = await groupLoan.GroupLoanModel.getDisburseList();\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n                setLoanlist(response.body.message);\r\n            } \r\n  \r\n          } catch (error) {\r\n            setisShowLoader(false);\r\n            console.log(error);\r\n          }\r\n      }\r\n      const redirectDisburse=(loan_id)=>{\r\n        history.push(\"/loanApprovalDetails\",loan_id);\r\n      }\r\n\r\n    return (\r\n        <>\r\n        <Loader show={isShowLoader}/>\r\n        <Container fluid>\r\n        <h2 className=\"text-info text-center\">Applications For Disburse</h2>\r\n            <Row >\r\n            <Col>\r\n            <Table className=\" shadow-lg p-3 mb-5 bg-white rounded\" striped bordered hover responsive>\r\n            <thead className=\"bg-primary\">\r\n                <tr>\r\n                    <th>Application Date</th>\r\n                    <th>Member name</th>\r\n                    <th>Scheme ID</th>\r\n                    <th>Loan Amount</th>\r\n                    <th>Interest rate</th>\r\n                    <th>Action</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {loanlist.map((loan,id)=>(<tr>\r\n                    <td>{moment(loan.application_date).format(\"DD-MM-YYYY hh:ss A\") }</td>\r\n                    <td>{loan.member_name}</td>\r\n                    <td>{loan.scheme_id}</td>\r\n                    <td>{loan.loan_amount }</td>\r\n                    <td>{loan.interest_rate }</td>\r\n                    <td><Button variant=\"success\" size={\"sm\"} onClick={()=>redirectDisburse(loan.id)}>Disburse</Button></td>\r\n                </tr>))}\r\n            </tbody>\r\n        </Table>\r\n</Col>\r\n            </Row>\r\n        </Container>            \r\n        </>\r\n    );}\r\n\r\nexport default DisburseLoan;","import React from 'react';\r\nimport { Table, Card} from 'react-bootstrap';\r\n\r\nfunction EmiCard(props) {\r\n\r\n    return (\r\n        <Card border=\"primary\" header\r\n        key={0}\r\n        text={'dark'}\r\n        className=\"m-2\"\r\n    >\r\n        <Card.Header className=\"bg-primary text-center\"><b>EMI Details</b>\r\n            <svg onClick={props.handlePrintEMI} xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" className=\"bi bi-printer float-right cursar\" viewBox=\"0 0 16 16\">\r\n            <path d=\"M2.5 8a.5.5 0 1 0 0-1 .5.5 0 0 0 0 1z\"/>\r\n            <path d=\"M5 1a2 2 0 0 0-2 2v2H2a2 2 0 0 0-2 2v3a2 2 0 0 0 2 2h1v1a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-1h1a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-1V3a2 2 0 0 0-2-2H5zM4 3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v2H4V3zm1 5a2 2 0 0 0-2 2v1H2a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1h-1v-1a2 2 0 0 0-2-2H5zm7 2v3a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1z\"/>\r\n            </svg>\r\n        </Card.Header>\r\n        <Card.Body>\r\n        {/* <Loader show={isShowEMILoader} relative={true}/> */}\r\n        <Table size={\"sm\"} className=\"bg-white rounded small\" bordered responsive>\r\n            <thead>\r\n              <tr className=\"bg-success\">\r\n                  <th>EMI date</th>\r\n                  <th>EMI Amount</th>\r\n                  <th>Principal</th>\r\n                  <th>Interest</th>\r\n                  <th>Outstanding</th>\r\n                  {props.showDisburseButton?<th>EMI Paid</th>:\"\"}\r\n                  \r\n              </tr>\r\n          </thead>\r\n                <tbody>\r\n                {props.emiData.map((value,id)=>(<tr className={props.paidEmiRecord[value.date]?\"bg-warning\":\"\"}>\r\n                    <td>{value.date}</td>\r\n                    <td>{value.EMI}</td>\r\n                    <td>{value.principal}</td>\r\n                    <td>{value.int_amount}</td>\r\n                    <td>{value.outstanding }</td>\r\n                    {props.showDisburseButton?\r\n                    <td>{props.paidEmiRecord[value.date]?\r\n                    \r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-check-circle\" viewBox=\"0 0 16 16\">\r\n                        <path d=\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\r\n                        <path d=\"M10.97 4.97a.235.235 0 0 0-.02.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-1.071-1.05z\"/>\r\n                        </svg>:\"\"}</td>:\"\"}\r\n                </tr>))}\r\n                </tbody>\r\n        </Table>\r\n        </Card.Body>\r\n    </Card>\r\n);\r\n}\r\n\r\nexport default EmiCard;","import React from 'react';\r\nimport { Table, Card} from 'react-bootstrap';\r\n\r\nclass EmiCardPrint extends React.PureComponent {\r\n    render() {\r\n    return (\r\n        <div>\r\n        <h3 className=\"text-center mb-5 mt-3\">AA2 MutualHelp Micro Finance</h3>\r\n        <Card border=\"primary\" header\r\n        key={0}\r\n        text={'dark'}\r\n        className=\"m-2\"\r\n    >\r\n        <Card.Header className=\"bg-primary text-center\"><b>EMI Details</b>\r\n\r\n        </Card.Header>\r\n        <Card.Body>\r\n        {/* <Loader show={isShowEMILoader} relative={true}/> */}\r\n        <Table size={\"sm\"} className=\"bg-white rounded\" striped bordered hover responsive>\r\n            <thead>\r\n              <tr>\r\n                  <th>EMI date</th>\r\n                  <th>EMI Amount</th>\r\n                  <th>Principal</th>\r\n                  <th>Interest</th>\r\n                  <th>Outstanding</th>\r\n                  <th>Signature</th>\r\n              </tr>\r\n          </thead>\r\n                <tbody>\r\n                {this.props.emiData.map((value,id)=>(<tr>\r\n                    <td>{value.date}</td>\r\n                    <td>{value.EMI}</td>\r\n                    <td>{value.principal}</td>\r\n                    <td>{value.int_amount}</td>\r\n                    <td>{value.outstanding }</td>\r\n                    <td></td>\r\n                </tr>))}\r\n                </tbody>\r\n        </Table>\r\n        </Card.Body>\r\n    </Card>\r\n    </div>\r\n);\r\n\r\n    }\r\n}\r\n\r\nexport default EmiCardPrint;","import moment from 'moment';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Table, Button, Container, Row, Col, Card, ListGroup,Modal,Toast } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport groupLoan from '../../models/groupLoan';\r\nimport Loader from '../layout/Loader';\r\nimport { useSelector } from \"react-redux\";\r\nimport { useReactToPrint } from 'react-to-print';\r\nimport { useRef } from 'react';\r\nimport EmiCard from './EmiCard';\r\nimport EmiCardPrint from './EmiCardPrint';\r\nfunction LoanApprovalDetails(props) {\r\n    const memberDetailsRef = useRef();\r\n    const handlePrintMemberDetail = useReactToPrint({\r\n        content: () => memberDetailsRef.current,\r\n        documentTitle:\"AA2-Member\",\r\n      });\r\n\r\n      const applicationRef = useRef();\r\n      const handlePrintApplication = useReactToPrint({\r\n          content: () => applicationRef.current,\r\n          documentTitle:\"AA2-application\",\r\n        });\r\n\r\n        const emiRef = useRef();\r\n        const handlePrintEMI = useReactToPrint({\r\n            content: () => emiRef.current,\r\n            documentTitle:\"AA2-EMI-details\",\r\n          });\r\n      \r\n    const auth = useSelector(state => state.auth);\r\n    const [paidEmiRecord, setPaidEmiRecord] = useState([])\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [isShowEMILoader, setisShowEMILoader] = useState(false)\r\n    const [emiData, setEmiData] = useState([])\r\n    const [loanDetails, setLoanDetails] = useState({});\r\n    const [showToast, setShowToast] = useState({ isShow: false, type: \"\", message: \"\" })\r\n    const [showApprovalButton,setShowApprovalButton]= useState(false);\r\n    const [showDisburseButton,setShowDisburseButton]= useState(false);\r\n    \r\n    //const [disburseActionButton,setDisburseActionButton]\r\n    useEffect(() => {\r\n        console.log(props);\r\n        getLoanDetails();\r\n    }, [])\r\n\r\n    const getLoanDetails = async () => {\r\n        try {\r\n            setisShowLoader(true);\r\n            setisShowEMILoader(true);\r\n\r\n            let response = await groupLoan.GroupLoanModel.getLoanDetailbyId(props.location.state);\r\n            let calculateEmi ={\r\n                \"loanStartDate\":response.body.message[0].application_date,\r\n                \"interest_rate\":response.body.message[0].interest_rate,\r\n                \"tenure\":response.body.message[0].Tenure,\r\n                \"EMI_payout\":response.body.message[0].EMI_payout,\r\n                \"loan_amount\":response.body.message[0].loan_amount,\r\n                \"EMI_type\":response.body.message[0].EMI_type\r\n            }\r\n            setisShowEMILoader(true);\r\n            let EmiData = await groupLoan.EmiModel.calculateEMI(calculateEmi);\r\n            let paidData = [];\r\n            let result = {};\r\n             paidData = await groupLoan.EmiModel.getPaidEmis(response.body.message[0].loan_account_no);\r\n            for(let i=0;i<paidData.body.message.length;i++){\r\n                let emiDate = moment(paidData.body.message[i].EMI_date).format(\"DD-MM-yyyy\");\r\n                result[emiDate]=true;\r\n            }\r\n            setPaidEmiRecord(result);\r\n            setEmiData(EmiData.body.message);\r\n            setisShowEMILoader(false);\r\n            console.log(response);\r\n\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n                setShowApprovalButton(response.body.message[0].is_approved!=0?false:true);\r\n                setShowDisburseButton(response.body.message[0].is_approved ==1 && response.body.message[0].is_disbursed==0?true:false);\r\n                setLoanDetails(response.body.message[0]);\r\n            }\r\n\r\n        } catch (error) {\r\n            setisShowLoader(false);\r\n            console.log(error);\r\n        }\r\n    }\r\n    const actionOnLoan = async(actionType)=>{\r\n        try {\r\n            setisShowLoader(true);\r\n            const data = {\"id\":props.location.state,\"actionType\":actionType}\r\n            let response = await groupLoan.GroupLoanModel.approveRejectLoan(data);\r\n            console.log(response);\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n                setShowApprovalButton(false);\r\n                //setShowDisburseButton(false);\r\n                setShowToast({ isShow: true,type:\"bg-success\", message: response.body.message })\r\n            }\r\n        } catch (error) {\r\n            setisShowLoader(false);\r\n            setShowToast({ isShow: true,type:\"bg-danger\", message: error.response.body.message })\r\n            console.log(error);\r\n        }\r\n    }\r\n    const actionDisburseLoan = async(actionType)=>{\r\n        try {\r\n            setisShowLoader(true);\r\n            const data = {\"id\":props.location.state,\"actionType\":actionType}\r\n            let response = await groupLoan.GroupLoanModel.disburseRejectLoan(data);\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n                setShowDisburseButton(false);\r\n                setShowToast({ isShow: true,type:\"bg-success\", message: response.body.message })\r\n            }\r\n        } catch (error) {\r\n            setisShowLoader(false);\r\n            setShowToast({ isShow: true,type:\"bg-danger\", message: error.response.body.message })\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n    return (\r\n        <>\r\n        <Toast key={1} autohide delay={3000} show={showToast.isShow} onClose={() => setShowToast({ isShow: false,type:\"\", message: \"\" })} className={\"loader \"+ (showToast.type) } >\r\n            <Toast.Header>\r\n            <strong className=\"me-auto\">{showToast.type==\"bg-danger\"?\"Error\":\"Success\"} Message</strong>\r\n            </Toast.Header>\r\n            <Toast.Body className=\"Dark\">\r\n            {showToast.message}\r\n            </Toast.Body>\r\n        </Toast>\r\n            <Loader show={isShowLoader} />\r\n            {showApprovalButton && (auth.role==\"checker\"||auth.role==\"admin\")?<Row className=\"m-5\">\r\n                <Col className=\"text-center\">\r\n                <Button variant=\"primary\" type=\"button\" onClick={()=>actionOnLoan(1)}>\r\n                        Approve\r\n                    </Button>{'  '}\r\n                    <Button variant=\"danger\" type=\"button\" onClick={()=>actionOnLoan(-1)}>\r\n                        Reject\r\n                    </Button>\r\n                </Col>\r\n            </Row>:\"\"}\r\n\r\n            {showDisburseButton&& (auth.role==\"checker\"||auth.role==\"admin\")?<Row className=\"m-5\">\r\n                <Col className=\"text-center\">\r\n                <Button variant=\"primary\" type=\"button\" onClick={()=>actionDisburseLoan(1)}>\r\n                        Disburse\r\n                    </Button>{'  '}\r\n                    <Button variant=\"danger\" type=\"button\" onClick={()=>actionDisburseLoan(-1)}>\r\n                        Reject\r\n                    </Button>\r\n                </Col>\r\n            </Row>:\"\"}\r\n\r\n            <Row xs={1} md={2} className=\"g-1\">\r\n                <Col>\r\n                    <Card border=\"success\" header\r\n                        key={0}\r\n                        text={'dark'}\r\n                        className=\"m-2\"\r\n                        ref={memberDetailsRef}\r\n                    >\r\n                        <Card.Header className=\"bg-success text-center\"><b>Member Details</b><svg onClick={handlePrintMemberDetail} xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" className=\"bi bi-printer float-right cursar\" viewBox=\"0 0 16 16\">\r\n  <path d=\"M2.5 8a.5.5 0 1 0 0-1 .5.5 0 0 0 0 1z\"/>\r\n  <path d=\"M5 1a2 2 0 0 0-2 2v2H2a2 2 0 0 0-2 2v3a2 2 0 0 0 2 2h1v1a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-1h1a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-1V3a2 2 0 0 0-2-2H5zM4 3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v2H4V3zm1 5a2 2 0 0 0-2 2v1H2a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1h-1v-1a2 2 0 0 0-2-2H5zm7 2v3a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1z\"/>\r\n</svg></Card.Header>\r\n                        <Card.Body>\r\n                            <Table size=\"sm\" className=\"bg-white rounded\" striped bordered hover responsive>\r\n                                <tbody>\r\n                                    <tr><th>Member Name</th><td>{loanDetails.member_name}</td> </tr>\r\n                                    <tr><th>Member Group ID</th>  <td>{loanDetails.member_group_id}</td></tr>\r\n                                    <tr> <th>Member Address</th>  <td>{loanDetails.address}</td></tr>\r\n                                    <tr><th>DOB</th>   <td>{moment(loanDetails.date_of_birth).format(\"DD-MM-YYYY\") }</td></tr>\r\n                                    <tr><th>Phone</th> <td>{loanDetails.mobile_number}</td></tr>\r\n                                    <tr><th>Gender</th>  <td>{loanDetails.gender}</td></tr>\r\n                                    <tr><th>Aadhar No.</th> <td>{loanDetails.aadhar_number}</td></tr>\r\n                                    <tr><th>PAN</th> <td>{loanDetails.pan_card_number}</td></tr>\r\n                                    <tr><th>Driving License</th> <td>{loanDetails.driving_license_number}</td></tr>\r\n                                    <tr><th>Ration Card No.</th> <td>{loanDetails.ration_card_number}</td></tr>\r\n                                    <tr><th>Voter ID No.</th> <td>{loanDetails.voter_id_number}</td></tr>\r\n                                    <tr><th>Bank Account No.</th> <td>{loanDetails.bank_account}</td></tr>\r\n                                    <tr><th>Bank IFSC code</th> <td>{loanDetails.bank_ifsc_code}</td></tr>\r\n                                    <tr><th>Bank Account Holder</th> <td>{loanDetails.bank_account_holder}</td></tr>\r\n\r\n                                </tbody>\r\n                            </Table>\r\n\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n                <Col>\r\n                    <Card border=\"info\" header\r\n                        key={0}\r\n                        text={'dark'}\r\n                        // style={{ width: '18rem' }}\r\n                        className=\"m-2\"\r\n                        ref={applicationRef}\r\n                    >\r\n                        <Card.Header className=\"bg-info text-center\"><b>Application Details</b><svg onClick={handlePrintApplication} xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" className=\"bi bi-printer float-right cursar\" viewBox=\"0 0 16 16\">\r\n  <path d=\"M2.5 8a.5.5 0 1 0 0-1 .5.5 0 0 0 0 1z\"/>\r\n  <path d=\"M5 1a2 2 0 0 0-2 2v2H2a2 2 0 0 0-2 2v3a2 2 0 0 0 2 2h1v1a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-1h1a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-1V3a2 2 0 0 0-2-2H5zM4 3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v2H4V3zm1 5a2 2 0 0 0-2 2v1H2a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1h-1v-1a2 2 0 0 0-2-2H5zm7 2v3a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1z\"/>\r\n</svg></Card.Header>\r\n                        <Card.Body>\r\n                            \r\n                            <Table size=\"sm\" className=\"bg-white rounded\" striped bordered hover responsive>\r\n                                <tbody>\r\n                                    <tr><th>Account No</th>  <td>{loanDetails.loan_account_no}</td></tr>\r\n                                    <tr><th>Application Date</th><td>{moment(loanDetails.application_date).format(\"DD-MM-YYYY HH:SS\") }</td> </tr>\r\n                                    <tr><th>Scheme Id</th>  <td>{loanDetails.scheme_id}</td></tr>\r\n                                    <tr> <th>Member Address</th>  <td>{loanDetails.address}</td></tr>\r\n                                    <tr><th>Loan Amount</th>   <td>{loanDetails.loan_amount}</td></tr>\r\n                                    <tr><th>Interest rate</th> <td>{loanDetails.interest_rate}</td></tr>\r\n                                    <tr><th>EMI payout</th>  <td>{loanDetails.EMI_payout}</td></tr>\r\n                                    <tr><th>EMI type</th>  <td>{loanDetails.EMI_type}</td></tr>\r\n                                    {/* <tr><th>EMI amount</th> <td>{loanDetails.EMI_amount}</td></tr> */}\r\n                                    <tr><th>Tenure</th> <td>{loanDetails.Tenure}</td></tr>\r\n                                </tbody>\r\n                            </Table>\r\n\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n                <Col >\r\n                    <Loader show={isShowEMILoader} relative={true}/>\r\n                    <EmiCard showDisburseButton={loanDetails.is_approved ==1 && loanDetails.is_disbursed==1}  emiData={emiData} paidEmiRecord={paidEmiRecord} handlePrintEMI={handlePrintEMI}/>\r\n                    <div style={{display:\"none\"}}><EmiCardPrint ref={emiRef} emiData={emiData}/></div> \r\n                </Col>\r\n\r\n            </Row>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LoanApprovalDetails;","import React, { useEffect, useState, useMemo } from 'react';\r\nimport { Table,Badge, Container, Row, Col, Button, Pagination } from 'react-bootstrap';\r\nimport groupLoan from '../../models/groupLoan';\r\nimport Loader from '../layout/Loader';\r\nimport { useHistory } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport {useTable,useSortBy,usePagination,useFilters } from 'react-table'\r\n\r\nfunction AllApplications(props) {\r\n    let history = useHistory();\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [loanlist,setLoanlist]=useState([]);\r\n    useEffect(() => {\r\n        getLoanList();\r\n    },[])\r\n    const data = useMemo(\r\n        () => \r\n      \r\n        loanlist.map((record,index)=>\r\n                { \r\n             return {\r\n                col1:record.loan_account_no?record.loan_account_no:\"N/A\",\r\n                col2:moment(record.application_date).format('DD-MM-yyy hh:ss A'),\r\n                col3:record.member_name,\r\n                col4:record.scheme_id,\r\n                col5:record.loan_amount,\r\n                col6:record.interest_rate,\r\n                col7:record.actionStatus,\r\n                col8:record\r\n                }\r\n            }\r\n        )\r\n        ,\r\n        [loanlist]\r\n      )   \r\n\r\n    const columns = useMemo(\r\n        () => [\r\n            {\r\n                Header: 'Account no.',\r\n                accessor: 'col1', // accessor is the \"key\" in the data\r\n                allowFilter:true\r\n            },\r\n            {\r\n            Header: 'Application date',\r\n            accessor: 'col2', // accessor is the \"key\" in the data\r\n            allowFilter:true\r\n          },\r\n          {\r\n            Header: 'Member name',\r\n            accessor: 'col3',\r\n            allowFilter:true\r\n          },\r\n          {\r\n            Header: 'Scheme ID',\r\n            accessor: 'col4',\r\n            allowFilter:true\r\n            },\r\n          {\r\n            Header: 'Loan amount',\r\n            accessor: 'col5',\r\n            allowFilter:true\r\n          },\r\n          {\r\n            Header: 'Interest rate',\r\n            accessor: 'col6',\r\n            allowFilter:true\r\n          },\r\n          {\r\n            Header: 'Status',\r\n            accessor: 'col7',\r\n            allowFilter:false\r\n          },\r\n          {\r\n            Header: 'Action',\r\n            accessor: 'col8',\r\n            allowFilter:false\r\n          }\r\n\r\n        ],\r\n        []\r\n      )    \r\n      function DefaultColumnFilter({\r\n        column: { filterValue, preFilteredRows, setFilter },\r\n    }) {\r\n        const count = preFilteredRows.length\r\n    \r\n        return (\r\n            <input\r\n                className=\"form-control\"\r\n                value={filterValue || ''}\r\n                onChange={e => {\r\n                    setFilter(e.target.value || undefined)\r\n                }}\r\n                placeholder={`Search ${count} records...`}\r\n            />\r\n        )\r\n    }    \r\n    const defaultColumn = React.useMemo(\r\n        () => ({\r\n            // Default Filter UI\r\n            Filter: DefaultColumnFilter,\r\n        }),\r\n        []\r\n    ) \r\n    const paginate = (totalPage)=>{\r\n      let pageNumberArray = [];\r\n      for(let i=1;i<=totalPage;i++){\r\n        pageNumberArray.push(i);\r\n      }\r\n      return(      \r\n      <Pagination>\r\n        <Pagination.First  onClick={() => gotoPage(0)}/>\r\n        <Pagination.Prev onClick={() => previousPage()} disabled={!canPreviousPage}/>\r\n        {pageNumberArray.map(num=><Pagination.Item key={num} active={num === (pageIndex+1)} onClick={() => gotoPage(num-1)}>{num}</Pagination.Item>)}\r\n        <Pagination.Next onClick={() => nextPage()} disabled={!canNextPage}/>\r\n        <Pagination.Last onClick={() => gotoPage(totalPage-1)}/>\r\n        </Pagination>\r\n      );\r\n    \r\n    }\r\n\r\n    const getLoanList = async() =>{\r\n        try {\r\n            setisShowLoader(true);\r\n            let response = await groupLoan.GroupLoanModel.getAllLoanApplications();\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n                let formatedData = response.body.message.map((loan, id)=>{\r\n                    if(loan.is_approved ==1 && loan.is_disbursed==1){\r\n                        loan[\"actionStatus\"]= \"Disbursed\";\r\n                    }else if(loan.is_approved ==1 && loan.is_disbursed==0){\r\n                        loan[\"actionStatus\"]= \"Approved\";\r\n                    }else if(loan.is_disbursed==-1){\r\n                        loan[\"actionStatus\"]= \"Disburse Rejected\";\r\n                    }else if(loan.is_approved==-1){\r\n                        loan[\"actionStatus\"]= \"Approval Rejected\";\r\n                    }else{\r\n                        loan[\"actionStatus\"]= \"Pending\";\r\n                    }\r\n\r\n                    return loan;\r\n                });\r\n                setLoanlist(formatedData);\r\n            } \r\n  \r\n          } catch (error) {\r\n            setisShowLoader(false);\r\n            console.log(error);\r\n          }\r\n      }\r\n      const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n        pageOptions,\r\n        page,\r\n        pageCount,\r\n        state: { pageIndex, pageSize },\r\n        gotoPage,\r\n        previousPage,\r\n        nextPage,\r\n        setPageSize,\r\n        canPreviousPage,\r\n        canNextPage,  \r\n      } = useTable({ columns, data, defaultColumn, initialState: { pageIndex: 0 }},useFilters,useSortBy,usePagination)\r\n    return (\r\n        <>\r\n        <Loader show={isShowLoader}/>\r\n        <Container fluid>\r\n        <h2 className=\"text-info text-center\">All Loan Applications</h2>\r\n            <Row>\r\n            <Col>\r\n            {/* <Table className=\" shadow-lg p-3 mb-5 bg-white rounded\" striped bordered hover responsive>\r\n            <thead>\r\n                <tr>\r\n                    <th>Application Date</th>\r\n                    <th>Member name</th>\r\n                    <th>Scheme ID</th>\r\n                    <th>Loan Amount</th>\r\n                    <th>Interest rate</th>\r\n                    <th>Status</th>\r\n                    <th>Action</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {loanlist.map((loan,id)=>(<tr>\r\n                    <td>{moment(loan.application_date).format(\"DD-MM-YYYY hh:ss A\") }</td>\r\n                    <td>{loan.member_name}</td>\r\n                    <td>{loan.scheme_id}</td>\r\n                    <td>{loan.loan_amount }</td>\r\n                    <td>{loan.interest_rate }</td>\r\n                    <td><Badge className={loan.actionStatus==\"Approved\" || loan.actionStatus==\"Disbursed\"?\"bg-success\":\"bg-danger\"}>{loan.actionStatus }</Badge></td>\r\n                    <td> <Button size={\"sm\"} variant=\"info\" onClick={()=>{history.push(\"/loanApprovalDetails\",loan.id)}} type=\"button\" className=\"ml-2\">\r\n                        View\r\n                    </Button></td>\r\n                </tr>))}\r\n            </tbody>\r\n        </Table> */}\r\n        <div className=\"text-right\">\r\n          {paginate(pageCount)}\r\n        </div>   \r\n\r\n            <Table  {...getTableProps()} className=\"shadow-lg p-3 mb-5 bg-white rounded small\" striped bordered hover responsive>\r\n            <thead className=\"bg-primary\">\r\n                    {headerGroups.map(headerGroup => (\r\n                    <tr {...headerGroup.getHeaderGroupProps()}>\r\n                        {headerGroup.headers.map(column => (\r\n                        <th\r\n                            {...column.getHeaderProps(column.getSortByToggleProps())}\r\n                        >\r\n                            {column.render('Header')}\r\n                            <span>\r\n                            {column.isSorted ? (column.isSortedDesc ? ' 🔽' : ' 🔼') : ''}\r\n                            </span>\r\n                            <div>{column.allowFilter? column.render('Filter') : null}</div>\r\n                        </th>\r\n                        ))}\r\n                    </tr>\r\n                    ))}\r\n            </thead>\r\n            <tbody{...getTableBodyProps()}>\r\n\r\n                    {page.map(row => {\r\n                        prepareRow(row)\r\n                        return (\r\n                            <tr {...row.getRowProps()}>\r\n                            {row.cells.map(cell => {\r\n                                console.log(cell);\r\n                                if(cell.column.id !=\"col8\" && cell.column.id !=\"col7\"){                                \r\n                                    return (\r\n                                        <td {...cell.getCellProps()}>\r\n                                            {cell.render('Cell')}\r\n                                        </td>\r\n                                        )\r\n                                    }else if(cell.column.id ==\"col8\"){\r\n                                        return (\r\n                                                <td>\r\n                                                <Button size={\"sm\"} variant=\"info\" onClick={()=>{history.push(\"/loanApprovalDetails\",cell.value.id)}} type=\"button\" className=\"ml-2\">\r\n                                                    View\r\n                                                </Button>\r\n                                                </td>\r\n                                                )\r\n                                    }else if(cell.column.id ==\"col7\"){\r\n                                        return (\r\n                                        <td>\r\n                                            <Badge className={cell.value==\"Approved\" || cell.value==\"Disbursed\"?\"bg-success\":\"bg-danger\"}>\r\n                                                {cell.value }\r\n                                            </Badge>\r\n                                        </td>                                            )\r\n    \r\n                                    }\r\n                            })}\r\n                            </tr>\r\n                        )\r\n                        })}\r\n\r\n            </tbody>\r\n        </Table>\r\n        <div className=\"text-right\">\r\n          {paginate(pageCount)}\r\n        </div>   \r\n\r\n        </Col>\r\n            </Row>\r\n        </Container>            \r\n        </>\r\n    );\r\n    }\r\n\r\nexport default AllApplications;","import React,{useState,useRef,useEffect } from 'react';\r\nimport { Table,Button, Container, Row, Col, Card, Form } from 'react-bootstrap';\r\nimport Loader from '../layout/Loader';\r\nimport { useFormik } from 'formik';\r\nimport DatePicker from \"react-datepicker\";\r\nimport groupLoan from \"../../models/groupLoan\";\r\nimport { useReactToPrint } from 'react-to-print';\r\nfunction EmiCalculator(props) {\r\n    const [enrollmentDate, setEnrollmentDate] = useState(new Date());\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [calculatedData,setCalculatedData] = useState([]);\r\n    //const [isclickPrint,setisclickPrint] = useState(false);\r\n    const componentRef = useRef();\r\n    // useEffect(()=>{\r\n    //   handlePrint()\r\n    // },[isclickPrint==true])\r\n    const handlePrint = useReactToPrint({\r\n      content: () => componentRef.current,\r\n      documentTitle:\"AA2-EMI-details\",\r\n     // onAfterPrint:()=>{setisclickPrint(false)}\r\n\r\n    });\r\n    // const setPrintCompany = ()=>{\r\n    //   setisclickPrint(true,()=>{console.log(\"print\")})\r\n    // }    \r\n    const validate = values => {\r\n        const errors = {};\r\n        if (!values.interest_rate) {\r\n          errors.interest_rate = 'Interest rate is Required';\r\n        }\r\n        if (!values.loan_amount) {\r\n            errors.loan_amount = 'Loan amount is Required';\r\n          }\r\n          if (!values.tenure) {\r\n            errors.tenure = 'Tenure is Required';\r\n          }\r\n          if (!values.EMI_payout) {\r\n            errors.EMI_payout = 'EMI payout is Required';\r\n          }\r\n          return errors;\r\n      };\r\n      const formik = useFormik({\r\n        initialValues: {\r\n        loanStartDate: '',\r\n        interest_rate: '',\r\n        tenure: '',\r\n        EMI_payout:'',\r\n        loan_amount:'',\r\n        EMI_type:\"flat\"\r\n        },\r\n        validate,\r\n        onSubmit: async (values) => {\r\n          setisShowLoader(true);\r\n          try {\r\n             values.loanStartDate = enrollmentDate;\r\n             console.log(values);\r\n            let response = await groupLoan.EmiModel.calculateEMI(values);\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n              //formik.resetForm();\r\n              setCalculatedData(response.body.message);\r\n            } else {\r\n              //setShowToast({ isShow: true,type:\"bg-danger\", message: response.body.message })\r\n            }\r\n    \r\n          } catch (error) {\r\n            setisShowLoader(false);\r\n            //setShowToast({ isShow: true,type:\"bg-danger\", message: error.response.body.message })\r\n          }\r\n        },\r\n      });\r\n    \r\n    return (\r\n        <>\r\n        <Loader show={isShowLoader}/>\r\n        <Container fluid>\r\n            <Row >\r\n            <Col>\r\n            <Container className=\"bg-white mt-2 shadow-lg p-3 mb-5 bg-white rounded\">\r\n            <Form onSubmit={formik.handleSubmit}>\r\n            <Form.Group as={Col} className=\"form-group required pl-0 pr-0\" controlId=\"formGridEnroll\">\r\n                            <Form.Label >Application Date</Form.Label>\r\n                            <DatePicker class=\"form-control\"\r\n                                selected={enrollmentDate}\r\n                                onChange={(date) => setEnrollmentDate(date)}\r\n                                name=\"loanStartDate\"\r\n                            />\r\n                {formik.touched.loanStartDate && formik.errors.loanStartDate ? (\r\n                  <div class=\"text-danger\">{formik.errors.loanStartDate}</div>\r\n                ) : null}\r\n\r\n            </Form.Group>\r\n\r\n              <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                <Form.Label>Loan amount</Form.Label>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  name=\"loan_amount\"\r\n                  placeholder=\"Enter loan amount\"\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.loan_amount}\r\n                />\r\n                {formik.touched.loan_amount && formik.errors.loan_amount ? (\r\n                  <div class=\"text-danger\">{formik.errors.loan_amount}</div>\r\n                ) : null}\r\n\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-3 form-group required\" controlId=\"formBasicEmail\">\r\n                <Form.Label>Interest rate</Form.Label>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  name=\"interest_rate\"\r\n                  placeholder=\"Enter interest rate\"\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.interest_rate}\r\n\r\n                />\r\n                {formik.touched.interest_rate && formik.errors.interest_rate ? (\r\n                  <div class=\"text-danger\">{formik.errors.interest_rate}</div>\r\n                ) : null}\r\n\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-3 form-group required\" controlId=\"formBasicEmail\">\r\n                <Form.Label>Tenure</Form.Label>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  name=\"tenure\"\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.tenure}\r\n\r\n                />\r\n                {formik.touched.tenure && formik.errors.tenure ? (\r\n                  <div class=\"text-danger\">{formik.errors.tenure}</div>\r\n                ) : null}\r\n\r\n              </Form.Group>\r\n              <Form.Group as={Col} className=\"mb-3 pl-0 pr-0\" controlId=\"formGridAddress1\">\r\n                <Form.Label>EMI payout</Form.Label>\r\n                <select\r\n                    className=\"form-control\"\r\n                    name=\"EMI_payout\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.EMI_payout}\r\n                >\r\n                    <option key=\"\" value=\"\">Select payout</option>\r\n\r\n                    {/* <option key=\"daily\" value=\"daily\">Daily</option> */}\r\n                    <option key=\"weekly\" value=\"weekly\">Weekly</option>\r\n                    <option key=\"monthly\" value=\"fortnight\">Fortnight</option>\r\n\r\n                </select>\r\n                {formik.touched.EMI_payout && formik.errors.EMI_payout ? (\r\n                  <div class=\"text-danger\">{formik.errors.EMI_payout}</div>\r\n                ) : null}\r\n\r\n            </Form.Group>\r\n\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                Calculate\r\n              </Button>\r\n\r\n            </Form>\r\n            </Container>\r\n            </Col>\r\n            <Col md={8}>\r\n            <Card border=\"primary\" header\r\n                        key={0}\r\n                        text={'dark'}\r\n                        // style={{ width: '18rem' }}\r\n                        className=\"m-2\"\r\n                        ref={componentRef}\r\n                    >\r\n                      {/* {isclickPrint?<h2 className=\"text-center mb-3\">AA2 MicroFinance Foundation</h2>:\"\"} */}\r\n                        <Card.Header className=\"bg-primary text-center\"><b>AA2 Micro Finance EMI Details</b><svg onClick={handlePrint} xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" className=\"bi bi-printer float-right cursar\" viewBox=\"0 0 16 16\">\r\n  <path d=\"M2.5 8a.5.5 0 1 0 0-1 .5.5 0 0 0 0 1z\"/>\r\n  <path d=\"M5 1a2 2 0 0 0-2 2v2H2a2 2 0 0 0-2 2v3a2 2 0 0 0 2 2h1v1a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-1h1a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-1V3a2 2 0 0 0-2-2H5zM4 3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v2H4V3zm1 5a2 2 0 0 0-2 2v1H2a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1h-1v-1a2 2 0 0 0-2-2H5zm7 2v3a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1z\"/>\r\n</svg></Card.Header>\r\n                        <Card.Body >\r\n                            <Table  size={\"sm\"} className=\"bg-white rounded\" striped bordered hover responsive>\r\n                            <thead>\r\n                              <tr>\r\n                                  <th>EMI date</th>\r\n                                  <th>EMI Amount</th>\r\n                                  <th>Principal</th>\r\n                                  <th>Interest</th>\r\n                                  <th>Outstanding</th>\r\n                              </tr>\r\n                          </thead>\r\n                                <tbody>\r\n                                {calculatedData.map((value,id)=>(<tr>\r\n                                    <td>{value.date}</td>\r\n                                    <td>{value.EMI}</td>\r\n                                    <td>{value.principal}</td>\r\n                                    <td>{value.int_amount}</td>\r\n                                    <td>{value.outstanding }</td>\r\n                                </tr>))}\r\n                                </tbody>\r\n                            </Table>\r\n\r\n                        </Card.Body>\r\n                    </Card>\r\n            </Col>\r\n\r\n    </Row>\r\n    </Container>            \r\n        </>\r\n    );\r\n}\r\n\r\nexport default EmiCalculator;","import React, { useEffect, useState } from 'react';\r\nimport { Table, Button, Container, Row, Col, Modal, InputGroup, FormLabel } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport groupLoan from '../../models/groupLoan';\r\nimport Loader from '../layout/Loader';\r\nimport DatePicker from \"react-datepicker\";\r\nimport moment from \"moment\"\r\n\r\nfunction DueEmis(props) {\r\n    const [showDeleteModel, setShowDeleteModel] = useState(false)\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [dueEmis, setDueEmis] = useState([]);\r\n    const [paidID, setPaidID] = useState(0)\r\n    const [enrollmentDate, setEnrollmentDate] = useState(new Date());\r\n    useEffect(() => {\r\n        getDueEmisRecord();\r\n    }, [])\r\n\r\n    const getDueEmisRecord = (today = moment().format(\"yyyy-MM-DD\")) => {\r\n        setisShowLoader(true);\r\n        groupLoan.EmiModel.getDueEmis(today).then(res => {\r\n            setisShowLoader(false);\r\n            if (res.statusCode == 200) {\r\n                let emiData = [];\r\n                emiData = res.body.message.map(emi=>{ \r\n                   // return emi\r\n                   emi[\"loan_table_id\"]=emi.loan_account_no.substring(11)\r\n                   return emi;\r\n                });\r\n                setDueEmis(emiData);\r\n            } else {\r\n                setDueEmis([]);\r\n            }\r\n        })\r\n    }\r\n    const paidEMI = async()=>{\r\n        setShowDeleteModel(false);\r\n        try{\r\n            setisShowLoader(true);\r\n            let response = await groupLoan.EmiModel.paidEmi(paidID);\r\n            setisShowLoader(false);\r\n            if(response.statusCode == 200){\r\n                let UpdatedList = dueEmis.filter((emidata,idx)=>emidata.emi_id!=paidID);\r\n                setDueEmis(UpdatedList);\r\n            }\r\n        }catch (error) {\r\n            console.log(error.response.body.message);\r\n            setisShowLoader(false);\r\n        }\r\n    }\r\n    const paidHandle=(id)=>{\r\n        setPaidID(id);        \r\n        setShowDeleteModel(true);\r\n    }\r\n    const changeEmiDate = (selectedDate)=>{\r\n        setEnrollmentDate(selectedDate)\r\n        getDueEmisRecord(moment(selectedDate).format(\"yyyy-MM-DD\"));\r\n    }\r\n    return (\r\n        <>\r\n      <Modal show={showDeleteModel} onHide={()=>setShowDeleteModel(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Paid EMI </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>Are you sure?</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={()=>setShowDeleteModel(false)}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={()=>paidEMI()}>\r\n            Paid\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>        \r\n\r\n            <Loader show={isShowLoader} />\r\n            <Container fluid>\r\n                <h2 className=\"text-info text-center\">Due EMIs</h2>\r\n                <Row>\r\n              <Col>\r\n                    <InputGroup className=\"mb-3\">\r\n                    <FormLabel className=\"mr-3\">EMI Date:</FormLabel>\r\n                    <DatePicker class=\"form-control\"\r\n                                selected={enrollmentDate}\r\n                                onChange={(date) => changeEmiDate(date)}\r\n                                name=\"enrollment_date\"\r\n                                dateFormat=\"dd/MM/yyyy\"\r\n                            />\r\n\r\n                    </InputGroup>\r\n\r\n                        <Table className=\" shadow-lg p-3 mb-5 bg-white rounded small\" striped bordered hover responsive>\r\n                            <thead className=\"bg-primary\">\r\n                                <tr>\r\n                                    <th>Account No.</th>\r\n                                    <th>Group</th>\r\n                                    <th>Member ID</th>\r\n                                    <th>Name</th>\r\n                                    <th>No. of Emi</th>\r\n                                    <th>EMI Amount</th>\r\n                                    <th>Outstanding</th>\r\n                                    <th>Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {dueEmis.map((emi, id) => (<tr>\r\n                                    <td><Link to={{\r\n                                        pathname: '/loanApprovalDetails',\r\n                                        state: emi.loan_table_id\r\n                                        }}>{emi.loan_account_no}</Link></td>\r\n                                    <td><Link to=\"/memberGroup\">{emi.member_group_id}</Link></td>\r\n                                    <td><Link to={{\r\n                                        pathname: '/viewMemberDetail',\r\n                                        state: emi.member_id\r\n                                        }}>{emi.member_id}</Link></td>\r\n                                    <td><Link to={{\r\n                                        pathname: '/viewMemberDetail',\r\n                                        state: emi.member_id\r\n                                        }}>{emi.member_name}</Link></td>\r\n                                    <td>{emi.remain_EMI}</td>\r\n                                    <td>{emi.EMI_amount}</td>\r\n                                    <td>{emi.outstanding}</td>\r\n                                    <td><Button size={\"sm\"} variant=\"success\" onClick={() => paidHandle(emi.emi_id) }>Pay</Button></td>\r\n                                </tr>))}\r\n                            </tbody>\r\n                        </Table>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default DueEmis;","import React from 'react'\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport Home from './components/home/Home'\r\nimport Registration from './components/users/Registration'\r\nimport Login from './components/users/Login'\r\nimport FillItr from './components/finance-Itr/FillItr'\r\nimport InnerLayout from './components/layout/InnerLayout'\r\nimport CategoryList from './components/food-order/CategoryList'\r\nimport MyCart from './components/food-order/MyCart'\r\nimport PlaceOrder from './components/food-order/PlaceOrder'\r\nimport OrderSuccess from './components/food-order/OrderSuccess'\r\nimport AdminHome from './components/Admin/Home';\r\nimport CategoryManagement from './components/Admin/CategoryManagement';\r\nimport AddCategory from './components/Admin/AddCategory';\r\nimport OrderHistory from './components/Admin/orders/OrderHistory';\r\nimport UserOrderHistory from './components/users/UserOrderHistory';\r\nimport UserAction from './components/users/user-actions/UserAction';\r\nimport ProductManagement from './components/Admin/products/ProductManagement';\r\nimport AddProduct from './components/Admin/products/AddProduct';\r\nimport EditProduct from './components/Admin/products/EditProduct';\r\nimport OrderFailed from './components/food-order/OrderFailed';\r\nimport FinanceRequests from './components/Admin/finance/FinanceRequests';\r\nimport Form16Requests from './components/Admin/finance/Form16Requests';\r\nimport InqueryForm from './components/home/InqueryForm';\r\nimport MemberGroup from  './components/masterRecord/memberGroup/MemberGroup';\r\nimport AddMemberGroup from  './components/masterRecord/memberGroup/AddMemberGroup';\r\nimport AddMember from  './components/masterRecord/member/AddMember';\r\nimport Member from  './components/masterRecord/member/Member';\r\nimport MemberViewDetails from  './components/masterRecord/member/MemberViewDetails';\r\nimport Scheme from  './components/groupLoan/Scheme';\r\nimport AddScheme from  './components/groupLoan/AddScheme';\r\nimport Dashboard from './components/dashboard/Dashboard';\r\nimport LoanApplication from  './components/groupLoan/LoanApplication';\r\nimport LoanApproval from  './components/groupLoan/LoanApproval';\r\nimport DisburseLoan from  './components/groupLoan/DisburseLoan';\r\nimport LoanApprovalDetails from  './components/groupLoan/LoanApprovalDetails';\r\nimport AllApplications from  './components/groupLoan/AllApplications';\r\nimport EmiCalculator from  './components/groupLoan/EmiCalculator';\r\nimport DueEmis from './components/emis/DueEmis';\r\n\r\nfunction Routes() {\r\n    const checkLogin=()=>{\r\n        console.log(\"check login\")\r\n    }\r\n    return (\r\n        <BrowserRouter>\r\n            <Switch>\r\n            <InnerLayout exact path=\"/\" component={Dashboard}/>\r\n            <InnerLayout exact path=\"/memberGroup\" component={MemberGroup} />\r\n            <InnerLayout exact path=\"/addMemberGroup\" component={AddMemberGroup} />\r\n            <InnerLayout exact path=\"/addMember\" component={AddMember} />\r\n            <InnerLayout exact path=\"/addMember\" component={AddMember} />\r\n            <InnerLayout exact path=\"/scheme\" component={Scheme} />\r\n            <InnerLayout exact path=\"/viewMemberDetail\" component={MemberViewDetails} />\r\n            <InnerLayout exact path=\"/addScheme\" component={AddScheme} />\r\n            <InnerLayout exact path=\"/loanApplication\" component={LoanApplication} />\r\n            <InnerLayout exact path=\"/loanApproval\" component={LoanApproval} />\r\n            <InnerLayout exact path=\"/disburseLoan\" component={DisburseLoan} />\r\n            <InnerLayout exact path=\"/loanApprovalDetails\" component={LoanApprovalDetails} />\r\n            <InnerLayout exact path=\"/allApplications\" component={AllApplications} />\r\n            <InnerLayout exact path=\"/emiCalculator\" component={EmiCalculator} />\r\n            <InnerLayout exact path=\"/dueEmis\" component={DueEmis} />\r\n                <Route path=\"/login\" component={Login} />\r\n                <InnerLayout path=\"/registration\" component={Registration} />\r\n                <InnerLayout path=\"/fillItr\" component={FillItr} />\r\n                <InnerLayout path=\"/CategoryList\" component={CategoryList} />\r\n                <InnerLayout path=\"/myCart\" component={MyCart} />\r\n                <InnerLayout path=\"/placeOrder\" component={PlaceOrder} />\r\n                <InnerLayout path=\"/orderSuccess\" component={OrderSuccess} />\r\n                <InnerLayout path=\"/adminHome\" component={AdminHome} />\r\n                <InnerLayout path=\"/categoryManagement\" component={CategoryManagement} />\r\n                <InnerLayout path=\"/addCategory\" component={AddCategory} />\r\n                <InnerLayout path=\"/orderHistory\" component={OrderHistory} />\r\n                <InnerLayout path=\"/userOrderHistory\" component={UserOrderHistory} />\r\n                <InnerLayout path=\"/userAction\" component={UserAction} />\r\n                <InnerLayout path=\"/productManagement\" component={ProductManagement} />\r\n                <InnerLayout path=\"/addProduct\" component={AddProduct} />\r\n                <InnerLayout path=\"/editProduct\" component={EditProduct} />\r\n                <InnerLayout path=\"/orderFailed\" component={OrderFailed} />\r\n                <InnerLayout path=\"/financeRequests\" component={FinanceRequests} />\r\n                <InnerLayout path=\"/form16Requests\" component={Form16Requests} />\r\n                <InnerLayout path=\"/inqueryForm\" component={InqueryForm} />\r\n                <InnerLayout path=\"/member\" component={Member} />\r\n\r\n            </Switch>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default Routes\r\n","import './App.css';\r\nimport { Provider } from 'react-redux';\r\nimport { store, persistor} from './store';\r\nimport Routes from './Routes';\r\nimport { PersistGate } from 'redux-persist/integration/react'\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <div className=\"App\">\r\n          {/* <Header/> */}\r\n          <Routes/>\r\n        </div>\r\n      </PersistGate>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}