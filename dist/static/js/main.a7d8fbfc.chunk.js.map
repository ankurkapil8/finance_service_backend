{"version":3,"sources":["models/BaseUrl.js","models/interceptor-middleware.js","constants/actionTypes.js","reducers/order.js","reducers/product.js","reducer.js","reducers/auth.js","reducers/common.js","middleware.js","store.js","components/home/InqueryForm.js","components/layout/SectionMenu.js","components/layout/SectionOffers.js","components/layout/LogedInView.js","components/layout/LogedOutView.js","components/layout/Header.js","components/home/Home.js","components/layout/ListErrors.js","components/users/Registration.js","models/user.js","components/layout/Loader.js","components/users/Login.js","components/layout/InnerHeader.js","components/layout/Leftbar.js","components/layout/TopNav.js","components/layout/ErrorBoundary.js","components/layout/InnerLayout.js","components/users/UserOrderHistory.js","components/users/user-actions/UserAction.js","models/masterRecord.js","components/masterRecord/memberGroup/MemberGroup.js","components/masterRecord/memberGroup/AddMemberGroup.js","models/memberDetails.js","components/masterRecord/member/AddMember.js","components/masterRecord/member/Member.js","components/masterRecord/member/MemberViewDetails.js","models/groupLoan.js","components/groupLoan/Scheme.js","components/groupLoan/AddScheme.js","models/dashboard.js","models/processingFee.js","models/expenseRecord.js","components/dashboard/Dashboard.js","components/groupLoan/LoanApplication.js","components/groupLoan/LoanApproval.js","components/groupLoan/DisburseLoan.js","components/groupLoan/EmiCard.js","constants/constants.js","components/print/MemberPrint.js","components/print/EmiCardPrint.js","components/print/BorrowerPrint.js","components/groupLoan/CloseAccount.js","components/groupLoan/LoanApprovalDetails.js","components/groupLoan/AllApplications.js","components/groupLoan/EmiCalculator.js","components/emis/DueEmis.js","components/dashboard/PaidDetailView.js","components/dashboard/RecievedDetailView.js","models/profit.js","components/profit/Profit.js","components/processing-fee/ProcessingFee.js","components/processing-fee/AddProcessingFee.js","components/dashboard/OutstandingDetailView.js","components/expenses/Expense.js","components/expenses/AddExpense.js","Routes.js","App.js","reportWebVitals.js","index.js","agent.js"],"names":["superagent","superagentPromise","_superagent","global","Promise","HOST","window","location","hostname","API_ROOT","encodeURIComponent","axios","interceptors","request","use","successfulReq","jwt","sessionStorage","getItem","headers","error","reject","response","successRes","formatedResponse","console","log","toString","href","REDIRECT","LOGIN","LOGOUT","REGISTER","LOGIN_PAGE_UNLOADED","REGISTER_PAGE_UNLOADED","ASYNC_START","ASYNC_END","UPDATE_FIELD_AUTH","ADD_ITEM_INITIAL","INCREASE_QUANTITY","DECREASE_QUANTITY","RESET_ORDER","STORE_EDIT_PRODUCT","GET_EDIT_PRODUCT","UPDATE_PRODUCT_FIELD","CHANGE_PAGE","MESSAGE","defaultState","addedItem","product","appReducer","combineReducers","auth","state","action","type","inProgress","errors","payload","message","role","record","id","statusCode","jwtToken","isLoginSuccess","subtype","key","value","common","page","redirectTo","order","productId","item","_id","quantity","perItemPrice","price","map","data","prod","rootReducer","undefined","promiseMiddleware","store","next","v","then","dispatch","currentView","getState","viewChangeCounter","skipTracking","res","currentState","promise","body","localStorageMiddleware","setItem","agent","setToken","persistConfig","storage","whitelist","pReducer","persistReducer","reducer","createStore","composeWithDevTools","applyMiddleware","persistor","persistStore","InqueryForm","props","useState","fullName","email","business","dob","Date","gender","service","Phone","setState","dobstate","setdobstate","setmessage","loading","setloading","handleChange","e","target","name","Modal","show","isopen","onHide","hide","Header","closeButton","Title","Body","Alert","variant","onClose","dismissible","Form","onSubmit","ev","preventDefault","serviceType","Inquery","submitInquery","reset","Row","Group","as","Col","controlId","Label","Control","onChange","placeholder","selected","date","dateFormat","showYearDropdown","dateFormatCalendar","yearDropdownItemNumber","scrollableYearDropdown","maxDate","defaultValue","readOnly","Button","disabled","Component","LogedInView","currentUser","className","aactiveClassName","to","LogedOutView","useDispatch","history","useHistory","split","isAdmin","isPrimeMember","onClick","push","handleITRPopup","this","connect","Home","ListErrors","Registration","userDetails","submitForm","isLoading","Auth","register","required","Text","React","login","username","password","post","Loader","Spinner","animation","relative","Login","isShowLoader","user","catch","err","changeEmail","onChangeEmail","changePassword","onChangePassword","document","classList","add","onlogout","remove","onUnload","src","autoFocus","InnerHeader","Leftbar","useSelector","useLocation","process","pathname","Nav","Link","eventKey","TopNav","navClick","setNevClick","ErrorBoundary","hasError","errorInfo","children","InnerLayout","component","rest","showSidebar","setshowSidebar","useEffect","innerWidth","checkLogin","toggleSidebar","hasOwnProperty","render","UserOrderHistory","UserAction","getMemberGroups","get","saveMemberGroups","saveImage","file","MemberGroup","setisShowLoader","memberGroupRecords","setMemberGroupsRecords","getMemberGroup","masterRecord","class","active","Table","group","group_code","group_name","remark","moment","created_at","format","style","top","position","ProgressBar","striped","now","label","AddMemberGroup","values","setValues","isShow","showToast","setShowToast","handleAlertShow","obj","setTimeout","formik","useFormik","initialValues","user_id","validate","resetForm","prevValues","delay","handleSubmit","touched","rows","MemberDetailModel","getMemberDetailsData","member_id","saveMemberDetails","deleteMember","delete","editMember","put","AddMember","enrollmentDate","setEnrollmentDate","setDob","groups","setGroups","image","setImage","baseURL","replace","getMemberDetails","memberDetails","aadhar_card","member_name","age","marital_status","mobile_number","email_id","member_group_id","pan_card_number","driving_license_number","voter_id_number","ration_card_number","bank_account","bank_ifsc_code","bank_account_holder","enrollment_date","date_of_birth","getImage","files","length","fileExtArr","fileExt","formData","FormData","append","status","path","scrollTo","md","alt","Members","showDeleteModel","setShowDeleteModel","deleteID","setDeleteID","memberRecords","setMemberRecords","useMemo","index","col1","col2","col3","col4","col5","columns","accessor","allowFilter","memberRecord","initialData","UpdatedList","filter","member","idx","DefaultColumnFilter","column","filterValue","preFilteredRows","setFilter","count","defaultColumn","Filter","paginate","totalPage","pageNumberArray","i","Pagination","First","gotoPage","Prev","previousPage","canPreviousPage","num","Item","pageIndex","Next","nextPage","canNextPage","Last","useTable","initialState","useFilters","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","pageOptions","pageCount","pageSize","setPageSize","Footer","headerGroup","getHeaderGroupProps","getHeaderProps","getSortByToggleProps","isSorted","isSortedDesc","row","getRowProps","cells","cell","getCellProps","size","EmiModel","calculateEMI","getDueEmis","today","paidEmi","getPaidEmis","loanAccountNo","getAllEmis","getScheme","saveScheme","deleteScheme","getLoanAppInitialData","applyForloan","getApprovalList","getDisburseList","getLoanDetailbyId","approveRejectLoan","getAllLoanApplications","disburseRejectLoan","getSattlementAmount","loan_account_no","closeAccount","Scheme","schemes","setSchemes","getSchemes","groupLoan","scheme","bordered","hover","responsive","scheme_code","scheme_name","max_amount","interest_rate","EMI_type","deleteHandle","AddScheme","Toast","autohide","min","DashboardModel","receivedAmount","paidAmount","countActiveInactive","getProcessingFee","saveProcessingFee","deleteProcessingFee","del","editProcessingFee","getExpense","saveExpense","deleteExpense","editExpense","Dashboard","setPaidAmount","setReceivedAmount","processingFeeReport","setProcessingFeeReport","setCountActiveInactive","expenseReport","setExpenseReport","allEmis","setAllEmis","getReport","allSettled","processingFee","expenseRecord","totalProcessing","forEach","val","amount","total","fee","totalExpense","expense","labels","paidCount","notPaidCount","datasets","backgroundColor","borderColor","borderWidth","toFixed","active_accounts","inactive_accounts","unPaidAmount","width","height","options","maintainAspectRatio","ChartJS","ArcElement","Tooltip","Legend","ContextAwareToggle","callback","decoratedOnClick","useContext","AccordionContext","activeEventKey","useAccordionButton","LoanApplication","schemeRecords","setSchemeRecords","selectedScheme","setSelectedScheme","getSchemesAndMembers","all","scheme_id","application_date","address","loan_amount","EMI_payout","tenure","co_borrower_name","co_borrower_aadhar_card","co_borrower_pan_card","co_borrower_ele_bill","co_borrower_relationship","Accordion","defaultActiveKey","Card","Collapse","selectMember","handleMemberSelection","schems","LoanApproval","loanlist","setLoanlist","getLoanList","loan","loan_id","colSpan","DisburseLoan","EmiCard","border","header","text","handlePrintEMI","xmlns","fill","viewBox","d","showDisburseButton","emiData","paidEmiRecord","EMI","principal","int_amount","outstanding","memo","CIN","licenceNo","companyName","MemberPrint","loanDetails","rowspan","EmiCardPrint","margin","maxWidth","maxHeight","toUpperCase","isMemberRequired","heading","isDeclaration","marginTop","isSign","bottom","textAlign","PureComponent","BorrowerPrint","CloseAccount","sattlementDetails","setSattlementDetails","getDetails","records","fontSize","display","settled_amount","earned_interest","paid_emi_count","LoanApprovalDetails","memberDetailsRef","useRef","applicationRef","useReactToPrint","content","current","documentTitle","handlePrintApplication","emiRef","handlePrintEMICallbak","useCallback","coBorrowerRef","handleCoBorrowerPrint","borrowerRef","handlePrintBorrower","setPaidEmiRecord","isShowEMILoader","setisShowEMILoader","setEmiData","setLoanDetails","setShow","disburseDate","setDisburseDate","handleClose","search","actionTypeParam","URLSearchParams","getLoanDetails","calculateEmi","disburse_date","EmiData","paidData","result","emiDate","EMI_date","actionOnLoan","actionType","actionDisburseLoan","emiCol","emiRecords","applicationRecords","coBorrowRecords","xs","ref","is_approved","is_disbursed","AllApplications","col6","col7","actionStatus","col8","formatedData","Badge","EmiCalculator","calculatedData","setCalculatedData","componentRef","handlePrint","loanStartDate","Container","DueEmis","dueEmis","setDueEmis","paidID","setPaidID","totalEmi","setTotalEmi","getDueEmisRecord","group_loan","member_group","remain_EMI","EMI_amount","emi","substring","parseFloat","paidEMI","emidata","InputGroup","FormLabel","selectedDate","loan_table_id","paidHandle","PaidDetailView","loanData","setLoanData","totalAmount","setTotalAmount","getDetailData","sort","a","b","fontWeight","RecievedDetailView","emis","getData","myDate","parseInt","Profit","totalInterestEarned","setTotalInterestEarned","totalPrincipalEarned","setTotalPrincipalEarned","getProfitData","profit","total_interest_earned","total_principal_earned","showMonthYearPicker","ProcessingFee","processingFees","setProcessingFees","getProcessingFees","particular","date_of_processing","AddProcessingFee","getExpenseDetails","ledger","setLedger","concat","formatPaidAmount","formatReceivedAmount","formatProcessingAmount","formatExpenseAmount","isBefore","calculateBalance","credit","debit","expense_type","balance","Expense","setExpense","getExpenses","date_of_expense","AddExpense","Routes","exact","MemberViewDetails","OutstandingDetailView","Member","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById","responseBody","errorBody","token","tokenPlugin","req","set","requests","url","Order","getProductsByCat","catname","getCatgoryInitialData","placeOrder","getCategoryAdmin","getOrdersHistoryAdmin","getOrderHistoryByUserEmail","addCategory","deleteCategory","editCategory","getProducts","deleteProduct","addProducts","editProducts","Payment","getRazorpayOrderId","updatePaymentStatus","Finance","fillItr","getAdminItr","uploadForm16","getAdminForm16","downloadForm16","fileName","getToken","_token"],"mappings":"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","file":"static/js/main.a7d8fbfc.chunk.js","sourcesContent":["import superagentPromise from 'superagent-promise';\r\nimport _superagent from 'superagent';\r\nimport axios from \"./interceptor-middleware\";\r\nexport const superagent = superagentPromise(_superagent, global.Promise);\r\nexport const HOST = window.location.hostname==\"localhost\"?\"http://localhost:3001/\": '/';\r\nexport const API_ROOT = `${HOST}api`\r\n\r\n\r\nconst encode = encodeURIComponent;\r\nconst responseBody = res => res;\r\nconst errorBody = err =>{\r\n  return err.response\r\n} ;\r\nlet token = null;\r\nconst tokenPlugin = req => {\r\n  if (token) {\r\n    req.set('Token', token);\r\n  }\r\n}\r\nexport const requests = {\r\n    del: url =>\r\n      axios.delete(`${API_ROOT}${url}`).then(responseBody,errorBody),\r\n    get: url =>\r\n      axios.get(`${API_ROOT}${url}`).then(responseBody,errorBody),\r\n    // put: (url, body) =>\r\n    //   superagent.put(`${API_ROOT}${url}`, body).use(tokenPlugin).then(responseBody),\r\n    post: (url, body) =>\r\n      axios.post(`${API_ROOT}${url}`, body).then(responseBody,errorBody)\r\n  };","import axios from 'axios';\r\n//import { useHistory } from 'react-router-dom';\r\n\r\naxios.interceptors.request.use(\r\n    function(successfulReq) {\r\n      let jwt = \"\";\r\n      jwt = sessionStorage.getItem(\"jwt\");\r\n      successfulReq.headers = {'x-access-token' : jwt};\r\n        return successfulReq;\r\n    }, \r\n    function(error) {\r\n      return Promise.reject(error);\r\n    }\r\n  );\r\n\r\n  axios.interceptors.response.use( \r\n    function(successRes) {\r\n        let formatedResponse = successRes;\r\n        formatedResponse[\"statusCode\"] = successRes[\"status\"];\r\n        formatedResponse[\"body\"] = successRes[\"data\"];\r\n        delete formatedResponse[\"data\"];\r\n        return formatedResponse;\r\n    }, \r\n    function(error) {\r\n      //const history = useHistory();\r\n      // console.log(history);\r\n      console.log(error.toString());\r\n      if(error.toString()==\"Error: Request failed with status code 401\"){\r\n        window.location.href = \"/login\";\r\n      }\r\n      // history.push(\"/login\");\r\n      //window.location.href = \"/login\";\r\n        return Promise.reject(error);\r\n    }\r\n  );\r\n\r\nexport default axios;","\r\n  \r\nexport const APP_LOAD = 'APP_LOAD';\r\nexport const REDIRECT = 'REDIRECT';\r\nexport const ARTICLE_SUBMITTED = 'ARTICLE_SUBMITTED';\r\nexport const SETTINGS_SAVED = 'SETTINGS_SAVED';\r\nexport const DELETE_ARTICLE = 'DELETE_ARTICLE';\r\nexport const SETTINGS_PAGE_UNLOADED = 'SETTINGS_PAGE_UNLOADED';\r\nexport const HOME_PAGE_LOADED = 'HOME_PAGE_LOADED';\r\nexport const HOME_PAGE_UNLOADED = 'HOME_PAGE_UNLOADED';\r\nexport const ARTICLE_PAGE_LOADED = 'ARTICLE_PAGE_LOADED';\r\nexport const ARTICLE_PAGE_UNLOADED = 'ARTICLE_PAGE_UNLOADED';\r\nexport const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const DELETE_COMMENT = 'DELETE_COMMENT';\r\nexport const ARTICLE_FAVORITED = 'ARTICLE_FAVORITED';\r\nexport const ARTICLE_UNFAVORITED = 'ARTICLE_UNFAVORITED';\r\nexport const SET_PAGE = 'SET_PAGE';\r\nexport const APPLY_TAG_FILTER = 'APPLY_TAG_FILTER';\r\nexport const CHANGE_TAB = 'CHANGE_TAB';\r\nexport const PROFILE_PAGE_LOADED = 'PROFILE_PAGE_LOADED';\r\nexport const PROFILE_PAGE_UNLOADED = 'PROFILE_PAGE_UNLOADED';\r\nexport const LOGIN = 'LOGIN';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const REGISTER = 'REGISTER';\r\nexport const LOGIN_PAGE_UNLOADED = 'LOGIN_PAGE_UNLOADED';\r\nexport const REGISTER_PAGE_UNLOADED = 'REGISTER_PAGE_UNLOADED';\r\nexport const ASYNC_START = 'ASYNC_START';\r\nexport const ASYNC_END = 'ASYNC_END';\r\nexport const EDITOR_PAGE_LOADED = 'EDITOR_PAGE_LOADED';\r\nexport const EDITOR_PAGE_UNLOADED = 'EDITOR_PAGE_UNLOADED';\r\nexport const ADD_TAG = 'ADD_TAG';\r\nexport const REMOVE_TAG = 'REMOVE_TAG';\r\nexport const UPDATE_FIELD_AUTH = 'UPDATE_FIELD_AUTH';\r\nexport const UPDATE_FIELD_EDITOR = 'UPDATE_FIELD_EDITOR';\r\nexport const FOLLOW_USER = 'FOLLOW_USER';\r\nexport const UNFOLLOW_USER = 'UNFOLLOW_USER';\r\nexport const PROFILE_FAVORITES_PAGE_UNLOADED = 'PROFILE_FAVORITES_PAGE_UNLOADED';\r\nexport const PROFILE_FAVORITES_PAGE_LOADED = 'PROFILE_FAVORITES_PAGE_LOADED';\r\nexport const ADD_ITEM_INITIAL = 'ADD_ITEM_INITIAL';\r\nexport const INCREASE_QUANTITY = 'INCREASE_QUANTITY';\r\nexport const DECREASE_QUANTITY = 'DECREASE_QUANTITY';\r\nexport const RESET_ORDER = 'RESET_ORDER';\r\nexport const STORE_EDIT_PRODUCT = 'STORE_EDIT_PRODUCT';\r\nexport const GET_EDIT_PRODUCT = 'GET_EDIT_PRODUCT';\r\nexport const UPDATE_PRODUCT_FIELD = 'UPDATE_PRODUCT_FIELD';\r\nexport const CHANGE_PAGE = 'CHANGE_PAGE';\r\nexport const MESSAGE = 'MESSAGE'","import {\r\n    ADD_ITEM_INITIAL,\r\n    INCREASE_QUANTITY,\r\n    DECREASE_QUANTITY,\r\n    RESET_ORDER\r\n  } from '../constants/actionTypes';\r\n  const defaultState = {\r\n    addedItem: [],\r\n  };\r\n  \r\n  export default (state = defaultState, action) => {\r\n      switch (action.type) {\r\n        case ADD_ITEM_INITIAL:\r\n            const addedItem =[...state.addedItem,{\r\n                productId:action.item._id,\r\n                quantity:1,\r\n                perItemPrice:action.item.price,\r\n                item:action.item\r\n            }]\r\n            return {...state, addedItem};\r\n        case INCREASE_QUANTITY:\r\n             state.addedItem.map(record=>{\r\n                if(record.productId == action.productId){\r\n                    record.quantity +=1\r\n                }\r\n                return record;\r\n            });\r\n            return {...state,state}\r\n        case DECREASE_QUANTITY:\r\n            state.addedItem.map(record=>{\r\n                if(record.productId == action.productId && record.quantity !=0){\r\n                        record.quantity -=1\r\n                }\r\n                return record;\r\n            });\r\n            return {...state,state}\r\n        case RESET_ORDER:\r\n            state.addedItem = []\r\n            return {...state}\r\n        default:\r\n          return state;\r\n      }\r\n      return state;\r\n    };","import {\r\n    STORE_EDIT_PRODUCT,\r\n    GET_EDIT_PRODUCT,\r\n    UPDATE_PRODUCT_FIELD\r\n  } from '../constants/actionTypes';\r\n  const defaultState = {\r\n    product: {},\r\n  };\r\n  \r\n  export default (state = defaultState, action) => {\r\n      switch (action.type) {\r\n        case STORE_EDIT_PRODUCT:\r\n            return {...state,\r\n                product:action.data \r\n            };\r\n        case GET_EDIT_PRODUCT:\r\n            return {...state};\r\n        case UPDATE_PRODUCT_FIELD:\r\n            let prod = state.product;\r\n            prod[action.data.key]=action.data.value;\r\n           return {...state,product:prod}\r\n        default:\r\n          return state;\r\n      }\r\n      return state;\r\n    };","import auth from './reducers/auth';\r\nimport common from './reducers/common';\r\nimport order from './reducers/order';\r\nimport product from './reducers/product';\r\nimport { combineReducers } from 'redux';\r\n//import { routerReducer } from 'react-router-redux';\r\n\r\nconst appReducer = combineReducers({\r\n  auth,\r\n  common,\r\n  order,\r\n  product\r\n  /* your app’s top-level reducers */\r\n})\r\n\r\nconst rootReducer = (state, action) => {\r\n  if (action.type === 'LOGOUT') {\r\n    state = undefined\r\n  }\r\n\r\n  return appReducer(state, action)\r\n}\r\nexport default rootReducer\r\n// export default combineReducers({\r\n//   auth,\r\n//   common,\r\n//   order,\r\n//     //router: routerReducer\r\n//   });","import {\r\n    LOGIN,\r\n    REGISTER,\r\n    LOGIN_PAGE_UNLOADED,\r\n    REGISTER_PAGE_UNLOADED,\r\n    ASYNC_START,\r\n    UPDATE_FIELD_AUTH,\r\n    LOGOUT\r\n  } from '../constants/actionTypes';\r\n  \r\n  export default (state = {}, action) => {\r\n  //console.log(action);\r\n    switch (action.type) {\r\n      case LOGIN:\r\n        return {\r\n          ...state,\r\n          inProgress: false,\r\n          errors: action.payload.message,\r\n          role:action.payload.record?.role,\r\n          id:action.payload.record?.id,\r\n          statusCode:action.payload.jwtToken != \"\"?\"200\":\"\",\r\n          isLoginSuccess:action.payload.jwtToken != \"\"? true:false\r\n        }\r\n      case REGISTER:\r\n        return {\r\n          ...state,\r\n          inProgress: false,\r\n          errors: action.payload,\r\n          statusCode:action.payload.statusCode\r\n        };\r\n      case LOGIN_PAGE_UNLOADED:\r\n      return{\r\n        ...state,\r\n        //errors: action.payload,\r\n        //userDetails:\r\n      }\r\n      case REGISTER_PAGE_UNLOADED:\r\n        return {};\r\n      case ASYNC_START:\r\n        if (action.subtype === LOGIN || action.subtype === REGISTER) {\r\n          return { ...state, inProgress: true };\r\n        }\r\n        break;\r\n      case UPDATE_FIELD_AUTH:\r\n        return { ...state, [action.key]: action.value };\r\n      default:\r\n        return state;\r\n    }\r\n    return state;\r\n  };","import {\r\n    LOGOUT,\r\n    REDIRECT,\r\n    CHANGE_PAGE,\r\n    MESSAGE\r\n  } from '../constants/actionTypes';\r\n  const defaultState = {\r\n    appName: 'Conduit',\r\n    token: null,\r\n    viewChangeCounter: 0\r\n  };\r\n  \r\n  export default (state = {page:\"\"}, action) => {\r\n    //console.log(action);\r\n      switch (action.type) {\r\n        case REDIRECT:\r\n            return { ...state, redirectTo: null };\r\n        case CHANGE_PAGE:\r\n            return {  ...state, page: action.page };\r\n        case MESSAGE:\r\n          return {...state, message:action.message}\r\n        default:\r\n          return state;\r\n      }\r\n      return state;\r\n    };","import agent from './agent';\r\nimport {\r\n  ASYNC_START,\r\n  ASYNC_END,\r\n  LOGIN,\r\n  LOGOUT,\r\n  REGISTER\r\n} from './constants/actionTypes';\r\n\r\nconst promiseMiddleware = store => next => action => {\r\n  if (isPromise(action.payload)) {\r\n    store.dispatch({ type: ASYNC_START, subtype: action.type });\r\n\r\n    const currentView = store.getState().viewChangeCounter;\r\n    const skipTracking = action.skipTracking;\r\n\r\n    action.payload.then(\r\n      res => {\r\n        const currentState = store.getState()\r\n        if (!skipTracking && currentState.viewChangeCounter !== currentView) {\r\n          return\r\n        }\r\n        action.payload = res;\r\n        store.dispatch({ type: ASYNC_END, promise: action.payload });\r\n        store.dispatch(action);\r\n      },\r\n      error => {\r\n        const currentState = store.getState()\r\n        if (!skipTracking && currentState.viewChangeCounter !== currentView) {\r\n          return\r\n        }\r\n        action.error = true;\r\n        action.payload = error.response.body;\r\n        if (!action.skipTracking) {\r\n          store.dispatch({ type: ASYNC_END, promise: action.payload });\r\n        }\r\n        store.dispatch(action);\r\n      }\r\n    );\r\n\r\n    return;\r\n  }\r\n\r\n  next(action);\r\n};\r\n\r\nconst localStorageMiddleware = store => next => action => {\r\n  if (action.type === LOGIN && action.payload != undefined) {\r\n    if (action.payload.jwtToken!=\"\") {\r\n      window.sessionStorage.setItem('jwt', action.payload.jwtToken);\r\n      agent.setToken(action.payload.jwtToken);\r\n    }\r\n  } else if (action.type === LOGOUT) {\r\n    window.sessionStorage.setItem('jwt','');\r\n    agent.setToken(null);\r\n  }\r\n\r\n   next(action);\r\n};\r\n\r\nfunction isPromise(v) {\r\n  return v && typeof v.then === 'function';\r\n}\r\n\r\n\r\nexport { promiseMiddleware, localStorageMiddleware }","import { applyMiddleware, createStore } from 'redux';\r\nimport reducer from './reducer';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport { promiseMiddleware, localStorageMiddleware } from './middleware';\r\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\r\nimport storage from 'redux-persist/lib/storage/session';\r\nconst persistConfig = {\r\n  key: 'authType',\r\n  storage: storage,\r\n  whitelist: ['auth'] // which reducer want to store\r\n};\r\nconst pReducer = persistReducer(persistConfig, reducer);\r\nconst getMiddleware = () => {\r\n      return applyMiddleware( promiseMiddleware, localStorageMiddleware);\r\n  };\r\nconst store = createStore(pReducer,composeWithDevTools(getMiddleware()));\r\nconst persistor = persistStore(store);\r\nexport { persistor, store };","import React, { useState } from 'react'\r\nimport { Button, Form, Col, Row, Container, Modal,Alert } from 'react-bootstrap';\r\nimport agent from '../../agent'\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nfunction InqueryForm(props) {\r\n    const [state, setState] = useState(\r\n        {fullName:\"\",\r\n            email:\"\",\r\n            business:\"\",\r\n            dob:new Date(),\r\n            gender:\"\",\r\n            service:\"\",\r\n            Phone:\"\"\r\n        });\r\n    const [dobstate, setdobstate] = useState(new Date());\r\n    const [message, setmessage] = useState({type:\"\",message:\"\"})\r\n    const [loading, setloading] = useState(false)\r\n\r\n    const handleChange = (e)=>{\r\n        state[e.target.name] = e.target.value;\r\n        setState(state);\r\n        console.log(state);\r\n    }\r\n    const handleSubmit = (ev)=>{\r\n        ev.preventDefault();\r\n\r\n        state[\"dob\"] = dobstate;\r\n        state[\"service\"] = props.serviceType;\r\n        setState(state);\r\n        console.log(state);\r\n        setloading(true);\r\n        agent.Inquery.submitInquery(state).then((res=>{\r\n            if(res.statusCode == 200){\r\n                ev.target.reset();\r\n                message.type = \"success\";\r\n                message.message = \"Your Details has been submited. Our agent will contact you soon.\"\r\n            }else{\r\n                message.type = \"error\";\r\n                message.message = \"Something went wrong. Please try again.\"\r\n            }\r\n            setmessage(message);\r\n            setloading(false);\r\n\r\n        }))\r\n    }\r\n    return (\r\n        <>\r\n\r\n        <Modal show={props.isopen} onHide={props.hide} >\r\n\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Enquiry</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                {  message.type != \"\"? \r\n                message.type ==\"success\"?\r\n                <Alert key={message.type} variant={\"success\"} onClose={() => setmessage({type:\"\",message:\"\"})} dismissible>\r\n                    {message.message}\r\n                </Alert>:<Alert key={message.type} variant={\"danger\"} onClose={() => setmessage({type:\"\",message:\"\"})} dismissible>\r\n                    {message.message}\r\n                </Alert>:\"\"        \r\n                }\r\n\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridPassword\">\r\n                            <Form.Label>Full Name</Form.Label>\r\n                            <Form.Control onChange={handleChange} type=\"text\" name=\"fullName\"/>\r\n                        </Form.Group>\r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"formGridEmail\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type=\"email\" onChange={handleChange} name=\"email\" placeholder=\"Enter email\" />\r\n                        </Form.Group>\r\n\r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridAddress1\">\r\n                        <Form.Label>Business</Form.Label>\r\n                        <Form.Control type=\"text\" onChange={handleChange}  name=\"business\"/>\r\n                    </Form.Group>\r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridAddress1\">\r\n                        <Form.Label>Date of Birth</Form.Label>\r\n                        <DatePicker\r\n                         selected={dobstate} \r\n                         onChange={date=>setdobstate(date)}\r\n                         dateFormat=\"dd/MM/yyyy\"\r\n                         showYearDropdown\r\n                         dateFormatCalendar=\"MMMM\"\r\n                         yearDropdownItemNumber={50}\r\n                         scrollableYearDropdown\r\n                         maxDate={new Date()}\r\n                         />\r\n                    </Form.Group>\r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridState\">\r\n                    <Form.Label>Gender</Form.Label>\r\n                    <Form.Control name=\"gender\" as=\"select\" onChange={handleChange} defaultValue=\"Choose...\">\r\n                        <option>Choose...</option>\r\n                        <option value=\"male\">Male</option>\r\n                        <option value=\"female\">Female</option>\r\n                    </Form.Control>\r\n                    </Form.Group>                        \r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridState\">\r\n                    <Form.Label>Service</Form.Label>\r\n                        <Form.Control onChange={handleChange} type=\"text\" name=\"service\" value={props.serviceType} readOnly/>\r\n                    </Form.Group>                        \r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridAddress1\">\r\n                        <Form.Label>Phone</Form.Label>\r\n                        <Form.Control type=\"text\" onChange={handleChange}  name=\"phone\"/>\r\n                    </Form.Group>\r\n                    </Form.Row>\r\n\r\n                    <Button variant=\"primary\" type=\"submit\" disabled={loading}>\r\n                    {loading ? 'Loading…' : \"Submit\"}\r\n\r\n                    </Button>\r\n                </Form>\r\n            </Modal.Body>\r\n        </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default InqueryForm\r\n","import React, { Component} from 'react'\r\n//import ItrPopup from '../finance-Itr/ItrPopup'\r\nimport InqueryForm from '../home/InqueryForm'\r\nimport {Link} from 'react-router-dom';\r\n\r\n  class SectionMenu extends Component {\r\n    isopen = false;\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        isopen:false,\r\n        openEnqueryForm:false,\r\n        serviceType:\"\"\r\n      }\r\n    }\r\n    handleITRPopup = () =>{\r\n      this.setState({\r\n        isopen:this.state.isopen?false:true\r\n      })\r\n    }\r\n    handleEnqueryForm = (serviceType = \"\")=>{\r\n      console.log(serviceType);\r\n      this.setState({\r\n        openEnqueryForm:this.state.openEnqueryForm?false:true,\r\n        serviceType:serviceType\r\n      })\r\n\r\n    }\r\n    render() {\r\n        return (\r\n          <>\r\n            <section className=\"text-center \">\r\n            <div className=\"container\">\r\n              <div className=\"col-md-12 shadow-sm p-5 service \">\r\n                <div className=\"row roww\">\r\n                  <div className=\"col-md-2 col-sm-3 col-xs-3 p-2 service-box\" onClick={this.handleITRPopup}>\r\n                    <img src={process.env.PUBLIC_URL + '/assets/img/itr.png'} alt=\"\"/>\r\n                    <h5 className=\"my-4\">Fill ITR</h5>\r\n                  </div>\r\n                 \r\n                  <div className=\"col-md-2 col-sm-3 col-xs-3 p-2 service-box \">\r\n                  <Link to=\"/CategoryList\">\r\n                    <img  src={process.env.PUBLIC_URL + '/assets/img/food.png'} alt=\"\"/>\r\n                    <h5 className=\"my-4\">FOOD</h5></Link>\r\n                  </div>\r\n                  <div className=\"col-md-2 col-sm-3 col-xs-3 p-2 service-box\" onClick={()=>this.handleEnqueryForm(\"Catering\")}>\r\n\r\n                    <img src={process.env.PUBLIC_URL + '/assets/img/catering.png'} alt=\"\"/>\r\n                    <h5 className=\"my-4\">Catering</h5>\r\n                  </div>\r\n                  <div className=\"col-md-2 col-sm-3 col-xs-3 p-2 service-box\" onClick={()=>this.handleEnqueryForm(\"Balance Sheet\")}>\r\n\r\n                    <img src={process.env.PUBLIC_URL + '/assets/img/finance.png'} alt=\"\"/>\r\n                    <h5 className=\"my-4\">Financial Consultancy</h5>\r\n                  </div>\r\n                  <div className=\"col-md-2 col-sm-3 col-xs-3 p-2 service-box\" onClick={()=>this.handleEnqueryForm(\"Investment Planning\")}>\r\n\r\n                    <img src={process.env.PUBLIC_URL + '/assets/img/investment.png'} alt=\"\"/>\r\n                    <h5 className=\"my-4\">Investment Planning</h5>\r\n                  </div>\r\n                  <div className=\"col-md-2 col-sm-3 col-xs-3 p-2 service-box\" onClick={()=>this.handleEnqueryForm(\"GST filing\")}>\r\n                    <img src={process.env.PUBLIC_URL + '/assets/img/gst.png'} alt=\"\"/>\r\n                    <h5 className=\"my-4\">GST Filing </h5>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n          {/* <ItrPopup isopen={this.state.isopen} hide={this.handleITRPopup}/> */}\r\n          <InqueryForm isopen={this.state.openEnqueryForm} serviceType={this.state.serviceType} hide={this.handleEnqueryForm}/>         \r\n        </>\r\n        )\r\n    }\r\n}\r\nexport default SectionMenu\r\n","import React, { Component } from 'react'\r\n\r\nexport default class SectionOffers extends Component {\r\n    render() {\r\n        return (\r\n            <section className=\"text-center\">\r\n                <div className=\"container\">\r\n                    <h4 className=\"h4-responsive font-weight-bold my-3 text-primary\">Best Offers</h4>\r\n                    <div className=\"row my-5\">\r\n                        <div className=\"col-md-3\">\r\n                            <img src={process.env.PUBLIC_URL + '/assets/img/s-1.jpeg'} className=\"img-fluid radius\" alt=\"\" />\r\n                            <h5 className=\"font-weight-bold my-4 text-primary\">Offer 1</h5>\r\n                            <p className=\"grey-text mb-md-0 mb-5 text-primary\">Up to 50% Off\r\n                            </p>\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                            <img src={process.env.PUBLIC_URL + '/assets/img/s-2.jpg'} className=\"img-fluid radius\" alt=\"\" />\r\n                            <h5 className=\"font-weight-bold my-4 text-primary\">offer 2</h5>\r\n                            <p className=\"grey-text mb-md-0 mb-5 text-primary\">Up to 60% off\r\n                  </p>\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                            <img src={process.env.PUBLIC_URL + '/assets/img/s-4.jpeg'} className=\"img-fluid radius\" alt=\"\" />\r\n                            <h5 className=\"font-weight-bold my-4 text-primary\">offer 3</h5>\r\n                            <p className=\"grey-text mb-0 text-primary\">Up to 50% off\r\n                  </p>\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                            <img src={process.env.PUBLIC_URL + '/assets/img/s-3.jpeg'} className=\"img-fluid radius\" alt=\"\" />\r\n                            <h5 className=\"font-weight-bold my-4 text-primary\">Offer 4</h5>\r\n                            <p className=\"grey-text mb-0 text-primary\">Standard EMI Options Available\r\n                  </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { Route,NavLink } from 'react-router-dom'\r\n\r\nfunction LogedInView(props) {\r\n    if(!props.currentUser.errors || props.currentUser.errors.statusCode ==500){\r\n        return (\r\n\r\n        <li className=\"nav-item\">\r\n        <NavLink aactiveClassName=\"active\" className=\"nav-link\" to=\"/login\">Login</NavLink>\r\n        </li>\r\n        )\r\n    }\r\n    return null;\r\n\r\n}\r\n\r\nexport default LogedInView\r\n","import React from 'react'\r\nimport { Route, NavLink } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux'\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nimport {\r\n    LOGOUT\r\n  } from '../../constants/actionTypes';\r\nfunction LogedOutView(props) {\r\n    const dispatch = useDispatch();\r\n    let history = useHistory();\r\n\r\n    const logout = ()=>{\r\n         dispatch({ type: LOGOUT })\r\n           console.log(\"hollo\");\r\n           history.push(\"/\");\r\n       }\r\n         if (props.currentUser.errors && props.currentUser.errors.statusCode == 200) {\r\n        let name = props.currentUser.email.split(\"@\");\r\n\r\n        return (<>\r\n            \r\n            {props.currentUser.errors.body.record.isAdmin?<li className=\"nav-item\">\r\n            <li className=\"nav-item\">\r\n            <NavLink aactiveClassName=\"active\" to=\"/adminHome\" className=\"nav-link\">Admin</NavLink>\r\n            </li>\r\n                \r\n            </li>:\"\"}            \r\n            <li className=\"nav-item\">\r\n                <NavLink aactiveClassName=\"active\" to=\"/userAction\" className=\"nav-link\">\r\n                    {name[0]}\r\n\r\n                    {props.currentUser.errors.body.record.isPrimeMember?<label className=\"clr-cyan\">(Prime member)</label>:\"\"}  \r\n\r\n                    \r\n                    </NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <a className=\"nav-link\" onClick={logout} >Logout</a>\r\n                {/* <NavLink className=\"nav-link\">{props.email}</NavLink> */}\r\n            </li>\r\n        </>\r\n        )\r\n    }\r\n    return null;\r\n}\r\n\r\nexport default LogedOutView\r\n","import React, { Component } from 'react'\r\nimport { Route,NavLink, Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport LoggedInView from './LogedInView';\r\nimport LoggedOutView from './LogedOutView';\r\n// import ItrPopup from '../finance-Itr/ItrPopup'\r\n\r\nclass Header extends Component {\r\n    isopen = false;\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        isopen:false\r\n      }\r\n    }\r\n    handleITRPopup = () =>{\r\n        this.setState({\r\n          isopen:this.state.isopen?false:true\r\n        })\r\n      }\r\n  \r\n    render(){\r\n\r\n    return (\r\n        <header>\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark fixed-top scrolling-navbar\">\r\n                <div className=\"container\">\r\n                    <NavLink className=\"navbar-brand\" to=\"/\"> <h2>AA2 Mutualhelp</h2></NavLink>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent-7\"\r\n                        aria-controls=\"navbarSupportedContent-7\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent-7\">\r\n                        <ul className=\"navbar-nav ml-auto\">\r\n                            <li className=\"nav-item\">\r\n                            {/* <NavLink aactiveClassName=\"active\" className=\"nav-link\" to=\"/\">Home</NavLink> */}\r\n\r\n                            </li>\r\n                            {/* <li className=\"nav-item\" onClick={this.handleITRPopup}>\r\n                                <a className=\"nav-link\" onClick={this.handleITRPopup}>File ITR</a>\r\n                            </li> */}\r\n                            {/* <li className=\"nav-item\">\r\n                                <NavLink activeClassName=\"active\" to=\"/CategoryList\" className=\"nav-link\">Order Food</NavLink>\r\n                                \r\n                            </li> */}\r\n                            <LoggedOutView currentUser={this.props}/>\r\n                            <LoggedInView currentUser={this.props}/>\r\n\r\n                        </ul>\r\n\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n            <div className=\"view\">\r\n                <div className=\"mask rgba-gradient d-flex justify-content-center align-items-center\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12 white-text text-center mx-auto  mb-5 wow fadeInLeft\" data-wow-delay=\"0.3s\">\r\n                                <h1 className=\"my-3 text-center mx-auto font-weight-bold wow fadeInLeft\">Services, on demand.</h1>\r\n\r\n                                <div className=\"ml-auto mr-auto main-search \">\r\n\r\n                                    <form action=\"\" className=\"search-service\">\r\n                                        <input className=\"search-form form-control form-control-lg\" type=\"text\" placeholder=\"Search Services\" />\r\n                                    </form>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* <ItrPopup isopen={this.state.isopen} hide={this.handleITRPopup}/> */}\r\n        </header>\r\n    )}\r\n}\r\n\r\nconst mapStateToProps = state => ({ ...state.auth});\r\nconst mapDispatchToProps = dispatch => ({\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header)\r\n","import React from 'react'\r\nimport SectionMenu from '../layout/SectionMenu'\r\nimport SectionOffers from '../layout/SectionOffers'\r\nimport Header from '../layout/Header'\r\nimport Footer from '../layout/Footer'\r\nfunction Home() {\r\n    return (\r\n        <>\r\n            <Header />\r\n            <SectionMenu />\r\n            {/* <SectionOffers /> */}\r\n            <Footer />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React, { Component } from 'react'\r\nimport { Button, Form, Col, Alert } from 'react-bootstrap';\r\n\r\nexport default class ListErrors extends Component {\r\n    render() {\r\n        const errors = this.props.errors;\r\n        const statusCode = this.props.statusCode;\r\n        if (errors) {\r\n            return (\r\n                <Alert  variant={statusCode==200?\"success\":\"danger\"}>\r\n                    {errors}\r\n              </Alert>\r\n            );\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { Button, Form, Col, Alert } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom'\r\nimport agent from '../../agent'\r\nimport ListErrors from '../layout/ListErrors';\r\n\r\n\r\nclass Registration extends React.Component {    \r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            userDetails: {},\r\n            errors:\"\",\r\n            statusCode:\"\",\r\n            isLoading:false\r\n        }\r\n    }\r\n    handleChange = (e) => {\r\n        const state = this.state.userDetails\r\n        state[e.target.name] = e.target.value;\r\n        this.setState({ userDetails: state });\r\n        \r\n    }\r\n    submitForm=() => ev =>{\r\n        ev.preventDefault();\r\n        this.setState({ isLoading: true });\r\n        agent.Auth.register(this.state.userDetails).then((res=>{\r\n            this.setState({ errors: res, statusCode:res.statusCode, isLoading:false});\r\n            if(res.statusCode == 200){\r\n                ev.target.reset();\r\n                //this.props.history.push('/login')\r\n            }\r\n        }));\r\n    }\r\n    render() {\r\n\r\n    return (\r\n        <div className=\"login-div\">\r\n            <ListErrors errors={this.state.errors} statusCode={this.state.statusCode} />\r\n            <Form className=\"login-form\" onSubmit={this.submitForm()}>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formBasicEmail\" >\r\n                        <Form.Label>Email address</Form.Label>\r\n                        <Form.Control type=\"email\" name=\"email\" placeholder=\"Enter email\"  onChange={this.handleChange} required/>\r\n                        <Form.Text className=\"text-muted\">\r\n                            We'll never share your email with anyone else.\r\n                    </Form.Text>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formBasicEmail\">\r\n                        <Form.Label>Phone</Form.Label>\r\n                        <Form.Control type=\"phone\" name=\"phone\"  onChange={this.handleChange} required/>\r\n                        <Form.Text className=\"text-muted\">\r\n                            We'll never share your phone no with anyone else.\r\n                    </Form.Text>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n\r\n                <Form.Row>\r\n                    <Form.Group as={Col}  controlId=\"formBasicPassword\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control type=\"password\" name=\"password\" placeholder=\"Password\"  onChange={this.handleChange} required/>\r\n                    </Form.Group>\r\n\r\n                </Form.Row>\r\n                <Form.Row>\r\n                    <Button variant=\"primary\" type=\"submit\" disabled={this.state.isLoading}>\r\n                        \r\n                        {this.state.isLoading ? 'Loading…' : \"Register\"}\r\n                    </Button>\r\n                </Form.Row>\r\n\r\n            </Form>\r\n        </div>\r\n\r\n    )}\r\n}\r\n\r\nexport default Registration\r\n","import {API_ROOT } from \"./BaseUrl\"\r\nimport axios from \"./interceptor-middleware\";\r\n\r\nconst Auth = {\r\n    login: (username, password) =>\r\n    axios.post(`${API_ROOT}/user/login`,  { username, password } ),\r\n  };\r\n  \r\n  export default {Auth};\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\nfunction Loader(props) {\r\n    if(props.show){\r\n        return (\r\n            <Spinner animation=\"border\" role=\"status\" className={props?.relative?\"loader-relative\":\"loader\"}>\r\n            </Spinner>\r\n        )\r\n    }else{\r\n        return null\r\n    }\r\n}\r\n\r\nexport default Loader\r\n","import React, { Component}  from 'react'\r\nimport { Button, Form, Col, Alert } from 'react-bootstrap';\r\nimport { Route, NavLink, Link,useHistory } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport agent from '../../agent'\r\nimport ListErrors from '../layout/ListErrors';\r\nimport user from \"../../models/user\";\r\nimport Loader from '../layout/Loader';\r\nimport {\r\n    UPDATE_FIELD_AUTH,\r\n    LOGIN,\r\n    LOGIN_PAGE_UNLOADED,\r\n    LOGOUT\r\n} from '../../constants/actionTypes';\r\nimport \"./login.css\";\r\nclass Login extends Component {\r\n   // let history = useHistory();\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state ={isShowLoader:false};\r\n        this.changeEmail = ev => {this.props.onChangeEmail(ev.target.value)};\r\n        this.changePassword = ev => {this.props.onChangePassword(ev.target.value)};\r\n    }\r\n    componentDidMount(){\r\n        var body = document.body;\r\n        body.classList.add(\"login-body\");\r\n\r\n        // var dd = document.html;\r\n        // dd.classList.add(\"login-body\");\r\n        this.props.onlogout()\r\n        this.props.onChangeEmail(\"\")\r\n        this.props.onChangePassword(\"\")\r\n    }\r\n    submitForm=ev=> {\r\n        ev.preventDefault();\r\n        this.setState({isShowLoader:true});\r\n        user.Auth.login(this.props.username, this.props.password).then(res=>{\r\n            this.setState({isShowLoader:false});\r\n            console.log(res);\r\n            this.props.onSubmit(res.body);\r\n        }).catch(err=>{\r\n            console.log(err);\r\n        })\r\n    };\r\n\r\n    componentDidUpdate(){\r\n        if(this.props.isLoginSuccess){\r\n            this.props.history.push('/')\r\n        }\r\n        \r\n    }\r\n    \r\n    componentWillUnmount() {\r\n        var body = document.body;\r\n        body.classList.remove(\"login-body\");\r\n\r\n        this.props.onUnload();\r\n      }\r\n    render() {\r\n        const username = this.props.username;\r\n        const password = this.props.password;\r\n        return (\r\n            <div id=\"login\">\r\n           \r\n            <Loader show={this.state.isShowLoader} />\r\n        {/* <Alert key={this.state.errormsg} variant=\"danger\">{this.state.errormsg}</Alert> */}\r\n            <ListErrors errors={this.props.errors} statusCode={this.props.statusCode}/>\r\n            <div className=\"container\">\r\n        <div className=\"card card-container\">\r\n             {/* <img className=\"profile-img-card\" src=\"//lh3.googleusercontent.com/-6V8xOA6M7BA/AAAAAAAAAAI/AAAAAAAAAAA/rzlHcD0KYwo/photo.jpg?sz=120\" alt=\"\" /> */}\r\n            <img id=\"profile-img\" className=\"profile-img-card\" src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\" />\r\n            <p id=\"profile-name\" className=\"profile-name-card\"></p>\r\n            <Form  className=\"form-signin\" onSubmit={this.submitForm}>\r\n                <span id=\"reauth-email\" className=\"reauth-email\"></span>\r\n                <input type=\"text\" autoFocus id=\"inputEmail\" value={username} onChange={this.changeEmail} className=\"form-control\" placeholder=\"Username\" required/>\r\n                <input type=\"password\" id=\"inputPassword\" value={password}  onChange={this.changePassword} className=\"form-control\" placeholder=\"Password\" required/>\r\n                <div id=\"remember\" className=\"checkbox\">\r\n                    <label>\r\n                        <input type=\"checkbox\" value=\"remember-me\"/> Remember me\r\n                    </label>\r\n                </div>\r\n                <Button variant=\"primary btn-signin\" disabled={this.state.isShowLoader} type=\"submit\">{this.state.isShowLoader ? 'Loading…' : \"Sign in\"}</Button>\r\n            </Form>\r\n            <a href=\"#\" className=\"forgot-password\">\r\n                Forgot the password?\r\n            </a>\r\n        </div>\r\n    </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => ({ ...state.auth });\r\nconst mapDispatchToProps = dispatch => ({\r\n    onChangeEmail: value =>\r\n        dispatch({ type: UPDATE_FIELD_AUTH, key: 'username', value }),\r\n    onChangePassword: value =>\r\n        dispatch({ type: UPDATE_FIELD_AUTH, key: 'password', value }),\r\n    onSubmit: (data) =>\r\n        dispatch({ type: LOGIN, payload: data }),\r\n    onUnload: () =>\r\n        dispatch({ type: LOGIN_PAGE_UNLOADED }),\r\n    onlogout:()=>\r\n        dispatch({ type: LOGOUT })\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","import React, { Component } from 'react'\r\nimport { Route,NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport LoggedInView from './LogedInView';\r\nimport LoggedOutView from './LogedOutView';\r\n// import ItrPopup from '../finance-Itr/ItrPopup'\r\n\r\nclass InnerHeader extends Component {\r\n    isopen = false;\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        isopen:false\r\n      }\r\n    }\r\n    handleITRPopup = () =>{\r\n        this.setState({\r\n          isopen:this.state.isopen?false:true\r\n        })\r\n      }\r\n    render(){\r\n    return (\r\n        <header>\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark top-nav-collapse\">\r\n                <div className=\"container\">\r\n                <NavLink className=\"navbar-brand\" to=\"/\"> <h2>AA2 Mutualhelp</h2></NavLink>\r\n\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent-7\"\r\n                        aria-controls=\"navbarSupportedContent-7\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent-7\">\r\n                        <ul className=\"navbar-nav ml-auto\">\r\n                            {/* <li className=\"nav-item\">\r\n                            <NavLink aactiveClassName=\"active\" className=\"nav-link\" to=\"/\">Home</NavLink> */}\r\n\r\n                                {/* <a className=\"nav-link\" href=\"#\">Home\r\n                    <span className=\"sr-only\">(current)</span>\r\n                                </a> */}\r\n                            {/* </li> */}\r\n                            {/* <li className=\"nav-item\" onClick={this.handleITRPopup}>\r\n                                <a className=\"nav-link\" onClick={this.handleITRPopup}>File ITR</a>\r\n                            </li> */}\r\n                            {/* <li className=\"nav-item\"> */}\r\n                                {/* <a className=\"nav-link\" href=\"#\">Order Food</a> */}\r\n                                {/* <NavLink aactiveClassName=\"active\" to=\"/CategoryList\" className=\"nav-link\">Order Food</NavLink>\r\n                            </li> */}\r\n                            {/* <li className=\"nav-item\">\r\n                            <NavLink className=\"nav-link\" to=\"/login\">Login</NavLink>\r\n\r\n                            </li> */}\r\n                            <LoggedOutView currentUser={this.props}/>\r\n                            <LoggedInView currentUser={this.props}/>\r\n\r\n                        </ul>\r\n\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n            {/* <ItrPopup isopen={this.state.isopen} hide={this.handleITRPopup}/> */}\r\n        </header>\r\n    )}\r\n\r\n}\r\nconst mapStateToProps = state => ({ ...state.auth});\r\nconst mapDispatchToProps = dispatch => ({\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InnerHeader)\r\n","import React,{useEffect} from 'react'\r\nimport { useSelector } from \"react-redux\";\r\nimport { Col, Nav} from 'react-bootstrap';\r\nimport { LinkContainer} from 'react-router-bootstrap';\r\nimport { useLocation } from 'react-router-dom'\r\nexport default function Leftbar() {\r\n    const auth = useSelector(state => state.auth);\r\n    const location = useLocation();\r\n    \r\n    return (\r\n        <div className=\"sidebar\" data-color=\"white\" data-active-color=\"danger\">\r\n          <div className=\"logo\">\r\n            <a href=\"#\" className=\"simple-text logo-mini\">\r\n              <div className=\"logo-image-small\">\r\n                <img src={process.env.PUBLIC_URL+\"/assets/img/logo-small.png\"} />\r\n              </div>\r\n            </a>\r\n            <a href=\"#\" className=\"simple-text logo-normal\">\r\n              {auth.username}\r\n            </a>\r\n          </div>\r\n          <div className=\"sidebar-wrapper\">\r\n            <ul className=\"nav\">\r\n              <li className={location.pathname == \"/\"?\"active\":\"\"}>\r\n                {/* <a href=\"./dashboard.html\"> */}\r\n                <LinkContainer to=\"/\">\r\n                <Nav.Link>\r\n                  <i className=\"nc-icon nc-bank\"></i>\r\n                  <p>Dashboard</p>\r\n                  </Nav.Link>\r\n                  </LinkContainer>\r\n                {/* </a> */}\r\n              </li>\r\n              <li className={location.pathname == \"/memberGroup\" || location.pathname == \"/member\" || location.pathname == \"/member\" || location.pathname == \"/addMember\"?\"active\":\"\"}>\r\n                <a data-toggle=\"collapse\" aria-expanded=\"false\" href=\"#homeSubmenu\" className=\"dropdown-toggle\">\r\n                <i className=\"nc-icon nc-badge\"></i>\r\n                  Master Record\r\n                </a>\r\n                <ul className=\"list-unstyled collapse\" id=\"homeSubmenu\" >\r\n                  <li className={location.pathname == \"/memberGroup\" || location.pathname == \"/addMemberGroup\"?\"active\":\"\"}>\r\n                  <LinkContainer to=\"/memberGroup\">\r\n                    <Nav.Link>\r\n                    Member Group\r\n                    </Nav.Link>\r\n                  </LinkContainer>\r\n\r\n                    \r\n                  </li>\r\n                  <li className={location.pathname == \"/member\" || location.pathname == \"/addMember\"?\"active\":\"\"}>\r\n                  <LinkContainer to=\"/member\">\r\n                    <Nav.Link>\r\n                    Members\r\n                    </Nav.Link>\r\n                  </LinkContainer>\r\n\r\n                  </li>\r\n                </ul>\r\n              </li>\r\n              <li \r\n              className={location.pathname == \"/emiCalculator\" \r\n              || location.pathname == \"/scheme\" \r\n              || location.pathname == \"/loanApplication\" \r\n              || location.pathname == \"/loanApproval\"\r\n              || location.pathname == \"/addScheme\"\r\n              || location.pathname == \"/allApplications\"\r\n              || location.pathname == \"/disburseLoan\"\r\n\r\n              ?\"active\":\"\"}>\r\n                <a data-toggle=\"collapse\" aria-expanded=\"false\" href=\"#groupLoan\" className=\"dropdown-toggle\">\r\n                <i className=\"nc-icon nc-umbrella-13\"></i>\r\n                  Group Loan\r\n                </a>\r\n                <ul className=\"list-unstyled collapse\" id=\"groupLoan\" >\r\n                <li className={location.pathname == \"/emiCalculator\"?\"active\":\"\"}>\r\n                    <LinkContainer to=\"/emiCalculator\">\r\n                      <Nav.Link href=\"#\">Calculator</Nav.Link>\r\n                    </LinkContainer>\r\n                  </li>\r\n                  <li className={location.pathname == \"/scheme\" || location.pathname == \"/addScheme\"?\"active\":\"\"}>\r\n                  <LinkContainer to=\"/scheme\">\r\n                    <Nav.Link eventKey=\"link-1\">Scheme</Nav.Link>\r\n                  </LinkContainer>\r\n                  </li>\r\n                  <li className={location.pathname == \"/loanApplication\"?\"active\":\"\"}>\r\n                    <LinkContainer to=\"/loanApplication\">\r\n                      <Nav.Link eventKey=\"link-2\">Application</Nav.Link>\r\n                    </LinkContainer>\r\n                  </li>\r\n                  {(auth.role==\"checker\"||auth.role==\"admin\")? <li className={location.pathname == \"/loanApproval\"?\"active\":\"\"}>\r\n\r\n                    <LinkContainer to=\"/loanApproval\">\r\n                      <Nav.Link eventKey=\"link-2\">Approve Application</Nav.Link>\r\n                    </LinkContainer>\r\n                  </li>:\"\"}\r\n                  {(auth.role==\"checker\"||auth.role==\"admin\")?<li className={location.pathname == \"/disburseLoan\"?\"active\":\"\"}>\r\n                    <LinkContainer to=\"/disburseLoan\">\r\n                      <Nav.Link eventKey=\"link-2\">Disbure Application</Nav.Link>\r\n                      </LinkContainer>\r\n                    </li>:\"\"}\r\n                    <li className={location.pathname == \"/allApplications\"?\"active\":\"\"}>\r\n                      <LinkContainer to=\"/allApplications\">\r\n                        <Nav.Link eventKey=\"link-2\">Loan Applications</Nav.Link>\r\n                        </LinkContainer>\r\n\r\n                    </li>\r\n                </ul>\r\n              </li>              \r\n               <li className={location.pathname == \"/processingFee\"?\"active\":\"\"}>\r\n              <LinkContainer to=\"/processingFee\">\r\n                      <Nav.Link href=\"#\"><i className=\"nc-icon nc-paper\"></i>Raised Fund</Nav.Link>\r\n                </LinkContainer>\r\n              </li>\r\n              <li className={location.pathname == \"/expense\"?\"active\":\"\"}>\r\n              <LinkContainer to=\"/expense\">\r\n                      <Nav.Link href=\"#\"><i className=\"nc-icon nc-paper\"></i>Expenses</Nav.Link>\r\n                </LinkContainer>\r\n              </li>              \r\n\r\n               {/*<li>\r\n             <LinkContainer to=\"/\">\r\n                      <Nav.Link href=\"#\"><i className=\"nc-icon nc-credit-card\"></i>Expenses</Nav.Link>\r\n                </LinkContainer>\r\n\r\n              </li>     */}          \r\n              <li className={location.pathname == \"/dueEmis\"?\"active\":\"\"}>\r\n              <LinkContainer to=\"/dueEmis\">\r\n                      <Nav.Link href=\"#\"><i className=\"nc-icon nc-money-coins\"></i> Payment to collect</Nav.Link>\r\n                </LinkContainer>\r\n\r\n              </li>   \r\n              <li className={location.pathname == \"/profit\"?\"active\":\"\"}>\r\n              <LinkContainer to=\"/profit\">\r\n                      <Nav.Link href=\"#\"><i className=\"nc-icon nc-money-coins\"></i> Profit Report</Nav.Link>\r\n                </LinkContainer>\r\n\r\n              </li>            \r\n            </ul>\r\n          </div>\r\n        </div>        \r\n        // // <Col md={2} id=\"sidebar-col\" className=\"pr-0\">\r\n        //     <nav id=\"sidebar\">\r\n        //         {/* <div className=\"sidebar-header\">\r\n        //             <h5>AA2 MutualHelp</h5>\r\n        //         </div> */}\r\n        //         <Nav className=\"list-unstyled components flex-column\" as=\"ul\" >\r\n        //         <Nav.Item as=\"li\" className=\"active\">\r\n        //         <LinkContainer to=\"/\">\r\n        //         <Nav.Link>\r\n        //              Dashboard\r\n        //     </Nav.Link>\r\n        //     </LinkContainer>\r\n        //         </Nav.Item>\r\n        //             <Nav.Item as=\"li\" >\r\n                   \r\n        //                 <Nav.Link href=\"#homeSubmenu\" className=\"dropdown-toggle\" data-toggle=\"collapse\" aria-expanded=\"false\">Master Record</Nav.Link>\r\n                        \r\n        //                 {/* <ul class=\"collapse list-unstyled\" id=\"homeSubmenu\"> */}\r\n        //                 <Nav class=\"collapse list-unstyled\" id=\"homeSubmenu\" as=\"ul\">\r\n        //                     <Nav.Item as=\"li\">\r\n        //                     <LinkContainer to=\"/memberGroup\">\r\n        //                         <Nav.Link href=\"/home\">Member Group</Nav.Link>\r\n        //                         </LinkContainer>\r\n        //                         {/* <NavLink to=\"/memberGroup\">Member Group</NavLink> */}\r\n        //                     </Nav.Item>\r\n        //                     <Nav.Item as=\"li\">\r\n        //                     <LinkContainer to=\"/member\">\r\n        //                         <Nav.Link eventKey=\"link-1\">Members</Nav.Link>\r\n        //                     </LinkContainer>\r\n        //                     </Nav.Item>\r\n        //                 </Nav>\r\n        //             </Nav.Item>\r\n        //             <Nav.Item as=\"li\" >\r\n        //                 <Nav.Link href=\"#groupLoan\" data-toggle=\"collapse\" aria-expanded=\"false\" className=\"dropdown-toggle\">Group Loan</Nav.Link>\r\n        //                 {/* <ul class=\"collapse list-unstyled\" id=\"homeSubmenu\"> */}\r\n        //                 <Nav class=\"collapse list-unstyled\" id=\"groupLoan\" as=\"ul\">\r\n        //                     <Nav.Item as=\"li\">\r\n        //                     <LinkContainer to=\"/emiCalculator\">\r\n        //                         <Nav.Link href=\"#\">Calculator</Nav.Link>\r\n        //                         </LinkContainer>\r\n        //                     </Nav.Item>\r\n        //                     <Nav.Item as=\"li\">\r\n        //                     <LinkContainer to=\"/scheme\">\r\n        //                         <Nav.Link eventKey=\"link-1\">Scheme</Nav.Link>\r\n        //                         </LinkContainer>\r\n        //                     </Nav.Item>\r\n        //                     <Nav.Item as=\"li\">\r\n        //                     <LinkContainer to=\"/loanApplication\">\r\n        //                         <Nav.Link eventKey=\"link-2\">Application</Nav.Link>\r\n        //                         </LinkContainer>\r\n        //                     </Nav.Item>\r\n        //                     {(auth.role==\"checker\"||auth.role==\"admin\")?<Nav.Item as=\"li\">\r\n        //                     <LinkContainer to=\"/loanApproval\">\r\n        //                         <Nav.Link eventKey=\"link-2\">Approve Application</Nav.Link>\r\n        //                         </LinkContainer>\r\n        //                     </Nav.Item>:\"\"}\r\n        //                     {(auth.role==\"checker\"||auth.role==\"admin\")?<Nav.Item as=\"li\">\r\n        //                     <LinkContainer to=\"/disburseLoan\">\r\n        //                         <Nav.Link eventKey=\"link-2\">Disbure Application</Nav.Link>\r\n        //                         </LinkContainer>\r\n        //                     </Nav.Item>:\"\"}\r\n        //                     <Nav.Item as=\"li\">\r\n        //                     <LinkContainer to=\"/allApplications\">\r\n        //                         <Nav.Link eventKey=\"link-2\">Loan Applications</Nav.Link>\r\n        //                         </LinkContainer>\r\n        //                     </Nav.Item>\r\n\r\n        //                 </Nav>\r\n        //             </Nav.Item>\r\n\r\n        //             <Nav.Item as=\"li\" >\r\n        //                 <Nav.Link href=\"#processingFee\" data-toggle=\"collapse\" aria-expanded=\"false\" className=\"dropdown-toggle\">Processing Fee</Nav.Link>\r\n        //                 {/* <ul class=\"collapse list-unstyled\" id=\"homeSubmenu\"> */}\r\n        //                 <Nav class=\"collapse list-unstyled\" id=\"processingFee\" as=\"ul\">\r\n        //                     <Nav.Item as=\"li\">\r\n        //                         <Nav.Link href=\"#\">List Processing Fee</Nav.Link>\r\n        //                     </Nav.Item>\r\n\r\n        //                 </Nav>\r\n        //             </Nav.Item>\r\n\r\n        //             <Nav.Item as=\"li\" >\r\n        //                 <Nav.Link href=\"#expense\" data-toggle=\"collapse\" aria-expanded=\"false\" className=\"dropdown-toggle\">Expense</Nav.Link>\r\n        //                 {/* <ul class=\"collapse list-unstyled\" id=\"homeSubmenu\"> */}\r\n        //                 <Nav class=\"collapse list-unstyled\" id=\"expense\" as=\"ul\">\r\n        //                     <Nav.Item as=\"li\">\r\n        //                         <Nav.Link href=\"#\">List Expense</Nav.Link>\r\n        //                     </Nav.Item>\r\n\r\n        //                 </Nav>\r\n        //             </Nav.Item>\r\n\r\n        //             <Nav.Item as=\"li\" >\r\n        //                 <Nav.Link href=\"#payments\" data-toggle=\"collapse\" aria-expanded=\"false\" className=\"dropdown-toggle\">Payment to collect</Nav.Link>\r\n        //                 {/* <ul class=\"collapse list-unstyled\" id=\"homeSubmenu\"> */}\r\n        //                 <Nav class=\"collapse list-unstyled\" id=\"payments\" as=\"ul\">\r\n        //                     <Nav.Item as=\"li\">\r\n        //                         <LinkContainer to=\"/dueEmis\">\r\n        //                             <Nav.Link href=\"#\">Payment to collect(Loan)</Nav.Link>\r\n        //                         </LinkContainer>\r\n        //                     </Nav.Item>\r\n\r\n        //                 </Nav>\r\n        //             </Nav.Item>\r\n        //         </Nav>\r\n        //     </nav>\r\n        // </Col>\r\n    )\r\n}\r\n","import React,{useState} from 'react'\r\nimport {  Navbar, Nav } from 'react-bootstrap';\r\nimport { useSelector,useDispatch } from \"react-redux\";\r\nimport { useHistory } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport {LOGOUT} from '../../constants/actionTypes';\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nexport default function TopNav(props) {\r\n  // const listRouteName = {\r\n  //                         \"/\":\"Dashboard\",\r\n  //                         \"/memberGroup\":\"Member Group\",\r\n  //                         \"/addMemberGroup\":\"Member Group\",\r\n  //                         \"/member\":\"Member\",\r\n  //                         \"/addMember\":\"Member\",\r\n  //                         \"/emiCalculator\":\"Calculate EMI\"\r\n  //                       }\r\n  const location = useLocation();\r\n  const auth = useSelector(state => state.auth);\r\n  const common = useSelector(state => state.common);\r\n  const dispatch = useDispatch();\r\n  let history = useHistory();\r\nconst [navClick,setNevClick] = useState(false);\r\n    return (\r\n        <nav className={navClick?\"navbar navbar-expand-lg navbar-absolute fixed-top bg-white\":\"navbar navbar-expand-lg navbar-absolute fixed-top navbar-transparent\"} >\r\n        <div className=\"container-fluid\">\r\n          <div className=\"navbar-wrapper\">\r\n            <div className=\"navbar-toggle\">\r\n              <button type=\"button\" className=\"navbar-toggler\">\r\n                <span className=\"navbar-toggler-bar bar1\"></span>\r\n                <span className=\"navbar-toggler-bar bar2\"></span>\r\n                <span className=\"navbar-toggler-bar bar3\"></span>\r\n              </button>\r\n            </div>\r\n            <a className=\"navbar-brand\" href=\"#\">{common.page}</a>\r\n          </div>\r\n          <button onClick={()=>setNevClick(!navClick)} className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navigation\" aria-controls=\"navigation-index\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-bar navbar-kebab\"></span>\r\n            <span className=\"navbar-toggler-bar navbar-kebab\"></span>\r\n            <span className=\"navbar-toggler-bar navbar-kebab\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse justify-content-end\" id=\"navigation\">\r\n            <form>\r\n              <div className=\"input-group no-border\">\r\n                <input type=\"text\" value=\"\" className=\"form-control\" placeholder=\"Search...\"/>\r\n                <div className=\"input-group-append\">\r\n                  <div className=\"input-group-text\">\r\n                    <i className=\"nc-icon nc-zoom-split\"></i>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </form>\r\n            <ul className=\"navbar-nav\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link btn-magnify\" href=\"#\">\r\n                  <i className=\"nc-icon nc-layout-11\"></i>\r\n                  <p>\r\n                    <span className=\"d-lg-none d-md-block\">Stats</span>\r\n                  </p>\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item btn-rotate dropdown\">\r\n                <a className=\"nav-link dropdown-toggle\" href=\"http://example.com\" id=\"navbarDropdownMenuLink\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                  <i className=\"nc-icon nc-bell-55\"></i>\r\n                  <p>\r\n                    <span className=\"d-lg-none d-md-block\"></span>\r\n                  </p>\r\n                </a>\r\n                <div className=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"navbarDropdownMenuLink\">\r\n                  <Link className=\"dropdown-item\" to={\"/login\"} >Logout</Link>\r\n                  {/* <a className=\"dropdown-item\" href=\"#\">Another action</a>\r\n                  <a className=\"dropdown-item\" href=\"#\">Something else here</a> */}\r\n                </div>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link btn-rotate\" href=\"#\">\r\n                  <i className=\"nc-icon nc-settings-gear-65\"></i>\r\n                  <p>\r\n                    <span className=\"d-lg-none d-md-block\">Account</span>\r\n                  </p>\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n\r\n        // <Navbar collapseOnSelect expand=\"lg\" bg=\"info\" variant=\"dark\">\r\n               \r\n        //         <h4 id=\"logo-web\" className=\"mr-4\">AA2 MutualHelp</h4>\r\n        //     <button type=\"button\" onClick={props.toggleSidebar} class=\"btn btn-dark\">\r\n        //         <i class=\"fas fa-align-left\"></i>\r\n        //     </button>\r\n        //     <h4 id=\"logo-mobile\" className=\"\">AA2 MutualHelp</h4>\r\n        //     <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n        //     <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n        //         <Nav className=\"ml-auto\">\r\n        //             <Nav.Link href=\"#\">{auth.username}</Nav.Link>\r\n        //             <Nav.Link eventKey={2} onClick={logout}>\r\n        //                 Logout\r\n        //             </Nav.Link>\r\n        //         </Nav>\r\n        //     </Navbar.Collapse>\r\n        // </Navbar>\r\n    )\r\n}\r\n","import React, { Component } from 'react';\r\nimport ListErrors from './ListErrors';\r\nclass ErrorBoundary extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { hasError: false };\r\n    }\r\n\r\n    static getDerivedStateFromError(error) {\r\n        // Update state so the next render will show the fallback UI.\r\n        return { hasError: true };\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        // You can also log the error to an error reporting service\r\n        //logErrorToMyService(error, errorInfo);\r\n        console.log(error,errorInfo);\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            // You can render any custom fallback UI\r\n            return <ListErrors errors=\"Something went wrong. Please discuss with developer!\" statusCode=\"401\"/>\r\n            \r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","import React, { useState, useEffect } from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport { useSelector,useDispatch } from \"react-redux\";\r\nimport InnerHeader from './InnerHeader';\r\nimport Footer from './Footer';\r\nimport Leftbar from './Leftbar';\r\nimport TopNav from './TopNav';\r\nimport { useHistory } from 'react-router';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport ErrorBoundary from './ErrorBoundary';\r\nconst InnerLayout = ({ component: Component, ...rest }) => {\r\n    const auth = useSelector(state => state.auth);\r\n    const history = useHistory();\r\n    const [showSidebar, setshowSidebar] = useState(true)\r\n    useEffect(() => {\r\n        setshowSidebar(window.innerWidth <= 768 ? false : true);\r\n        checkLogin();\r\n    }, [Component]);\r\n    const toggleSidebar = () => {\r\n\r\n        console.log(window);\r\n        setshowSidebar(showSidebar ? false : true)\r\n        // this.setState({\r\n        //   isopen:this.state.isopen?false:true\r\n        // })\r\n    }\r\n    const checkLogin = () =>{\r\n        let jwt = \"\";\r\n         jwt = sessionStorage.getItem(\"jwt\");\r\n         console.log(jwt);\r\n         if(jwt==\"\" || !auth.hasOwnProperty(\"username\")){\r\n             history.push(\"/login\");\r\n         }\r\n    }\r\n    return (\r\n        <Route {...rest} render={props => (\r\n            <>\r\n        <div className=\"wrapper \">\r\n        <Leftbar/>\r\n        <div className=\"main-panel\">\r\n            <TopNav toggleSidebar={toggleSidebar} />\r\n            <ErrorBoundary>\r\n          <Component {...props} />\r\n          </ErrorBoundary>\r\n        </div>\r\n      </div>\r\n            \r\n            </>\r\n        )} />)\r\n}\r\n\r\nexport default InnerLayout\r\n","import React,{useEffect,useState} from 'react'\r\nimport agent from '../../agent'\r\nimport {useHistory} from 'react-router-dom';\r\nimport { Table, Nav, Pagination,Button,Modal } from 'react-bootstrap';\r\n\r\nfunction UserOrderHistory(props) {\r\n    useEffect(() => {\r\n        getOrders()\r\n  },[])\r\n  const [orderHistory, setorderHistory] = useState([])\r\n  const [selectedorder,setselectedorder] = useState([]);\r\n  const [isopenpopup, setisopenpopup] = useState(false)\r\n  const handleClose = () => setisopenpopup(false);\r\n\r\n  const viewOrderPopUp = (record)=>{\r\n      setselectedorder(record);\r\n      setisopenpopup(true);\r\n  }\r\n  let history = useHistory();\r\n  const getOrders =()=>{\r\n      props.showLoader(true);\r\n      agent.Order.getOrderHistoryByUserEmail().then((res=>{\r\n          props.showLoader(false);\r\n          console.log(res.body.record)\r\n\r\n          setorderHistory(res.body.record);\r\n      }),(err)=>{\r\n          console.log(err.response.body.message);\r\n          if(err.response.body.message ==\"jwt must be provided\"){\r\n              console.log(\"login required\");\r\n            history.push(\"/login\");\r\n          }\r\n          props.showLoader(false);\r\n\r\n      });\r\n  }\r\n\r\n    return (\r\n        <>\r\n        <Table responsive>\r\n        <thead>\r\n            <tr>\r\n                <th>#</th>\r\n                <th>Customer</th>\r\n                <th>Date</th>\r\n                <th>Details</th>\r\n                <th>Number</th>\r\n                <th>Action</th>\r\n\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            {orderHistory.map((record,index)=>\r\n            <tr>\r\n                <td>{index+1}</td>\r\n                <td>{record.shipping.name}</td>\r\n                <td>{record.datePlaced}</td>\r\n                <td>{record.items.map(itm=><span>{itm.item.title} Quantity:{itm.quantity}<br></br></span>)}</td>\r\n                <td>{record.shipping.phone}</td>\r\n\r\n                <td>\r\n                    <Button type=\"button\" onClick={()=>viewOrderPopUp(record)}>View</Button>\r\n                </td>\r\n            </tr>\r\n\r\n            )}\r\n        </tbody>\r\n    </Table>\r\n    <Modal show={isopenpopup} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Order Details</Modal.Title>\r\n        </Modal.Header>\r\n            <Modal.Body>\r\n                <Table striped bordered hover responsive>\r\n                    <thead><tr><td colSpan=\"4\"><h4>Shipping Details</h4></td></tr></thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td><b>Name:</b> {selectedorder?.shipping?.name}</td>\r\n                            <td><b>Address:</b> {selectedorder?.shipping?.address}</td>\r\n                            <td><b>Phone:</b> {selectedorder?.shipping?.phone}</td>\r\n                            <td><b>City:</b> {selectedorder?.shipping?.city}</td>\r\n\r\n                        </tr>\r\n                    </tbody>\r\n                </Table>\r\n                <Table striped bordered hover responsive>\r\n                    <thead><tr><td colSpan=\"4\"><h4>Products</h4></td></tr></thead>\r\n                    <tbody>{selectedorder?.items?.map(itm=><tr>\r\n                    <td><b>Title:</b> {itm.item.title}</td>\r\n                    <td><b>Description:</b> {itm.item.description}</td>\r\n                    <td><b>Quantity:</b> {itm.quantity}</td>\r\n                    <td><b>Total Price:</b> {parseInt(itm.quantity)*itm.perItemPrice}</td>\r\n                    </tr>)}\r\n                    </tbody>\r\n                </Table>\r\n\r\n                <Table striped bordered hover responsive>\r\n                <thead><tr><td colSpan=\"4\"><h4>Bill Details</h4></td></tr></thead>\r\n                    <tbody>\r\n                        {selectedorder.isDiscountApplied?<tr>\r\n                            <td>\r\n                                <b>\r\n                                Prime Member Discount:\r\n                                </b>\r\n                            </td>\r\n                            <td>10%</td>\r\n                        </tr>:\"\"}\r\n                        <tr>\r\n                            <td>\r\n                                <b>Total Bill Amount</b>\r\n                            </td>\r\n                            <td>{selectedorder.totalBillAmount}</td>\r\n                        </tr>\r\n                    </tbody>\r\n\r\n                </Table>\r\n\r\n            </Modal.Body>\r\n      </Modal>\r\n\r\n    </>\r\n)\r\n}\r\n\r\nexport default UserOrderHistory\r\n","import React,{useState} from 'react'\r\nimport { ListGroup, Container, Row, Col, Card, Button, CardColumns,Toast,Alert } from 'react-bootstrap';\r\n// import CategoryManagement from '../Admin/CategoryManagement';\r\nimport Loader from '../../layout/Loader';\r\nimport UserOrderHistory from '../UserOrderHistory';\r\nfunction UserAction(props) {\r\n\r\nconst [isShowLoader, setisShowLoader] = useState(false)\r\nconst showLoader =(value)=>{\r\n    setisShowLoader(value);\r\n}\r\nreturn (\r\n    <>\r\n    <Container fluid>\r\n        <Row>\r\n            <Col md={3} className=\"p-4\">\r\n                <ListGroup>\r\n                    {/* <ListGroup.Item  active action>Category Management</ListGroup.Item>\r\n                    <ListGroup.Item  action>Product Management</ListGroup.Item> */}\r\n                    <ListGroup.Item  action active>Order History</ListGroup.Item>\r\n                    {/* <ListGroup.Item  action>Finance</ListGroup.Item> */}\r\n                </ListGroup>\r\n            </Col>\r\n            <Col md={9} className=\"p-4 production-col\" >\r\n                <Loader show={isShowLoader}/>\r\n                {/* <CategoryManagement showLoader={showLoader}/> */}\r\n                <UserOrderHistory showLoader={showLoader}/>\r\n            </Col>\r\n        </Row>\r\n    </Container>\r\n</>\r\n)\r\n\r\n}\r\nexport default UserAction\r\n","import {API_ROOT} from \"./BaseUrl\"\r\nimport axios from \"./interceptor-middleware\";\r\n//const url = '/memberGroups/';\r\n\r\nconst MemberGroupModel = {\r\n  getMemberGroups(){\r\n    return axios.get(`${API_ROOT}/memberGroups/entry`)\r\n  },\r\n  saveMemberGroups(data){\r\n    return axios.post(`${API_ROOT}/memberGroups/entry`,data)\r\n  },\r\n  saveImage(file){\r\n    return axios.post(`${API_ROOT}/member/image-upload`,file)\r\n  }\r\n  }\r\n    export default {MemberGroupModel};","import React, { useEffect, useState } from 'react';\r\nimport { Table, Button,ProgressBar } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport masterRecord from '../../../models/masterRecord';\r\nimport moment from 'moment';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { CHANGE_PAGE } from '../../../constants/actionTypes'\r\nfunction MemberGroup(props) {\r\n    const dispatch = useDispatch();\r\n    const [isShowLoader, setisShowLoader] = useState(0)\r\n    const [memberGroupRecords, setMemberGroupsRecords] = useState([]);\r\n    useEffect(() => {\r\n        setisShowLoader(10);\r\n        getMemberGroup();\r\n        dispatch({ type: CHANGE_PAGE, page: \"All Members Groups\" });\r\n    }, [])\r\n\r\n    const getMemberGroup = () => {\r\n        setisShowLoader(30);\r\n        masterRecord.MemberGroupModel.getMemberGroups().then(res => {\r\n            setisShowLoader(90);\r\n            if (res.statusCode == 200) {\r\n                setMemberGroupsRecords(res.body.message);\r\n            } else {\r\n                setMemberGroupsRecords([]);\r\n            }\r\n            setisShowLoader(100);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div class=\"content\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-12\">\r\n                        <Link to=\"/addMemberGroup\">\r\n                            <Button variant=\"info\" active>\r\n                                <i className=\"nc-icon nc-simple-add mr-2\"></i>\r\n                                Member Group\r\n                            </Button>\r\n                        </Link>\r\n\r\n                        <div class=\"card\">\r\n                            <div class=\"card-body\">\r\n                                <div class=\"table-responsive\">\r\n                                    <Table className=\" table\">\r\n                                        \r\n                                        <thead className=\"bg-primary\">\r\n                                            <tr>\r\n                                                <th>Group Code</th>\r\n                                                <th>Name</th>\r\n                                                <th>Remark</th>\r\n                                                <th>Created At</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {memberGroupRecords.map((group, id) => (<tr>\r\n                                                <td>{group.group_code}</td>\r\n                                                <td>{group.group_name}</td>\r\n                                                <td>{group.remark}</td>\r\n                                                <td>{moment(group.created_at).format(\"DD-MM-YYYY HH:SS\")}</td>\r\n                                            </tr>))}\r\n                                        </tbody>\r\n                                    </Table>\r\n                                    {isShowLoader<100?<div style={{ top: '50%',position:\"relative\" }}><ProgressBar style={{\"position\":\"relative\",\"width\":\"30%\",\"left\":\"40%\"}} striped variant=\"success\" now={isShowLoader} label={`${isShowLoader}%`} /></div>:\"\"}\r\n                                    \r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default MemberGroup;","import React, { useState, useEffect } from 'react';\r\nimport { Button, Form, Container, Row, Col, Toast, Alert } from 'react-bootstrap';\r\nimport { useFormik } from 'formik';\r\nimport masterRecord from '../../../models/masterRecord';\r\nimport Loader from '../../layout/Loader';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { CHANGE_PAGE } from '../../../constants/actionTypes'\r\n\r\nfunction AddMemberGroup(props) {\r\n  const auth = useSelector(state => state.auth);\r\n  const dispatch = useDispatch();\r\n  const [values, setValues] = useState({});\r\n  const [isShowLoader, setisShowLoader] = useState(false)\r\n  const [showToast, setShowToast] = useState({ isShow: false, type: \"\", message: \"\" })\r\n  useEffect(() => {\r\n    dispatch({ type: CHANGE_PAGE, page: \"Add Member Group\" });\r\n  }, [])\r\n  const handleAlertShow = (obj) => {\r\n    setShowToast(obj);\r\n    setTimeout(() => {\r\n      setShowToast({ isShow: false, type: \"\", message: \"\" })\r\n    }, 2000);\r\n  }\r\n  const validate = values => {\r\n    const errors = {};\r\n    if (!values.group_code) {\r\n      errors.group_code = 'Group Code is Required';\r\n    }\r\n    return errors;\r\n  };\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      group_code: '',\r\n      group_name: '',\r\n      remark: '',\r\n      user_id: auth.id\r\n    },\r\n    validate,\r\n    onSubmit: async (values) => {\r\n      setisShowLoader(true);\r\n      try {\r\n        let response = await masterRecord.MemberGroupModel.saveMemberGroups(values);\r\n        setisShowLoader(false);\r\n        if (response.statusCode == 200) {\r\n          handleAlertShow({ isShow: true, type: \"bg-success\", message: \"Member Group Created Successfully!\" })\r\n          formik.resetForm();\r\n        } else {\r\n          handleAlertShow({ isShow: true, type: \"bg-danger\", message: \"Something went wrong\" })\r\n\r\n        }\r\n\r\n      } catch (error) {\r\n        setisShowLoader(false);\r\n        handleAlertShow({ isShow: true, type: \"bg-danger\", message: error.response.body.message })\r\n      }\r\n    },\r\n    handleChange: () => {\r\n      setValues(prevValues => ({\r\n        ...prevValues,\r\n        // we use the name to tell Formik which key of `values` to update\r\n        [values.target.name]: values.target.value\r\n      }))\r\n    },\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div class=\"content\">\r\n        {/* <Toast key={1} autohide delay={3000} show={showToast.isShow} onClose={() => setShowToast({ isShow: false, type: \"\", message: \"\" })} className={\"loader \" + (showToast.type)} >\r\n          <Toast.Header>\r\n            <strong className=\"me-auto\">{showToast.type == \"bg-danger\" ? \"Error\" : \"Success\"} Message</strong>\r\n          </Toast.Header>\r\n          <Toast.Body className=\"Dark\">\r\n            {showToast.message}\r\n          </Toast.Body>\r\n        </Toast> */}\r\n        <Alert dismissible delay={3000} show={showToast.isShow} onClose={() => setShowToast({ isShow: false, type: \"\", message: \"\" })} key={showToast.type == \"bg-danger\" ? \"danger\" : \"success\"} variant={showToast.type == \"bg-danger\" ? \"danger\" : \"success\"}>\r\n          {showToast.message}\r\n        </Alert>\r\n        <Loader show={isShowLoader} />\r\n        <div class=\"row\">\r\n          <div class=\"col-md-8\">\r\n            <div class=\"card card-user\">\r\n              {/* <div class=\"card-header\">\r\n                <h5 class=\"card-title\">Add Member Group</h5>\r\n              </div> */}\r\n              <div class=\"card-body\">\r\n                <Form onSubmit={formik.handleSubmit}>\r\n                  <Form.Group className=\"mb-3 form-group required\" controlId=\"formBasicEmail\">\r\n                    <Form.Label>Group Code</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      name=\"group_code\"\r\n                      placeholder=\"Enter group code\"\r\n                      onChange={formik.handleChange}\r\n                      value={formik.values.group_code}\r\n\r\n                    />\r\n                    {formik.touched.group_code && formik.errors.group_code ? (\r\n                      <div class=\"text-danger\">{formik.errors.group_code}</div>\r\n                    ) : null}\r\n\r\n                  </Form.Group>\r\n\r\n                  <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                    <Form.Label>Group Name</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      name=\"group_name\"\r\n                      placeholder=\"Enter group name\"\r\n                      onChange={formik.handleChange}\r\n                      value={formik.values.group_name}\r\n                    />\r\n                  </Form.Group>\r\n\r\n                  <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control as=\"textarea\" rows={3} name=\"remark\"\r\n                      onChange={formik.handleChange}\r\n                      value={formik.values.remark} />\r\n                  </Form.Group>\r\n                  <Button variant=\"primary\" type=\"submit\">\r\n                    Save\r\n                  </Button>\r\n\r\n                </Form>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </>\r\n\r\n  );\r\n}\r\n\r\nexport default AddMemberGroup;","import {requests, superagent, API_ROOT} from \"./BaseUrl\"\r\nimport axios from \"./interceptor-middleware\";\r\n//const url = '/memberGroups/';\r\n\r\nconst MemberDetailModel = {\r\n  getMemberDetailsData(member_id=\"all\"){\r\n    return axios.get(`${API_ROOT}/member/entry/${member_id}`)\r\n  },\r\n  saveMemberDetails(data){\r\n    return axios.post(`${API_ROOT}/member/entry`,data)\r\n\r\n  },\r\n  deleteMember(id){\r\n    return axios.delete(`${API_ROOT}/member/entry/${id}`)\r\n  },  \r\n  editMember(data,id){\r\n    return axios.put(`${API_ROOT}/member/entry/${id}`,data)\r\n  }  \r\n    \r\n  }\r\n    export default {MemberDetailModel};","import React, { useState, useEffect } from 'react';\r\nimport { Button, Form, Row, Col, Alert } from 'react-bootstrap';\r\nimport DatePicker from \"react-datepicker\";\r\nimport { useFormik } from 'formik';\r\nimport memberDetails from \"../../../models/memberDetails\"\r\nimport masterRecord from '../../../models/masterRecord';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { CHANGE_PAGE } from '../../../constants/actionTypes'\r\nimport Loader from '../../layout/Loader';\r\nimport {API_ROOT} from \"../../../models/BaseUrl\"\r\n//import \"react-datepicker/dist/react-datepicker.css\";\r\nfunction AddMember(props) {\r\n    const auth = useSelector(state => state.auth);\r\n    let history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const [enrollmentDate, setEnrollmentDate] = useState(new Date());\r\n    const [dob, setDob] = useState();\r\n    const [values, setValues] = useState({});\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [groups, setGroups] = useState([])\r\n    const [showToast, setShowToast] = useState({ isShow: false, type: \"\", message: \"\" })\r\n    const [image, setImage] = useState(\"\")\r\n    let baseURL = API_ROOT.replace('/api','/')\r\n    useEffect(() => {\r\n        console.log(props);\r\n        dispatch({ type: CHANGE_PAGE, page: \"Add Member\" });\r\n        if (props.location.state)\r\n            getMemberDetails(props.location.state);\r\n        getMemberGroups();\r\n    }, [])\r\n    const getMemberGroups = async () => {\r\n        try {\r\n            setisShowLoader(true);\r\n            let response = await masterRecord.MemberGroupModel.getMemberGroups();\r\n            setisShowLoader(false);\r\n            setGroups(response.body.message)\r\n        } catch (error) {\r\n            setisShowLoader(false);\r\n            setShowToast({ isShow: true, type: \"bg-danger\", message: error.response.body.message })\r\n        }\r\n    }\r\n    const getMemberDetails = async (member_id) => {\r\n        try {\r\n            setisShowLoader(true);\r\n            let response = await memberDetails.MemberDetailModel.getMemberDetailsData(member_id);\r\n            console.log(response);\r\n            formik.values.aadhar_card = response.body.message[0].aadhar_card\r\n            formik.values.member_name = response.body.message[0].member_name\r\n            formik.values.gender = response.body.message[0].gender\r\n            formik.values.age = response.body.message[0].age\r\n            formik.values.marital_status = response.body.message[0].marital_status\r\n            formik.values.mobile_number = response.body.message[0].mobile_number\r\n            formik.values.email_id = response.body.message[0].email_id\r\n            formik.values.member_group_id = response.body.message[0].member_group_id\r\n            formik.values.pan_card_number = response.body.message[0].pan_card_number\r\n            formik.values.driving_license_number = response.body.message[0].driving_license_number\r\n            formik.values.voter_id_number = response.body.message[0].voter_id_number\r\n            formik.values.ration_card_number = response.body.message[0].ration_card_number\r\n            formik.values.bank_account = response.body.message[0].bank_account\r\n            formik.values.bank_ifsc_code = response.body.message[0].bank_ifsc_code\r\n            formik.values.bank_account_holder = response.body.message[0].bank_account_holder\r\n            formik.values.enrollment_date = response.body.message[0].enrollment_date\r\n            setEnrollmentDate(new Date(response.body.message[0].enrollment_date));\r\n            formik.values.date_of_birth = response.body.message[0].date_of_birth\r\n            if(response.body.message[0].image){\r\n                setImage(response.body.message[0].image);\r\n            }\r\n            setDob(new Date(response.body.message[0].date_of_birth));\r\n\r\n            setisShowLoader(false);\r\n            //setGroups(response.body.message)\r\n        } catch (error) {\r\n            setisShowLoader(false);\r\n            setShowToast({ isShow: true, type: \"bg-danger\", message: error.response.body.message })\r\n        }\r\n\r\n    }\r\n    const validate = values => {\r\n        window.scrollTo(0, 0);\r\n        const errors = {};\r\n        if (!values.member_name) {\r\n            errors.member_name = 'Please provide member name';\r\n        }\r\n        return errors;\r\n    };\r\n    const getImage= async(e)=>{\r\n        try {\r\n            if(e.target.files.length==0)\r\n                return false;\r\n            setisShowLoader(true);\r\n            setShowToast({ isShow: false, type: \"\", message: \"\" })\r\n            const file = e.target.files[0];\r\n            let fileExtArr = file.name.split(\".\");\r\n            let fileExt = fileExtArr[1];\r\n            if(fileExt!=\"png\" && fileExt!=\"jpg\"){\r\n                setisShowLoader(false);\r\n                setShowToast({ isShow: true, type: \"bg-danger\", message: \"Please upload Image type PNG or JPG\" })\r\n            }\r\n            let formData = new FormData();\r\n            formData.append('image', file);\r\n            let response = await masterRecord.MemberGroupModel.saveImage(formData);\r\n            if(response.status==200){\r\n                setImage(response.body.message.image.path)\r\n            }\r\n            console.log(response);\r\n            setisShowLoader(false);\r\n        } catch (error) {\r\n            setisShowLoader(false);\r\n            setShowToast({ isShow: true, type: \"bg-danger\", message: error.toString() })\r\n\r\n        }\r\n    }\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            enrollment_date: enrollmentDate,\r\n            date_of_birth: dob,\r\n            member_name: '',\r\n            gender: \"\",\r\n            age: \"\",\r\n            marital_status: \"\",\r\n            mobile_number: \"\",\r\n            email_id: \"\",\r\n            member_group_id: \"\",\r\n            aadhar_card: \"\",\r\n            pan_card_number: \"\",\r\n            driving_license_number: \"\",\r\n            voter_id_number: \"\",\r\n            ration_card_number: \"\",\r\n            bank_account: \"\",\r\n            bank_ifsc_code: \"\",\r\n            bank_account_holder: \"\",\r\n            user_id: auth.id\r\n        },\r\n        validate,\r\n        onSubmit: async (values) => {\r\n            setisShowLoader(true);\r\n            window.scrollTo(0, 0);\r\n            try {\r\n                values.enrollment_date = enrollmentDate;\r\n                values.date_of_birth = dob;\r\n                values.image = image;\r\n                let response = [];\r\n                if (props.location.state) {\r\n                    response = await memberDetails.MemberDetailModel.editMember(values, props.location.state);\r\n                } else {\r\n                    response = await memberDetails.MemberDetailModel.saveMemberDetails(values);\r\n                }\r\n                setisShowLoader(false);\r\n                if (response.statusCode == 200) {\r\n                    formik.resetForm();\r\n                    if (props.location.state)\r\n                        history.push(\"/member\")\r\n                    setShowToast({ isShow: true, type: \"bg-success\", message: \"Member Created Successfully!\" })\r\n                } else {\r\n                    setShowToast({ isShow: true, type: \"bg-danger\", message: \"Something went wrong!\" })\r\n                }\r\n\r\n            } catch (error) {\r\n                console.log(error.response.body.message);\r\n                setisShowLoader(false);\r\n                setShowToast({ isShow: true, type: \"bg-danger\", message: error.response.body.message })\r\n            }\r\n        }\r\n    });\r\n    return (\r\n        <>\r\n\r\n            <div class=\"content\">\r\n                <Alert dismissible delay={3000} show={showToast.isShow} onClose={() => setShowToast({ isShow: false, type: \"\", message: \"\" })} key={showToast.type == \"bg-danger\" ? \"danger\" : \"success\"} variant={showToast.type == \"bg-danger\" ? \"danger\" : \"success\"}>\r\n                    {showToast.message}\r\n                </Alert>\r\n\r\n                <Loader show={isShowLoader} />\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-8\">\r\n                        <div class=\"card card-user\">\r\n                            {/* <div class=\"card-header\">\r\n                                <h5 class=\"card-title\">Add Member</h5>\r\n                            </div> */}\r\n                            <div class=\"card-body\">\r\n\r\n                                <Form onSubmit={formik.handleSubmit}>\r\n                                    <Row className=\"mb-3\" >\r\n                                        <Form.Group as={Col} className=\"form-group required\" controlId=\"formGridEnroll\">\r\n                                            <Form.Label >Enrollment Date</Form.Label>\r\n                                            <DatePicker className=\"form-control\"\r\n                                                selected={enrollmentDate}\r\n                                                onChange={(date) => setEnrollmentDate(date)}\r\n                                                name=\"enrollment_date\"\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Col} className=\"form-group required\" controlId=\"formGridName\">\r\n                                            <Form.Label >Member Name</Form.Label>\r\n                                            <Form.Control type=\"text\"\r\n                                                placeholder=\"member name\"\r\n                                                name=\"member_name\"\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.member_name}\r\n\r\n                                            />\r\n                                            {formik.touched.member_name && formik.errors.member_name ? (\r\n                                                <div class=\"text-danger\">{formik.errors.member_name}</div>\r\n                                            ) : null}\r\n                                        </Form.Group>\r\n                                    </Row>\r\n                                    <Row className=\"mb-3\" >\r\n                                        <Form.Group as={Col} controlId=\"formGriddob\">\r\n                                            <Form.Label>Date of Birth</Form.Label>\r\n                                            <DatePicker\r\n                                                className=\"form-control\"\r\n                                                selected={dob}\r\n                                                onChange={(date) => setDob(date)}\r\n                                                name=\"date_of_birth\"\r\n                                            />\r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} className=\"mb-3\" controlId=\"formGridAddress1\">\r\n                                            <Form.Label>Gender</Form.Label>\r\n                                            <select\r\n                                                className=\"form-control\"\r\n                                                name=\"gender\"\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.gender}\r\n                                            >\r\n                                                <option key=\"\" value=\"\">Select Gender</option>\r\n\r\n                                                <option key=\"male\" value=\"male\">Male</option>\r\n                                                <option key=\"female\" value=\"female\">Female</option>\r\n\r\n                                            </select>\r\n                                        </Form.Group>\r\n\r\n                                    </Row>\r\n                                    <Row className=\"mb-3\" >\r\n                                        <Form.Group as={Col} controlId=\"formGridAge\">\r\n                                            <Form.Label>Age</Form.Label>\r\n                                            <Form.Control\r\n                                                name=\"age\"\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.age}\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Col} controlId=\"formGridState\">\r\n                                            <Form.Label>Marital Status</Form.Label>\r\n                                            <Form.Control\r\n                                                name=\"marital_status\"\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.marital_status}\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                    </Row>\r\n\r\n                                    <Row className=\"mb-3\" >\r\n                                        <Form.Group as={Col} controlId=\"formGridAge\">\r\n                                            <Form.Label>Phone number</Form.Label>\r\n                                            <Form.Control\r\n                                                name=\"mobile_number\"\r\n                                                type=\"number\"\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.mobile_number}\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Col} controlId=\"formGridState\">\r\n                                            <Form.Label>Email</Form.Label>\r\n                                            <Form.Control\r\n                                                name=\"email_id\"\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.email_id}\r\n                                                type=\"text\"\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                    </Row>\r\n                                    <Row className=\"mb-3\">\r\n                                        <Form.Group as={Col} md={6} className=\"mb-3\" controlId=\"formGridAddress1\">\r\n                                            <Form.Label>Member Group</Form.Label>\r\n                                            <select className=\"form-control\" name=\"member_group_id\" onChange={formik.handleChange}\r\n                                                value={formik.values.member_group_id}\r\n                                            >\r\n                                                <option key=\"\" value=\"\">Select Member Group</option>\r\n                                                {groups.map((group, id) => (\r\n                                                    <option key={group.group_code} value={group.group_code}>{group.group_code}</option>\r\n                                                ))}\r\n                                            </select>\r\n                                        </Form.Group>\r\n\r\n                                    </Row>\r\n                                    <Row className=\"mb-3\">\r\n                                        <Col>\r\n                                            <h3 className=\"text-info\">KYC Information</h3>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row className=\"mb-3\" >\r\n                                        <Form.Group as={Col} controlId=\"formGridAge\">\r\n                                            <Form.Label>Aadhar no.</Form.Label>\r\n                                            <Form.Control\r\n                                                name=\"aadhar_card\"\r\n                                                type=\"number\"\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.aadhar_card}\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Col} controlId=\"formGridState\">\r\n                                            <Form.Label>PAN</Form.Label>\r\n                                            <Form.Control\r\n                                                name=\"pan_card_number\"\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.pan_card_number}\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                    </Row>\r\n                                    <Row className=\"mb-3\" >\r\n                                        <Form.Group as={Col} controlId=\"formGridAge\">\r\n                                            <Form.Label>Driving Licence No.</Form.Label>\r\n                                            <Form.Control\r\n                                                name=\"driving_license_number\"\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.driving_license_number}\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Col} controlId=\"formGridState\">\r\n                                            <Form.Label>Voter Id No.</Form.Label>\r\n                                            <Form.Control\r\n                                                name=\"voter_id_number\"\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.voter_id_number}\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                    </Row>\r\n                                    <Row className=\"mb-3\" >\r\n                                        <Form.Group as={Col} md={6} controlId=\"formGridAge\">\r\n                                            <Form.Label>Ration Card No.</Form.Label>\r\n                                            <Form.Control\r\n                                                name=\"ration_card_number\"\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.ration_card_number}\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                    </Row>\r\n\r\n                                    <Row className=\"mb-3\">\r\n                                        <Col>\r\n                                            <h3 className=\"text-info\">Bank Details</h3>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row className=\"mb-3\" >\r\n                                        <Form.Group as={Col} controlId=\"formGridAge\">\r\n                                            <Form.Label>Bank Account No.</Form.Label>\r\n                                            <Form.Control\r\n                                                name=\"bank_account\"\r\n                                                type=\"number\"\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.bank_account}\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Col} controlId=\"formGridState\">\r\n                                            <Form.Label>IFSC code</Form.Label>\r\n                                            <Form.Control\r\n                                                name=\"bank_ifsc_code\"\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.bank_ifsc_code}\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                    </Row>\r\n                                    <Row className=\"mb-3\" >\r\n                                        <Form.Group as={Col} md={6} controlId=\"formGridAge\">\r\n                                            <Form.Label>Account holder name</Form.Label>\r\n                                            <Form.Control\r\n                                                name=\"bank_account_holder\"\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.bank_account_holder}\r\n                                            />\r\n                                        </Form.Group>\r\n\r\n\r\n                                    </Row>\r\n\r\n                                    <Button variant=\"primary\" type=\"submit\">\r\n                                        Save\r\n                                    </Button>\r\n                                </Form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-4\">\r\n                        <div class=\"card card-user\">\r\n                            <div class=\"card-body\">\r\n                                <div class=\"image\">\r\n                                    <img src=\"../assets/img/damir-bosnjak.jpg\" alt=\"...\" />\r\n                                </div>\r\n\r\n                                <div class=\"author\">\r\n                                    <a href=\"#\">                                      \r\n                                        <img class=\"avatar border-gray\" src={image==\"\"?\"../assets/img/blank_image.jpg\":baseURL+image} alt=\"...\" />\r\n                                        <input type=\"file\" name=\"profile_image\" onChange={(e)=>getImage(e)}/>\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AddMember;","import React, { useEffect, useState, useMemo } from 'react';\r\nimport { Table,Button,Modal,Pagination,ProgressBar } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport memberRecord from '../../../models/memberDetails';\r\nimport moment from 'moment';\r\nimport {useTable,useSortBy,usePagination,useFilters } from 'react-table'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { CHANGE_PAGE } from '../../../constants/actionTypes'\r\n\r\nfunction Members(props) {\r\n    let history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const [isShowLoader, setisShowLoader] = useState(0)\r\n    const [showDeleteModel, setShowDeleteModel] = useState(false)\r\n    const [deleteID, setDeleteID] = useState(0)\r\n    const [memberRecords,setMemberRecords]=useState([]);\r\n    useEffect(() => {\r\n        setisShowLoader(10);\r\n        getMemberGroup();\r\n        dispatch({ type: CHANGE_PAGE, page: \"All Members\" });\r\n    },[])\r\n    \r\n    const data = useMemo(\r\n        () => \r\n        memberRecords.map((record,index)=>\r\n                { \r\n             return {\r\n                col1:moment(record.enrollment_date).format('DD-MM-yyy hh:ss A'),\r\n                col2:record.member_name,\r\n                col3:record.member_group_id,\r\n                col4:record.mobile_number,\r\n                col5:record\r\n                }\r\n            }\r\n        )\r\n        ,\r\n        [memberRecords]\r\n      )   \r\n\r\n    const columns = useMemo(\r\n        () => [\r\n          {\r\n            Header: 'Enrollment Date',\r\n            accessor: 'col1', // accessor is the \"key\" in the data\r\n            allowFilter:true\r\n          },\r\n          {\r\n            Header: 'Member Name',\r\n            accessor: 'col2',\r\n            allowFilter:true\r\n          },\r\n          {\r\n            Header: 'Member Group Code',\r\n            accessor: 'col3',\r\n            allowFilter:true\r\n            },\r\n          {\r\n            Header: 'Mobile Number',\r\n            accessor: 'col4',\r\n            allowFilter:true\r\n          },\r\n          {\r\n            Header: 'Action',\r\n            accessor: 'col5',\r\n            allowFilter:false\r\n          }\r\n\r\n        ],\r\n        []\r\n      )    \r\n\r\n    const getMemberGroup = () =>{\r\n        setisShowLoader(30);\r\n        memberRecord.MemberDetailModel.getMemberDetailsData().then(res=>{\r\n            setisShowLoader(90);\r\n            if(res.statusCode == 200){\r\n                setMemberRecords(res.body.message);\r\n            }else{\r\n                setMemberRecords([]);\r\n            }\r\n            setisShowLoader(100);\r\n        })\r\n       \r\n    }\r\n    const deleteHandle=(id)=>{\r\n        setDeleteID(id);        \r\n        setShowDeleteModel(true);\r\n    }\r\n    const deleteMember=async()=>{\r\n        setShowDeleteModel(false);\r\n        let initialData = [...memberRecords];\r\n        setMemberRecords([]);\r\n        try{\r\n            setisShowLoader(30);\r\n            let response = await memberRecord.MemberDetailModel.deleteMember(deleteID);\r\n            setisShowLoader(90);\r\n            if(response.statusCode == 200){\r\n                let UpdatedList = initialData.filter((member,idx)=>member.member_id!=deleteID);\r\n                setMemberRecords(UpdatedList);\r\n             }\r\n             setisShowLoader(100);\r\n        }catch (error) {\r\n                console.log(error.response.body.message);\r\n                setisShowLoader(100);\r\n            }\r\n              \r\n    }\r\n  \r\n    function DefaultColumnFilter({\r\n        column: { filterValue, preFilteredRows, setFilter },\r\n    }) {\r\n        const count = preFilteredRows.length\r\n    \r\n        return (\r\n            <input\r\n                className=\"form-control\"\r\n                value={filterValue || ''}\r\n                onChange={e => {\r\n                    setFilter(e.target.value || undefined)\r\n                }}\r\n                placeholder={`Search ${count} records...`}\r\n            />\r\n        )\r\n    }    \r\n    const defaultColumn = React.useMemo(\r\n        () => ({\r\n            // Default Filter UI\r\n            Filter: DefaultColumnFilter,\r\n        }),\r\n        []\r\n    ) \r\n    const paginate = (totalPage)=>{\r\n      let pageNumberArray = [];\r\n      for(let i=1;i<=totalPage;i++){\r\n        pageNumberArray.push(i);\r\n      }\r\n      return(      \r\n      <Pagination>\r\n        <Pagination.First  onClick={() => gotoPage(0)}/>\r\n        <Pagination.Prev onClick={() => previousPage()} disabled={!canPreviousPage}/>\r\n        {pageNumberArray.map(num=><Pagination.Item key={num} active={num === (pageIndex+1)} onClick={() => gotoPage(num-1)}>{num}</Pagination.Item>)}\r\n        <Pagination.Next onClick={() => nextPage()} disabled={!canNextPage}/>\r\n        <Pagination.Last onClick={() => gotoPage(totalPage-1)}/>\r\n        </Pagination>\r\n      );\r\n    \r\n    }\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n        pageOptions,\r\n        page,\r\n        pageCount,\r\n        state: { pageIndex, pageSize },\r\n        gotoPage,\r\n        previousPage,\r\n        nextPage,\r\n        setPageSize,\r\n        canPreviousPage,\r\n        canNextPage,  \r\n      } = useTable({ columns, data, defaultColumn, initialState: { pageIndex: 0 }},useFilters,useSortBy,usePagination)\r\n    return (\r\n        <>\r\n      <Modal show={showDeleteModel} onHide={()=>setShowDeleteModel(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Delete Member</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>Are you sure?</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={()=>setShowDeleteModel(false)}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={()=>deleteMember()}>\r\n            Delete\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>        \r\n        {/* <Loader show={isShowLoader}/> */}\r\n        <div class=\"content\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-12\">\r\n                <Link to=\"/addMember\">\r\n                <Button variant=\"info\" active>\r\n                <i className=\"nc-icon nc-simple-add mr-2\"></i>\r\n                    Add Member\r\n                </Button>\r\n                </Link>\r\n                {/* </Col>\r\n            </Row>\r\n            <Row>\r\n            <Col> */}\r\n            <div className=\"text-right\">\r\n              {paginate(pageCount)}\r\n            </div>   \r\n            <div class=\"card\">\r\n                <div class=\"card-body\">\r\n                    <div class=\"table-responsive\">\r\n\r\n            <Table {...getTableProps()} className=\"table small\" >\r\n            <thead className=\"bg-primary\">\r\n                    {headerGroups.map(headerGroup => (\r\n                    <tr {...headerGroup.getHeaderGroupProps()}>\r\n                        {headerGroup.headers.map(column => (\r\n                        <th\r\n                            {...column.getHeaderProps(column.getSortByToggleProps())}\r\n                        >\r\n                            {column.render('Header')}\r\n                            <span>\r\n                            {column.isSorted ? (column.isSortedDesc ? ' 🔽' : ' 🔼') : ''}\r\n                            </span>\r\n                            <div>{column.allowFilter? column.render('Filter') : null}</div>\r\n                        </th>\r\n                        ))}\r\n                    </tr>\r\n                    ))}\r\n            </thead>\r\n            <tbody {...getTableBodyProps()}>\r\n\r\n                    {page.map(row => {\r\n                        prepareRow(row)\r\n                        return (\r\n                            <tr {...row.getRowProps()}>\r\n                            {row.cells.map(cell => {\r\n                                console.log(cell);\r\n                                if(cell.column.id !=\"col5\"){                                \r\n                                    return (\r\n                                        <td {...cell.getCellProps()}>\r\n                                            {cell.render('Cell')}\r\n                                        </td>\r\n                                        )\r\n                                    }else{\r\n                                        return (\r\n                                            <td>\r\n                                                <Button size={\"sm\"} variant=\"primary\"  onClick={()=>{history.push(\"/viewMemberDetail\",cell.value.member_id)}}>View</Button>\r\n                                                {' '}\r\n                                                <Button size={\"sm\"} variant=\"success\" onClick={()=>{history.push(\"/addMember\",cell.value.member_id)}} >Edit</Button>\r\n                                                {' '}\r\n                                                <Button size={\"sm\"} variant=\"danger\" onClick={()=>deleteHandle(cell.value.member_id)} >Delete</Button>\r\n                                            </td>\r\n                                        )\r\n                                    }\r\n                            })}\r\n                            </tr>\r\n                        )\r\n                        })}\r\n            </tbody>\r\n        </Table>\r\n        {isShowLoader<100?<div style={{ top: '50%',position:\"relative\" }}><ProgressBar style={{\"position\":\"relative\",\"width\":\"30%\",\"left\":\"40%\"}} striped variant=\"success\" now={isShowLoader} label={`${isShowLoader}%`} /></div>:\"\"}\r\n        </div></div></div>\r\n        <div className=\"text-right\">\r\n          {paginate(pageCount)}\r\n        </div>   \r\n        </div>\r\n        </div>\r\n        </div>\r\n        </>\r\n        );\r\n}\r\n\r\nexport default Members;","import React, { useEffect, useState } from 'react';\r\nimport { Table, Button, Container, Row, Col } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport memberRecord from '../../../models/memberDetails';\r\nimport Loader from '../../layout/Loader';\r\nimport moment from 'moment';\r\nimport {API_ROOT} from \"../../../models/BaseUrl\"\r\nfunction Members(props) {\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [memberRecords, setMemberRecords] = useState([]);\r\n    let baseURL = API_ROOT.replace('/api','/')\r\n    useEffect(() => {\r\n        console.log(props);\r\n        getMemberGroup();\r\n    }, [])\r\n\r\n    const getMemberGroup = () => {\r\n        setisShowLoader(true);\r\n        memberRecord.MemberDetailModel.getMemberDetailsData(props.location.state).then(res => {\r\n            setisShowLoader(false);\r\n            if (res.statusCode == 200) {\r\n                setMemberRecords(res.body.message[0]);\r\n            } else {\r\n                setMemberRecords([]);\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div class=\"content\">\r\n                <Loader show={isShowLoader} />\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-12\">\r\n                        <div class=\"card card-user\">\r\n                            {/* <div class=\"card-header\">\r\n                            <h5 class=\"card-title\">Member Detail - {memberRecords.member_name}</h5> */}\r\n                        <div class=\"image\">\r\n                            <img src=\"../assets/img/damir-bosnjak.jpg\" alt=\"...\"/>\r\n                        </div>\r\n                            <div class=\"card-body\">\r\n                                <div class=\"author\">\r\n                                    \r\n                                        <img class=\"avatar border-gray\" src={memberRecords.image?baseURL+memberRecords.image:\"../assets/img/damir-bosnjak.jpg\"} alt=\"...\" />\r\n                                        <h5 class=\"title\">{memberRecords.member_name}</h5>\r\n                                    \r\n                                    <p class=\"description\">\r\n                                        @{memberRecords.member_name}\r\n                                    </p>\r\n                                </div>\r\n                                <Table className=\"table\" >\r\n                                    <tbody>\r\n                                        <tr><th>Enrollment Date</th><td>{moment(memberRecords.enrollment_date).format(\"DD-MM-YYYY hh:ss A\")}</td> </tr>\r\n                                        {/* <tr><th>Member Name</th>  <td>{memberRecords.member_name}</td></tr> */}\r\n                                        <tr><th>Member Id</th>  <td>{memberRecords.member_id}</td></tr>\r\n                                        <tr> <th>Gender</th>  <td>{memberRecords.gender}</td></tr>\r\n                                        <tr><th>DOB</th>   <td>{memberRecords.date_of_birth?moment(memberRecords.date_of_birth).format(\"DD-MM-YYYY\"):\"\"} </td></tr>\r\n                                        <tr><th>Age</th> <td>{memberRecords.age}</td></tr>\r\n                                        <tr><th>Marital Status</th>  <td>{memberRecords.marital_status}</td></tr>\r\n                                        <tr><th>Mobile Number</th> <td>{memberRecords.mobile_number}</td></tr>\r\n                                        <tr><th>Email Id</th> <td>{memberRecords.email_id}</td></tr>\r\n                                        <tr> <th>Member Group Id</th>  <td>{memberRecords.member_group_id}</td></tr>\r\n                                        <tr> <th>Aadhar Number</th> <td>{memberRecords.aadhar_card}</td></tr>\r\n                                        <tr> <th>Driving License Number</th>  <td>{memberRecords.driving_license_number}</td></tr>\r\n                                        <tr> <th>Voter Id Number </th>  <td>{memberRecords.voter_id_number}</td></tr>\r\n                                        <tr>  <th>Ration Card Number</th> <td>{memberRecords.ration_card_number}</td></tr>\r\n                                        <tr> <th>PAN Number</th> <td>{memberRecords.pan_card_number}</td></tr>\r\n                                        <tr> <th>Bank Account no.</th> <td>{memberRecords.bank_account}</td></tr>\r\n                                        <tr> <th>IFSC Code</th> <td>{memberRecords.bank_ifsc_code}</td></tr>\r\n                                        <tr> <th>Bank Account Holder</th> <td>{memberRecords.bank_account_holder}</td></tr>\r\n\r\n                                    </tbody>\r\n                                </Table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* </div> */}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Members;","import moment from \"moment\"\r\nimport { requests, superagent, API_ROOT } from \"./BaseUrl\"\r\nimport axios from \"./interceptor-middleware\";\r\n//const url = '/memberGroups/';\r\n\r\nconst SchemeModel = {\r\n  getScheme() {\r\n    return axios.get(`${API_ROOT}/scheme/entry`)\r\n  },\r\n  saveScheme(data) {\r\n    return axios.post(`${API_ROOT}/scheme/entry`, data)\r\n  },\r\n  deleteScheme(id){\r\n    return axios.delete(`${API_ROOT}/scheme/entry/${id}`)\r\n  },  \r\n  getLoanAppInitialData(){\r\n      return [axios.get(`${API_ROOT}/scheme/entry`),axios.get(`${API_ROOT}/member/entry/all`)]\r\n  }\r\n\r\n}\r\nconst GroupLoanModel = {\r\n  applyForloan(data){\r\n    return axios.post(`${API_ROOT}/groupLoan/applyGroupLoan`, data)\r\n  },\r\n  getApprovalList(){\r\n    return axios.get(`${API_ROOT}/groupLoan/entry/pendingApproval`);\r\n  },\r\n  getDisburseList(){\r\n    return axios.get(`${API_ROOT}/groupLoan/entry/pendingDisburse`);\r\n  },\r\n  getLoanDetailbyId(id){\r\n    return axios.get(`${API_ROOT}/groupLoan/entry/${id}`);\r\n  },\r\n  approveRejectLoan(data){\r\n    return axios.post(`${API_ROOT}/groupLoan/approveLoan`, data)\r\n  },\r\n  getAllLoanApplications(){\r\n    return axios.get(`${API_ROOT}/groupLoan/entry/all`);\r\n  },\r\n  disburseRejectLoan(data){\r\n    return axios.post(`${API_ROOT}/groupLoan/disburseLoan`, data)\r\n  },\r\n  getSattlementAmount(loan_account_no){\r\n    return axios.get(`${API_ROOT}/closeAccount/calculateSattleAmount/${loan_account_no}`)\r\n  },\r\n  closeAccount(data){\r\n    return axios.post(`${API_ROOT}/closeAccount/closeLoanAccout`, data)\r\n  }\r\n}\r\nconst EmiModel = {\r\n  calculateEMI(data){\r\n    return axios.post(`${API_ROOT}/emis/calculateEMI`, data);\r\n  },\r\n  getDueEmis(today = moment().format(\"yyyy-MM-DD\")){\r\n    return axios.get(`${API_ROOT}/emis/dueEMIs/${today}`);\r\n  },\r\n  paidEmi(id){\r\n    return axios.put(`${API_ROOT}/emis/entry`,{\"id\":id});\r\n  },\r\n  getPaidEmis(loanAccountNo){\r\n    return axios.get(`${API_ROOT}/emis/entry/${loanAccountNo}`);\r\n  },\r\n  getAllEmis(today = moment().format(\"yyyy-MM-DD\")){\r\n    return axios.get(`${API_ROOT}/emis/allEmis/${today}`);\r\n  },\r\n\r\n}\r\nexport default { SchemeModel,GroupLoanModel,EmiModel };","import React, { useEffect, useState } from 'react';\r\nimport { Table, Button, Container, Row, Col, Modal } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport groupLoan from '../../models/groupLoan';\r\nimport Loader from '../layout/Loader';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { CHANGE_PAGE } from '../../constants/actionTypes'\r\nfunction Scheme(props) {\r\n    const dispatch = useDispatch();\r\n    const [showDeleteModel, setShowDeleteModel] = useState(false)\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [schemes, setSchemes] = useState([]);\r\n    const [deleteID, setDeleteID] = useState(0)\r\n    useEffect(() => {\r\n        getSchemes();\r\n        dispatch({ type: CHANGE_PAGE, page: \"All Schemes\" });\r\n    }, [])\r\n\r\n    const getSchemes = () => {\r\n        setisShowLoader(true);\r\n        groupLoan.SchemeModel.getScheme().then(res => {\r\n            setisShowLoader(false);\r\n            if (res.statusCode == 200) {\r\n                setSchemes(res.body.message);\r\n            } else {\r\n                setSchemes([]);\r\n            }\r\n        })\r\n    }\r\n    const deleteHandle = (id) => {\r\n        setDeleteID(id);\r\n        setShowDeleteModel(true);\r\n    }\r\n\r\n    const deleteScheme = async () => {\r\n        setShowDeleteModel(false);\r\n        try {\r\n            setisShowLoader(true);\r\n            let response = await groupLoan.SchemeModel.deleteScheme(deleteID);\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n                let UpdatedList = schemes.filter((scheme, idx) => scheme.id != deleteID);\r\n                setSchemes(UpdatedList);\r\n            }\r\n        } catch (error) {\r\n            console.log(error.response.body.message);\r\n            setisShowLoader(false);\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"content\">\r\n                <Modal show={showDeleteModel} onHide={() => setShowDeleteModel(false)}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Delete Scheme</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>Are you sure?</Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={() => setShowDeleteModel(false)}>\r\n                            Cancel\r\n                        </Button>\r\n                        <Button variant=\"primary\" onClick={() => deleteScheme()}>\r\n                            Delete\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n\r\n                <Loader show={isShowLoader} />\r\n                <Row className=\"mb-5 mt-3\">\r\n                    <Col>\r\n                        <Link to=\"/addScheme\">\r\n                            <Button variant=\"info\" size=\"md\" active>\r\n                                Add Scheme\r\n                            </Button>\r\n                        </Link>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <Table className=\"shadow-lg p-3 mb-5 bg-white rounded\" striped bordered hover responsive>\r\n                            <thead className=\"bg-primary\">\r\n                                <tr>\r\n                                    <th>Scheme code</th>\r\n                                    <th>Scheme name</th>\r\n                                    <th>Max amount</th>\r\n                                    <th>Interest rate (%)</th>\r\n                                    <th>EMI type</th>\r\n                                    <th>Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {schemes.map((scheme, id) => (<tr key={scheme.id}>\r\n                                    <td>{scheme.scheme_code}</td>\r\n                                    <td>{scheme.scheme_name}</td>\r\n                                    <td>{scheme.max_amount}</td>\r\n                                    <td>{scheme.interest_rate}%</td>\r\n                                    <td>{scheme.EMI_type}</td>\r\n                                    <td>\r\n                                        <Button variant=\"danger\" size={\"sm\"} onClick={() => deleteHandle(scheme.id)} className=\"ml-2\">Delete</Button>\r\n\r\n                                    </td>\r\n                                </tr>))}\r\n                            </tbody>\r\n                        </Table>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default Scheme;","import React, { useState,useEffect } from 'react';\r\nimport { Button, Form, Container, Row, Col, Toast } from 'react-bootstrap';\r\nimport { useFormik } from 'formik';\r\nimport groupLoan from '../../models/groupLoan';\r\nimport Loader from '../layout/Loader';\r\nimport { useSelector,useDispatch } from \"react-redux\";\r\nimport {CHANGE_PAGE} from '../../constants/actionTypes'\r\nfunction AddScheme(props) {\r\n  const auth = useSelector(state => state.auth);\r\n  const dispatch = useDispatch();\r\n  const [values, setValues] = useState({});\r\n  const [isShowLoader, setisShowLoader] = useState(false)\r\n  const [showToast, setShowToast] = useState({ isShow: false, type: \"\", message: \"\" })\r\n  useEffect(()=>{\r\n    dispatch({type:CHANGE_PAGE,page:\"Add Scheme\"});\r\n  },[]);\r\n  const validate = values => {\r\n    const errors = {};\r\n    if (!values.scheme_code) {\r\n      errors.scheme_code = 'Scheme code is Required!';\r\n    }\r\n    if (!values.scheme_name) {\r\n      errors.scheme_name = 'Scheme name is Required!';\r\n    }\r\n    if (!values.max_amount) {\r\n      errors.max_amount = 'Max amount is Required!';\r\n    }\r\n    if (!values.interest_rate) {\r\n      errors.interest_rate = 'Interest rate is Required!';\r\n    }\r\n    if (!values.EMI_type) {\r\n      errors.EMI_type = 'EMI type is Required!';\r\n    }\r\n    return errors;\r\n  };\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      scheme_code: '',\r\n      scheme_name: '',\r\n      max_amount: '',\r\n      interest_rate: '',\r\n      EMI_type: '',\r\n      user_id: auth.id\r\n    },\r\n    validate,\r\n    onSubmit: async (values) => {\r\n      setisShowLoader(true);\r\n      try {\r\n        let response = await groupLoan.SchemeModel.saveScheme(values);\r\n        setisShowLoader(false);\r\n        if (response.statusCode == 200) {\r\n          formik.resetForm();\r\n          setShowToast({ isShow: true, type: \"bg-success\", message: \"Scheme Created Successfully!\" })\r\n        } else {\r\n          setShowToast({ isShow: true, type: \"bg-danger\", message: \"Something Went Wrong!\" })\r\n        }\r\n\r\n      } catch (error) {\r\n        setisShowLoader(false);\r\n        setShowToast({ isShow: true, type: \"bg-danger\", message: error.response.body.message })\r\n      }\r\n    },\r\n    handleChange: () => {\r\n      setValues(prevValues => ({\r\n        ...prevValues,\r\n        // we use the name to tell Formik which key of `values` to update\r\n        [values.target.name]: values.target.value\r\n      }))\r\n    },\r\n  });\r\n  return (\r\n    <>\r\n      <Toast key={1} autohide delay={3000} show={showToast.isShow} onClose={() => setShowToast({ isShow: false, type: \"\", message: \"\" })} className={\"loader \" + (showToast.type)} >\r\n        <Toast.Header>\r\n          <strong className=\"me-auto\">{showToast.type == \"bg-danger\" ? \"Error\" : \"Success\"} Message</strong>\r\n        </Toast.Header>\r\n        <Toast.Body className=\"Dark\">\r\n          {showToast.message}\r\n        </Toast.Body>\r\n      </Toast>\r\n      <div className=\"content\">\r\n        <Loader show={isShowLoader} />\r\n        {/* <h2 className=\"text-info text-center\">Add Scheme</h2> */}\r\n        {/* <Container fluid className=\"bg-white mt-5 shadow-lg p-3 mb-5 bg-white rounded\"> */}\r\n        <div className=\"row\">\r\n          <div className=\"col-md-8\">\r\n            <div className=\"card card-user\">\r\n              <div className=\"card-header\">\r\n                <h5 className=\"card-title\">Add Scheme</h5>\r\n              </div>\r\n              <div className=\"card-body\">\r\n\r\n                <Form onSubmit={formik.handleSubmit}>\r\n                  <Row className=\"mb-3\" >\r\n                    <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                      <Form.Label>Scheme Code</Form.Label>\r\n                      <Form.Control\r\n                        name=\"scheme_code\"\r\n                        onChange={formik.handleChange}\r\n                        value={formik.values.scheme_code}\r\n                      />\r\n                      {formik.touched.scheme_code && formik.errors.scheme_code ? (\r\n                        <div class=\"text-danger\">{formik.errors.scheme_code}</div>\r\n                      ) : null}\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group\">\r\n                      <Form.Label>Scheme Name</Form.Label>\r\n                      <Form.Control\r\n                        name=\"scheme_name\"\r\n                        onChange={formik.handleChange}\r\n                        value={formik.values.scheme_name}\r\n                      />\r\n                      {formik.touched.scheme_name && formik.errors.scheme_name ? (\r\n                        <div class=\"text-danger\">{formik.errors.scheme_name}</div>\r\n                      ) : null}\r\n\r\n                    </Form.Group>\r\n\r\n                  </Row>\r\n                  <Row className=\"mb-3\" >\r\n                    <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                      <Form.Label>Max amount</Form.Label>\r\n                      <Form.Control\r\n                        name=\"max_amount\"\r\n                        type=\"number\"\r\n                        min=\"1\"\r\n                        onChange={formik.handleChange}\r\n                        value={formik.values.max_amount}\r\n                      />\r\n                      {formik.touched.max_amount && formik.errors.max_amount ? (\r\n                        <div class=\"text-danger\">{formik.errors.max_amount}</div>\r\n                      ) : null}\r\n\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                      <Form.Label>Interest Rate (in %)</Form.Label>\r\n                      <Form.Control\r\n                        name=\"interest_rate\"\r\n                        type=\"number\"\r\n                        min=\"0\"\r\n                        onChange={formik.handleChange}\r\n                        value={formik.values.interest_rate}\r\n                      />\r\n                      {formik.touched.interest_rate && formik.errors.interest_rate ? (\r\n                        <div class=\"text-danger\">{formik.errors.interest_rate}</div>\r\n                      ) : null}\r\n\r\n                    </Form.Group>\r\n\r\n                  </Row>\r\n                  <Row className=\"mb-3\" md={6}>\r\n                    <Form.Group as={Col} className=\"mb-3\" controlId=\"formGridAddress1\">\r\n                      <Form.Label>EMI type</Form.Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"EMI_type\"\r\n                        onChange={formik.handleChange}\r\n                        value={formik.values.EMI_type}\r\n                      >\r\n                        <option key=\"\" value=\"\">Select EMI type</option>\r\n                        <option key=\"flat\" value=\"flat\">Flat rate</option>\r\n                        {/* <option key=\"reduceing\" value=\"reduceing\">Reduceing rate</option> */}\r\n                      </select>\r\n                      {formik.touched.EMI_type && formik.errors.EMI_type ? (\r\n                        <div class=\"text-danger\">{formik.errors.EMI_type}</div>\r\n                      ) : null}\r\n\r\n                    </Form.Group>\r\n\r\n                  </Row>\r\n                  <Button variant=\"primary\" type=\"submit\">\r\n                    Save\r\n                  </Button>\r\n\r\n                </Form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* </Container> */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AddScheme;","import {API_ROOT} from \"./BaseUrl\"\r\nimport axios from \"./interceptor-middleware\";\r\n//const url = '/memberGroups/';\r\n\r\nconst DashboardModel = {\r\n  receivedAmount(){\r\n    return axios.get(`${API_ROOT}/dashboard/totalReceivedAmount`)\r\n  },\r\n  paidAmount(){\r\n    return axios.get(`${API_ROOT}/dashboard/totalPaidAmount`)\r\n  },\r\n  countActiveInactive(){\r\n    return axios.get(`${API_ROOT}/dashboard/countActiveInactive`)\r\n  }\r\n}\r\n    export default DashboardModel;","import {superagent, API_ROOT} from \"./BaseUrl\"\r\n\r\n//const url = '/memberGroups/';\r\n\r\nconst ProcessingFeeModel = {\r\n    getProcessingFee(filter){\r\n        return superagent.get(`${API_ROOT}/processingFee/entry/${filter}`)\r\n    },\r\n    saveProcessingFee(data){\r\n        return superagent.post(`${API_ROOT}/processingFee/entry`,data)\r\n    },\r\n    deleteProcessingFee(id){\r\n        return superagent.del(`${API_ROOT}/processingFee/entry/${id}`)\r\n    },\r\n    editProcessingFee(data,id){\r\n        return superagent.put(`${API_ROOT}/processingFee/entry/${id}`,data)\r\n\r\n    }\r\n    \r\n  }\r\n    export default {ProcessingFeeModel};","import {superagent, API_ROOT} from \"./BaseUrl\"\r\n\r\n//const url = '/memberGroups/';\r\n\r\nconst ExpenseModel = {\r\n    getExpense(filter){\r\n        return superagent.get(`${API_ROOT}/expense/entry/${filter}`)\r\n    },\r\n    saveExpense(data){\r\n        return superagent.post(`${API_ROOT}/expense/entry`,data)\r\n    },\r\n    deleteExpense(id){\r\n        return superagent.del(`${API_ROOT}/expense/entry/${id}`)\r\n    },\r\n    editExpense(data,id){\r\n        return superagent.put(`${API_ROOT}/expense/entry/${id}`,data)\r\n\r\n    }\r\n    \r\n  }\r\n    export default {ExpenseModel};","import React, { useEffect, useState } from 'react'\r\nimport agent from '../../agent'\r\nimport Loader from '../layout/Loader';\r\nimport { useDispatch } from 'react-redux';\r\nimport { CHANGE_PAGE } from '../../constants/actionTypes'\r\nimport DashboardModel from '../../models/dashboard'\r\nimport processingFee from '../../models/processingFee';\r\nimport expenseRecord from '../../models/expenseRecord';\r\nimport groupLoan from '../../models/groupLoan';\r\n\r\nimport { Pie } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\r\nimport { Link } from 'react-router-dom';\r\nimport moment from 'moment';\r\nChartJS.register(ArcElement, Tooltip, Legend);\r\n//var demo;\r\nexport default function Dashboard() {\r\n  const dispatch = useDispatch();\r\n  const [paidAmount, setPaidAmount] = useState({});\r\n  const [receivedAmount, setReceivedAmount] = useState({});\r\n  const [processingFeeReport, setProcessingFeeReport] = useState({});\r\n  const [countActiveInactive, setCountActiveInactive] = useState({});\r\n  const [expenseReport, setExpenseReport] = useState({});\r\n  const [allEmis, setAllEmis] = useState({});\r\n  const [isShowLoader, setisShowLoader] = useState(false);\r\n  useEffect(() => {\r\n    dispatch({ type: CHANGE_PAGE, page: \"Dashboard\" });\r\n    getReport();\r\n  }, [])\r\n  const getReport = async () => {\r\n    try {\r\n      setisShowLoader(true);\r\n      let data = await Promise.allSettled([\r\n        DashboardModel.paidAmount(),\r\n        DashboardModel.receivedAmount(),\r\n        DashboardModel.countActiveInactive(),\r\n        processingFee.ProcessingFeeModel.getProcessingFee('all'),\r\n        expenseRecord.ExpenseModel.getExpense('all'),\r\n        groupLoan.EmiModel.getAllEmis()]);\r\n      setisShowLoader(false);\r\n      setPaidAmount(data[0].value?.body?.message)\r\n      setReceivedAmount(data[1].value?.body?.message)\r\n      setCountActiveInactive(data[2].value?.body?.message)\r\n      setAllEmis(data[5].value?.body)\r\n      let totalProcessing = 0;\r\n      data[3].value?.body?.message?.forEach(\r\n        val=>totalProcessing += val.amount\r\n        );\r\n      setProcessingFeeReport({total:totalProcessing,fee:data[3].value?.body?.message})\r\n\r\n      let totalExpense = 0;\r\n      data[4].value?.body?.message?.forEach(\r\n        val=>totalExpense += val.amount\r\n        );\r\n\r\n      \r\n      setExpenseReport({total:totalExpense,expense:data[4].value?.body?.message})\r\n\r\n    } catch (error) {\r\n      setisShowLoader(false);\r\n      console.log(error);\r\n    }\r\n  }\r\n  const data = {\r\n    labels: [`Paid - ${allEmis?.paidCount}`,`Unpaid - ${allEmis?.notPaidCount}`],\r\n    datasets: [\r\n      {\r\n        label: '# of Votes',\r\n        data: [allEmis?.paidCount, allEmis?.notPaidCount],\r\n        backgroundColor: [\r\n          'rgba(75, 192, 192, 0.2)',\r\n          'rgba(255, 99, 132, 0.2)'\r\n        ],\r\n        borderColor: [\r\n          'rgba(75, 192, 192, 1)',\r\n          'rgba(255, 99, 132, 1)'\r\n        ],\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n  \r\n  return (\r\n    <>\r\n      <Loader show={isShowLoader} />\r\n      <div className=\"content\">\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-4 col-md-6 col-sm-6\">\r\n            <div className=\"card card-stats\">\r\n              <div className=\"card-body \">\r\n                <div className=\"row\">\r\n                  <div className=\"col-5 col-md-4\">\r\n                    <div className=\"icon-big text-center icon-warning\">\r\n                      <i className=\"nc-icon nc-globe text-warning\"></i>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-7 col-md-8\">\r\n                    <div className=\"numbers\">\r\n                      <p className=\"card-category\">Paid</p>\r\n                      <p className=\"card-title\">{paidAmount?.total}</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"card-footer \">\r\n                <hr />\r\n                <div className=\"stats\">\r\n                  <Link to=\"/paidDetailView\">\r\n                    <i className=\"nc-icon nc-bullet-list-67\"></i>\r\n                    Detail View\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-lg-4 col-md-6 col-sm-6\">\r\n            <div className=\"card card-stats\">\r\n              <div className=\"card-body \">\r\n                <div className=\"row\">\r\n                  <div className=\"col-5 col-md-4\">\r\n                    <div className=\"icon-big text-center icon-warning\">\r\n                      <i className=\"nc-icon nc-money-coins text-success\"></i>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-7 col-md-8\">\r\n                    <div className=\"numbers\">\r\n                      <p className=\"card-category\">Received</p>\r\n                      <p className=\"card-title\">{receivedAmount?.total?.toFixed(0)}</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"card-footer \">\r\n                <hr />\r\n                <div className=\"stats\">\r\n                  <Link to=\"/recieveDetailView\">\r\n                    <i className=\"nc-icon nc-bullet-list-67\"></i>\r\n                    Detail View\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-lg-4 col-md-6 col-sm-6\">\r\n            <div className=\"card card-stats\">\r\n              <div className=\"card-body \">\r\n                <div className=\"row\">\r\n                  <div className=\"col-5 col-md-4\">\r\n                    <div className=\"icon-big text-center icon-warning\">\r\n                      <i className=\"nc-icon nc-money-coins text-success\"></i>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-7 col-md-8\">\r\n                    <div className=\"numbers\">\r\n                      <p className=\"card-category\">Main Ledger</p>\r\n                      <p className=\"card-title\">{(receivedAmount?.total+processingFeeReport?.total)-(paidAmount?.total+expenseReport?.total)}</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"card-footer \">\r\n                <hr />\r\n                <div className=\"stats\">\r\n                  <Link to=\"/outstandingDetailView\">\r\n                    <i className=\"nc-icon nc-bullet-list-67\"></i>\r\n                    Detail View\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n        <div className='row justify-content-center'>\r\n          <div className=\"col-lg-3 col-md-6 col-sm-6\">\r\n            <div className=\"card card-stats\">\r\n              <div className=\"card-body \">\r\n                <div className=\"row\">\r\n                  <div className=\"col-5 col-md-4\">\r\n                    <div className=\"icon-big text-center icon-warning\">\r\n                      <i className=\"nc-icon nc-vector text-danger\"></i>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-7 col-md-8\">\r\n                    <div className=\"numbers\">\r\n                      <p className=\"card-category\">Active Borrowers</p>\r\n                      <p className=\"card-title\">{countActiveInactive?.active_accounts}</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {/* <div className=\"card-footer \">\r\n              <hr/>\r\n              <div className=\"stats\">\r\n                <i className=\"fa fa-clock-o\"></i>\r\n                In the last hour\r\n              </div>\r\n            </div> */}\r\n            </div>\r\n          </div>\r\n          <div className=\"col-lg-3 col-md-6 col-sm-6\">\r\n            <div className=\"card card-stats\">\r\n              <div className=\"card-body \">\r\n                <div className=\"row\">\r\n                  <div className=\"col-5 col-md-4\">\r\n                    <div className=\"icon-big text-center icon-warning\">\r\n                      <i className=\"nc-icon nc-favourite-28 text-primary\"></i>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-7 col-md-8\">\r\n                    <div className=\"numbers\">\r\n                      <p className=\"card-category\">Inactive Borrowers</p>\r\n                      <p className=\"card-title\">{countActiveInactive?.inactive_accounts}</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {/* <div className=\"card-footer \">\r\n              <hr/>\r\n              <div className=\"stats\">\r\n                <i className=\"fa fa-refresh\"></i>\r\n                Update now\r\n              </div>\r\n            </div> */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <div className=\"card \">\r\n            <div className=\"card-header \">\r\n              <h5 className=\"card-title\">Paid/Unpaid EMIs</h5>\r\n              <p className=\"card-category\">\r\n                <span><b>Total Paid:</b> {allEmis?.paidAmount}</span><br/>\r\n                <span><b>Total Unpaid:</b> {allEmis?.unPaidAmount}</span>\r\n                </p>\r\n            </div>\r\n            <div className=\"card-body \">\r\n              {/* <canvas id=\"chartHours\" width=\"400\" height=\"100\"></canvas> */}\r\n              <Pie\r\n              width={null}\r\n              height={null}\r\n                data={data}\r\n                options={{\r\n                  maintainAspectRatio: false// this would be a 1:1 aspect ratio\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"card-footer \">\r\n              <hr/>\r\n              <div className=\"stats\">\r\n                \r\n                {/* <i className=\"fa fa-history\"></i> Updated 3 minutes ago */}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n        {/* <div className=\"row\">\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card \">\r\n            <div className=\"card-header \">\r\n              <h5 className=\"card-title\">Email Statistics</h5>\r\n              <p className=\"card-category\">Last Campaign Performance</p>\r\n            </div>\r\n            <div className=\"card-body \">\r\n              <canvas id=\"chartEmail\"></canvas>\r\n            </div>\r\n            <div className=\"card-footer \">\r\n              <div className=\"legend\">\r\n                <i className=\"fa fa-circle text-primary\"></i> Opened\r\n                <i className=\"fa fa-circle text-warning\"></i> Read\r\n                <i className=\"fa fa-circle text-danger\"></i> Deleted\r\n                <i className=\"fa fa-circle text-gray\"></i> Unopened\r\n              </div>\r\n              <hr/>\r\n              <div className=\"stats\">\r\n                <i className=\"fa fa-calendar\"></i> Number of emails sent\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-8\">\r\n          <div className=\"card card-chart\">\r\n            <div className=\"card-header\">\r\n              <h5 className=\"card-title\">NASDAQ: AAPL</h5>\r\n              <p className=\"card-category\">Line Chart with Points</p>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <canvas id=\"speedChart\" width=\"400\" height=\"100\"></canvas>\r\n            </div>\r\n            <div className=\"card-footer\">\r\n              <div className=\"chart-legend\">\r\n                <i className=\"fa fa-circle text-info\"></i> Tesla Model S\r\n                <i className=\"fa fa-circle text-warning\"></i> BMW 5 Series\r\n              </div>\r\n              <hr />\r\n              <div className=\"card-stats\">\r\n                <i className=\"fa fa-check\"></i> Data information certified\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> */}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport { Button, Form, Container, Row, Col, Toast, Card, useAccordionButton, AccordionContext, Accordion } from 'react-bootstrap';\r\nimport { useFormik } from 'formik';\r\nimport DatePicker from \"react-datepicker\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport groupLoan from '../../models/groupLoan';\r\nimport Loader from '../layout/Loader';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { CHANGE_PAGE } from '../../constants/actionTypes'\r\nimport {API_ROOT} from \"../../models/BaseUrl\"\r\nfunction ContextAwareToggle({ children, eventKey, callback }) {\r\n    const { activeEventKey } = useContext(AccordionContext);\r\n\r\n    const decoratedOnClick = useAccordionButton(\r\n        eventKey,\r\n        () => callback && callback(eventKey),\r\n    );\r\n\r\n    const isCurrentEventKey = activeEventKey === eventKey;\r\n\r\n    return (\r\n        <Button variant=\"info\" onClick={decoratedOnClick}>\r\n            {/* <i className=\"nc-icon nc-simple-add mr-2\"></i> */}\r\n            {children}\r\n        </Button>\r\n\r\n    );\r\n}\r\nfunction LoanApplication(props) {\r\n    const auth = useSelector(state => state.auth);\r\n    const [enrollmentDate, setEnrollmentDate] = useState(new Date());\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [showToast, setShowToast] = useState({ isShow: false, type: \"\", message: \"\" })\r\n    const [memberRecords, setMemberRecords] = useState([]);\r\n    const [schemeRecords, setSchemeRecords] = useState([]);\r\n    const [selectedScheme, setSelectedScheme] = useState({});\r\n    const [image,setImage] = useState(\"\");\r\n    let baseURL = API_ROOT.replace('/api','/')\r\n    const tanure = { \"weekly\": \"Weeks\", \"monthly\": \"Months\", \"daily\": \"Days\", \"fortnight\": \"Fortnight\" };\r\n    let history = useHistory();\r\n    const dispatch = useDispatch();\r\n    //const selectedSm = {\"interest_rate\":0,\"EMI_type\":\"\",\"max_amount\":0};\r\n    useEffect(() => {\r\n        getSchemesAndMembers();\r\n        dispatch({ type: CHANGE_PAGE, page: \"Loan Application\" });\r\n    }, [])\r\n    const getSchemesAndMembers = async () => {\r\n        try {\r\n            setisShowLoader(true);\r\n            const response = await Promise.all(groupLoan.SchemeModel.getLoanAppInitialData())\r\n            setisShowLoader(false);\r\n            setSchemeRecords(response[0].body.message);\r\n            setMemberRecords(response[1].body.message);\r\n            console.log(response);\r\n        } catch (error) {\r\n            setisShowLoader(false);\r\n            setShowToast({ isShow: true, type: \"bg-danger\", message: error.response.body.message })\r\n        }\r\n    }\r\n    const validate = values => {\r\n        const errors = {};\r\n        if (!values.scheme_id) {\r\n            errors.scheme_id = 'Scheme code is Required!';\r\n        }\r\n        if (!values.member_id) {\r\n            errors.member_id = 'Member name is Required!';\r\n        }\r\n        if (!values.interest_rate) {\r\n            errors.interest_rate = 'Interest rate is Required!';\r\n        }\r\n        if (selectedScheme?.interest_rate > 0 && values.interest_rate > selectedScheme?.interest_rate) {\r\n            errors.interest_rate = `As per the Selected Scheme. Interest rate should not greater than ${selectedScheme.interest_rate}.`;\r\n        }\r\n        if (!values.loan_amount) {\r\n            errors.loan_amount = 'Loan amount is Required!';\r\n        }\r\n        if (selectedScheme?.max_amount > 0 && values.loan_amount > selectedScheme.max_amount) {\r\n            errors.loan_amount = `As per the Selected Scheme. Loan amount should not greater than ${selectedScheme.max_amount}.`;\r\n        }\r\n        if (!values.EMI_payout) {\r\n            errors.EMI_payout = 'EMI payout is Required!';\r\n        }\r\n        if (!values.tenure) {\r\n            errors.tenure = 'Tenure is Required!';\r\n        }\r\n        return errors;\r\n    };\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            scheme_id: '',\r\n            application_date: '',\r\n            member_id: '',\r\n            address: '',\r\n            interest_rate: \"\",\r\n            loan_amount: '',\r\n            // EMI_amount: '',\r\n            EMI_payout: \"\",\r\n            EMI_type: \"\",\r\n            tenure: \"\",\r\n            user_id: auth.id,\r\n            co_borrower_name: \"\",\r\n            co_borrower_aadhar_card: \"\",\r\n            co_borrower_pan_card: \"\",\r\n            co_borrower_ele_bill: \"\",\r\n            co_borrower_relationship:\"\"\r\n        },\r\n        validate,\r\n        onSubmit: async (values) => {\r\n            console.log(values);\r\n            setisShowLoader(true);\r\n            try {\r\n                //delete values.EMI_type;\r\n                values.application_date = enrollmentDate;\r\n                let response = await groupLoan.GroupLoanModel.applyForloan(values);\r\n                setisShowLoader(false);\r\n                if (response.statusCode == 200) {\r\n                    formik.resetForm();\r\n                    setShowToast({ isShow: true, type: \"bg-success\", message: \"Record created successfully. Loan goes for approval.\" })\r\n                } else {\r\n                    setShowToast({ isShow: true, type: \"bg-danger\", message: \"Something went wrong!\" })\r\n                }\r\n\r\n            } catch (error) {\r\n                setisShowLoader(false);\r\n                setShowToast({ isShow: true, type: \"bg-danger\", message: error.response.body.message })\r\n            }\r\n        }\r\n    });\r\n    const handleScheme = (e) => {\r\n        console.log(e.target.value);\r\n        let selectedScheme = schemeRecords.filter(scheme => scheme.scheme_code == e.target.value);\r\n        setSelectedScheme(selectedScheme[0]);\r\n        formik.values.EMI_type = selectedScheme[0].EMI_type;\r\n        formik.values.interest_rate = selectedScheme[0].interest_rate;\r\n        formik.handleChange(e);\r\n    }\r\n    const handleMemberSelection = (e)=>{\r\n        if(e.target.value!=\"\"){\r\n            let selectMember = memberRecords.filter(val=>val.member_id.toString()==e.target.value);\r\n            setImage(selectMember[0].image);\r\n        }\r\n        formik.handleChange(e);\r\n    }\r\n    return (\r\n\r\n        <>\r\n\r\n            <div className=\"content\">\r\n                <Toast key={1} autohide delay={3000} show={showToast.isShow} onClose={() => setShowToast({ isShow: false, type: \"\", message: \"\" })} className={\"loader \" + (showToast.type)} >\r\n                    <Toast.Header>\r\n                        <strong className=\"me-auto\">{showToast.type == \"bg-danger\" ? \"Error\" : \"Success\"} Message</strong>\r\n                    </Toast.Header>\r\n                    <Toast.Body className=\"Dark\">\r\n                        {showToast.message}\r\n                    </Toast.Body>\r\n                </Toast>\r\n                <Loader show={isShowLoader} />\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-8\">\r\n                        <Form onSubmit={formik.handleSubmit}>\r\n                            <Accordion defaultActiveKey=\"0\" >\r\n                                <Card className=\"card card-user\">\r\n                                    <Card.Header>\r\n                                        <ContextAwareToggle eventKey=\"0\">Borrower Details</ContextAwareToggle>\r\n                                    </Card.Header>\r\n\r\n                                    <Accordion.Collapse eventKey=\"0\">\r\n                                        <Card.Body className=\"card-body\">\r\n\r\n                                            <Row className=\"mb-3\" >\r\n                                                <Form.Group as={Col} className=\"form-group required\" controlId=\"formGridEnroll\">\r\n                                                    <Form.Label >Application Date</Form.Label>\r\n                                                    <DatePicker className=\"form-control\"\r\n                                                        selected={enrollmentDate}\r\n                                                        onChange={(date) => setEnrollmentDate(date)}\r\n                                                        name=\"application_date\"\r\n                                                        dateFormat=\"dd/MM/yyyy\"\r\n                                                    />\r\n                                                </Form.Group>\r\n                                                <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                                                    <Form.Label>Member name</Form.Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"member_id\"\r\n                                                        onChange={(e)=>handleMemberSelection(e)}\r\n                                                        value={formik.values.member_id}\r\n                                                    >\r\n                                                        <option key=\"\" value=\"\">Select Member</option>\r\n                                                        {memberRecords.map((member, id) => (\r\n                                                            <option key={member.member_id} value={member.member_id}>{`name= ${member.member_name} - member_id= ${member.member_id} `}</option>\r\n                                                        ))}\r\n\r\n                                                    </select>\r\n                                                    {formik.touched.member_id && formik.errors.member_id ? (\r\n                                                        <div className=\"text-danger\">{formik.errors.member_id}</div>\r\n                                                    ) : null}\r\n                                                </Form.Group>\r\n\r\n                                            </Row>\r\n                                            <Row className=\"mb-3\" >\r\n                                                <Form.Group as={Col} controlId=\"formGriddob\">\r\n                                                    <Form.Label>Member Address</Form.Label>\r\n                                                    <Form.Control\r\n                                                        name=\"address\"\r\n                                                        as=\"textarea\"\r\n                                                        onChange={formik.handleChange}\r\n                                                        value={formik.values.address}\r\n\r\n                                                    />\r\n                                                </Form.Group>\r\n                                                <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                                                    <Form.Label>Scheme</Form.Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"scheme_id\"\r\n                                                        onChange={handleScheme}\r\n                                                        value={formik.values.scheme_id}\r\n                                                    >\r\n                                                        <option key=\"\" value=\"\">Select Scheme</option>\r\n                                                        {schemeRecords.map((schems, id) => (\r\n                                                            <option key={schems.scheme_code} value={schems.scheme_code}>{schems.scheme_code}</option>\r\n                                                        ))}\r\n\r\n                                                    </select>\r\n                                                    {formik.touched.scheme_id && formik.errors.scheme_id ? (\r\n                                                        <div className=\"text-danger\">{formik.errors.scheme_id}</div>\r\n                                                    ) : null}\r\n\r\n                                                </Form.Group>\r\n\r\n                                            </Row>\r\n                                            <Row className=\"mb-3\" >\r\n                                                <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                                                    <Form.Label>Interest Rate (in %)</Form.Label>\r\n                                                    <Form.Control\r\n                                                        name=\"interest_rate\"\r\n                                                        type=\"number\"\r\n                                                        min=\"0\"\r\n                                                        onChange={formik.handleChange}\r\n                                                        value={formik.values.interest_rate}\r\n                                                    />\r\n                                                    <Form.Text className=\"text-muted\">\r\n                                                        It will change as per scheme.\r\n                                                    </Form.Text>\r\n                                                    {formik.touched.interest_rate && formik.errors.interest_rate ? (\r\n                                                        <div className=\"text-danger\">{formik.errors.interest_rate}</div>\r\n                                                    ) : null}\r\n\r\n                                                </Form.Group>\r\n                                                <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                                                    <Form.Label>Loan Amount</Form.Label>\r\n                                                    <Form.Control\r\n                                                        name=\"loan_amount\"\r\n                                                        type=\"number\"\r\n                                                        min=\"0\"\r\n                                                        onChange={formik.handleChange}\r\n                                                        value={formik.values.loan_amount}\r\n                                                    />\r\n                                                    <Form.Text className=\"text-muted\">\r\n                                                        Default will be Max amount of selected scheme.\r\n                                                    </Form.Text>\r\n\r\n                                                    {formik.touched.loan_amount && formik.errors.loan_amount ? (\r\n                                                        <div className=\"text-danger\">{formik.errors.loan_amount}</div>\r\n                                                    ) : null}\r\n\r\n                                                </Form.Group>\r\n\r\n                                            </Row>\r\n                                            <Row className=\"mb-3\" >\r\n                                                <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                                                    <Form.Label>EMI Payout</Form.Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"EMI_payout\"\r\n                                                        onChange={formik.handleChange}\r\n                                                        value={formik.values.EMI_payout}\r\n                                                    >\r\n                                                        <option key=\"\" value=\"\">Select Payout</option>\r\n                                                        {/* <option key=\"weekly\" value=\"weekly\">Weekly</option>\r\n                                                <option key=\"monthly\" value=\"fortnight\">Fortnight</option> */}\r\n                                                        <option key=\"monthly\" value=\"monthly\">Monthly</option>\r\n                                                    </select>\r\n                                                    {formik.touched.EMI_payout && formik.errors.EMI_payout ? (\r\n                                                        <div className=\"text-danger\">{formik.errors.EMI_payout}</div>\r\n                                                    ) : null}\r\n\r\n                                                </Form.Group>\r\n                                                <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                                                    <Form.Label>Tenure(in {formik.values.EMI_payout != \"\" ? tanure[formik.values.EMI_payout] : \"Months\"})</Form.Label>\r\n                                                    <Form.Control\r\n                                                        name=\"tenure\"\r\n                                                        type=\"number\"\r\n                                                        min=\"1\"\r\n                                                        onChange={formik.handleChange}\r\n                                                        value={formik.values.tenure}\r\n                                                    />\r\n                                                    {formik.touched.tenure && formik.errors.tenure ? (\r\n                                                        <div className=\"text-danger\">{formik.errors.tenure}</div>\r\n                                                    ) : null}\r\n\r\n                                                </Form.Group>\r\n                                            </Row>\r\n                                            <Row className=\"mb-3\">\r\n                                                <Form.Group as={Col} md={6} controlId=\"formGriddob\" className=\"form-group required\">\r\n                                                    <Form.Label>EMI Type</Form.Label>\r\n                                                    <Form.Control\r\n                                                        name=\"EMI_type\"\r\n                                                        type=\"text\"\r\n                                                        onChange={formik.handleChange}\r\n                                                        value={formik.values.EMI_type}\r\n                                                        disabled=\"disabled\"\r\n                                                    />\r\n                                                    <Form.Text className=\"text-muted\">\r\n                                                        It will change as per selected scheme.\r\n                                                    </Form.Text>\r\n                                                </Form.Group>\r\n                                            </Row>\r\n                                            {/* <Button variant=\"primary\" type=\"button\" onClick={()=>setActiveCard(\"1\")}>\r\n                                                Save\r\n                                            </Button> */}\r\n                                            <ContextAwareToggle eventKey=\"1\">Next</ContextAwareToggle>\r\n                                            <Button variant=\"danger\" onClick={() => { history.push(\"/\") }} type=\"button\" className=\"ml-2\">\r\n                                                Cancel\r\n                                            </Button>\r\n                                            {/* </Form> */}\r\n                                        </Card.Body>\r\n                                    </Accordion.Collapse>\r\n                                </Card>\r\n                                <Card className=\"card card-user\">\r\n                                    <Card.Header>\r\n                                        <ContextAwareToggle eventKey=\"1\">Co-Borrower Details</ContextAwareToggle>\r\n                                    </Card.Header>\r\n\r\n                                    <Accordion.Collapse eventKey=\"1\">\r\n                                        <Card.Body className=\"card-body\">\r\n                                            {/* <Form onSubmit={formik.handleSubmit}> */}\r\n                                            <Row className=\"mb-3\" >\r\n                                                <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                                                    <Form.Label>Co-Borrower name</Form.Label>\r\n                                                    <Form.Control\r\n                                                        name=\"co_borrower_name\"\r\n                                                        type=\"input\"\r\n                                                        min=\"0\"\r\n                                                        onChange={formik.handleChange}\r\n                                                        value={formik.values.co_borrower_name}\r\n                                                    />\r\n                                                </Form.Group>\r\n                                                <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                                                    <Form.Label>Relation ship</Form.Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"co_borrower_relationship\"\r\n                                                        onChange={formik.handleChange}\r\n                                                        value={formik.values.co_borrower_relationship}\r\n                                                    >\r\n                                                        <option key=\"\" value=\"\">Select</option>\r\n                                                        <option key=\"husband\" value=\"husband\">Husband</option>\r\n                                                        <option key=\"father\" value=\"father\">Father</option>\r\n                                                    </select>\r\n                                                </Form.Group>\r\n                                            </Row>\r\n                                            <Row className=\"mb-3\" >\r\n                                                <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                                                    <Form.Label>Aadhar Card</Form.Label>\r\n                                                    <Form.Control\r\n                                                        name=\"co_borrower_aadhar_card\"\r\n                                                        type=\"number\"\r\n                                                        min=\"0\"\r\n                                                        onChange={formik.handleChange}\r\n                                                        value={formik.values.co_borrower_aadhar_card}\r\n                                                    />\r\n                                                </Form.Group>\r\n                                                <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                                                    <Form.Label>PAN Card</Form.Label>\r\n                                                    <Form.Control\r\n                                                        name=\"co_borrower_pan_card\"\r\n                                                        type=\"input\"\r\n                                                        min=\"0\"\r\n                                                        onChange={formik.handleChange}\r\n                                                        value={formik.values.co_borrower_pan_card}\r\n                                                    />\r\n                                                </Form.Group>\r\n                                            </Row>\r\n                                            <Row className=\"mb-3\">\r\n                                                <Form.Group as={Col} md={6} controlId=\"formGriddob\" className=\"form-group required\">\r\n                                                    <Form.Label>Ele Bill no</Form.Label>\r\n                                                    <Form.Control\r\n                                                        name=\"co_borrower_ele_bill\"\r\n                                                        type=\"text\"\r\n                                                        onChange={formik.handleChange}\r\n                                                        value={formik.values.co_borrower_ele_bill}\r\n                                                    />\r\n                                                </Form.Group>\r\n                                            </Row>\r\n\r\n                                            <Button variant=\"primary\" type=\"submit\">\r\n                                                Save\r\n                                            </Button>\r\n                                            <Button variant=\"danger\" onClick={() => { history.push(\"/\") }} type=\"button\" className=\"ml-2\">\r\n                                                Cancel\r\n                                            </Button>\r\n                                        </Card.Body>\r\n                                    </Accordion.Collapse>\r\n                                </Card>\r\n                            </Accordion>\r\n                        </Form>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        <div className=\"card card-user\">\r\n                            <div className=\"card-body\">\r\n                                <div className=\"image\">\r\n                                    <img src=\"../assets/img/damir-bosnjak.jpg\" alt=\"...\" />\r\n                                </div>\r\n\r\n                                <div className=\"author\">\r\n                                    <a href=\"#\">\r\n\r\n                                        <img className=\"avatar border-gray\" src={image==\"\"?\"../assets/img/blank_image.jpg\":baseURL+image} alt=\"...\" />\r\n                                        {/* <input type=\"file\" name=\"profile_image\"/> */}\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LoanApplication;","import React, { useEffect, useState } from 'react';\r\nimport { Table, Button, Container, Row, Col } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport groupLoan from '../../models/groupLoan';\r\nimport Loader from '../layout/Loader';\r\nimport { useHistory } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { CHANGE_PAGE } from '../../constants/actionTypes'\r\n\r\nfunction LoanApproval(props) {\r\n    let history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [loanlist, setLoanlist] = useState([]);\r\n    useEffect(() => {\r\n        getLoanList();\r\n        dispatch({ type: CHANGE_PAGE, page: \"Applications for Approval\" });\r\n    }, [])\r\n\r\n    const getLoanList = async () => {\r\n        try {\r\n            setisShowLoader(true);\r\n            let response = await groupLoan.GroupLoanModel.getApprovalList();\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n                setLoanlist(response.body.message);\r\n            }\r\n\r\n        } catch (error) {\r\n            setisShowLoader(false);\r\n            console.log(error);\r\n        }\r\n    }\r\n    const redirectApproval = (loan_id) => {\r\n        history.push(\"/loanApprovalDetails?actionType=approve\", loan_id);\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"content\">\r\n                <Loader show={isShowLoader} />\r\n                {/* <Container fluid> */}\r\n                <Row>\r\n                    <Col>\r\n                        <Table className=\" shadow-lg p-3 mb-5 bg-white rounded\" striped bordered hover responsive>\r\n                            <thead className=\"bg-primary\">\r\n                                <tr>\r\n                                    <th>Application Date</th>\r\n                                    <th>Member name</th>\r\n                                    <th>Scheme ID</th>\r\n                                    <th>Loan Amount</th>\r\n                                    <th>Interest rate</th>\r\n                                    <th>Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {loanlist.length!=0?loanlist.map((loan, id) => (<tr key={loan.id}>\r\n                                    <td>{moment(loan.application_date).format(\"DD-MM-YYYY hh:ss A\")}</td>\r\n                                    <td>{loan.member?.member_name}</td>\r\n                                    <td>{loan.scheme_id}</td>\r\n                                    <td>{loan.loan_amount}</td>\r\n                                    <td>{loan.interest_rate}</td>\r\n                                    <td><Button variant=\"success\" size={\"sm\"} onClick={() => redirectApproval(loan.id)}>Approve</Button></td>\r\n                                </tr>)):<tr><td colSpan={\"6\"} className=\"text-center\">No Application for Approval!</td></tr>}\r\n                            </tbody>\r\n                        </Table>\r\n                    </Col>\r\n                </Row>\r\n                {/* </Container>             */}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LoanApproval;","import React, { useEffect, useState } from 'react';\r\nimport { Table, Button, Container, Row, Col } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport groupLoan from '../../models/groupLoan';\r\nimport Loader from '../layout/Loader';\r\nimport { useHistory } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { CHANGE_PAGE } from '../../constants/actionTypes'\r\n\r\nfunction DisburseLoan(props) {\r\n    let history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [loanlist, setLoanlist] = useState([]);\r\n    useEffect(() => {\r\n        getLoanList();\r\n        dispatch({ type: CHANGE_PAGE, page: \"Applications for Disburse\" });\r\n    }, [])\r\n\r\n    const getLoanList = async () => {\r\n        try {\r\n            setisShowLoader(true);\r\n            let response = await groupLoan.GroupLoanModel.getDisburseList();\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n                setLoanlist(response.body.message);\r\n            }\r\n\r\n        } catch (error) {\r\n            setisShowLoader(false);\r\n            console.log(error);\r\n        }\r\n    }\r\n    const redirectDisburse = (loan_id) => {\r\n        history.push(\"/loanApprovalDetails?actionType=disburse\", loan_id);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"content\">\r\n                <Loader show={isShowLoader} />\r\n                {/* <Container fluid> */}\r\n                {/* <h2 className=\"text-info text-center\">Applications For Disburse</h2> */}\r\n                <Row >\r\n                    <Col>\r\n                        <Table className=\" shadow-lg p-3 mb-5 bg-white rounded\" striped bordered hover responsive>\r\n                            <thead className=\"bg-primary\">\r\n                                <tr>\r\n                                    <th>Application Date</th>\r\n                                    <th>Member name</th>\r\n                                    <th>Scheme ID</th>\r\n                                    <th>Loan Amount</th>\r\n                                    <th>Interest rate</th>\r\n                                    <th>Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {loanlist.length!=0?loanlist.map((loan, id) => (<tr key={loan.id}>\r\n                                    <td>{moment(loan.application_date).format(\"DD-MM-YYYY hh:ss A\")}</td>\r\n                                    <td>{loan.member?.member_name}</td>\r\n                                    <td>{loan.scheme_id}</td>\r\n                                    <td>{loan.loan_amount}</td>\r\n                                    <td>{loan.interest_rate}</td>\r\n                                    <td><Button variant=\"success\" size={\"sm\"} onClick={() => redirectDisburse(loan.id)}>Disburse</Button></td>\r\n                                </tr>)):<tr><td colSpan={\"6\"} className=\"text-center\">No Application for Disbursement!</td></tr>}\r\n                            </tbody>\r\n                        </Table>\r\n                    </Col>\r\n                </Row>\r\n                {/* </Container>             */}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default DisburseLoan;","import React from 'react';\r\nimport { Table, Card} from 'react-bootstrap';\r\n\r\nfunction EmiCard(props) {\r\n    console.log(\"emi card\");\r\n    return (\r\n        <Card border=\"primary\" header\r\n        key={0}\r\n        text={'dark'}\r\n        className=\"m-2\"\r\n    >\r\n        <Card.Header className=\"bg-primary text-center\"><b>Loan Card</b>\r\n            <svg onClick={props.handlePrintEMI} xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" className=\"bi bi-printer float-right cursar\" viewBox=\"0 0 16 16\">\r\n            <path d=\"M2.5 8a.5.5 0 1 0 0-1 .5.5 0 0 0 0 1z\"/>\r\n            <path d=\"M5 1a2 2 0 0 0-2 2v2H2a2 2 0 0 0-2 2v3a2 2 0 0 0 2 2h1v1a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-1h1a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-1V3a2 2 0 0 0-2-2H5zM4 3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v2H4V3zm1 5a2 2 0 0 0-2 2v1H2a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1h-1v-1a2 2 0 0 0-2-2H5zm7 2v3a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1z\"/>\r\n            </svg>\r\n        </Card.Header>\r\n        <Card.Body>\r\n        {/* <Loader show={isShowEMILoader} relative={true}/> */}\r\n        <Table size={\"sm\"} className=\"bg-white rounded small\" bordered responsive>\r\n            <thead>\r\n              <tr className=\"bg-success\">\r\n                  <th>EMI date</th>\r\n                  <th>EMI Amount</th>\r\n                  <th>Principal</th>\r\n                  <th>Interest</th>\r\n                  <th>Outstanding</th>\r\n                  {props.showDisburseButton?<th>EMI Paid</th>:\"\"}\r\n                  \r\n              </tr>\r\n          </thead>\r\n                <tbody>\r\n                {props.emiData.map((value,id)=>(<tr className={props.paidEmiRecord[value.date]?\"bg-warning\":\"\"}>\r\n                    <td>{value.date}</td>\r\n                    <td>{value.EMI?.toFixed(2)}</td>\r\n                    <td>{value.principal}</td>\r\n                    <td>{value.int_amount}</td>\r\n                    <td>{value.outstanding }</td>\r\n                    {props.showDisburseButton?\r\n                    <td>{props.paidEmiRecord[value.date]?\r\n                    \r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-check-circle\" viewBox=\"0 0 16 16\">\r\n                        <path d=\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\r\n                        <path d=\"M10.97 4.97a.235.235 0 0 0-.02.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-1.071-1.05z\"/>\r\n                        </svg>:\"\"}</td>:\"\"}\r\n                </tr>))}\r\n                </tbody>\r\n        </Table>\r\n        </Card.Body>\r\n    </Card>\r\n);\r\n}\r\n\r\nexport default  React.memo(EmiCard);","export const CIN = 'U85300UP2021NPL148302';\r\nexport const licenceNo = '126877';\r\nexport const companyName= 'AA2 Mutualhelp Foundation';","import React from 'react';\r\nimport { Table, Card } from 'react-bootstrap';\r\nimport moment from 'moment';\r\nimport './EmiCardPrint.css'\r\nimport {\r\n    CIN,\r\n    licenceNo,\r\n    companyName\r\n} from \"../../constants/constants\"\r\nimport { HOST } from '../../models/BaseUrl'\r\nfunction MemberPrint(props) {\r\n    const loanDetails = props.loanDetails;\r\n    return (<><p><br />\r\n        <span className='sub-title'>Borrower Details</span></p>\r\n        <Table className='print' >\r\n            <tbody>\r\n                <tr><th width=\"25%\">Member Name</th><td width=\"50%\">{loanDetails?.member?.member_name}</td>\r\n                    <td rowspan=\"6\" className='image-td'>\r\n                        {console.log(`${HOST}${loanDetails?.member?.image}`)}\r\n                        <img src={`${HOST}${loanDetails?.member?.image}`} className='image' /></td></tr>\r\n                <tr><th width=\"25%\">Member Group ID</th>  <td width=\"50%\">{loanDetails?.member?.member_group_id}</td></tr>\r\n                <tr> <th width=\"25%\">Member Address</th>  <td width=\"50%\">{loanDetails?.address}</td></tr>\r\n                <tr><th width=\"25%\">DOB</th>   <td width=\"50%\">{loanDetails?.member?.date_of_birth ? moment(loanDetails.member?.date_of_birth).format(\"DD-MM-YYYY\") : \"\"}</td></tr>\r\n                <tr><th width=\"25%\">Phone</th> <td width=\"50%\">{loanDetails?.member?.mobile_number}</td></tr>\r\n                <tr><th width=\"25%\">Gender</th>  <td width=\"50%\">{loanDetails?.member?.gender}</td></tr>\r\n            </tbody>\r\n        </Table></>)\r\n}\r\nexport default MemberPrint","import React from 'react';\r\nimport { Table, Card } from 'react-bootstrap';\r\nimport './EmiCardPrint.css'\r\nimport {\r\n    CIN,\r\n    licenceNo,\r\n    companyName\r\n} from \"../../constants/constants\"\r\nimport MemberPrint from './MemberPrint';\r\n\r\nclass EmiCardPrint extends React.PureComponent {\r\n    render() {\r\n        //console.log(this.props.emiData());\r\n        return (\r\n            <div className='print' style={{ margin: \"20px\" }}>\r\n                <table className='company-table'>\r\n                    <tbody>\r\n                        <tr class=\"logo-space\">\r\n                            <td style={{ width: '90px', height: '90px' }}><img class=\"img\" src=\"\" style={{ maxWidth: '180px', maxHeight: '120px' }} /></td>\r\n                            <td className='text-center'><span className='company-name'>{companyName.toUpperCase()}</span><br />\r\n                                <span className='gov-line'>भारत सरकार द्वारा पंजीकृत उपक्रम</span><br />\r\n                                <span className='company-span'>SAHARANPUR</span><br />\r\n                                <span className='company-span'> CIN: {CIN} LICENCE No.:{licenceNo}</span>\r\n                            </td>\r\n                            <td style={{ width: '180px', height: '90px' }}>&nbsp;</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                {this.props?.isMemberRequired &&\r\n                <MemberPrint loanDetails={this.props.loanDetails}/>}\r\n                <p><br/>\r\n                    <span className='sub-title'>{this.props.heading}</span></p>\r\n                {/* <Card border=\"primary\" header\r\n                    key={0}\r\n                    text={'dark'}\r\n                    className=\"m-2\">\r\n                    <Card.Header className=\" text-center\"><b>{this.props.heading}</b>\r\n\r\n                    </Card.Header>\r\n                    <Card.Body> */}\r\n                        {/* <Loader show={isShowEMILoader} relative={true}/> */}\r\n                        <Table className='print'>\r\n                            <thead>\r\n                                <tr>{this.props.column.map((val, id) => (\r\n                                    <th width=\"30%\" key={id} >{val}</th>\r\n                                ))}\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {this.props.emiData()}\r\n                            </tbody>\r\n                        </Table>\r\n                        {this.props?.isDeclaration ? <div style={{ marginTop: \"50px\" }}>\r\n                            <p>“I ____________________ , declare that all the information submitted by me in the application form is correct, true and valid. I will present the supporting documents as and when required.” Please note that there should be no change in this text.</p>\r\n                        </div> : null}\r\n                        {this.props?.isSign ?\r\n                            <div style={{ bottom: 0, textAlign: 'right', marginTop: \"100px\" }}>\r\n                                <span>\r\n                                    <div><label><strong>Borrower Signature:_____________________</strong></label></div>\r\n                                    <div><label><strong>Co-Borrower Signature:_____________________</strong></label></div>\r\n                                </span>\r\n                            </div> : null}\r\n                    {/* </Card.Body>\r\n                </Card> */}\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default EmiCardPrint;","import React from 'react';\r\nimport { Table, Card } from 'react-bootstrap';\r\nimport moment from 'moment';\r\nimport './EmiCardPrint.css'\r\nimport MemberPrint from './MemberPrint'\r\nimport {\r\n    CIN,\r\n    licenceNo,\r\n    companyName\r\n} from \"../../constants/constants\"\r\nclass BorrowerPrint extends React.PureComponent {\r\n    render() {\r\n        const { loanDetails } = this.props;\r\n        return (\r\n            <>\r\n                <div style={{ margin: \"20px\" }}>\r\n                    <table className='company-table'>\r\n                        <tbody>\r\n                            <tr class=\"logo-space\">\r\n                                <td style={{ width: '90px', height: '90px' }}><img class=\"img\" src=\"\" style={{ maxWidth: '180px', maxHeight: '120px' }} /></td>\r\n                                <td className='text-center'><span className='company-name'>{companyName.toUpperCase()}</span><br />\r\n                                    <span className='gov-line'>भारत सरकार द्वारा पंजीकृत उपक्रम</span><br />\r\n                                    <span className='company-span'>SAHARANPUR</span><br />\r\n                                    <span className='company-span'> CIN: {CIN} LICENCE No.:{licenceNo}</span>\r\n                                </td>\r\n                                <td style={{ width: '180px', height: '90px' }}>&nbsp;</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n\r\n                    <table style={{ width: '100%' }}>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td className='page-title'>Membership Form</td>\r\n                            </tr>\r\n\r\n                        </tbody>\r\n                    </table>\r\n                    <MemberPrint loanDetails={loanDetails}/>\r\n                    <Table className=\"print\" >\r\n                        <tbody>\r\n                            <tr><th width=\"25%\">Aadhar No.</th> <td width=\"25%\">{loanDetails.member?.aadhar_card}</td><th width=\"25%\">PAN</th> <td width=\"25%\">{loanDetails.member?.pan_card_number}</td></tr>\r\n                            <tr><th width=\"25%\">Driving License</th> <td width=\"25%\">{loanDetails.member?.driving_license_number}</td><th width=\"25%\">Ration Card No.</th> <td width=\"25%\">{loanDetails.member?.ration_card_number}</td></tr>\r\n                            <tr><th width=\"25%\">Voter ID No.</th> <td width=\"25%\">{loanDetails.member?.voter_id_number}</td><th width=\"25%\">Bank Account No.</th> <td width=\"25%\">{loanDetails.member?.bank_account}</td></tr>\r\n                            <tr><th width=\"25%\">Bank IFSC code</th> <td width=\"25%\">{loanDetails.member?.bank_ifsc_code}</td><th width=\"25%\">Bank Account Holder</th> <td width=\"25%\">{loanDetails.member?.bank_account_holder}</td></tr>\r\n                            <tr></tr>\r\n                        </tbody>\r\n                    </Table>\r\n                    <p><br/>\r\n                    <span className='sub-title'>Co-Borrower Details</span></p>\r\n                    <Table className=\"print\" >\r\n                        <tbody>\r\n                            <tr><th width=\"25%\">Name</th><td width=\"75%\" colSpan={4}>{loanDetails.co_borrower_name}</td> </tr>\r\n                            <tr><th width=\"25%\">Relationship</th>  <td width=\"25%\">{loanDetails.co_borrower_relationship}</td><th width=\"25%\">Aadhar Card</th>  <td width=\"25%\">{loanDetails.co_borrower_aadhar_card}</td></tr>\r\n                            <tr><th width=\"25%\">PAN Card</th>   <td width=\"25%\">{loanDetails.co_borrower_pan_card}</td><th width=\"25%\">Ele Card</th> <td width=\"25%\">{loanDetails.co_borrower_ele_bill}</td></tr>\r\n                        </tbody>\r\n                    </Table>\r\n                    <div style={{ marginTop: \"30px\" }}>\r\n                        <p>“I ____________________ , declare that all the information submitted by me in the application form is correct, true and valid. I will present the supporting documents as and when required.” Please note that there should be no change in this text.</p>\r\n                    </div>\r\n                    <div style={{ bottom: 0, textAlign: 'right', marginTop: \"50px\" }}>\r\n                        <span>\r\n                            <div><label>Borrower Signature:_____________________</label></div>\r\n                            <div><label>Co-Borrower Signature:_____________________</label></div>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\nexport default BorrowerPrint;","import React, { useEffect, useState } from \"react\";\r\nimport groupLoan from \"../../models/groupLoan\";\r\nimport { Table,Button } from 'react-bootstrap';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { MESSAGE } from \"../../constants/actionTypes\";\r\n\r\nfunction CloseAccount(props){\r\n    const [sattlementDetails, setSattlementDetails] = useState({});\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    useEffect(()=>{\r\n        console.log(props);\r\n        getDetails();\r\n    },[]);\r\n    const getDetails=async()=>{\r\n        try {\r\n            let response = await groupLoan.GroupLoanModel.getSattlementAmount(props.loan_account_no);\r\n            console.log(response);\r\n            setSattlementDetails(response.body.message);\r\n        } catch (error) {\r\n            console.log(error)\r\n        }      \r\n    }\r\n    const closeAccount=async()=>{\r\n        try {\r\n            let payload = {...sattlementDetails};\r\n            delete payload.records;\r\n            payload.loan_account_no = props.loan_account_no\r\n            let response = await groupLoan.GroupLoanModel.closeAccount(payload);\r\n            if (response.statusCode == 200) {\r\n                dispatch({ type: MESSAGE, message: response.body.message });\r\n                history.push('/allApplications');\r\n\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }      \r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className=\"text-center\">\r\n            <Button variant=\"primary\" type=\"button\" onClick={closeAccount}>Close</Button>\r\n        </div>\r\n        <Table size=\"sm\" className=\"bg-white rounded\" striped bordered hover responsive>\r\n            <thead>\r\n                <tr>\r\n                    <th className=\"text-center\">Sattlement Amount<span style={{fontSize:'10px', display:'block'}}>(Total principal + Earned Interest)</span></th>\r\n                    <th className=\"text-center\">Earned Interest <span style={{fontSize:'10px', display:'block'}}>(Paid EMI Interest + next 3 EMI interest)</span></th>\r\n                    <th className=\"text-center\">No. of Paid EMIs</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr>\r\n                    <td className=\"text-center\">\r\n                        {sattlementDetails.settled_amount}\r\n                    </td>\r\n                    <td className=\"text-center\">\r\n                        {sattlementDetails.earned_interest}\r\n                    </td>\r\n                    <td className=\"text-center\">\r\n                        {sattlementDetails.paid_emi_count}\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </Table>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default React.memo(CloseAccount);","import moment from 'moment';\r\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\r\nimport { Table, Button, Container, Row, Col, Card, ListGroup, Modal, Toast, Form } from 'react-bootstrap';\r\nimport { Link,useHistory, useLocation } from 'react-router-dom';\r\nimport groupLoan from '../../models/groupLoan';\r\nimport Loader from '../layout/Loader';\r\nimport { useSelector } from \"react-redux\";\r\nimport { useReactToPrint } from 'react-to-print';\r\nimport { useRef } from 'react';\r\nimport EmiCard from './EmiCard';\r\nimport EmiCardPrint from '../print/EmiCardPrint';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { CHANGE_PAGE, MESSAGE } from '../../constants/actionTypes'\r\nimport BorrowerPrint from '../print/BorrowerPrint';\r\nimport DatePicker from \"react-datepicker\";\r\nimport CloseAccount from './CloseAccount';\r\nfunction LoanApprovalDetails(props) {\r\n    const history = useHistory();\r\n    const memberDetailsRef = useRef();\r\n    const dispatch = useDispatch();\r\n    const handlePrintMemberDetail = useReactToPrint({\r\n        content: () => memberDetailsRef.current,\r\n        documentTitle: \"AA2-Member\",\r\n    });\r\n\r\n    const applicationRef = useRef();\r\n    const handlePrintApplication = useReactToPrint({\r\n        content: () => applicationRef.current,\r\n        documentTitle: \"AA2-application\",\r\n    });\r\n\r\n    const emiRef = useRef();\r\n    const handlePrintEMI = useReactToPrint({\r\n        content: () => emiRef.current,\r\n        documentTitle: \"AA2-EMI-details\",\r\n    });\r\n    const handlePrintEMICallbak = useCallback(handlePrintEMI, [])\r\n\r\n    const coBorrowerRef = useRef();\r\n    const handleCoBorrowerPrint = useReactToPrint({\r\n        content: () => coBorrowerRef.current,\r\n        documentTitle: \"AA2-CoBorrower\",\r\n    });\r\n\r\n    const borrowerRef = useRef();\r\n    const handlePrintBorrower = useReactToPrint({\r\n        content: () => borrowerRef.current,\r\n        documentTitle: \"AA2-Borrower\",\r\n    });\r\n\r\n    const auth = useSelector(state => state.auth);\r\n    const [paidEmiRecord, setPaidEmiRecord] = useState([])\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [isShowEMILoader, setisShowEMILoader] = useState(false)\r\n    const [emiData, setEmiData] = useState([])\r\n    const [loanDetails, setLoanDetails] = useState({});\r\n    const [showToast, setShowToast] = useState({ isShow: false, type: \"\", message: \"\" })\r\n    //const [showApprovalButton, setShowApprovalButton] = useState(false);\r\n    //const [showDisburseButton, setShowDisburseButton] = useState(false);\r\n    const [show, setShow] = useState(false);\r\n    const [disburseDate, setDisburseDate] = useState(new Date());\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    const { search } = useLocation();\r\n    //const {actionType:actionTypeParam} = props.match.params;\r\n    const params = useMemo(() => new URLSearchParams(search), [search]);\r\n    const actionTypeParam = params.get('actionType')\r\n    //const [disburseActionButton,setDisburseActionButton]\r\n    useEffect(() => {\r\n        getLoanDetails();\r\n        dispatch({ type: CHANGE_PAGE, page: `${actionTypeParam} Application` });\r\n    }, [])\r\n    const getLoanDetails = async () => {\r\n        try {\r\n            setisShowLoader(true);\r\n            setisShowEMILoader(true);\r\n\r\n            let response = await groupLoan.GroupLoanModel.getLoanDetailbyId(props.location.state);\r\n            let calculateEmi = {\r\n                \"loanStartDate\": response.body.message[0].disburse_date,\r\n                \"interest_rate\": response.body.message[0].interest_rate,\r\n                \"tenure\": response.body.message[0].tenure,\r\n                \"EMI_payout\": response.body.message[0].EMI_payout,\r\n                \"loan_amount\": response.body.message[0].loan_amount,\r\n                \"EMI_type\": response.body.message[0].EMI_type\r\n            }\r\n            setisShowEMILoader(true);\r\n            let EmiData = await groupLoan.EmiModel.calculateEMI(calculateEmi);\r\n            let paidData = [];\r\n            let result = {};\r\n            paidData = await groupLoan.EmiModel.getPaidEmis(response.body.message[0].loan_account_no);\r\n            for (let i = 0; i < paidData.body.message.length; i++) {\r\n                let emiDate = moment(paidData.body.message[i].EMI_date).format(\"DD-MM-yyyy\");\r\n                result[emiDate] = true;\r\n            }\r\n            setPaidEmiRecord(result);\r\n            setEmiData(EmiData.body.message);\r\n            setisShowEMILoader(false);\r\n\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n                //setShowApprovalButton(response.body.message[0].is_approved != 0 ? false : true);\r\n                //setShowDisburseButton(response.body.message[0].is_approved == 1 && response.body.message[0].is_disbursed == 0 ? true : false);\r\n                setLoanDetails(response.body.message[0]);\r\n            }\r\n\r\n        } catch (error) {\r\n            setisShowEMILoader(false);\r\n            setisShowLoader(false);\r\n            console.log(error);\r\n        }\r\n    }\r\n    const actionOnLoan = async (actionType) => {\r\n        try {\r\n            setisShowLoader(true);\r\n            const data = { \"id\": props.location.state, \"actionType\": actionType }\r\n            let response = await groupLoan.GroupLoanModel.approveRejectLoan(data);\r\n            console.log(response);\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n                //setShowApprovalButton(false);\r\n                //setShowDisburseButton(false);\r\n                dispatch({ type: MESSAGE, message: response.body.message });\r\n                setShowToast({ isShow: true, type: \"bg-success\", message: response.body.message })\r\n                history.push('/allApplications');\r\n            }\r\n        } catch (error) {\r\n            setisShowLoader(false);\r\n            setShowToast({ isShow: true, type: \"bg-danger\", message: error.response.body.message })\r\n            console.log(error);\r\n        }\r\n    }\r\n    const actionDisburseLoan = async (actionType) => {\r\n        try {\r\n            handleClose();\r\n            setisShowLoader(true);\r\n            const data = { \"id\": props.location.state, \"actionType\": actionType, disburseDate: disburseDate }\r\n            let response = await groupLoan.GroupLoanModel.disburseRejectLoan(data);\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n               // setShowDisburseButton(false);\r\n                dispatch({ type: MESSAGE, message: response.body.message });\r\n                setShowToast({ isShow: true, type: \"bg-success\", message: response.body.message })\r\n                history.push('/allApplications');\r\n            }\r\n        } catch (error) {\r\n            setisShowLoader(false);\r\n            setShowToast({ isShow: true, type: \"bg-danger\", message: error.response.body.message })\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n    const emiCol = useMemo(() => {\r\n        return [\"EMI date\", \"EMI Amount\", \"Principal\", \"Interest\", \"Outstanding\", \"Signature\"];\r\n    }, [])\r\n    const emiRecords = useCallback(() => {\r\n        return (emiData.map((value, id) => (\r\n            <tr>\r\n                <td>{value.date}</td>\r\n                <td>{value.EMI}</td>\r\n                <td>{value.principal}</td>\r\n                <td>{value.int_amount}</td>\r\n                <td>{value.outstanding}</td>\r\n                <td></td>\r\n            </tr>\r\n        )))\r\n    }, [emiData]);\r\n    const applicationRecords = useCallback(() => {\r\n        return (\r\n            <>\r\n                <tr><th width='25%'>Account No</th>  <td width='75%'>{loanDetails.loan_account_no}</td></tr>\r\n                <tr><th width='25%'>Application Date</th><td width='75%'>{moment(loanDetails.application_date).format(\"DD-MM-YYYY HH:SS\")}</td> </tr>\r\n                <tr><th width='25%'>Scheme Id</th>  <td width='75%'>{loanDetails.scheme_id}</td></tr>\r\n                <tr> <th width='25%'>Member Address</th>  <td width='75%'>{loanDetails.address}</td></tr>\r\n                <tr><th width='25%'>Loan Amount</th>   <td width='75%'>{loanDetails.loan_amount}</td></tr>\r\n                <tr><th width='25%'>Interest rate</th> <td width='75%'>{loanDetails.interest_rate}</td></tr>\r\n                <tr><th width='25%'>EMI payout</th>  <td width='75%'>{loanDetails.EMI_payout}</td></tr>\r\n                <tr><th width='25%'>EMI type</th>  <td width='75%'>{loanDetails.EMI_type}</td></tr>\r\n                <tr><th width='25%'>Tenure</th> <td width='75%'>{loanDetails.tenure}</td></tr>\r\n            </>)\r\n    }, [loanDetails]);\r\n\r\n    const coBorrowRecords = useCallback(() => {\r\n        return (\r\n            <>\r\n                <tr><th>Name</th>  <td>{loanDetails.co_borrower_name}</td></tr>\r\n                <tr><th>Relationship</th><td>{loanDetails.co_borrower_relationship}</td> </tr>\r\n                <tr><th>Aadhar Card</th><td>{loanDetails.co_borrower_aadhar_card}</td> </tr>\r\n                <tr><th>PAN Card</th><td>{loanDetails.co_borrower_pan_card}</td> </tr>\r\n                <tr><th>Ele Card</th><td>{loanDetails.co_borrower_ele_bill}</td> </tr>\r\n            </>)\r\n    }, [loanDetails]);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"content\">\r\n                {loanDetails.status? <center className=\"account_close_label\">ACCOUNT CLOSED</center>:null}\r\n                <Modal show={show} onHide={handleClose}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Loan Disbursement</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Form>\r\n                            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\r\n                                <Form.Label>Disbursement Date:</Form.Label>\r\n                                <DatePicker className=\"form-control\"\r\n                                selected={disburseDate}\r\n                                onChange={(date) => setDisburseDate(date)}\r\n                                name=\"disburseDate\"\r\n                                dateFormat=\"dd/MM/yyyy\"\r\n                            />\r\n                           </Form.Group>\r\n                        </Form>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={handleClose}>\r\n                            Close\r\n                        </Button>\r\n                        <Button variant=\"primary\" onClick={()=>actionDisburseLoan(1)}>\r\n                            Disburse\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n                <Toast key={1} autohide delay={3000} show={showToast.isShow} onClose={() => setShowToast({ isShow: false, type: \"\", message: \"\" })} className={\"loader \" + (showToast.type)} >\r\n                    <Toast.Header>\r\n                        <strong className=\"me-auto\">{showToast.type == \"bg-danger\" ? \"Error\" : \"Success\"} Message</strong>\r\n                    </Toast.Header>\r\n                    <Toast.Body className=\"Dark\">\r\n                        {showToast.message}\r\n                    </Toast.Body>\r\n                </Toast>\r\n                <Loader show={isShowLoader} />\r\n                {actionTypeParam==\"approve\" && <Row className=\"m-5\">\r\n                    <Col className=\"text-center\">\r\n                        <Button variant=\"primary\" type=\"button\" onClick={() => actionOnLoan(1)}>\r\n                            Approve\r\n                        </Button>{'  '}\r\n                        <Button variant=\"danger\" type=\"button\" onClick={() => actionOnLoan(-1)}>\r\n                            Reject\r\n                        </Button>\r\n                    </Col>\r\n                </Row> }\r\n\r\n                {actionTypeParam==\"disburse\" && <Row className=\"m-5\">\r\n                    <Col className=\"text-center\">\r\n                        <Button variant=\"primary\" type=\"button\" onClick={() => handleShow()}>\r\n                            Disburse\r\n                        </Button>{'  '}\r\n                        <Button variant=\"danger\" type=\"button\" onClick={() => actionDisburseLoan(-1)}>\r\n                            Reject\r\n                        </Button>\r\n                    </Col>\r\n                </Row>}\r\n                {actionTypeParam==\"close\" && loanDetails?.loan_account_no && <CloseAccount loan_account_no={loanDetails?.loan_account_no}/>}\r\n                <Row xs={1} md={2} className=\"g-1\">\r\n                    <Col>\r\n                        <Card border=\"success\" header\r\n                            key={0}\r\n                            text={'dark'}\r\n                            className=\"m-2\"\r\n                            ref={memberDetailsRef}\r\n                        >\r\n                            <Card.Header className=\"bg-success text-center\"><b>Borrower Details</b>\r\n                                <svg onClick={handlePrintBorrower} xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" className=\"bi bi-printer float-right cursar\" viewBox=\"0 0 16 16\">\r\n                                    <path d=\"M2.5 8a.5.5 0 1 0 0-1 .5.5 0 0 0 0 1z\" />\r\n                                    <path d=\"M5 1a2 2 0 0 0-2 2v2H2a2 2 0 0 0-2 2v3a2 2 0 0 0 2 2h1v1a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-1h1a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-1V3a2 2 0 0 0-2-2H5zM4 3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v2H4V3zm1 5a2 2 0 0 0-2 2v1H2a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1h-1v-1a2 2 0 0 0-2-2H5zm7 2v3a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1z\" />\r\n                                </svg>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <Table size=\"sm\" className=\"bg-white rounded\" striped bordered hover responsive>\r\n                                    <tbody>\r\n                                        <tr><th>Member Name</th><td>{loanDetails.member?.member_name}</td> </tr>\r\n                                        <tr><th>Member Group ID</th>  <td>{loanDetails.member?.member_group_id}</td></tr>\r\n                                        <tr> <th>Member Address</th>  <td>{loanDetails.address}</td></tr>\r\n\r\n                                        <tr><th>DOB</th>   <td>{loanDetails.member?.date_of_birth ? moment(loanDetails.member?.date_of_birth).format(\"DD-MM-YYYY\") : \"\"}</td></tr>\r\n                                        <tr><th>Phone</th> <td>{loanDetails.member?.mobile_number}</td></tr>\r\n                                        <tr><th>Gender</th>  <td>{loanDetails.member?.gender}</td></tr>\r\n                                        <tr><th>Aadhar No.</th> <td>{loanDetails.member?.aadhar_card}</td></tr>\r\n                                        <tr><th>PAN</th> <td>{loanDetails.member?.pan_card_number}</td></tr>\r\n                                        <tr><th>Driving License</th> <td>{loanDetails.member?.driving_license_number}</td></tr>\r\n                                        <tr><th>Ration Card No.</th> <td>{loanDetails.member?.ration_card_number}</td></tr>\r\n                                        <tr><th>Voter ID No.</th> <td>{loanDetails.member?.voter_id_number}</td></tr>\r\n                                        <tr><th>Bank Account No.</th> <td>{loanDetails.member?.bank_account}</td></tr>\r\n                                        <tr><th>Bank IFSC code</th> <td>{loanDetails.member?.bank_ifsc_code}</td></tr>\r\n                                        <tr><th>Bank Account Holder</th> <td>{loanDetails.member?.bank_account_holder}</td></tr>\r\n                                    </tbody>\r\n                                </Table>\r\n\r\n                            </Card.Body>\r\n                        </Card>\r\n                        <div style={{ display: \"none\" }}><BorrowerPrint ref={borrowerRef} loanDetails={loanDetails} /></div>\r\n\r\n                    </Col>\r\n                    <Col>\r\n                        <Card border=\"info\" header\r\n                            key={0}\r\n                            text={'dark'}\r\n                            // style={{ width: '18rem' }}\r\n                            className=\"m-2\"\r\n\r\n                        >\r\n                            <Card.Header className=\"bg-info text-center\"><b>Application Details</b><svg onClick={handlePrintApplication} xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" className=\"bi bi-printer float-right cursar\" viewBox=\"0 0 16 16\">\r\n                                <path d=\"M2.5 8a.5.5 0 1 0 0-1 .5.5 0 0 0 0 1z\" />\r\n                                <path d=\"M5 1a2 2 0 0 0-2 2v2H2a2 2 0 0 0-2 2v3a2 2 0 0 0 2 2h1v1a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-1h1a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-1V3a2 2 0 0 0-2-2H5zM4 3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v2H4V3zm1 5a2 2 0 0 0-2 2v1H2a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1h-1v-1a2 2 0 0 0-2-2H5zm7 2v3a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1z\" />\r\n                            </svg></Card.Header>\r\n                            <Card.Body>\r\n\r\n                                <Table size=\"sm\" className=\"bg-white rounded\" striped bordered hover responsive>\r\n                                    <tbody>\r\n                                        <tr><th>Account No</th>  <td>{loanDetails.loan_account_no}</td></tr>\r\n                                        <tr><th>Application Date</th><td>{moment(loanDetails.application_date).format(\"DD-MM-YYYY HH:SS\")}</td> </tr>\r\n                                        <tr><th>Scheme Id</th>  <td>{loanDetails.scheme_id}</td></tr>\r\n                                        <tr> <th>Member Address</th>  <td>{loanDetails.address}</td></tr>\r\n                                        <tr><th>Loan Amount</th>   <td>{loanDetails.loan_amount}</td></tr>\r\n                                        <tr><th>Interest rate</th> <td>{loanDetails.interest_rate}</td></tr>\r\n                                        <tr><th>EMI payout</th>  <td>{loanDetails.EMI_payout}</td></tr>\r\n                                        <tr><th>EMI type</th>  <td>{loanDetails.EMI_type}</td></tr>\r\n                                        {/* <tr><th>EMI amount</th> <td>{loanDetails.EMI_amount}</td></tr> */}\r\n                                        <tr><th>Tenure</th> <td>{loanDetails.tenure}</td></tr>\r\n                                    </tbody>\r\n                                </Table>\r\n\r\n                            </Card.Body>\r\n                        </Card>\r\n                        <div style={{ display: \"none\" }}><EmiCardPrint ref={applicationRef} emiData={applicationRecords} column={[]} heading=\"Application Details\" isDeclaration={true} isSign={true}/></div>\r\n                    </Col>\r\n                    <Col >\r\n                        <Loader show={isShowEMILoader} relative={true} />\r\n                        <EmiCard showDisburseButton={loanDetails.is_approved == 1 && loanDetails.is_disbursed == 1} emiData={emiData} paidEmiRecord={paidEmiRecord} handlePrintEMI={handlePrintEMICallbak} />\r\n                        <div style={{ display: \"none\" }}><EmiCardPrint ref={emiRef} emiData={emiRecords} column={emiCol} heading=\"Loan Card\" isDeclaration={true} isSign={true} isMemberRequired={true} loanDetails={loanDetails}/></div>\r\n                    </Col>\r\n                    <Col>\r\n                        <Card border=\"info\" header\r\n                            key={0}\r\n                            text={'dark'}\r\n                            // style={{ width: '18rem' }}\r\n                            className=\"m-2\"\r\n                        // ref={applicationRef}\r\n                        >\r\n                            <Card.Header className=\"bg-info text-center\"><b>Co-Borrower Details</b>\r\n                                <svg onClick={handleCoBorrowerPrint} xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" className=\"bi bi-printer float-right cursar\" viewBox=\"0 0 16 16\">\r\n                                    <path d=\"M2.5 8a.5.5 0 1 0 0-1 .5.5 0 0 0 0 1z\" />\r\n                                    <path d=\"M5 1a2 2 0 0 0-2 2v2H2a2 2 0 0 0-2 2v3a2 2 0 0 0 2 2h1v1a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-1h1a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-1V3a2 2 0 0 0-2-2H5zM4 3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v2H4V3zm1 5a2 2 0 0 0-2 2v1H2a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1h-1v-1a2 2 0 0 0-2-2H5zm7 2v3a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1z\" />\r\n                                </svg>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n\r\n                                <Table size=\"sm\" className=\"bg-white rounded\" striped bordered hover responsive>\r\n                                    <tbody>\r\n                                        <tr><th>Name</th>  <td>{loanDetails.co_borrower_name}</td></tr>\r\n                                        <tr><th>Relationship</th><td>{loanDetails.co_borrower_relationship}</td> </tr>\r\n                                        <tr><th>Aadhar Card</th><td>{loanDetails.co_borrower_aadhar_card}</td> </tr>\r\n                                        <tr><th>PAN Card</th><td>{loanDetails.co_borrower_pan_card}</td> </tr>\r\n                                        <tr><th>Ele Card</th><td>{loanDetails.co_borrower_ele_bill}</td> </tr>\r\n                                    </tbody>\r\n                                </Table>\r\n\r\n                            </Card.Body>\r\n                        </Card>\r\n                        <div style={{ display: \"none\" }}><EmiCardPrint ref={coBorrowerRef} emiData={coBorrowRecords} column={[]} heading=\"Co-Borrower Details\" isDeclaration={true} isSign={true}/></div>\r\n                    </Col>\r\n\r\n                </Row>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LoanApprovalDetails;","import React, { useEffect, useState, useMemo } from 'react';\r\nimport { Table, Badge, Container, Row, Col, Button, Pagination,Toast } from 'react-bootstrap';\r\nimport groupLoan from '../../models/groupLoan';\r\nimport Loader from '../layout/Loader';\r\nimport { useHistory } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport { useTable, useSortBy, usePagination, useFilters } from 'react-table'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { CHANGE_PAGE, MESSAGE } from '../../constants/actionTypes'\r\nfunction AllApplications(props) {\r\n    let history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const {message} = useSelector(state=>state.common);\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [loanlist, setLoanlist] = useState([]);\r\n    //const [showToast, setShowToast] = useState({ isShow: true, type: \"bg-success\", message: \"Data Saved successfully\" })\r\n    useEffect(() => {\r\n        console.log(message);\r\n        if(message){\r\n            setTimeout(()=>{\r\n                dispatch({ type: MESSAGE, message: undefined });\r\n            },3000);\r\n        }\r\n        getLoanList();\r\n        dispatch({ type: CHANGE_PAGE, page: \"All Loan Applications\" });\r\n    }, [])\r\n    const data = useMemo(\r\n        () =>\r\n\r\n            loanlist.map((record, index) => {\r\n                return {\r\n                    col1: record.loan_account_no ? record.loan_account_no : \"N/A\",\r\n                    col2: moment(record.application_date).format('DD-MM-yyy hh:ss A'),\r\n                    col3: record.member?.member_name,\r\n                    col4: record.scheme_id,\r\n                    col5: record.loan_amount,\r\n                    col6: record.interest_rate,\r\n                    col7: record.actionStatus,\r\n                    col8: record\r\n                }\r\n            }\r\n            )\r\n        ,\r\n        [loanlist]\r\n    )\r\n\r\n    const columns = useMemo(\r\n        () => [\r\n            {\r\n                Header: 'Account no.',\r\n                accessor: 'col1', // accessor is the \"key\" in the data\r\n                allowFilter: true\r\n            },\r\n            {\r\n                Header: 'Application date',\r\n                accessor: 'col2', // accessor is the \"key\" in the data\r\n                allowFilter: true\r\n            },\r\n            {\r\n                Header: 'Member name',\r\n                accessor: 'col3',\r\n                allowFilter: true\r\n            },\r\n            {\r\n                Header: 'Scheme ID',\r\n                accessor: 'col4',\r\n                allowFilter: true\r\n            },\r\n            {\r\n                Header: 'Loan amount',\r\n                accessor: 'col5',\r\n                allowFilter: true\r\n            },\r\n            {\r\n                Header: 'Interest rate',\r\n                accessor: 'col6',\r\n                allowFilter: true\r\n            },\r\n            {\r\n                Header: 'Status',\r\n                accessor: 'col7',\r\n                allowFilter: false\r\n            },\r\n            {\r\n                Header: 'Action',\r\n                accessor: 'col8',\r\n                allowFilter: false\r\n            }\r\n\r\n        ],\r\n        []\r\n    )\r\n    function DefaultColumnFilter({\r\n        column: { filterValue, preFilteredRows, setFilter },\r\n    }) {\r\n        const count = preFilteredRows.length\r\n\r\n        return (\r\n            <input\r\n                className=\"form-control\"\r\n                value={filterValue || ''}\r\n                onChange={e => {\r\n                    setFilter(e.target.value || undefined)\r\n                }}\r\n                placeholder={`Search ${count} records...`}\r\n            />\r\n        )\r\n    }\r\n    const defaultColumn = React.useMemo(\r\n        () => ({\r\n            // Default Filter UI\r\n            Filter: DefaultColumnFilter,\r\n        }),\r\n        []\r\n    )\r\n    const paginate = (totalPage) => {\r\n        let pageNumberArray = [];\r\n        for (let i = 1; i <= totalPage; i++) {\r\n            pageNumberArray.push(i);\r\n        }\r\n        return (\r\n            <Pagination>\r\n                <Pagination.First onClick={() => gotoPage(0)} />\r\n                <Pagination.Prev onClick={() => previousPage()} disabled={!canPreviousPage} />\r\n                {pageNumberArray.map(num => <Pagination.Item key={num} active={num === (pageIndex + 1)} onClick={() => gotoPage(num - 1)}>{num}</Pagination.Item>)}\r\n                <Pagination.Next onClick={() => nextPage()} disabled={!canNextPage} />\r\n                <Pagination.Last onClick={() => gotoPage(totalPage - 1)} />\r\n            </Pagination>\r\n        );\r\n\r\n    }\r\n\r\n    const getLoanList = async () => {\r\n        try {\r\n            setisShowLoader(true);\r\n            let response = await groupLoan.GroupLoanModel.getAllLoanApplications();\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n                let formatedData = response.body.message.map((loan, id) => {\r\n                    if(loan.status==1){\r\n                        loan[\"actionStatus\"] = \"Closed\";\r\n                    }else if (loan.is_approved == 1 && loan.is_disbursed == 1) {\r\n                        loan[\"actionStatus\"] = \"Disbursed\";\r\n                    } else if (loan.is_approved == 1 && loan.is_disbursed == 0) {\r\n                        loan[\"actionStatus\"] = \"Approved\";\r\n                    } else if (loan.is_disbursed == -1) {\r\n                        loan[\"actionStatus\"] = \"Disburse Rejected\";\r\n                    } else if (loan.is_approved == -1) {\r\n                        loan[\"actionStatus\"] = \"Approval Rejected\";\r\n                    } else {\r\n                        loan[\"actionStatus\"] = \"Pending\";\r\n                    }\r\n\r\n                    return loan;\r\n                });\r\n                setLoanlist(formatedData);\r\n            }\r\n\r\n        } catch (error) {\r\n            setisShowLoader(false);\r\n            console.log(error);\r\n        }\r\n    }\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n        pageOptions,\r\n        page,\r\n        pageCount,\r\n        state: { pageIndex, pageSize },\r\n        gotoPage,\r\n        previousPage,\r\n        nextPage,\r\n        setPageSize,\r\n        canPreviousPage,\r\n        canNextPage,\r\n    } = useTable({ columns, data, defaultColumn, initialState: { pageIndex: 0 } }, useFilters, useSortBy, usePagination)\r\n    return (\r\n        <>\r\n            {message && <Toast key={1} autohide delay={3000}  className={\"loader bg-success\"} >\r\n                    <Toast.Header>\r\n                        <strong className=\"me-auto\">Success Message</strong>\r\n                    </Toast.Header>\r\n                    <Toast.Body className=\"Dark\">\r\n                        {message}\r\n                    </Toast.Body>\r\n            </Toast>}\r\n\r\n            <div className=\"content\">\r\n                <Loader show={isShowLoader} />\r\n                {/* <Container fluid> */}\r\n                <Row>\r\n                    <Col>\r\n                        <div className=\"text-right\">\r\n                            {paginate(pageCount)}\r\n                        </div>\r\n\r\n                        <Table  {...getTableProps()} className=\"shadow-lg p-3 mb-5 bg-white rounded small\" striped bordered hover responsive>\r\n                            <thead className=\"bg-primary\">\r\n                                {headerGroups.map(headerGroup => (\r\n                                    <tr {...headerGroup.getHeaderGroupProps()}>\r\n                                        {headerGroup.headers.map(column => (\r\n                                            <th\r\n                                                {...column.getHeaderProps(column.getSortByToggleProps())}\r\n                                            >\r\n                                                {column.render('Header')}\r\n                                                <span>\r\n                                                    {column.isSorted ? (column.isSortedDesc ? ' 🔽' : ' 🔼') : ''}\r\n                                                </span>\r\n                                                <div>{column.allowFilter ? column.render('Filter') : null}</div>\r\n                                            </th>\r\n                                        ))}\r\n                                    </tr>\r\n                                ))}\r\n                            </thead>\r\n                            <tbody{...getTableBodyProps()}>\r\n\r\n                                {page.map(row => {\r\n                                    prepareRow(row)\r\n                                    return (\r\n                                        <tr {...row.getRowProps()}>\r\n                                            {row.cells.map(cell => {\r\n                                                console.log(cell);\r\n                                                if (cell.column.id != \"col8\" && cell.column.id != \"col7\") {\r\n                                                    return (\r\n                                                        <td {...cell.getCellProps()}>\r\n                                                            {cell.render('Cell')}\r\n                                                        </td>\r\n                                                    )\r\n                                                } else if (cell.column.id == \"col8\") {\r\n                                                    return (\r\n                                                        <td>\r\n                                                            <Button size={\"sm\"} variant=\"info\" onClick={() => { history.push(\"/loanApprovalDetails?actionType=view\", cell.value.id) }} type=\"button\" className='m-1'>\r\n                                                                View\r\n                                                            </Button>{\r\n                                                                cell.value.is_disbursed==1 && cell.value.status==0 &&\r\n                                                            \r\n                                                            <Button size={\"sm\"} variant=\"danger\" onClick={() => { history.push(\"/loanApprovalDetails?actionType=close\", cell.value.id) }} type=\"button\" >\r\n                                                                Close A/C\r\n                                                            </Button>}\r\n\r\n                                                        </td>\r\n                                                    )\r\n                                                } else if (cell.column.id == \"col7\") {\r\n                                                    return (\r\n                                                        <td>\r\n                                                            <Badge className={cell.value == \"Approved\" || cell.value == \"Disbursed\" ? \"bg-success\" : \"bg-danger\"}>\r\n                                                                {cell.value}\r\n                                                            </Badge>\r\n                                                        </td>)\r\n\r\n                                                }\r\n                                            })}\r\n                                        </tr>\r\n                                    )\r\n                                })}\r\n\r\n                            </tbody>\r\n                        </Table>\r\n                        <div className=\"text-right\">\r\n                            {paginate(pageCount)}\r\n                        </div>\r\n\r\n                    </Col>\r\n                </Row>\r\n\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AllApplications;","import React,{useState,useRef,useEffect } from 'react';\r\nimport { Table,Button, Container, Row, Col, Card, Form } from 'react-bootstrap';\r\nimport Loader from '../layout/Loader';\r\nimport { useFormik } from 'formik';\r\nimport DatePicker from \"react-datepicker\";\r\nimport groupLoan from \"../../models/groupLoan\";\r\nimport { useReactToPrint } from 'react-to-print';\r\nfunction EmiCalculator(props) {\r\n    const [enrollmentDate, setEnrollmentDate] = useState(new Date());\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [calculatedData,setCalculatedData] = useState([]);\r\n    const componentRef = useRef();\r\n    const handlePrint = useReactToPrint({\r\n      content: () => componentRef.current,\r\n      documentTitle:\"EMI-details\",\r\n    });\r\n    const validate = values => {\r\n        const errors = {};\r\n        if (!values.interest_rate) {\r\n          errors.interest_rate = 'Interest rate is Required';\r\n        }\r\n        if (!values.loan_amount) {\r\n            errors.loan_amount = 'Loan amount is Required';\r\n          }\r\n          if (!values.tenure) {\r\n            errors.tenure = 'Tenure is Required';\r\n          }\r\n          if (!values.EMI_payout) {\r\n            errors.EMI_payout = 'EMI payout is Required';\r\n          }\r\n          return errors;\r\n      };\r\n      const formik = useFormik({\r\n        initialValues: {\r\n        loanStartDate: '',\r\n        interest_rate: '',\r\n        tenure: '',\r\n        EMI_payout:'',\r\n        loan_amount:'',\r\n        EMI_type:\"flat\"\r\n        },\r\n        validate,\r\n        onSubmit: async (values) => {\r\n          setisShowLoader(true);\r\n          try {\r\n             values.loanStartDate = enrollmentDate;\r\n             console.log(values);\r\n            let response = await groupLoan.EmiModel.calculateEMI(values);\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n              //formik.resetForm();\r\n              setCalculatedData(response.body.message);\r\n            } else {\r\n              //setShowToast({ isShow: true,type:\"bg-danger\", message: response.body.message })\r\n            }\r\n    \r\n          } catch (error) {\r\n            setisShowLoader(false);\r\n            //setShowToast({ isShow: true,type:\"bg-danger\", message: error.response.body.message })\r\n          }\r\n        },\r\n      });\r\n    \r\n    return (\r\n        <>\r\n        <Loader show={isShowLoader}/>\r\n        <div className=\"content\">\r\n        <div className=\"row\">\r\n        <div className=\"col-md-4\">\r\n            <Container className=\"bg-white mt-2 shadow-lg p-3 mb-5 bg-white rounded\">\r\n            <Form onSubmit={formik.handleSubmit}>\r\n            <Form.Group as={Col} className=\"form-group required pl-0 pr-0\" controlId=\"formGridEnroll\">\r\n                            <Form.Label >Application Date</Form.Label>\r\n                            <DatePicker className=\"form-control\"\r\n                                selected={enrollmentDate}\r\n                                onChange={(date) => setEnrollmentDate(date)}\r\n                                name=\"loanStartDate\"\r\n                                dateFormat=\"dd/MM/yyyy\"\r\n                            />\r\n                {formik.touched.loanStartDate && formik.errors.loanStartDate ? (\r\n                  <div className=\"text-danger\">{formik.errors.loanStartDate}</div>\r\n                ) : null}\r\n\r\n            </Form.Group>\r\n\r\n              <Form.Group className=\"mb-3 form-group required\" controlId=\"formBasicEmail\">\r\n                <Form.Label>Loan amount</Form.Label>\r\n                <Form.Control\r\n                \r\n                  type=\"number\"\r\n                  name=\"loan_amount\"\r\n                  placeholder=\"Enter loan amount\"\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.loan_amount}\r\n                />\r\n                {formik.touched.loan_amount && formik.errors.loan_amount ? (\r\n                  <div className=\"text-danger\">{formik.errors.loan_amount}</div>\r\n                ) : null}\r\n\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-3 form-group required\" controlId=\"formBasicEmail\">\r\n                <Form.Label>Interest rate</Form.Label>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  name=\"interest_rate\"\r\n                  placeholder=\"Enter interest rate\"\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.interest_rate}\r\n\r\n                />\r\n                {formik.touched.interest_rate && formik.errors.interest_rate ? (\r\n                  <div className=\"text-danger\">{formik.errors.interest_rate}</div>\r\n                ) : null}\r\n\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-3 form-group required\" controlId=\"formBasicEmail\">\r\n                <Form.Label>Tenure</Form.Label>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  name=\"tenure\"\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.tenure}\r\n\r\n                />\r\n                {formik.touched.tenure && formik.errors.tenure ? (\r\n                  <div className=\"text-danger\">{formik.errors.tenure}</div>\r\n                ) : null}\r\n\r\n              </Form.Group>\r\n              <Form.Group as={Col} className=\"mb-3 pl-0 pr-0\" controlId=\"formGridAddress1\">\r\n                <Form.Label>EMI payout</Form.Label>\r\n                <select\r\n                    className=\"form-control\"\r\n                    name=\"EMI_payout\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.EMI_payout}\r\n                >\r\n                    <option key=\"\" value=\"\">Select payout</option>\r\n\r\n                    {/* <option key=\"daily\" value=\"daily\">Daily</option> */}\r\n                    {/* <option key=\"weekly\" value=\"weekly\">Weekly</option>\r\n                    <option key=\"monthly\" value=\"fortnight\">Fortnight</option> */}\r\n                    <option key=\"monthly\" value=\"monthly\">Monthly</option>\r\n                </select>\r\n                {formik.touched.EMI_payout && formik.errors.EMI_payout ? (\r\n                  <div className=\"text-danger\">{formik.errors.EMI_payout}</div>\r\n                ) : null}\r\n\r\n            </Form.Group>\r\n\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                Calculate\r\n              </Button>\r\n\r\n            </Form>\r\n            </Container>\r\n            </div>\r\n            <div className=\"col-md-8\">\r\n            <Card border=\"primary\" header\r\n                        key={0}\r\n                        text={'dark'}\r\n                        // style={{ width: '18rem' }}\r\n                        className=\"m-2\"\r\n                        ref={componentRef}\r\n                    >\r\n                      {/* {isclickPrint?<h2 className=\"text-center mb-3\">AA2 MicroFinance Foundation</h2>:\"\"} */}\r\n                        <Card.Header className=\"bg-primary text-center\"><b>Micro Finance EMI Details</b><svg onClick={handlePrint} xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" className=\"bi bi-printer float-right cursar\" viewBox=\"0 0 16 16\">\r\n  <path d=\"M2.5 8a.5.5 0 1 0 0-1 .5.5 0 0 0 0 1z\"/>\r\n  <path d=\"M5 1a2 2 0 0 0-2 2v2H2a2 2 0 0 0-2 2v3a2 2 0 0 0 2 2h1v1a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-1h1a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-1V3a2 2 0 0 0-2-2H5zM4 3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v2H4V3zm1 5a2 2 0 0 0-2 2v1H2a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1h-1v-1a2 2 0 0 0-2-2H5zm7 2v3a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1z\"/>\r\n</svg></Card.Header>\r\n                        <Card.Body >\r\n                            <Table  size={\"sm\"} className=\"bg-white rounded\" striped bordered hover responsive>\r\n                            <thead>\r\n                              <tr>\r\n                                  <th>EMI date</th>\r\n                                  <th>EMI Amount</th>\r\n                                  <th>Principal</th>\r\n                                  <th>Interest</th>\r\n                                  <th>Outstanding</th>\r\n                              </tr>\r\n                          </thead>\r\n                                <tbody>\r\n                                {calculatedData.map((value,id)=>(<tr key={id}>\r\n                                    <td>{value.date}</td>\r\n                                    <td>{value.EMI}</td>\r\n                                    <td>{value.principal}</td>\r\n                                    <td>{value.int_amount}</td>\r\n                                    <td>{value.outstanding }</td>\r\n                                </tr>))}\r\n                                </tbody>\r\n                            </Table>\r\n\r\n                        </Card.Body>\r\n                    </Card>\r\n            </div>\r\n\r\n    </div>\r\n    </div>            \r\n        </>\r\n    );\r\n}\r\n\r\nexport default EmiCalculator;","import React, { useEffect, useState, useRef, useCallback, useMemo} from 'react';\r\nimport { Table, Button, Container, Row, Col, Modal, InputGroup, FormLabel } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport groupLoan from '../../models/groupLoan';\r\nimport Loader from '../layout/Loader';\r\nimport DatePicker from \"react-datepicker\";\r\nimport moment from \"moment\"\r\nimport { useDispatch } from \"react-redux\";\r\nimport { CHANGE_PAGE } from '../../constants/actionTypes'\r\nimport EmiCardPrint from '../print/EmiCardPrint'\r\nimport {useReactToPrint} from 'react-to-print';\r\n\r\nfunction DueEmis(props) {\r\n    const dispatch = useDispatch();\r\n    const [showDeleteModel, setShowDeleteModel] = useState(false)\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [dueEmis, setDueEmis] = useState([]);\r\n    const [paidID, setPaidID] = useState(0);\r\n    const [totalEmi, setTotalEmi] = useState(0);\r\n    const [enrollmentDate, setEnrollmentDate] = useState(new Date());\r\n    useEffect(() => {\r\n        getDueEmisRecord();\r\n        dispatch({ type: CHANGE_PAGE, page: \"EMI Dues\" });\r\n    }, [])\r\n    let total = 0;\r\n    const emiRef = useRef();\r\n    const handlePrintEMI = useReactToPrint({\r\n        content: () => emiRef.current,\r\n        documentTitle: \"AA2-EMI-details\",\r\n    });\r\n    const emiRecords = useCallback(() => {\r\n        return (\r\n        <>{\r\n            dueEmis.map((value, id) => (\r\n            <tr>\r\n                <td>{value.loan_account_no}</td>\r\n                <td>{value?.group_loan?.member?.member_group?.group_name}</td>\r\n                <td>{value?.group_loan?.member?.member_id}</td>\r\n                <td>{value.group_loan?.member?.member_name}</td>\r\n                <td>{value.group_loan?.member?.mobile_number}</td>\r\n                <td>{value.remain_EMI}</td>\r\n                <td>{value.EMI_amount.toFixed(2)}</td>\r\n                <td>{value.outstanding}</td>\r\n                <td></td>\r\n            </tr>\r\n        ))\r\n        }\r\n        <tr>\r\n            <td>Total</td>\r\n            <td colSpan={6} style={{textAlign:'right'}}>{totalEmi}</td></tr></>)\r\n    }, [dueEmis]);\r\n    const emiCol = useMemo(() => {\r\n        return [\"Account No.\", \"Group Name\", \"Member ID\", \"Name\", \"Phone\", \"No. of EMI\", \"EMI Amount\", \"Outstanding\", \"Signature\"];\r\n    }, [])\r\n\r\n    const getDueEmisRecord = (today = moment().format(\"yyyy-MM-DD\")) => {\r\n        setisShowLoader(true);\r\n        groupLoan.EmiModel.getDueEmis(today).then(res => {\r\n            setisShowLoader(false);\r\n            if (res.statusCode == 200) {\r\n                let emiData = [];\r\n                let count = 0;\r\n                emiData = res.body.message.map(emi=>{ \r\n                   // return emi\r\n                   emi[\"loan_table_id\"]=emi.loan_account_no.substring(11)\r\n                   count = count+parseFloat(emi.EMI_amount.toFixed(2))\r\n                   return emi;\r\n                });\r\n                setTotalEmi(count);\r\n                setDueEmis(emiData);\r\n            } else {\r\n                setDueEmis([]);\r\n            }\r\n        })\r\n    }\r\n    const paidEMI = async()=>{\r\n        setShowDeleteModel(false);\r\n        try{\r\n            setisShowLoader(true);\r\n            let response = await groupLoan.EmiModel.paidEmi(paidID);\r\n            setisShowLoader(false);\r\n            if(response.statusCode == 200){\r\n                let UpdatedList = dueEmis.filter((emidata,idx)=>emidata.id!=paidID);\r\n                setDueEmis(UpdatedList);\r\n            }\r\n        }catch (error) {\r\n            console.log(error.response.body.message);\r\n            setisShowLoader(false);\r\n        }\r\n    }\r\n    const paidHandle=(id)=>{\r\n        setPaidID(id);        \r\n        setShowDeleteModel(true);\r\n    }\r\n    const changeEmiDate = (selectedDate)=>{\r\n        setEnrollmentDate(selectedDate)\r\n        getDueEmisRecord(moment(selectedDate).format(\"yyyy-MM-DD\"));\r\n    }\r\n    return (\r\n        <>\r\n      <Modal show={showDeleteModel} onHide={()=>setShowDeleteModel(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Paid EMI </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>Are you sure?</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={()=>setShowDeleteModel(false)}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={()=>paidEMI()}>\r\n            Paid\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>        \r\n\r\n            <Loader show={isShowLoader} />\r\n            <div className=\"content\">\r\n                {/* <h2 className=\"text-info text-center\">Due EMIs</h2> */}\r\n                <Row>\r\n              <Col>\r\n                    <InputGroup className=\"mb-3\">\r\n                    <FormLabel className=\"mr-3\">EMI Date:</FormLabel>\r\n                    <DatePicker className=\"form-control\"\r\n                                selected={enrollmentDate}\r\n                                onChange={(date) => changeEmiDate(date)}\r\n                                name=\"enrollment_date\"\r\n                                dateFormat=\"dd/MM/yyyy\"\r\n                            />\r\n\r\n                    </InputGroup>\r\n                    <svg onClick={handlePrintEMI} xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" className=\"bi bi-printer float-right cursar\" viewBox=\"0 0 16 16\">\r\n                                    <path d=\"M2.5 8a.5.5 0 1 0 0-1 .5.5 0 0 0 0 1z\" />\r\n                                    <path d=\"M5 1a2 2 0 0 0-2 2v2H2a2 2 0 0 0-2 2v3a2 2 0 0 0 2 2h1v1a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-1h1a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-1V3a2 2 0 0 0-2-2H5zM4 3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v2H4V3zm1 5a2 2 0 0 0-2 2v1H2a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1h-1v-1a2 2 0 0 0-2-2H5zm7 2v3a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1z\" />\r\n                                </svg>\r\n                        <Table className=\" shadow-lg p-3 mb-5 bg-white rounded small\" striped bordered hover responsive>\r\n                            <thead className=\"bg-primary\">\r\n                                <tr>\r\n                                    <th>Account No.</th>\r\n                                    <th>Group Name</th>\r\n                                    <th>Member ID</th>\r\n                                    <th>Name</th>\r\n                                    <th>Phone Number</th>\r\n                                    <th>No. of Emi</th>\r\n                                    <th>EMI Amount</th>\r\n                                    <th>Outstanding</th>\r\n                                    <th>Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {dueEmis.length!=0?<>{dueEmis.map((emi, id) => (<tr key={emi.id}>\r\n                                    <td><Link to={{\r\n                                        pathname: '/loanApprovalDetails?actionType=view',\r\n                                        state: emi.loan_table_id\r\n                                        }}>{emi.loan_account_no}</Link></td>\r\n                                    <td><Link to=\"/memberGroup\">{emi.group_loan?.member?.member_group?.group_name}</Link></td>\r\n                                    <td><Link to={{\r\n                                        pathname: '/viewMemberDetail',\r\n                                        state: emi.group_loan?.member?.member_id\r\n                                        }}>{emi.group_loan?.member?.member_id}</Link></td>\r\n                                    <td><Link to={{\r\n                                        pathname: '/viewMemberDetail',\r\n                                        state: emi.group_loan?.member?.member_id\r\n                                        }}>{emi.group_loan?.member?.member_name}</Link></td>\r\n                                        <td>{emi.group_loan?.member?.mobile_number}</td>\r\n                                    <td>{emi.remain_EMI}</td>\r\n                                    <td>{emi.EMI_amount.toFixed(2)}</td>\r\n                                    <td>{emi.outstanding}</td>\r\n                                    <td><Button size={\"sm\"} variant=\"success\" onClick={() => paidHandle(emi.id) }>Pay</Button></td>\r\n                                </tr>))}<tr>\r\n            <th>Total</th>\r\n            <td colSpan={6} style={{textAlign:'right'}}>{totalEmi}</td></tr></>:<tr><td colSpan={\"9\"} className=\"text-center\">No Dues for selected date!</td></tr>}\r\n                            </tbody>\r\n                        </Table>\r\n                        <div style={{ display: \"none\" }}><EmiCardPrint ref={emiRef} emiData={emiRecords} column={emiCol} heading=\"Today Collection\" isDeclaration={false} isSign={false}/></div>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default DueEmis;","import React,  { useEffect, useState } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { CHANGE_PAGE } from '../../constants/actionTypes'\r\nimport DashboardModel from '../../models/dashboard';\r\nimport Loader from '../layout/Loader';\r\nimport { Table, Button, Container, Row, Col, Modal, InputGroup, FormLabel } from 'react-bootstrap';\r\nimport moment from 'moment';\r\nfunction PaidDetailView() {\r\n    const dispatch = useDispatch();\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [loanData, setLoanData] = useState([]);\r\n    const [totalAmount, setTotalAmount] = useState(0);\r\n\r\n    useEffect(() => {\r\n        getDetailData();\r\n        dispatch({ type: CHANGE_PAGE, page: \"Paid Ladger\" });\r\n    }, [])\r\n    const getDetailData = () => {\r\n        setisShowLoader(true);\r\n        DashboardModel.paidAmount().then(res => {\r\n            setisShowLoader(false);\r\n            if(res.status == 200){\r\n                console.log(res.body.message);\r\n                setLoanData(res.body.message.loan.sort((a,b) => (a.id < b.id) ? 1 : ((b.id < a.id) ? -1 : 0)));\r\n                setTotalAmount(res.body.message.total);\r\n            }\r\n            // console.log({loanData});\r\n        });\r\n        \r\n    }\r\n  return (\r\n    <>\r\n         <Loader show={isShowLoader} />\r\n         <div className=\"content\">\r\n         <Row>\r\n            <Col>\r\n         <Table className=\" shadow-lg p-3 mb-5 bg-white rounded small\" striped bordered hover responsive>\r\n            <thead className=\"bg-primary\">\r\n                <tr>\r\n                    <th>Sr No.</th>\r\n                    <th>Date</th>\r\n                    <th>Particular</th>\r\n                    <th>Amount</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {loanData.length!=0?loanData.map((emi, id) => (<tr key={emi.id}>\r\n                    <td>{id+1}</td>\r\n                    <td>{moment(emi.disburse_date).format(\"DD-MM-yyyy\")}</td>\r\n                    <td>Loan disbursed to {emi.member.member_name} - Loan account {emi.loan_account_no}</td>\r\n                    <td>{emi.loan_amount}</td>\r\n                    {/* <td><Button size={\"sm\"} variant=\"success\" onClick={() => paidHandle(emi.id) }>Pay</Button></td> */}\r\n                </tr>\r\n                ))\r\n                :<tr><td colSpan={\"8\"} className=\"text-center\">No Record Found</td></tr>}\r\n            </tbody>\r\n            <tfoot>\r\n            {loanData.length!=0?\r\n                <tr style={{fontWeight:'bold'}}>\r\n                <td colSpan={\"3\"}>Total</td>\r\n                <td>{totalAmount}</td>\r\n                </tr>:''}\r\n            </tfoot>\r\n        </Table>\r\n        </Col>\r\n        </Row>\r\n        </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PaidDetailView;\r\n","import React,  { useEffect, useState } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { CHANGE_PAGE } from '../../constants/actionTypes'\r\nimport DashboardModel from '../../models/dashboard';\r\nimport Loader from '../layout/Loader';\r\nimport { Table, Button, Container, Row, Col, Modal, InputGroup, FormLabel } from 'react-bootstrap';\r\nimport moment from 'moment';\r\nfunction RecievedDetailView() {\r\n    const dispatch = useDispatch();\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [loanData, setLoanData] = useState([]);\r\n    const [totalAmount, setTotalAmount] = useState(0);\r\n\r\n    useEffect(() => {\r\n        getDetailData();\r\n        dispatch({ type: CHANGE_PAGE, page: \"Received Ladger\" });\r\n    }, [])\r\n    const getDetailData = () => {\r\n        setisShowLoader(true);\r\n        DashboardModel.receivedAmount().then(res => {\r\n             console.log({res});\r\n            setisShowLoader(false);\r\n            if(res.status == 200){\r\n                console.log(res.body.message);\r\n                setLoanData(res.body.message.emis.sort((a,b) => (a.id < b.id) ? 1 : ((b.id < a.id) ? -1 : 0)));\r\n                setTotalAmount(res.body.message.total?.toFixed(0));\r\n            }\r\n        });\r\n        \r\n    }\r\n  return (\r\n    <>\r\n         <Loader show={isShowLoader} />\r\n         <div className=\"content\">\r\n         <Row>\r\n            <Col>\r\n         <Table className=\" shadow-lg p-3 mb-5 bg-white rounded small\" striped bordered hover responsive>\r\n            <thead className=\"bg-primary\">\r\n                <tr>\r\n                    <th>Sr No.</th>\r\n                    <th>Date</th>\r\n                    <th>Particular</th>\r\n                    <th>Amount</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {loanData.length!=0?loanData.map((emi, id) => (<tr key={emi.id}>\r\n                    <td>{id+1}</td>\r\n                    <td>{moment(emi.EMI_date).format(\"DD-MM-yyyy\")}</td>\r\n                    <td>EMI received Loan Account - {emi.loan_account_no}</td>\r\n                    <td>{emi.EMI_amount?.toFixed(2)}</td>\r\n                    {/* <td><Button size={\"sm\"} variant=\"success\" onClick={() => paidHandle(emi.id) }>Pay</Button></td> */}\r\n                </tr>\r\n                ))\r\n                :<tr><td colSpan={\"8\"} className=\"text-center\">No Record Found</td></tr>}\r\n            </tbody>\r\n            <tfoot>\r\n            {loanData.length!=0?\r\n                <tr style={{fontWeight:'bold'}}>\r\n                <td colSpan={\"3\"}>Total</td>\r\n                <td>{totalAmount}</td>\r\n                </tr>:''}\r\n            </tfoot>\r\n        </Table>\r\n        </Col>\r\n        </Row>\r\n        </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default RecievedDetailView;\r\n","import moment from \"moment\"\r\nimport { API_ROOT } from \"./BaseUrl\"\r\nimport axios from \"./interceptor-middleware\";\r\n//const url = '/memberGroups/';\r\n\r\nconst profitDetails = {\r\n  // calculateEMI(data){\r\n  //   return axios.post(`${API_ROOT}/emis/calculateEMI`, data);\r\n  // },\r\n  getData(today) {\r\n    const myDate = today.split(\" \");\r\n\r\n    // if (myDate[0].charAt(0) === '0')\r\n    //   myDate[0] = myDate[0].replace(\"0\", \"\");\r\n    return axios.get(`${API_ROOT}/emis/paidEmi/${parseInt(myDate[0])}/${myDate[1]}`);\r\n  },\r\n  // paidEmi(id){\r\n  //   return axios.put(`${API_ROOT}/emis/entry`,{\"id\":id});\r\n  // },\r\n  // getPaidEmis(loanAccountNo){\r\n  //   return axios.get(`${API_ROOT}/emis/entry/${loanAccountNo}`);\r\n  // }\r\n}\r\nexport default { profitDetails };","import React, { useEffect, useState }from 'react'\r\nimport { useDispatch } from \"react-redux\";\r\nimport { CHANGE_PAGE } from '../../constants/actionTypes'\r\nimport { Table, Button, Container, Row, Col, Modal, InputGroup, FormLabel } from 'react-bootstrap';\r\nimport profit from '../../models/profit';\r\nimport Loader from '../layout/Loader';\r\nimport moment from \"moment\"\r\nimport DatePicker from \"react-datepicker\";\r\nfunction Profit() {\r\n  const dispatch = useDispatch();\r\n  const [enrollmentDate, setEnrollmentDate] = useState(new Date());\r\n  const [isShowLoader, setisShowLoader] = useState(false);\r\n  const [dueEmis, setDueEmis] = useState([]);\r\n  const [totalInterestEarned, setTotalInterestEarned] = useState(0);\r\n  const [totalPrincipalEarned, setTotalPrincipalEarned] = useState(0);\r\n\r\n  useEffect(() => {\r\n      getProfitData();\r\n      dispatch({ type: CHANGE_PAGE, page: \"Profit\" });\r\n  }, [])\r\n\r\n  const changeEmiDate = (selectedDate)=>{\r\n    setEnrollmentDate(selectedDate)\r\n    getProfitData(moment(selectedDate).format(\"MM yyyy\"));\r\n  }\r\n  \r\n  const getProfitData = (today = moment().format(\"MM yyyy\")) => {\r\n    \r\n    setisShowLoader(true);\r\n    profit.profitDetails.getData(today).then(res => {\r\n      // console.log(res.body);\r\n        setisShowLoader(false);\r\n        if (res.statusCode == 200) {\r\n          setTotalInterestEarned(res.body.total_interest_earned);\r\n          setTotalPrincipalEarned(res.body.total_principal_earned);\r\n            setDueEmis(res.body.records);\r\n        } else {\r\n            setDueEmis([]);\r\n        }\r\n    })\r\n  }\r\n  return (\r\n    \r\n    <div className=\"content\">\r\n       <Loader show={isShowLoader} />\r\n       <Col>\r\n                    <InputGroup className=\"mb-3\">\r\n                    <FormLabel className=\"mr-3\">Date:</FormLabel>\r\n                            <DatePicker className=\"form-control\"\r\n                               selected={enrollmentDate}\r\n                               onChange={(date) => changeEmiDate(date)}\r\n                               name=\"enrollment_date\"\r\n                               dateFormat=\"MMMM yyyy\"\r\n                               showMonthYearPicker\r\n                            />\r\n\r\n                    </InputGroup>\r\n                   <div><label><strong>Earned Interest </strong>: {totalInterestEarned} </label></div> \r\n                   <div><label><strong>Earned Principal </strong>: {totalPrincipalEarned} </label></div> \r\n                    <Table className=\" shadow-lg p-3 mb-5 bg-white rounded small\" striped bordered hover responsive>\r\n                            <thead className=\"bg-primary\">\r\n                                <tr>\r\n                                    <th>Loan Account No.</th>\r\n                                    <th>Earned Interest</th>\r\n                                    <th>Principal</th>\r\n                                    <th>Total Loan Amount</th>\r\n                                    <th>EMI Date</th>\r\n                                    <th>Disburse Date</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            {dueEmis.length!=0?dueEmis.map((val,id) => (<tr key={val.id}><td>{val.group_loan.loan_account_no}</td>\r\n                            <td>{val.int_amount}</td>\r\n                            <td>{val.principal}</td>\r\n                            <td>{val?.group_loan?.loan_amount}</td>\r\n                            <td>{moment(val.EMI_date).format(\"DD-MM-YYYY\")}</td>\r\n                            <td>{moment(val?.group_loan?.disburse_date).format(\"DD-MM-YYYY\") }</td>\r\n                            </tr>)) : <tr><td colSpan={\"8\"} className=\"text-center\">No data for Selected Month</td></tr>}\r\n                            </tbody>\r\n                        </Table>    \r\n        </Col>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profit;","import React, { useEffect, useState } from 'react';\r\nimport { Table,Button, Container, Row, Col,Modal } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport processingFee from '../../models/processingFee';\r\nimport Loader from '../layout/Loader';\r\nimport moment from 'moment';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { CHANGE_PAGE } from '../../constants/actionTypes';\r\nfunction ProcessingFee(props) {\r\n    let history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const [showDeleteModel, setShowDeleteModel] = useState(false)\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [processingFees,setProcessingFees]=useState([]);\r\n    const [deleteID, setDeleteID] = useState(0);\r\n\r\n    useEffect(() => {\r\n        dispatch({ type: CHANGE_PAGE, page: \"Raised Fund\" });\r\n        getProcessingFees();\r\n    },[])\r\n\r\n    const getProcessingFees = () =>{\r\n        setisShowLoader(true);\r\n        processingFee.ProcessingFeeModel.getProcessingFee('all').then(res=>{\r\n            setisShowLoader(false);\r\n            if(res.statusCode == 200){\r\n                setProcessingFees(res.body.message);\r\n            }else{\r\n                setProcessingFees([]);\r\n            }\r\n        })\r\n    }\r\n    const  deleteHandle=(id)=>{\r\n        setDeleteID(id); \r\n        setShowDeleteModel(true);\r\n    }\r\n\r\n    const deleteProcessingFee=async()=>{\r\n        setShowDeleteModel(false);\r\n        try{\r\n            setisShowLoader(true);\r\n            let response = await processingFee.ProcessingFeeModel.deleteProcessingFee(deleteID);\r\n            setisShowLoader(false);\r\n            if(response.statusCode == 200){\r\n                let UpdatedList = processingFees.filter((scheme,idx)=>scheme.id!=deleteID);\r\n                setProcessingFees(UpdatedList);\r\n             }\r\n        }catch (error) {\r\n                console.log(error.response.body.message);\r\n                setisShowLoader(false);\r\n            }\r\n    }    \r\n    return (\r\n        <>\r\n        <div className=\"content\">\r\n      <Modal show={showDeleteModel} onHide={()=>setShowDeleteModel(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Delete Processing Fee</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>Are you sure?</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={()=>setShowDeleteModel(false)}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={()=>deleteProcessingFee()}>\r\n            Delete\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>        \r\n        \r\n        <Loader show={isShowLoader}/>\r\n        {/* <Container fluid> */}\r\n        {/* <h2 className=\"text-info text-center\">Processing Fee</h2> */}\r\n            <Row className=\"mb-5 mt-3\">\r\n                <Col>\r\n                <Link to=\"/addProcessingFee\">\r\n                <Button variant=\"info\"  active>\r\n                    Add Fund\r\n                </Button>\r\n                </Link>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n            <Col>\r\n            <Table className=\"shadow-lg p-3 mb-5 bg-white rounded\" striped bordered hover responsive>\r\n            <thead>\r\n                <tr>\r\n                    <th>Id</th>\r\n                    <th>Particular</th>\r\n                    <th>Amount</th>\r\n                    <th>Date</th>\r\n                    <th>Created At</th>\r\n                    <th>Action</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {processingFees.map((data,id)=>(<tr key={data.id}>\r\n                    <td>{data.id}</td>\r\n                    <td>{data.particular}</td>\r\n                    <td>{data.amount}</td>\r\n                    <td>{data.date_of_processing?moment(data.date_of_processing).format(\"DD-MM-yyyy\"):\"\"}</td>\r\n                    <td>{moment(data.created_at).format(\"DD-MM-yyyy hh:ss A\") }</td>\r\n                    <td>\r\n                        \r\n                    <Button variant=\"success\" size={\"sm\"} onClick={()=>{history.push(\"/addProcessingFee\",data.id)}} >Edit</Button>\r\n                    {' '}\r\n                    <Button variant=\"danger\" size={\"sm\"} onClick={()=>deleteHandle(data.id)} >Delete</Button>\r\n                    </td>\r\n                </tr>))}\r\n            </tbody>\r\n        </Table>\r\n    </Col>\r\n            </Row>\r\n        {/* </Container> */}\r\n        </div>\r\n        </>\r\n        );\r\n}\r\n\r\nexport default ProcessingFee;","import React, { useState,useEffect } from 'react';\r\nimport { Button, Form, Container, Row, Col, Toast } from 'react-bootstrap';\r\nimport { useFormik } from 'formik';\r\nimport processingFee from  '../../models/processingFee';\r\nimport Loader from '../layout/Loader';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport { CHANGE_PAGE } from '../../constants/actionTypes';\r\nfunction AddProcessingFee(props) {\r\n    let history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const auth = useSelector(state => state.auth);\r\n    const [enrollmentDate, setEnrollmentDate] = useState(new Date());\r\n\r\n    const [values, setValues] = useState({});\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [showToast, setShowToast] = useState({ isShow: false, type: \"\", message: \"\" })\r\n    useEffect(() => {\r\n      console.log(props);\r\n      dispatch({ type: CHANGE_PAGE, page: \"Add/Edit Fund\" });\r\n      if(props.location.state)\r\n          getExpenseDetails(props.location.state);\r\n  }, [])    \r\n    const getExpenseDetails = async(id)=>{\r\n      try {\r\n        setisShowLoader(true);\r\n        let response = await processingFee.ProcessingFeeModel.getProcessingFee(props.location.state);\r\n        formik.values.particular = response.body.message[0].particular  \r\n        formik.values.amount = response.body.message[0].amount \r\n        setEnrollmentDate(new Date(response.body.message[0].date_of_processing));\r\n\r\n        setisShowLoader(false);\r\n    } catch (error) {\r\n        setisShowLoader(false);\r\n        setShowToast({ isShow: true, type: \"bg-danger\", message: error.response.body.message })\r\n    }\r\n    }\r\n    const validate = values => {\r\n      const errors = {};\r\n      if (!values.particular) {\r\n        errors.particular = 'Particular type is Required!';\r\n      }\r\n      if (!values.amount) {\r\n        errors.amount = 'Amount is Required!';\r\n      }\r\n      return errors;\r\n    };\r\n    const formik = useFormik({\r\n      initialValues: {\r\n        particular: '',\r\n        amount: '',\r\n        date_of_processing: '',\r\n        user_id:auth.id\r\n      },\r\n      validate,\r\n      onSubmit: async (values) => {\r\n        setisShowLoader(true);\r\n          try {\r\n            values.date_of_processing = enrollmentDate;\r\n            let response = [];\r\n            if(props.location.state){\r\n              response = await processingFee.ProcessingFeeModel.editProcessingFee(values,props.location.state);\r\n\r\n         }else{\r\n\r\n             response = await processingFee.ProcessingFeeModel.saveProcessingFee(values);\r\n         }\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n              formik.resetForm();\r\n              if(props.location.state)\r\n              history.push(\"/processingFee\")              \r\n              setShowToast({ isShow: true,type:\"bg-success\", message: \"Data added Successfully!\" })\r\n            } else {\r\n              setShowToast({ isShow: true,type:\"bg-danger\", message: response.body.message.toString() })\r\n            }\r\n  \r\n          } catch (error) {\r\n            setisShowLoader(false);\r\n            setShowToast({ isShow: true,type:\"bg-danger\", message: error.response.body.message })\r\n          }\r\n      },\r\n      handleChange: () => {\r\n        setValues(prevValues => ({\r\n          ...prevValues,\r\n          // we use the name to tell Formik which key of `values` to update\r\n          [values.target.name]: values.target.value\r\n        }))\r\n      },\r\n    });\r\n    return (\r\n      <>\r\n      <div className=\"content\">\r\n        <Toast key={1} autohide delay={3000} show={showToast.isShow} onClose={() => setShowToast({ isShow: false,type:\"\", message: \"\" })} className={\"loader \"+ (showToast.type) } >\r\n          <Toast.Header>\r\n            <strong className=\"me-auto\">{showToast.type==\"bg-danger\"?\"Error\":\"Success\"} Message</strong>\r\n          </Toast.Header>\r\n          <Toast.Body className=\"Dark\">\r\n          {showToast.message}\r\n          </Toast.Body>\r\n        </Toast>\r\n        <Loader show={isShowLoader} />\r\n        {/* <h2 className=\"text-info text-center\">{props.location.state?\"Edit\":\"Add\"} Processing Fee</h2> */}\r\n        <div className=\"row\">\r\n          <div className=\"col-md-8\">\r\n            <div className=\"card card-user\">\r\n              <div className=\"card-body\">\r\n          {/* <Container fluid className=\"bg-white mt-5 shadow-lg p-3 mb-5 bg-white rounded\"> */}\r\n          <Form onSubmit={formik.handleSubmit}>\r\n            {/* <Row className=\"mb-3\" md={6}> */}\r\n              <Form.Group  controlId=\"formGriddob\" className=\"form-group required\">\r\n                <Form.Label>Particular:</Form.Label>\r\n                <Form.Control\r\n                  name=\"particular\"\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.particular}\r\n                />\r\n                  {formik.touched.particular && formik.errors.particular ? (\r\n                    <div class=\"text-danger\">{formik.errors.particular}</div>\r\n                  ) : null}              \r\n              </Form.Group>\r\n              {/* </Row> */}\r\n              {/* <Row className=\"mb-3\" md={6}> */}\r\n\r\n              <Form.Group  controlId=\"formGriddob\" className=\"form-group required\">\r\n                <Form.Label>Amount</Form.Label>\r\n                <Form.Control\r\n                  name=\"amount\"\r\n                  type=\"number\"\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.amount}\r\n                />\r\n                  {formik.touched.amount && formik.errors.amount ? (\r\n                    <div class=\"text-danger\">{formik.errors.amount}</div>\r\n                  ) : null}              \r\n  \r\n              </Form.Group>\r\n  \r\n            {/* </Row> */}\r\n            {/* <Row className=\"mb-3\" md={6}> */}\r\n            <Form.Group  className=\"form-group required\" controlId=\"formGridEnroll\">\r\n                            <Form.Label >Date of Fund</Form.Label>\r\n                            <DatePicker className=\"form-control\"\r\n                                selected={enrollmentDate}\r\n                                onChange={(date) => setEnrollmentDate(date)}\r\n                                name=\"date_of_processing\"\r\n                                dateFormat=\"dd/MM/yyyy\"\r\n                            />\r\n                        </Form.Group>\r\n\r\n            {/* </Row> */}\r\n            <Button variant=\"primary\" type=\"submit\">\r\n              Save\r\n            </Button>\r\n  \r\n          </Form>\r\n        {/* </Container> */}\r\n        </div>\r\n        </div>\r\n        </div>\r\n        </div>\r\n        </div>\r\n      </>\r\n    );\r\n}\r\n\r\nexport default AddProcessingFee;","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { CHANGE_PAGE } from '../../constants/actionTypes'\r\nimport DashboardModel from '../../models/dashboard';\r\nimport Loader from '../layout/Loader';\r\nimport { Table, Button, Container, Row, Col, Modal, InputGroup, FormLabel } from 'react-bootstrap';\r\nimport moment from 'moment';\r\nimport processingFee from '../../models/processingFee';\r\nimport expenseRecord from '../../models/expenseRecord';\r\nfunction RecievedDetailView() {\r\n    const dispatch = useDispatch();\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [ledger, setLedger] = useState([]);\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch({ type: CHANGE_PAGE, page: \"Main Ladger\" });\r\n        getReport();\r\n    }, [])\r\n    const getReport = async () => {\r\n        let record = [];\r\n        try {\r\n            setisShowLoader(true);\r\n            let data = await Promise.allSettled([\r\n                DashboardModel.paidAmount(),\r\n                DashboardModel.receivedAmount(),\r\n                processingFee.ProcessingFeeModel.getProcessingFee('all'),\r\n                expenseRecord.ExpenseModel.getExpense('all')]);\r\n            setisShowLoader(false);\r\n            record = record.concat(formatPaidAmount(data[0].value?.body?.message?.loan));\r\n            record = record.concat(formatReceivedAmount(data[1].value?.body?.message?.emis));\r\n            record = record.concat(formatProcessingAmount(data[2].value?.body?.message));\r\n            record = record.concat(formatExpenseAmount(data[3].value?.body?.message));\r\n            record.sort((a, b) => (\r\n                moment(a.date,\"DD-MM-yyyy\").isBefore(moment(b.date,\"DD-MM-yyyy\"))\r\n                ) ? 1 : (\r\n                    (moment(b.date,\"DD-MM-yyyy\").isBefore(moment(a.date,\"DD-MM-yyyy\"))) ? -1 : 0)\r\n                    )\r\n            record = calculateBalance(record);\r\n            setLedger(record);\r\n\r\n        } catch (error) {\r\n            setisShowLoader(false);\r\n            console.log(error);\r\n        }\r\n    }\r\n    const formatPaidAmount = (data) => {\r\n        let payload = [];\r\n        for (let obj of data) {\r\n            payload.push({\r\n                date: moment(obj.disburse_date).format('DD-MM-yyyy'),\r\n                text: `Loan disburse to ${obj.loan_account_no}`,\r\n                amount: obj.loan_amount,\r\n                credit: false,\r\n                debit: true\r\n            })\r\n        }\r\n        return payload;\r\n    }\r\n    const formatReceivedAmount = (data) => {\r\n        let payload = [];\r\n        for (let obj of data) {\r\n            payload.push({\r\n                date: moment(obj.EMI_date).format('DD-MM-yyyy'),\r\n                text: `EMI received ${obj.loan_account_no}`,\r\n                amount: obj.EMI_amount,\r\n                credit: true,\r\n                debit: false\r\n            })\r\n        }\r\n        return payload;\r\n    }\r\n    const formatProcessingAmount = (data) => {\r\n        let payload = [];\r\n        for (let obj of data) {\r\n            payload.push({\r\n                date: moment(obj.created_at).format('DD-MM-yyyy'),\r\n                text: `Received - ${obj.particular}`,\r\n                amount: obj.amount,\r\n                credit: true,\r\n                debit: false\r\n            })\r\n        }\r\n        return payload;\r\n    }\r\n    const formatExpenseAmount = (data) => {\r\n        let payload = [];\r\n        for (let obj of data) {\r\n            payload.push({\r\n                date: moment(obj.created_at).format('DD-MM-yyyy'),\r\n                text: `Expense - ${obj.expense_type}`,\r\n                amount: obj.amount,\r\n                credit: false,\r\n                debit: true\r\n            })\r\n        }\r\n        return payload;\r\n    }\r\n\r\n    const calculateBalance = (record) => {\r\n        let outstanding = 0;\r\n        let result=[];\r\n        for (var i=record.length-1;i>=0;i--) {\r\n            var obj = record[i];\r\n            outstanding =obj.credit?outstanding+obj.amount:outstanding-obj.amount;\r\n            obj[\"balance\"] = outstanding;\r\n            result[i] = obj;\r\n        }\r\n        return result;\r\n    }\r\n    return (\r\n        <>\r\n            <Loader show={isShowLoader} />\r\n            <div className=\"content\">\r\n                <Row>\r\n                    <Col>\r\n                        <Table className=\" shadow-lg p-3 mb-5 bg-white rounded small\" striped bordered hover responsive>\r\n                            <thead className=\"bg-primary\">\r\n                                <tr>\r\n                                    <th>Sr No.</th>\r\n                                    <th>Date</th>\r\n                                    <th>Particular</th>\r\n                                    <th>Debit</th>\r\n                                    <th>Credit</th>\r\n                                    <th>Balance</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {ledger.length != 0 ? ledger.map((emi, id) => (<tr key={emi.id}>\r\n                                    <td>{id + 1}</td>\r\n                                    <td>{emi.date}</td>\r\n                                    <td>{emi.text}</td>\r\n                                    <td>{emi.debit ? emi.amount : \"\"}</td>\r\n                                    <td>{emi.credit ? emi.amount : \"\"}</td>\r\n                                    <td>{emi.balance}</td>\r\n                                </tr>\r\n                                ))\r\n                                    : <tr><td colSpan={\"8\"} className=\"text-center\">No Record Found</td></tr>}\r\n                            </tbody>\r\n                            {/* <tfoot>\r\n            {loanData.length!=0?\r\n                <tr style={{fontWeight:'bold'}}>\r\n                <td colSpan={\"3\"}>Total</td>\r\n                <td>{totalAmount}</td>\r\n                </tr>:''}\r\n            </tfoot> */}\r\n                        </Table>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RecievedDetailView;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Table,Button, Container, Row, Col,Modal } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport expenseRecord from '../../models/expenseRecord';\r\nimport Loader from '../layout/Loader';\r\nimport moment from 'moment';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { CHANGE_PAGE } from '../../constants/actionTypes';\r\n\r\nfunction Expense(props) {\r\n    let history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const [showDeleteModel, setShowDeleteModel] = useState(false)\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [expense,setExpense]=useState([]);\r\n    const [deleteID, setDeleteID] = useState(0);\r\n\r\n    useEffect(() => {\r\n        dispatch({ type: CHANGE_PAGE, page: \"Expenses\" });\r\n        getExpenses();\r\n    },[])\r\n\r\n    const getExpenses = () =>{\r\n        setisShowLoader(true);\r\n        expenseRecord.ExpenseModel.getExpense('all').then(res=>{\r\n            setisShowLoader(false);\r\n            if(res.statusCode == 200){\r\n                setExpense(res.body.message);\r\n            }else{\r\n                setExpense([]);\r\n            }\r\n        })\r\n    }\r\n    const  deleteHandle=(id)=>{\r\n        setDeleteID(id); \r\n        setShowDeleteModel(true);\r\n    }\r\n\r\n    const deleteScheme=async()=>{\r\n        setShowDeleteModel(false);\r\n        try{\r\n            setisShowLoader(true);\r\n            let response = await expenseRecord.ExpenseModel.deleteExpense(deleteID);\r\n            setisShowLoader(false);\r\n            if(response.statusCode == 200){\r\n                let UpdatedList = expense.filter((scheme,idx)=>scheme.id!=deleteID);\r\n                setExpense(UpdatedList);\r\n             }\r\n        }catch (error) {\r\n                console.log(error.response.body.message);\r\n                setisShowLoader(false);\r\n            }\r\n    }    \r\n    return (\r\n        <>\r\n        <div className=\"content\">\r\n      <Modal show={showDeleteModel} onHide={()=>setShowDeleteModel(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Delete Expense</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>Are you sure?</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={()=>setShowDeleteModel(false)}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={()=>deleteScheme()}>\r\n            Delete\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>        \r\n        \r\n        <Loader show={isShowLoader}/>\r\n        {/* <Container fluid>\r\n        <h2 className=\"text-info text-center\">Expenses</h2> */}\r\n            <Row className=\"mb-5 mt-3\">\r\n                <Col>\r\n                <Link to=\"/addExpense\">\r\n                <Button variant=\"info\" active>\r\n                    Add Expense\r\n                </Button>\r\n                </Link>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n            <Col>\r\n            <Table className=\"shadow-lg p-3 mb-5 bg-white rounded\" striped bordered hover responsive>\r\n            <thead>\r\n                <tr>\r\n                    <th>Id</th>\r\n                    <th>Expense Type</th>\r\n                    <th>Amount</th>\r\n                    <th>Date Expense</th>\r\n                    <th>Created At</th>\r\n                    <th>Action</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {expense.map((data,id)=>(<tr>\r\n                    <td>{data.id}</td>\r\n                    <td>{data.expense_type}</td>\r\n                    <td>{data.amount}</td>\r\n                    <td>{data.date_of_expense?moment(data.date_of_expense).format(\"DD-MM-yyyy\"):\"\"}</td>\r\n                    <td>{moment(data.created_at).format(\"DD-MM-yyyy hh:ss A\") }</td>\r\n                    <td>\r\n                        \r\n                    <Button variant=\"success\" size={\"sm\"} onClick={()=>{history.push(\"/addExpense\",data.id)}} >Edit</Button>\r\n                    {' '}\r\n                    <Button variant=\"danger\" size={\"sm\"} onClick={()=>deleteHandle(data.id)} >Delete</Button>\r\n                    </td>\r\n                </tr>))}\r\n            </tbody>\r\n        </Table>\r\n    </Col>\r\n            </Row>\r\n        {/* </Container> */}\r\n        </div>\r\n        </>\r\n        );\r\n}\r\n\r\nexport default Expense;","import React, { useState, useEffect } from 'react';\r\nimport { Button, Form, Container, Row, Col, Toast } from 'react-bootstrap';\r\nimport { useFormik } from 'formik';\r\nimport expenseRecord from '../../models/expenseRecord';\r\nimport Loader from '../layout/Loader';\r\nimport { useSelector } from \"react-redux\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction AddExpense(props) {\r\n  let history = useHistory();\r\n  const auth = useSelector(state => state.auth);\r\n  const [enrollmentDate, setEnrollmentDate] = useState(new Date());\r\n\r\n  const [values, setValues] = useState({});\r\n  const [isShowLoader, setisShowLoader] = useState(false)\r\n  const [showToast, setShowToast] = useState({ isShow: false, type: \"\", message: \"\" })\r\n  useEffect(() => {\r\n    console.log(props);\r\n    if (props.location.state)\r\n      getExpenseDetails(props.location.state);\r\n  }, [])\r\n  const getExpenseDetails = async (id) => {\r\n    try {\r\n      setisShowLoader(true);\r\n      let response = await expenseRecord.ExpenseModel.getExpense(props.location.state);\r\n      formik.values.expense_type = response.body.message[0].expense_type\r\n      formik.values.amount = response.body.message[0].amount\r\n      setEnrollmentDate(new Date(response.body.message[0].date_of_expense));\r\n\r\n      setisShowLoader(false);\r\n    } catch (error) {\r\n      setisShowLoader(false);\r\n      setShowToast({ isShow: true, type: \"bg-danger\", message: error.response.body.message })\r\n    }\r\n  }\r\n  const validate = values => {\r\n    const errors = {};\r\n    if (!values.expense_type) {\r\n      errors.expense_type = 'Expense type is Required!';\r\n    }\r\n    if (!values.amount) {\r\n      errors.amount = 'Amount is Required!';\r\n    }\r\n    return errors;\r\n  };\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      expense_type: '',\r\n      amount: '',\r\n      date_of_expense: '',\r\n      user_id: auth.id\r\n    },\r\n    validate,\r\n    onSubmit: async (values) => {\r\n      setisShowLoader(true);\r\n      try {\r\n        values.date_of_expense = enrollmentDate;\r\n        let response = [];\r\n        if (props.location.state) {\r\n          response = await expenseRecord.ExpenseModel.editExpense(values, props.location.state);\r\n\r\n        } else {\r\n\r\n          response = await expenseRecord.ExpenseModel.saveExpense(values);\r\n        }\r\n        setisShowLoader(false);\r\n        if (response.statusCode == 200) {\r\n          formik.resetForm();\r\n          if(props.location.state)\r\n          history.push(\"/expense\")              \r\n          setShowToast({ isShow: true,type:\"bg-success\", message: \"Data added Successfully!\" })\r\n        } else {\r\n          setShowToast({ isShow: true,type:\"bg-danger\", message: response.body.message.toString() })\r\n        }\r\n\r\n\r\n      } catch (error) {\r\n        setisShowLoader(false);\r\n        setShowToast({ isShow: true, type: \"bg-danger\", message: error.response.body.message })\r\n      }\r\n    },\r\n    handleChange: () => {\r\n      setValues(prevValues => ({\r\n        ...prevValues,\r\n        // we use the name to tell Formik which key of `values` to update\r\n        [values.target.name]: values.target.value\r\n      }))\r\n    },\r\n  });\r\n  return (\r\n    <>\r\n      <div className=\"content\">\r\n        <Toast key={1} autohide delay={3000} show={showToast.isShow} onClose={() => setShowToast({ isShow: false, type: \"\", message: \"\" })} className={\"loader \" + (showToast.type)} >\r\n          <Toast.Header>\r\n            <strong className=\"me-auto\">{showToast.type == \"bg-danger\" ? \"Error\" : \"Success\"} Message</strong>\r\n          </Toast.Header>\r\n          <Toast.Body className=\"Dark\">\r\n            {showToast.message}\r\n          </Toast.Body>\r\n        </Toast>\r\n        <Loader show={isShowLoader} />\r\n        {/* <h2 className=\"text-info text-center\">Add Expense</h2> */}\r\n        {/* <Row>\r\n        <Col md={6}> */}\r\n        <div className=\"row\">\r\n          <div className=\"col-md-8\">\r\n            <div className=\"card card-user\">\r\n              <div className=\"card-body\">\r\n                {/* <Container fluid className=\"bg-white mt-5 shadow-lg p-3 mb-5 bg-white rounded\"> */}\r\n                <Form onSubmit={formik.handleSubmit}>\r\n                  {/* <Row className=\"mb-3\" md={6}> */}\r\n                  <Form.Group controlId=\"formGriddob\" className=\"form-group required\">\r\n                    <Form.Label>Expense Type:</Form.Label>\r\n                    <Form.Control\r\n                      name=\"expense_type\"\r\n                      onChange={formik.handleChange}\r\n                      value={formik.values.expense_type}\r\n                    />\r\n                    {formik.touched.expense_type && formik.errors.expense_type ? (\r\n                      <div class=\"text-danger\">{formik.errors.expense_type}</div>\r\n                    ) : null}\r\n                  </Form.Group>\r\n                  {/* </Row> */}\r\n                  {/* <Row className=\"mb-3\" md={6}> */}\r\n\r\n                  <Form.Group controlId=\"formGriddob\" className=\"form-group required\">\r\n                    <Form.Label>Amount</Form.Label>\r\n                    <Form.Control\r\n                      name=\"amount\"\r\n                      type=\"number\"\r\n                      onChange={formik.handleChange}\r\n                      value={formik.values.amount}\r\n                    />\r\n                    {formik.touched.amount && formik.errors.amount ? (\r\n                      <div class=\"text-danger\">{formik.errors.amount}</div>\r\n                    ) : null}\r\n\r\n                  </Form.Group>\r\n\r\n                  {/* </Row> */}\r\n                  {/* <Row className=\"mb-3\" md={6}> */}\r\n                  <Form.Group className=\"form-group required\" controlId=\"formGridEnroll\">\r\n                    <Form.Label >Enrollment Date</Form.Label>\r\n                    <DatePicker className=\"form-control\"\r\n                      selected={enrollmentDate}\r\n                      onChange={(date) => setEnrollmentDate(date)}\r\n                      name=\"enrollment_date\"\r\n                      dateFormat=\"dd/MM/yyyy\"\r\n                    />\r\n                  </Form.Group>\r\n\r\n                  {/* </Row> */}\r\n                  <Button variant=\"primary\" type=\"submit\">\r\n                    Save\r\n                  </Button>\r\n\r\n                </Form>\r\n                {/* </Container> */}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AddExpense;","import React from 'react'\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport Home from './components/home/Home'\r\nimport Registration from './components/users/Registration'\r\nimport Login from './components/users/Login'\r\n// import FillItr from './components/finance-Itr/FillItr'\r\nimport InnerLayout from './components/layout/InnerLayout'\r\n//import CategoryList from './components/food-order/CategoryList'\r\n// import MyCart from './components/food-order/MyCart'\r\n// import PlaceOrder from './components/food-order/PlaceOrder'\r\n// import OrderSuccess from './components/food-order/OrderSuccess'\r\n//import AdminHome from './components/Admin/Home';\r\n//import CategoryManagement from './components/Admin/CategoryManagement';\r\n//import AddCategory from './components/Admin/AddCategory';\r\n//import OrderHistory from './components/Admin/orders/OrderHistory';\r\nimport UserOrderHistory from './components/users/UserOrderHistory';\r\nimport UserAction from './components/users/user-actions/UserAction';\r\n//import ProductManagement from './components/Admin/products/ProductManagement';\r\n//import AddProduct from './components/Admin/products/AddProduct';\r\n//import EditProduct from './components/Admin/products/EditProduct';\r\n// import OrderFailed from './components/food-order/OrderFailed';\r\n//import FinanceRequests from './components/Admin/finance/FinanceRequests';\r\n//import Form16Requests from './components/Admin/finance/Form16Requests';\r\n//import InqueryForm from './components/home/InqueryForm';\r\nimport MemberGroup from  './components/masterRecord/memberGroup/MemberGroup';\r\nimport AddMemberGroup from  './components/masterRecord/memberGroup/AddMemberGroup';\r\nimport AddMember from  './components/masterRecord/member/AddMember';\r\nimport Member from  './components/masterRecord/member/Member';\r\nimport MemberViewDetails from  './components/masterRecord/member/MemberViewDetails';\r\nimport Scheme from  './components/groupLoan/Scheme';\r\nimport AddScheme from  './components/groupLoan/AddScheme';\r\nimport Dashboard from './components/dashboard/Dashboard';\r\nimport LoanApplication from  './components/groupLoan/LoanApplication';\r\nimport LoanApproval from  './components/groupLoan/LoanApproval';\r\nimport DisburseLoan from  './components/groupLoan/DisburseLoan';\r\nimport LoanApprovalDetails from  './components/groupLoan/LoanApprovalDetails';\r\nimport AllApplications from  './components/groupLoan/AllApplications';\r\nimport EmiCalculator from  './components/groupLoan/EmiCalculator';\r\nimport DueEmis from './components/emis/DueEmis';\r\nimport PaidDetailView from './components/dashboard/PaidDetailView';\r\nimport RecievedDetailView from './components/dashboard/RecievedDetailView';\r\nimport Profit from './components/profit/Profit';\r\nimport ProcessingFee from './components/processing-fee/ProcessingFee';\r\nimport AddProcessingFee from './components/processing-fee/AddProcessingFee';\r\nimport CloseAccount from './components/groupLoan/CloseAccount';\r\nimport OutstandingDetailView from './components/dashboard/OutstandingDetailView';\r\nimport Expense from './components/expenses/Expense';\r\nimport AddExpense from './components/expenses/AddExpense';\r\nimport EmiCardPrint from './components/print/EmiCardPrint';\r\nfunction Routes() {\r\n    const checkLogin=()=>{\r\n        console.log(\"check login\")\r\n    }\r\n    return (\r\n        <BrowserRouter>\r\n            <Switch>\r\n            <InnerLayout exact path=\"/\" component={Dashboard}/>\r\n            <InnerLayout exact path=\"/memberGroup\" component={MemberGroup} />\r\n            <InnerLayout exact path=\"/addMemberGroup\" component={AddMemberGroup} />\r\n            <InnerLayout exact path=\"/addMember\" component={AddMember} />\r\n            <InnerLayout exact path=\"/addMember\" component={AddMember} />\r\n            <InnerLayout exact path=\"/scheme\" component={Scheme} />\r\n            <InnerLayout exact path=\"/viewMemberDetail\" component={MemberViewDetails} />\r\n            <InnerLayout exact path=\"/addScheme\" component={AddScheme} />\r\n            <InnerLayout exact path=\"/loanApplication\" component={LoanApplication} />\r\n            <InnerLayout exact path=\"/loanApproval\" component={LoanApproval} />\r\n            <InnerLayout exact path=\"/disburseLoan\" component={DisburseLoan} />\r\n            <InnerLayout exact path=\"/loanApprovalDetails\" component={LoanApprovalDetails} />\r\n            <InnerLayout exact path=\"/allApplications\" component={AllApplications} />\r\n            <InnerLayout exact path=\"/emiCalculator\" component={EmiCalculator} />\r\n            <InnerLayout exact path=\"/dueEmis\" component={DueEmis} />\r\n            <InnerLayout exact path=\"/paidDetailView\" component={PaidDetailView} />\r\n            <InnerLayout exact path=\"/recieveDetailView\" component={RecievedDetailView} />\r\n            <InnerLayout exact path=\"/processingFee\" component={ProcessingFee} />\r\n            <InnerLayout exact path=\"/profit\" component={Profit} />\r\n            <InnerLayout exact path=\"/addProcessingFee\" component={AddProcessingFee} />\r\n            <InnerLayout exact path=\"/closeAccount\" component={CloseAccount} />\r\n            <InnerLayout exact path=\"/outstandingDetailView\" component={OutstandingDetailView} />\r\n            <InnerLayout exact path=\"/expense\" component={Expense} />\r\n            <InnerLayout exact path=\"/addExpense\" component={AddExpense} />\r\n                <Route path=\"/login\" component={Login} />\r\n                <InnerLayout path=\"/registration\" component={Registration} />\r\n                <InnerLayout path=\"/member\" component={Member} />\r\n\r\n            </Switch>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default Routes\r\n","import './App.css';\r\nimport { Provider } from 'react-redux';\r\nimport { store, persistor} from './store';\r\nimport Routes from './Routes';\r\nimport { PersistGate } from 'redux-persist/integration/react'\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <div className=\"App\">\r\n          <Routes/>\r\n        </div>\r\n      </PersistGate>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","import superagentPromise from 'superagent-promise';\r\nimport _superagent from 'superagent';\r\n\r\nconst superagent = superagentPromise(_superagent, global.Promise);\r\n\r\nconst API_ROOT = '/api';\r\n\r\nconst encode = encodeURIComponent;\r\nconst responseBody = res => res;\r\nconst errorBody = err =>{\r\n  return err.response\r\n} ;\r\nlet token = null;\r\nconst tokenPlugin = req => {\r\n  if (token) {\r\n    req.set('Token', token);\r\n  }\r\n}\r\n\r\nconst requests = {\r\n  // del: url =>\r\n  //   superagent.del(`${API_ROOT}${url}`).use(tokenPlugin).then(responseBody),\r\n  get: url =>\r\n    superagent.get(`${API_ROOT}${url}`).use(tokenPlugin).then(responseBody,errorBody),\r\n  // put: (url, body) =>\r\n  //   superagent.put(`${API_ROOT}${url}`, body).use(tokenPlugin).then(responseBody),\r\n  post: (url, body) =>\r\n    superagent.post(`${API_ROOT}${url}`, body).use(tokenPlugin).then(responseBody,errorBody)\r\n};\r\n\r\nconst Auth = {\r\n  login: (email, password) =>\r\n    requests.post('/user/login',  { email, password } ),\r\n  register: (userDetails) =>\r\n    requests.post('/user/registration',  userDetails ),\r\n};\r\n\r\nconst Order = {\r\n  getProductsByCat:(catname)=>\r\n  requests.get(`/products?category=${catname}`),\r\n  getCatgoryInitialData:()=>{\r\n    return [superagent.get(`${API_ROOT}/category`),superagent.get(`${API_ROOT}/products`)]\r\n  },\r\n  placeOrder:(data)=>{\r\n    //requests.post(\"/orders/place-order\",data)\r\n    return superagent.post(`${API_ROOT}/orders/place-order`, data).use(tokenPlugin)\r\n  },\r\n  getCategoryAdmin(){\r\n    return superagent.get(`${API_ROOT}/category`).use(tokenPlugin)\r\n  },\r\n  getOrdersHistoryAdmin(page){\r\n    return superagent.get(`${API_ROOT}/orders/admin-order-list?page=${page}`).use(tokenPlugin)\r\n  },\r\n  getOrderHistoryByUserEmail(){\r\n    return superagent.get(`${API_ROOT}/orders/get-order`).use(tokenPlugin)\r\n  },\r\n  addCategory(data){\r\n    return superagent.post(`${API_ROOT}/category`,data).use(tokenPlugin)\r\n  },\r\n  deleteCategory(data){\r\n    return superagent.del(`${API_ROOT}/category?name=${data}`,data).use(tokenPlugin)\r\n  },\r\n  editCategory(data){\r\n    return superagent.put(`${API_ROOT}/category`,data).use(tokenPlugin)\r\n  },\r\n  getProducts(){\r\n    return superagent.get(`${API_ROOT}/products`).use(tokenPlugin)\r\n  },\r\n  deleteProduct(data){\r\n    return superagent.del(`${API_ROOT}/products?title=${data}`,data).use(tokenPlugin)\r\n  },\r\n  addProducts(data){\r\n    return superagent.post(`${API_ROOT}/products`,data).use(tokenPlugin)\r\n  },\r\n  editProducts(data){\r\n    return superagent.put(`${API_ROOT}/products`,data).use(tokenPlugin)\r\n  }\r\n};\r\nconst Payment = {\r\n  getRazorpayOrderId(data){\r\n    return superagent.post(`${API_ROOT}/payment/food-create-order-no`,data).use(tokenPlugin)\r\n  },\r\n  updatePaymentStatus(data){\r\n    return superagent.post(`${API_ROOT}/payment/updatePaymentStatus`,data).use(tokenPlugin)\r\n  }\r\n};\r\nconst Finance = {\r\n  fillItr(data){\r\n    return superagent.post(`${API_ROOT}/finance/fill-itr`,data).use(tokenPlugin)\r\n  },\r\n  getAdminItr(){\r\n    return superagent.get(`${API_ROOT}/finance/fill-itr`).use(tokenPlugin)\r\n  },\r\n  uploadForm16(data){\r\n    return superagent.post(`${API_ROOT}/finance/form16Upload`,data).use(tokenPlugin)\r\n  },\r\n  getAdminForm16(){\r\n    return superagent.get(`${API_ROOT}/finance/form16Upload`).use(tokenPlugin)\r\n  },\r\n  downloadForm16(data){\r\n    return superagent.get(`${API_ROOT}/download?fileName=${data.fileName}`).use(tokenPlugin)\r\n  }\r\n \r\n}\r\nconst Inquery = {\r\n  submitInquery(data){\r\n    return superagent.post(`${API_ROOT}/user/submitInquery`,data).use(tokenPlugin)\r\n  }\r\n}\r\nexport default {\r\n  Auth,\r\n  Order,\r\n  Payment,\r\n  Finance,\r\n  Inquery,\r\n  getToken:()=>{return token},\r\n  setToken: _token => { token = _token; }\r\n};"],"sourceRoot":""}